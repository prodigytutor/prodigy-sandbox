{
  "version": 3,
  "sources": ["../monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js", "../monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js", "../monaco-editor/esm/vs/editor/standalone/browser/standaloneEditor.js", "../monaco-editor/esm/vs/platform/editor/common/editor.js", "../monaco-editor/esm/vs/editor/browser/services/openerService.js", "../monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js", "../monaco-editor/esm/vs/base/common/worker/simpleWorker.js", "../monaco-editor/esm/vs/base/worker/defaultWorkerFactory.js", "../monaco-editor/esm/vs/editor/common/diff/diffComputer.js", "../monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js", "../monaco-editor/esm/vs/editor/common/modes/linkComputer.js", "../monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js", "../monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js", "../monaco-editor/esm/vs/editor/common/services/textResourceConfigurationService.js", "../monaco-editor/esm/vs/editor/common/services/editorWorkerServiceImpl.js", "../monaco-editor/esm/vs/editor/common/services/webWorker.js", "../monaco-editor/esm/vs/editor/standalone/common/monarch/monarchCommon.js", "../monaco-editor/esm/vs/editor/standalone/common/monarch/monarchLexer.js", "../monaco-editor/esm/vs/editor/standalone/browser/colorizer.js", "../monaco-editor/esm/vs/editor/browser/editorBrowser.js", "../monaco-editor/esm/vs/editor/browser/services/bulkEditService.js", "../monaco-editor/esm/vs/platform/configuration/common/configurationModels.js", "../monaco-editor/esm/vs/platform/keybinding/common/abstractKeybindingService.js", "../monaco-editor/esm/vs/platform/keybinding/common/keybindingResolver.js", "../monaco-editor/esm/vs/platform/keybinding/common/resolvedKeybindingItem.js", "../monaco-editor/esm/vs/platform/keybinding/common/baseResolvedKeybinding.js", "../monaco-editor/esm/vs/platform/keybinding/common/usLayoutResolvedKeybinding.js", "../monaco-editor/esm/vs/editor/common/standaloneStrings.js", "../monaco-editor/esm/vs/editor/standalone/browser/simpleServices.js", "../monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js", "../monaco-editor/esm/vs/editor/browser/widget/diffReview.js", "../monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js", "../monaco-editor/esm/vs/platform/progress/common/progress.js", "../monaco-editor/esm/vs/editor/standalone/common/standaloneThemeService.js", "../monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js", "../monaco-editor/esm/vs/editor/browser/services/codeEditorServiceImpl.js", "../monaco-editor/esm/vs/editor/standalone/browser/standaloneCodeServiceImpl.js", "../monaco-editor/esm/vs/editor/standalone/browser/standaloneCodeEditor.js", "../monaco-editor/esm/vs/editor/common/modes/abstractMode.js", "../monaco-editor/esm/vs/editor/common/services/languagesRegistry.js", "../monaco-editor/esm/vs/editor/common/services/modeServiceImpl.js", "../monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js", "../monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js", "../monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js", "../monaco-editor/esm/vs/editor/common/services/getSemanticTokens.js", "../monaco-editor/esm/vs/editor/common/services/modelServiceImpl.js", "../monaco-editor/esm/vs/editor/common/modes/supports/tokenization.js", "../monaco-editor/esm/vs/editor/standalone/common/themes.js", "../monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js", "../monaco-editor/esm/vs/editor/standalone/browser/standaloneThemeServiceImpl.js", "../monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js", "../monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js", "../monaco-editor/esm/vs/base/browser/ui/contextview/contextview.js", "../monaco-editor/esm/vs/base/browser/ui/menu/menu.js", "../monaco-editor/esm/vs/platform/contextview/browser/contextMenuService.js", "../monaco-editor/esm/vs/platform/layout/browser/layoutService.js", "../monaco-editor/esm/vs/platform/contextview/browser/contextViewService.js", "../monaco-editor/esm/vs/platform/dialogs/common/dialogs.js", "../monaco-editor/esm/vs/platform/instantiation/common/graph.js", "../monaco-editor/esm/vs/platform/instantiation/common/instantiationService.js", "../monaco-editor/esm/vs/base/browser/ui/list/listPaging.js", "../monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js", "../monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js", "../monaco-editor/esm/vs/base/browser/ui/tree/tree.js", "../monaco-editor/esm/vs/base/browser/ui/tree/indexTreeModel.js", "../monaco-editor/esm/vs/base/browser/ui/tree/treeIcons.js", "../monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js", "../monaco-editor/esm/vs/base/browser/ui/tree/compressedObjectTreeModel.js", "../monaco-editor/esm/vs/base/browser/ui/tree/objectTree.js", "../monaco-editor/esm/vs/base/browser/ui/tree/asyncDataTree.js", "../monaco-editor/esm/vs/base/browser/ui/tree/dataTree.js", "../monaco-editor/esm/vs/base/browser/ui/table/tableWidget.js", "../monaco-editor/esm/vs/base/browser/ui/splitview/splitview.js", "../monaco-editor/esm/vs/platform/list/browser/listService.js", "../monaco-editor/esm/vs/platform/markers/common/markers.js", "../monaco-editor/esm/vs/platform/markers/common/markerService.js", "../monaco-editor/esm/vs/platform/actions/common/menuService.js", "../monaco-editor/esm/vs/editor/common/services/markerDecorationsServiceImpl.js", "../monaco-editor/esm/vs/platform/accessibility/common/accessibilityService.js", "../monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js", "../monaco-editor/esm/vs/platform/undoRedo/common/undoRedoService.js", "../monaco-editor/esm/vs/editor/standalone/browser/quickInput/standaloneQuickInputServiceImpl.js", "../monaco-editor/esm/vs/base/parts/quickinput/browser/quickInput.js", "../monaco-editor/esm/vs/base/parts/quickinput/common/quickInput.js", "../monaco-editor/esm/vs/base/parts/quickinput/browser/quickInputList.js", "../monaco-editor/esm/vs/base/common/comparers.js", "../monaco-editor/esm/vs/base/parts/quickinput/browser/quickInputUtils.js", "../monaco-editor/esm/vs/base/browser/ui/keybindingLabel/keybindingLabel.js", "../monaco-editor/esm/vs/base/parts/quickinput/browser/quickInputBox.js", "../monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox.js", "../monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge.js", "../monaco-editor/esm/vs/base/browser/ui/progressbar/progressbar.js", "../monaco-editor/esm/vs/base/browser/ui/button/button.js", "../monaco-editor/esm/vs/platform/quickinput/common/quickInput.js", "../monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js", "../monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js", "../monaco-editor/esm/vs/platform/quickinput/browser/quickInput.js", "../monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js", "../monaco-editor/esm/vs/editor/standalone/common/monarch/monarchCompile.js", "../monaco-editor/esm/vs/editor/standalone/browser/standaloneLanguages.js", "../monaco-editor/esm/vs/platform/extensions/common/extensions.js", "../monaco-editor/esm/vs/editor/contrib/format/format.js", "../monaco-editor/esm/vs/editor/editor.api.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\r\nexport var AccessibilitySupport;\r\n(function (AccessibilitySupport) {\r\n    /**\r\n     * This should be the browser case where it is not known if a screen reader is attached or no.\r\n     */\r\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\r\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\r\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\r\n})(AccessibilitySupport || (AccessibilitySupport = {}));\r\nexport var CompletionItemInsertTextRule;\r\n(function (CompletionItemInsertTextRule) {\r\n    /**\r\n     * Adjust whitespace/indentation of multiline insert texts to\r\n     * match the current line indentation.\r\n     */\r\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\r\n    /**\r\n     * `insertText` is a snippet.\r\n     */\r\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\r\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\r\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\r\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\r\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\r\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\r\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\r\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\r\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\r\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\r\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\r\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\r\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\r\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\r\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\r\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\r\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\r\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\r\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\r\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\r\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\r\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\r\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\r\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\r\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\r\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\r\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\r\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\r\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\n/**\r\n * How a suggest provider was triggered.\r\n */\r\nexport var CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\r\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\r\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\r\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\r\n/**\r\n * A positioning preference for rendering content widgets.\r\n */\r\nexport var ContentWidgetPositionPreference;\r\n(function (ContentWidgetPositionPreference) {\r\n    /**\r\n     * Place the content widget exactly at a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\r\n    /**\r\n     * Place the content widget above a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\r\n    /**\r\n     * Place the content widget below a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\r\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\r\n/**\r\n * Describes the reason the cursor has changed its position.\r\n */\r\nexport var CursorChangeReason;\r\n(function (CursorChangeReason) {\r\n    /**\r\n     * Unknown or not set.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\r\n    /**\r\n     * A `model.setValue()` was called.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\r\n    /**\r\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\r\n    /**\r\n     * There was an explicit user gesture.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\r\n    /**\r\n     * There was a Paste.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\r\n    /**\r\n     * There was an Undo.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\r\n    /**\r\n     * There was a Redo.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\r\n})(CursorChangeReason || (CursorChangeReason = {}));\r\n/**\r\n * The default end of line to use when instantiating models.\r\n */\r\nexport var DefaultEndOfLine;\r\n(function (DefaultEndOfLine) {\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\r\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * Configuration options for auto indentation in the editor\r\n */\r\nexport var EditorAutoIndentStrategy;\r\n(function (EditorAutoIndentStrategy) {\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\r\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\r\nexport var EditorOption;\r\n(function (EditorOption) {\r\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\r\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\r\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\r\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\r\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\r\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\r\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 6] = \"autoClosingDelete\";\r\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 7] = \"autoClosingOvertype\";\r\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 8] = \"autoClosingQuotes\";\r\n    EditorOption[EditorOption[\"autoIndent\"] = 9] = \"autoIndent\";\r\n    EditorOption[EditorOption[\"automaticLayout\"] = 10] = \"automaticLayout\";\r\n    EditorOption[EditorOption[\"autoSurround\"] = 11] = \"autoSurround\";\r\n    EditorOption[EditorOption[\"codeLens\"] = 12] = \"codeLens\";\r\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 13] = \"codeLensFontFamily\";\r\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 14] = \"codeLensFontSize\";\r\n    EditorOption[EditorOption[\"colorDecorators\"] = 15] = \"colorDecorators\";\r\n    EditorOption[EditorOption[\"columnSelection\"] = 16] = \"columnSelection\";\r\n    EditorOption[EditorOption[\"comments\"] = 17] = \"comments\";\r\n    EditorOption[EditorOption[\"contextmenu\"] = 18] = \"contextmenu\";\r\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 19] = \"copyWithSyntaxHighlighting\";\r\n    EditorOption[EditorOption[\"cursorBlinking\"] = 20] = \"cursorBlinking\";\r\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 21] = \"cursorSmoothCaretAnimation\";\r\n    EditorOption[EditorOption[\"cursorStyle\"] = 22] = \"cursorStyle\";\r\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 23] = \"cursorSurroundingLines\";\r\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 24] = \"cursorSurroundingLinesStyle\";\r\n    EditorOption[EditorOption[\"cursorWidth\"] = 25] = \"cursorWidth\";\r\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 26] = \"disableLayerHinting\";\r\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 27] = \"disableMonospaceOptimizations\";\r\n    EditorOption[EditorOption[\"domReadOnly\"] = 28] = \"domReadOnly\";\r\n    EditorOption[EditorOption[\"dragAndDrop\"] = 29] = \"dragAndDrop\";\r\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 30] = \"emptySelectionClipboard\";\r\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 31] = \"extraEditorClassName\";\r\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 32] = \"fastScrollSensitivity\";\r\n    EditorOption[EditorOption[\"find\"] = 33] = \"find\";\r\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 34] = \"fixedOverflowWidgets\";\r\n    EditorOption[EditorOption[\"folding\"] = 35] = \"folding\";\r\n    EditorOption[EditorOption[\"foldingStrategy\"] = 36] = \"foldingStrategy\";\r\n    EditorOption[EditorOption[\"foldingHighlight\"] = 37] = \"foldingHighlight\";\r\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 38] = \"foldingImportsByDefault\";\r\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 39] = \"unfoldOnClickAfterEndOfLine\";\r\n    EditorOption[EditorOption[\"fontFamily\"] = 40] = \"fontFamily\";\r\n    EditorOption[EditorOption[\"fontInfo\"] = 41] = \"fontInfo\";\r\n    EditorOption[EditorOption[\"fontLigatures\"] = 42] = \"fontLigatures\";\r\n    EditorOption[EditorOption[\"fontSize\"] = 43] = \"fontSize\";\r\n    EditorOption[EditorOption[\"fontWeight\"] = 44] = \"fontWeight\";\r\n    EditorOption[EditorOption[\"formatOnPaste\"] = 45] = \"formatOnPaste\";\r\n    EditorOption[EditorOption[\"formatOnType\"] = 46] = \"formatOnType\";\r\n    EditorOption[EditorOption[\"glyphMargin\"] = 47] = \"glyphMargin\";\r\n    EditorOption[EditorOption[\"gotoLocation\"] = 48] = \"gotoLocation\";\r\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 49] = \"hideCursorInOverviewRuler\";\r\n    EditorOption[EditorOption[\"highlightActiveIndentGuide\"] = 50] = \"highlightActiveIndentGuide\";\r\n    EditorOption[EditorOption[\"hover\"] = 51] = \"hover\";\r\n    EditorOption[EditorOption[\"inDiffEditor\"] = 52] = \"inDiffEditor\";\r\n    EditorOption[EditorOption[\"inlineSuggest\"] = 53] = \"inlineSuggest\";\r\n    EditorOption[EditorOption[\"letterSpacing\"] = 54] = \"letterSpacing\";\r\n    EditorOption[EditorOption[\"lightbulb\"] = 55] = \"lightbulb\";\r\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 56] = \"lineDecorationsWidth\";\r\n    EditorOption[EditorOption[\"lineHeight\"] = 57] = \"lineHeight\";\r\n    EditorOption[EditorOption[\"lineNumbers\"] = 58] = \"lineNumbers\";\r\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 59] = \"lineNumbersMinChars\";\r\n    EditorOption[EditorOption[\"linkedEditing\"] = 60] = \"linkedEditing\";\r\n    EditorOption[EditorOption[\"links\"] = 61] = \"links\";\r\n    EditorOption[EditorOption[\"matchBrackets\"] = 62] = \"matchBrackets\";\r\n    EditorOption[EditorOption[\"minimap\"] = 63] = \"minimap\";\r\n    EditorOption[EditorOption[\"mouseStyle\"] = 64] = \"mouseStyle\";\r\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 65] = \"mouseWheelScrollSensitivity\";\r\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 66] = \"mouseWheelZoom\";\r\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 67] = \"multiCursorMergeOverlapping\";\r\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 68] = \"multiCursorModifier\";\r\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 69] = \"multiCursorPaste\";\r\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 70] = \"occurrencesHighlight\";\r\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 71] = \"overviewRulerBorder\";\r\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 72] = \"overviewRulerLanes\";\r\n    EditorOption[EditorOption[\"padding\"] = 73] = \"padding\";\r\n    EditorOption[EditorOption[\"parameterHints\"] = 74] = \"parameterHints\";\r\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 75] = \"peekWidgetDefaultFocus\";\r\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 76] = \"definitionLinkOpensInPeek\";\r\n    EditorOption[EditorOption[\"quickSuggestions\"] = 77] = \"quickSuggestions\";\r\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 78] = \"quickSuggestionsDelay\";\r\n    EditorOption[EditorOption[\"readOnly\"] = 79] = \"readOnly\";\r\n    EditorOption[EditorOption[\"renameOnType\"] = 80] = \"renameOnType\";\r\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 81] = \"renderControlCharacters\";\r\n    EditorOption[EditorOption[\"renderIndentGuides\"] = 82] = \"renderIndentGuides\";\r\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 83] = \"renderFinalNewline\";\r\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 84] = \"renderLineHighlight\";\r\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 85] = \"renderLineHighlightOnlyWhenFocus\";\r\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 86] = \"renderValidationDecorations\";\r\n    EditorOption[EditorOption[\"renderWhitespace\"] = 87] = \"renderWhitespace\";\r\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 88] = \"revealHorizontalRightPadding\";\r\n    EditorOption[EditorOption[\"roundedSelection\"] = 89] = \"roundedSelection\";\r\n    EditorOption[EditorOption[\"rulers\"] = 90] = \"rulers\";\r\n    EditorOption[EditorOption[\"scrollbar\"] = 91] = \"scrollbar\";\r\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 92] = \"scrollBeyondLastColumn\";\r\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 93] = \"scrollBeyondLastLine\";\r\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 94] = \"scrollPredominantAxis\";\r\n    EditorOption[EditorOption[\"selectionClipboard\"] = 95] = \"selectionClipboard\";\r\n    EditorOption[EditorOption[\"selectionHighlight\"] = 96] = \"selectionHighlight\";\r\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 97] = \"selectOnLineNumbers\";\r\n    EditorOption[EditorOption[\"showFoldingControls\"] = 98] = \"showFoldingControls\";\r\n    EditorOption[EditorOption[\"showUnused\"] = 99] = \"showUnused\";\r\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 100] = \"snippetSuggestions\";\r\n    EditorOption[EditorOption[\"smartSelect\"] = 101] = \"smartSelect\";\r\n    EditorOption[EditorOption[\"smoothScrolling\"] = 102] = \"smoothScrolling\";\r\n    EditorOption[EditorOption[\"stickyTabStops\"] = 103] = \"stickyTabStops\";\r\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 104] = \"stopRenderingLineAfter\";\r\n    EditorOption[EditorOption[\"suggest\"] = 105] = \"suggest\";\r\n    EditorOption[EditorOption[\"suggestFontSize\"] = 106] = \"suggestFontSize\";\r\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 107] = \"suggestLineHeight\";\r\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 108] = \"suggestOnTriggerCharacters\";\r\n    EditorOption[EditorOption[\"suggestSelection\"] = 109] = \"suggestSelection\";\r\n    EditorOption[EditorOption[\"tabCompletion\"] = 110] = \"tabCompletion\";\r\n    EditorOption[EditorOption[\"tabIndex\"] = 111] = \"tabIndex\";\r\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 112] = \"unusualLineTerminators\";\r\n    EditorOption[EditorOption[\"useShadowDOM\"] = 113] = \"useShadowDOM\";\r\n    EditorOption[EditorOption[\"useTabStops\"] = 114] = \"useTabStops\";\r\n    EditorOption[EditorOption[\"wordSeparators\"] = 115] = \"wordSeparators\";\r\n    EditorOption[EditorOption[\"wordWrap\"] = 116] = \"wordWrap\";\r\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 117] = \"wordWrapBreakAfterCharacters\";\r\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 118] = \"wordWrapBreakBeforeCharacters\";\r\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 119] = \"wordWrapColumn\";\r\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 120] = \"wordWrapOverride1\";\r\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 121] = \"wordWrapOverride2\";\r\n    EditorOption[EditorOption[\"wrappingIndent\"] = 122] = \"wrappingIndent\";\r\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 123] = \"wrappingStrategy\";\r\n    EditorOption[EditorOption[\"showDeprecated\"] = 124] = \"showDeprecated\";\r\n    EditorOption[EditorOption[\"inlayHints\"] = 125] = \"inlayHints\";\r\n    EditorOption[EditorOption[\"editorClassName\"] = 126] = \"editorClassName\";\r\n    EditorOption[EditorOption[\"pixelRatio\"] = 127] = \"pixelRatio\";\r\n    EditorOption[EditorOption[\"tabFocusMode\"] = 128] = \"tabFocusMode\";\r\n    EditorOption[EditorOption[\"layoutInfo\"] = 129] = \"layoutInfo\";\r\n    EditorOption[EditorOption[\"wrappingInfo\"] = 130] = \"wrappingInfo\";\r\n})(EditorOption || (EditorOption = {}));\r\n/**\r\n * End of line character preference.\r\n */\r\nexport var EndOfLinePreference;\r\n(function (EndOfLinePreference) {\r\n    /**\r\n     * Use the end of line character identified in the text buffer.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\r\n})(EndOfLinePreference || (EndOfLinePreference = {}));\r\n/**\r\n * End of line character preference.\r\n */\r\nexport var EndOfLineSequence;\r\n(function (EndOfLineSequence) {\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\r\n})(EndOfLineSequence || (EndOfLineSequence = {}));\r\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\r\nexport var IndentAction;\r\n(function (IndentAction) {\r\n    /**\r\n     * Insert new line and copy the previous line's indentation.\r\n     */\r\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Insert new line and indent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\r\n    /**\r\n     * Insert two new lines:\r\n     *  - the first one indented which will hold the cursor\r\n     *  - the second one at the same indentation level\r\n     */\r\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\r\n    /**\r\n     * Insert new line and outdent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\r\n})(IndentAction || (IndentAction = {}));\r\nexport var InlayHintKind;\r\n(function (InlayHintKind) {\r\n    InlayHintKind[InlayHintKind[\"Other\"] = 0] = \"Other\";\r\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\r\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\r\n})(InlayHintKind || (InlayHintKind = {}));\r\n/**\r\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\r\n */\r\nexport var InlineCompletionTriggerKind;\r\n(function (InlineCompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered automatically while editing.\r\n     * It is sufficient to return a single completion item in this case.\r\n     */\r\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\r\n    /**\r\n     * Completion was triggered explicitly by a user gesture.\r\n     * Return multiple completion items to enable cycling through them.\r\n     */\r\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\r\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\r\n/**\r\n * Virtual Key Codes, the value does not hold any inherent meaning.\r\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n * But these are \"more general\", as they should work across browsers & OS`s.\r\n */\r\nexport var KeyCode;\r\n(function (KeyCode) {\r\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\r\n    /**\r\n     * Placed first to cover the 0 value of the enum.\r\n     */\r\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\r\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\r\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\r\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\r\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\r\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\r\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\r\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\r\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\r\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\r\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\r\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\r\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\r\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\r\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\r\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\r\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\r\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\r\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\r\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\r\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\r\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\r\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\r\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\r\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\r\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\r\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\r\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\r\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\r\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\r\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\r\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\r\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\r\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\r\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\r\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\r\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\r\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\r\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\r\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\r\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\r\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\r\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\r\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\r\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\r\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\r\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\r\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\r\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\r\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\r\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\r\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\r\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\r\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\r\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\r\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\r\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\r\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\r\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\r\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\r\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\r\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\r\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\r\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\r\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\r\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\r\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\r\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\r\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\r\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\r\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\r\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\r\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\r\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\r\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\r\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\r\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\r\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\r\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\r\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ';:' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\r\n    /**\r\n     * For any country/region, the '+' key\r\n     * For the US standard keyboard, the '=+' key\r\n     */\r\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\r\n    /**\r\n     * For any country/region, the ',' key\r\n     * For the US standard keyboard, the ',<' key\r\n     */\r\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\r\n    /**\r\n     * For any country/region, the '-' key\r\n     * For the US standard keyboard, the '-_' key\r\n     */\r\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\r\n    /**\r\n     * For any country/region, the '.' key\r\n     * For the US standard keyboard, the '.>' key\r\n     */\r\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '/?' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '`~' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '[{' key\r\n     */\r\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '\\|' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ']}' key\r\n     */\r\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ''\"' key\r\n     */\r\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\r\n    /**\r\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\r\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\r\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\r\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\r\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\r\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\r\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\r\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\r\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\r\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\r\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\r\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\r\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\r\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\r\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\r\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\r\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\r\n    /**\r\n     * Cover all key codes when IME is processing input.\r\n     */\r\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\r\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\r\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\r\n    /**\r\n     * Placed last to cover the length of the enum.\r\n     * Please do not depend on this value!\r\n     */\r\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\r\n})(KeyCode || (KeyCode = {}));\r\nexport var MarkerSeverity;\r\n(function (MarkerSeverity) {\r\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\r\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\r\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\r\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\r\n})(MarkerSeverity || (MarkerSeverity = {}));\r\nexport var MarkerTag;\r\n(function (MarkerTag) {\r\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\r\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\r\n})(MarkerTag || (MarkerTag = {}));\r\n/**\r\n * Position in the minimap to render the decoration.\r\n */\r\nexport var MinimapPosition;\r\n(function (MinimapPosition) {\r\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\r\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\r\n})(MinimapPosition || (MinimapPosition = {}));\r\n/**\r\n * Type of hit element with the mouse in the editor.\r\n */\r\nexport var MouseTargetType;\r\n(function (MouseTargetType) {\r\n    /**\r\n     * Mouse is on top of an unknown element.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    /**\r\n     * Mouse is on top of the textarea used for input.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\r\n    /**\r\n     * Mouse is on top of the glyph margin\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\r\n    /**\r\n     * Mouse is on top of the line numbers\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\r\n    /**\r\n     * Mouse is on top of the line decorations\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\r\n    /**\r\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\r\n    /**\r\n     * Mouse is on top of text in the content.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\r\n    /**\r\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\r\n    /**\r\n     * Mouse is on top of a view zone in the content.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\r\n    /**\r\n     * Mouse is on top of a content widget.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\r\n    /**\r\n     * Mouse is on top of the decorations overview ruler.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\r\n    /**\r\n     * Mouse is on top of a scrollbar.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\r\n    /**\r\n     * Mouse is on top of an overlay widget.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\r\n    /**\r\n     * Mouse is outside of the editor.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\r\n})(MouseTargetType || (MouseTargetType = {}));\r\n/**\r\n * A positioning preference for rendering overlay widgets.\r\n */\r\nexport var OverlayWidgetPositionPreference;\r\n(function (OverlayWidgetPositionPreference) {\r\n    /**\r\n     * Position the overlay widget in the top right corner\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\r\n    /**\r\n     * Position the overlay widget in the bottom right corner\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\r\n    /**\r\n     * Position the overlay widget in the top center\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\r\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\r\n/**\r\n * Vertical Lane in the overview ruler of the editor.\r\n */\r\nexport var OverviewRulerLane;\r\n(function (OverviewRulerLane) {\r\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\r\n})(OverviewRulerLane || (OverviewRulerLane = {}));\r\nexport var RenderLineNumbersType;\r\n(function (RenderLineNumbersType) {\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\r\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\r\nexport var RenderMinimap;\r\n(function (RenderMinimap) {\r\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\r\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\r\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\r\n})(RenderMinimap || (RenderMinimap = {}));\r\nexport var ScrollType;\r\n(function (ScrollType) {\r\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\r\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\r\n})(ScrollType || (ScrollType = {}));\r\nexport var ScrollbarVisibility;\r\n(function (ScrollbarVisibility) {\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\r\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\r\n/**\r\n * The direction of a selection.\r\n */\r\nexport var SelectionDirection;\r\n(function (SelectionDirection) {\r\n    /**\r\n     * The selection starts above where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\r\n    /**\r\n     * The selection starts below where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\r\n})(SelectionDirection || (SelectionDirection = {}));\r\nexport var SignatureHelpTriggerKind;\r\n(function (SignatureHelpTriggerKind) {\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\r\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\r\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\r\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\r\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\r\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\r\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\r\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\r\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\r\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\r\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\r\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\r\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\r\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\r\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\r\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\r\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\r\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\r\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\r\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\r\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\r\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\r\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\r\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\r\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\r\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\r\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\r\n})(SymbolTag || (SymbolTag = {}));\r\n/**\r\n * The kind of animation in which the editor's cursor should be rendered.\r\n */\r\nexport var TextEditorCursorBlinkingStyle;\r\n(function (TextEditorCursorBlinkingStyle) {\r\n    /**\r\n     * Hidden\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\r\n    /**\r\n     * Blinking\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\r\n    /**\r\n     * Blinking with smooth fading\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\r\n    /**\r\n     * Blinking with prolonged filled state and smooth fading\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\r\n    /**\r\n     * Expand collapse animation on the y axis\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\r\n    /**\r\n     * No-Blinking\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\r\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\r\n/**\r\n * The style in which the editor's cursor should be rendered.\r\n */\r\nexport var TextEditorCursorStyle;\r\n(function (TextEditorCursorStyle) {\r\n    /**\r\n     * As a vertical line (sitting between two characters).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\r\n    /**\r\n     * As a block (sitting on top of a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\r\n    /**\r\n     * As a horizontal line (sitting under a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\r\n    /**\r\n     * As a thin vertical line (sitting between two characters).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\r\n    /**\r\n     * As an outlined block (sitting on top of a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\r\n    /**\r\n     * As a thin horizontal line (sitting under a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\r\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\r\n/**\r\n * Describes the behavior of decorations when typing/editing near their edges.\r\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\r\n */\r\nexport var TrackedRangeStickiness;\r\n(function (TrackedRangeStickiness) {\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\r\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\r\n/**\r\n * Describes how to indent wrapped lines.\r\n */\r\nexport var WrappingIndent;\r\n(function (WrappingIndent) {\r\n    /**\r\n     * No indentation => wrapped lines begin at column 1.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Same => wrapped lines get the same indentation as the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\r\n    /**\r\n     * Indent => wrapped lines get +1 indentation toward the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\r\n    /**\r\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\r\n})(WrappingIndent || (WrappingIndent = {}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Selection } from '../core/selection.js';\r\nimport { Token } from '../core/token.js';\r\nimport * as standaloneEnums from './standaloneEnums.js';\r\nexport class KeyMod {\r\n    static chord(firstPart, secondPart) {\r\n        return KeyChord(firstPart, secondPart);\r\n    }\r\n}\r\nKeyMod.CtrlCmd = 2048 /* CtrlCmd */;\r\nKeyMod.Shift = 1024 /* Shift */;\r\nKeyMod.Alt = 512 /* Alt */;\r\nKeyMod.WinCtrl = 256 /* WinCtrl */;\r\nexport function createMonacoBaseAPI() {\r\n    return {\r\n        editor: undefined,\r\n        languages: undefined,\r\n        CancellationTokenSource: CancellationTokenSource,\r\n        Emitter: Emitter,\r\n        KeyCode: standaloneEnums.KeyCode,\r\n        KeyMod: KeyMod,\r\n        Position: Position,\r\n        Range: Range,\r\n        Selection: Selection,\r\n        SelectionDirection: standaloneEnums.SelectionDirection,\r\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\r\n        MarkerTag: standaloneEnums.MarkerTag,\r\n        Uri: URI,\r\n        Token: Token\r\n    };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './standalone-tokens.css';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { OpenerService } from '../../browser/services/openerService.js';\r\nimport { DiffNavigator } from '../../browser/widget/diffNavigator.js';\r\nimport { EditorOptions, ConfigurationChangedEvent } from '../../common/config/editorOptions.js';\r\nimport { BareFontInfo, FontInfo } from '../../common/config/fontInfo.js';\r\nimport { EditorType } from '../../common/editorCommon.js';\r\nimport { FindMatch, TextModelResolvedOptions } from '../../common/model.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { NULL_STATE, nullTokenize } from '../../common/modes/nullMode.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { createWebWorker as actualCreateWebWorker } from '../../common/services/webWorker.js';\r\nimport * as standaloneEnums from '../../common/standalone/standaloneEnums.js';\r\nimport { Colorizer } from './colorizer.js';\r\nimport { SimpleEditorModelResolverService } from './simpleServices.js';\r\nimport { StandaloneDiffEditor, StandaloneEditor, createTextModel } from './standaloneCodeEditor.js';\r\nimport { DynamicStandaloneServices, StaticServices } from './standaloneServices.js';\r\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextViewService, IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nimport { clearAllFontInfos } from '../../browser/config/configuration.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { splitLines } from '../../../base/common/strings.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nfunction withAllStandaloneServices(domElement, override, callback) {\r\n    let services = new DynamicStandaloneServices(domElement, override);\r\n    let simpleEditorModelResolverService = null;\r\n    if (!services.has(ITextModelService)) {\r\n        simpleEditorModelResolverService = new SimpleEditorModelResolverService(StaticServices.modelService.get());\r\n        services.set(ITextModelService, simpleEditorModelResolverService);\r\n    }\r\n    if (!services.has(IOpenerService)) {\r\n        services.set(IOpenerService, new OpenerService(services.get(ICodeEditorService), services.get(ICommandService)));\r\n    }\r\n    let result = callback(services);\r\n    if (simpleEditorModelResolverService) {\r\n        simpleEditorModelResolverService.setEditor(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new editor under `domElement`.\r\n * `domElement` should be empty (not contain other dom nodes).\r\n * The editor will read the size of `domElement`.\r\n */\r\nexport function create(domElement, options, override) {\r\n    return withAllStandaloneServices(domElement, override || {}, (services) => {\r\n        return new StandaloneEditor(domElement, options, services, services.get(IInstantiationService), services.get(ICodeEditorService), services.get(ICommandService), services.get(IContextKeyService), services.get(IKeybindingService), services.get(IContextViewService), services.get(IStandaloneThemeService), services.get(INotificationService), services.get(IConfigurationService), services.get(IAccessibilityService), services.get(IModelService), services.get(IModeService));\r\n    });\r\n}\r\n/**\r\n * Emitted when an editor is created.\r\n * Creating a diff editor might cause this listener to be invoked with the two editors.\r\n * @event\r\n */\r\nexport function onDidCreateEditor(listener) {\r\n    return StaticServices.codeEditorService.get().onCodeEditorAdd((editor) => {\r\n        listener(editor);\r\n    });\r\n}\r\n/**\r\n * Create a new diff editor under `domElement`.\r\n * `domElement` should be empty (not contain other dom nodes).\r\n * The editor will read the size of `domElement`.\r\n */\r\nexport function createDiffEditor(domElement, options, override) {\r\n    return withAllStandaloneServices(domElement, override || {}, (services) => {\r\n        return new StandaloneDiffEditor(domElement, options, services, services.get(IInstantiationService), services.get(IContextKeyService), services.get(IKeybindingService), services.get(IContextViewService), services.get(IEditorWorkerService), services.get(ICodeEditorService), services.get(IStandaloneThemeService), services.get(INotificationService), services.get(IConfigurationService), services.get(IContextMenuService), services.get(IEditorProgressService), services.get(IClipboardService));\r\n    });\r\n}\r\nexport function createDiffNavigator(diffEditor, opts) {\r\n    return new DiffNavigator(diffEditor, opts);\r\n}\r\n/**\r\n * Create a new editor model.\r\n * You can specify the language that should be set for this model or let the language be inferred from the `uri`.\r\n */\r\nexport function createModel(value, language, uri) {\r\n    return createTextModel(StaticServices.modelService.get(), StaticServices.modeService.get(), value, language, uri);\r\n}\r\n/**\r\n * Change the language for a model.\r\n */\r\nexport function setModelLanguage(model, languageId) {\r\n    StaticServices.modelService.get().setMode(model, StaticServices.modeService.get().create(languageId));\r\n}\r\n/**\r\n * Set the markers for a model.\r\n */\r\nexport function setModelMarkers(model, owner, markers) {\r\n    if (model) {\r\n        StaticServices.markerService.get().changeOne(owner, model.uri, markers);\r\n    }\r\n}\r\n/**\r\n * Get markers for owner and/or resource\r\n *\r\n * @returns list of markers\r\n */\r\nexport function getModelMarkers(filter) {\r\n    return StaticServices.markerService.get().read(filter);\r\n}\r\n/**\r\n * Emitted when markers change for a model.\r\n * @event\r\n */\r\nexport function onDidChangeMarkers(listener) {\r\n    return StaticServices.markerService.get().onMarkerChanged(listener);\r\n}\r\n/**\r\n * Get the model that has `uri` if it exists.\r\n */\r\nexport function getModel(uri) {\r\n    return StaticServices.modelService.get().getModel(uri);\r\n}\r\n/**\r\n * Get all the created models.\r\n */\r\nexport function getModels() {\r\n    return StaticServices.modelService.get().getModels();\r\n}\r\n/**\r\n * Emitted when a model is created.\r\n * @event\r\n */\r\nexport function onDidCreateModel(listener) {\r\n    return StaticServices.modelService.get().onModelAdded(listener);\r\n}\r\n/**\r\n * Emitted right before a model is disposed.\r\n * @event\r\n */\r\nexport function onWillDisposeModel(listener) {\r\n    return StaticServices.modelService.get().onModelRemoved(listener);\r\n}\r\n/**\r\n * Emitted when a different language is set to a model.\r\n * @event\r\n */\r\nexport function onDidChangeModelLanguage(listener) {\r\n    return StaticServices.modelService.get().onModelModeChanged((e) => {\r\n        listener({\r\n            model: e.model,\r\n            oldLanguage: e.oldModeId\r\n        });\r\n    });\r\n}\r\n/**\r\n * Create a new web worker that has model syncing capabilities built in.\r\n * Specify an AMD module to load that will `create` an object that will be proxied.\r\n */\r\nexport function createWebWorker(opts) {\r\n    return actualCreateWebWorker(StaticServices.modelService.get(), opts);\r\n}\r\n/**\r\n * Colorize the contents of `domNode` using attribute `data-lang`.\r\n */\r\nexport function colorizeElement(domNode, options) {\r\n    const themeService = StaticServices.standaloneThemeService.get();\r\n    themeService.registerEditorContainer(domNode);\r\n    return Colorizer.colorizeElement(themeService, StaticServices.modeService.get(), domNode, options);\r\n}\r\n/**\r\n * Colorize `text` using language `languageId`.\r\n */\r\nexport function colorize(text, languageId, options) {\r\n    const themeService = StaticServices.standaloneThemeService.get();\r\n    themeService.registerEditorContainer(document.body);\r\n    return Colorizer.colorize(StaticServices.modeService.get(), text, languageId, options);\r\n}\r\n/**\r\n * Colorize a line in a model.\r\n */\r\nexport function colorizeModelLine(model, lineNumber, tabSize = 4) {\r\n    const themeService = StaticServices.standaloneThemeService.get();\r\n    themeService.registerEditorContainer(document.body);\r\n    return Colorizer.colorizeModelLine(model, lineNumber, tabSize);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction getSafeTokenizationSupport(language) {\r\n    let tokenizationSupport = modes.TokenizationRegistry.get(language);\r\n    if (tokenizationSupport) {\r\n        return tokenizationSupport;\r\n    }\r\n    return {\r\n        getInitialState: () => NULL_STATE,\r\n        tokenize: (line, hasEOL, state, deltaOffset) => nullTokenize(language, line, state, deltaOffset)\r\n    };\r\n}\r\n/**\r\n * Tokenize `text` using language `languageId`\r\n */\r\nexport function tokenize(text, languageId) {\r\n    let modeService = StaticServices.modeService.get();\r\n    // Needed in order to get the mode registered for subsequent look-ups\r\n    modeService.triggerMode(languageId);\r\n    let tokenizationSupport = getSafeTokenizationSupport(languageId);\r\n    let lines = splitLines(text);\r\n    let result = [];\r\n    let state = tokenizationSupport.getInitialState();\r\n    for (let i = 0, len = lines.length; i < len; i++) {\r\n        let line = lines[i];\r\n        let tokenizationResult = tokenizationSupport.tokenize(line, true, state, 0);\r\n        result[i] = tokenizationResult.tokens;\r\n        state = tokenizationResult.endState;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Define a new theme or update an existing theme.\r\n */\r\nexport function defineTheme(themeName, themeData) {\r\n    StaticServices.standaloneThemeService.get().defineTheme(themeName, themeData);\r\n}\r\n/**\r\n * Switches to a theme.\r\n */\r\nexport function setTheme(themeName) {\r\n    StaticServices.standaloneThemeService.get().setTheme(themeName);\r\n}\r\n/**\r\n * Clears all cached font measurements and triggers re-measurement.\r\n */\r\nexport function remeasureFonts() {\r\n    clearAllFontInfos();\r\n}\r\n/**\r\n * Register a command.\r\n */\r\nexport function registerCommand(id, handler) {\r\n    return CommandsRegistry.registerCommand({ id, handler });\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport function createMonacoEditorAPI() {\r\n    return {\r\n        // methods\r\n        create: create,\r\n        onDidCreateEditor: onDidCreateEditor,\r\n        createDiffEditor: createDiffEditor,\r\n        createDiffNavigator: createDiffNavigator,\r\n        createModel: createModel,\r\n        setModelLanguage: setModelLanguage,\r\n        setModelMarkers: setModelMarkers,\r\n        getModelMarkers: getModelMarkers,\r\n        onDidChangeMarkers: onDidChangeMarkers,\r\n        getModels: getModels,\r\n        getModel: getModel,\r\n        onDidCreateModel: onDidCreateModel,\r\n        onWillDisposeModel: onWillDisposeModel,\r\n        onDidChangeModelLanguage: onDidChangeModelLanguage,\r\n        createWebWorker: createWebWorker,\r\n        colorizeElement: colorizeElement,\r\n        colorize: colorize,\r\n        colorizeModelLine: colorizeModelLine,\r\n        tokenize: tokenize,\r\n        defineTheme: defineTheme,\r\n        setTheme: setTheme,\r\n        remeasureFonts: remeasureFonts,\r\n        registerCommand: registerCommand,\r\n        // enums\r\n        AccessibilitySupport: standaloneEnums.AccessibilitySupport,\r\n        ContentWidgetPositionPreference: standaloneEnums.ContentWidgetPositionPreference,\r\n        CursorChangeReason: standaloneEnums.CursorChangeReason,\r\n        DefaultEndOfLine: standaloneEnums.DefaultEndOfLine,\r\n        EditorAutoIndentStrategy: standaloneEnums.EditorAutoIndentStrategy,\r\n        EditorOption: standaloneEnums.EditorOption,\r\n        EndOfLinePreference: standaloneEnums.EndOfLinePreference,\r\n        EndOfLineSequence: standaloneEnums.EndOfLineSequence,\r\n        MinimapPosition: standaloneEnums.MinimapPosition,\r\n        MouseTargetType: standaloneEnums.MouseTargetType,\r\n        OverlayWidgetPositionPreference: standaloneEnums.OverlayWidgetPositionPreference,\r\n        OverviewRulerLane: standaloneEnums.OverviewRulerLane,\r\n        RenderLineNumbersType: standaloneEnums.RenderLineNumbersType,\r\n        RenderMinimap: standaloneEnums.RenderMinimap,\r\n        ScrollbarVisibility: standaloneEnums.ScrollbarVisibility,\r\n        ScrollType: standaloneEnums.ScrollType,\r\n        TextEditorCursorBlinkingStyle: standaloneEnums.TextEditorCursorBlinkingStyle,\r\n        TextEditorCursorStyle: standaloneEnums.TextEditorCursorStyle,\r\n        TrackedRangeStickiness: standaloneEnums.TrackedRangeStickiness,\r\n        WrappingIndent: standaloneEnums.WrappingIndent,\r\n        // classes\r\n        ConfigurationChangedEvent: ConfigurationChangedEvent,\r\n        BareFontInfo: BareFontInfo,\r\n        FontInfo: FontInfo,\r\n        TextModelResolvedOptions: TextModelResolvedOptions,\r\n        FindMatch: FindMatch,\r\n        // vars\r\n        EditorType: EditorType,\r\n        EditorOptions: EditorOptions\r\n    };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var EditorOpenContext;\r\n(function (EditorOpenContext) {\r\n    /**\r\n     * Default: the editor is opening via a programmatic call\r\n     * to the editor service API.\r\n     */\r\n    EditorOpenContext[EditorOpenContext[\"API\"] = 0] = \"API\";\r\n    /**\r\n     * Indicates that a user action triggered the opening, e.g.\r\n     * via mouse or keyboard use.\r\n     */\r\n    EditorOpenContext[EditorOpenContext[\"USER\"] = 1] = \"USER\";\r\n})(EditorOpenContext || (EditorOpenContext = {}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport { parse } from '../../../base/common/marshalling.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { normalizePath } from '../../../base/common/resources.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from './codeEditorService.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { EditorOpenContext } from '../../../platform/editor/common/editor.js';\r\nimport { matchesScheme } from '../../../platform/opener/common/opener.js';\r\nlet CommandOpener = class CommandOpener {\r\n    constructor(_commandService) {\r\n        this._commandService = _commandService;\r\n    }\r\n    open(target, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!matchesScheme(target, Schemas.command)) {\r\n                return false;\r\n            }\r\n            if (!(options === null || options === void 0 ? void 0 : options.allowCommands)) {\r\n                // silently ignore commands when command-links are disabled, also\r\n                // surpress other openers by returning TRUE\r\n                return true;\r\n            }\r\n            // run command or bail out if command isn't known\r\n            if (typeof target === 'string') {\r\n                target = URI.parse(target);\r\n            }\r\n            // execute as command\r\n            let args = [];\r\n            try {\r\n                args = parse(decodeURIComponent(target.query));\r\n            }\r\n            catch (_a) {\r\n                // ignore and retry\r\n                try {\r\n                    args = parse(target.query);\r\n                }\r\n                catch (_b) {\r\n                    // ignore error\r\n                }\r\n            }\r\n            if (!Array.isArray(args)) {\r\n                args = [args];\r\n            }\r\n            yield this._commandService.executeCommand(target.path, ...args);\r\n            return true;\r\n        });\r\n    }\r\n};\r\nCommandOpener = __decorate([\r\n    __param(0, ICommandService)\r\n], CommandOpener);\r\nlet EditorOpener = class EditorOpener {\r\n    constructor(_editorService) {\r\n        this._editorService = _editorService;\r\n    }\r\n    open(target, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof target === 'string') {\r\n                target = URI.parse(target);\r\n            }\r\n            let selection = undefined;\r\n            const match = /^L?(\\d+)(?:,(\\d+))?/.exec(target.fragment);\r\n            if (match) {\r\n                // support file:///some/file.js#73,84\r\n                // support file:///some/file.js#L73\r\n                selection = {\r\n                    startLineNumber: parseInt(match[1]),\r\n                    startColumn: match[2] ? parseInt(match[2]) : 1\r\n                };\r\n                // remove fragment\r\n                target = target.with({ fragment: '' });\r\n            }\r\n            if (target.scheme === Schemas.file) {\r\n                target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\r\n            }\r\n            yield this._editorService.openCodeEditor({\r\n                resource: target,\r\n                options: Object.assign({ selection, context: (options === null || options === void 0 ? void 0 : options.fromUserGesture) ? EditorOpenContext.USER : EditorOpenContext.API }, options === null || options === void 0 ? void 0 : options.editorOptions)\r\n            }, this._editorService.getFocusedCodeEditor(), options === null || options === void 0 ? void 0 : options.openToSide);\r\n            return true;\r\n        });\r\n    }\r\n};\r\nEditorOpener = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], EditorOpener);\r\nlet OpenerService = class OpenerService {\r\n    constructor(editorService, commandService) {\r\n        this._openers = new LinkedList();\r\n        this._validators = new LinkedList();\r\n        this._resolvers = new LinkedList();\r\n        this._resolvedUriTargets = new ResourceMap(uri => uri.with({ path: null, fragment: null, query: null }).toString());\r\n        this._externalOpeners = new LinkedList();\r\n        // Default external opener is going through window.open()\r\n        this._defaultExternalOpener = {\r\n            openExternal: (href) => __awaiter(this, void 0, void 0, function* () {\r\n                // ensure to open HTTP/HTTPS links into new windows\r\n                // to not trigger a navigation. Any other link is\r\n                // safe to be set as HREF to prevent a blank window\r\n                // from opening.\r\n                if (matchesScheme(href, Schemas.http) || matchesScheme(href, Schemas.https)) {\r\n                    dom.windowOpenNoOpener(href);\r\n                }\r\n                else {\r\n                    window.location.href = href;\r\n                }\r\n                return true;\r\n            })\r\n        };\r\n        // Default opener: any external, maito, http(s), command, and catch-all-editors\r\n        this._openers.push({\r\n            open: (target, options) => __awaiter(this, void 0, void 0, function* () {\r\n                if ((options === null || options === void 0 ? void 0 : options.openExternal) || matchesScheme(target, Schemas.mailto) || matchesScheme(target, Schemas.http) || matchesScheme(target, Schemas.https)) {\r\n                    // open externally\r\n                    yield this._doOpenExternal(target, options);\r\n                    return true;\r\n                }\r\n                return false;\r\n            })\r\n        });\r\n        this._openers.push(new CommandOpener(commandService));\r\n        this._openers.push(new EditorOpener(editorService));\r\n    }\r\n    registerOpener(opener) {\r\n        const remove = this._openers.unshift(opener);\r\n        return { dispose: remove };\r\n    }\r\n    registerValidator(validator) {\r\n        const remove = this._validators.push(validator);\r\n        return { dispose: remove };\r\n    }\r\n    registerExternalUriResolver(resolver) {\r\n        const remove = this._resolvers.push(resolver);\r\n        return { dispose: remove };\r\n    }\r\n    setDefaultExternalOpener(externalOpener) {\r\n        this._defaultExternalOpener = externalOpener;\r\n    }\r\n    registerExternalOpener(opener) {\r\n        const remove = this._externalOpeners.push(opener);\r\n        return { dispose: remove };\r\n    }\r\n    open(target, options) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // check with contributed validators\r\n            const targetURI = typeof target === 'string' ? URI.parse(target) : target;\r\n            // validate against the original URI that this URI resolves to, if one exists\r\n            const validationTarget = (_a = this._resolvedUriTargets.get(targetURI)) !== null && _a !== void 0 ? _a : target;\r\n            for (const validator of this._validators) {\r\n                if (!(yield validator.shouldOpen(validationTarget))) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check with contributed openers\r\n            for (const opener of this._openers) {\r\n                const handled = yield opener.open(target, options);\r\n                if (handled) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    resolveExternalUri(resource, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            for (const resolver of this._resolvers) {\r\n                try {\r\n                    const result = yield resolver.resolveExternalUri(resource, options);\r\n                    if (result) {\r\n                        if (!this._resolvedUriTargets.has(result.resolved)) {\r\n                            this._resolvedUriTargets.set(result.resolved, resource);\r\n                        }\r\n                        return result;\r\n                    }\r\n                }\r\n                catch (_a) {\r\n                    // noop\r\n                }\r\n            }\r\n            throw new Error('Could not resolve external URI: ' + resource.toString());\r\n        });\r\n    }\r\n    _doOpenExternal(resource, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            //todo@jrieken IExternalUriResolver should support `uri: URI | string`\r\n            const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\r\n            let externalUri;\r\n            try {\r\n                externalUri = (yield this.resolveExternalUri(uri, options)).resolved;\r\n            }\r\n            catch (_a) {\r\n                externalUri = uri;\r\n            }\r\n            let href;\r\n            if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\r\n                // open the url-string AS IS\r\n                href = resource;\r\n            }\r\n            else {\r\n                // open URI using the toString(noEncode)+encodeURI-trick\r\n                href = encodeURI(externalUri.toString(true));\r\n            }\r\n            if (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) {\r\n                const preferredOpenerId = typeof (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) === 'string' ? options === null || options === void 0 ? void 0 : options.allowContributedOpeners : undefined;\r\n                for (const opener of this._externalOpeners) {\r\n                    const didOpen = yield opener.openExternal(href, {\r\n                        sourceUri: uri,\r\n                        preferredOpenerId,\r\n                    }, CancellationToken.None);\r\n                    if (didOpen) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\r\n        });\r\n    }\r\n    dispose() {\r\n        this._validators.clear();\r\n    }\r\n};\r\nOpenerService = __decorate([\r\n    __param(0, ICodeEditorService),\r\n    __param(1, ICommandService)\r\n], OpenerService);\r\nexport { OpenerService };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as assert from '../../../base/common/assert.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { Range } from '../../common/core/range.js';\r\nconst defaultOptions = {\r\n    followsCaret: true,\r\n    ignoreCharChanges: true,\r\n    alwaysRevealFirst: true\r\n};\r\n/**\r\n * Create a new diff navigator for the provided diff editor.\r\n */\r\nexport class DiffNavigator extends Disposable {\r\n    constructor(editor, options = {}) {\r\n        super();\r\n        this._onDidUpdate = this._register(new Emitter());\r\n        this._editor = editor;\r\n        this._options = objects.mixin(options, defaultOptions, false);\r\n        this.disposed = false;\r\n        this.nextIdx = -1;\r\n        this.ranges = [];\r\n        this.ignoreSelectionChange = false;\r\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\r\n        // hook up to diff editor for diff, disposal, and caret move\r\n        this._register(this._editor.onDidDispose(() => this.dispose()));\r\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\r\n        if (this._options.followsCaret) {\r\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\r\n                if (this.ignoreSelectionChange) {\r\n                    return;\r\n                }\r\n                this.nextIdx = -1;\r\n            }));\r\n        }\r\n        if (this._options.alwaysRevealFirst) {\r\n            this._register(this._editor.getModifiedEditor().onDidChangeModel((e) => {\r\n                this.revealFirst = true;\r\n            }));\r\n        }\r\n        // init things\r\n        this._init();\r\n    }\r\n    _init() {\r\n        let changes = this._editor.getLineChanges();\r\n        if (!changes) {\r\n            return;\r\n        }\r\n    }\r\n    _onDiffUpdated() {\r\n        this._init();\r\n        this._compute(this._editor.getLineChanges());\r\n        if (this.revealFirst) {\r\n            // Only reveal first on first non-null changes\r\n            if (this._editor.getLineChanges() !== null) {\r\n                this.revealFirst = false;\r\n                this.nextIdx = -1;\r\n                this.next(1 /* Immediate */);\r\n            }\r\n        }\r\n    }\r\n    _compute(lineChanges) {\r\n        // new ranges\r\n        this.ranges = [];\r\n        if (lineChanges) {\r\n            // create ranges from changes\r\n            lineChanges.forEach((lineChange) => {\r\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\r\n                    lineChange.charChanges.forEach((charChange) => {\r\n                        this.ranges.push({\r\n                            rhs: true,\r\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    this.ranges.push({\r\n                        rhs: true,\r\n                        range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        // sort\r\n        this.ranges.sort((left, right) => {\r\n            if (left.range.getStartPosition().isBeforeOrEqual(right.range.getStartPosition())) {\r\n                return -1;\r\n            }\r\n            else if (right.range.getStartPosition().isBeforeOrEqual(left.range.getStartPosition())) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        this._onDidUpdate.fire(this);\r\n    }\r\n    _initIdx(fwd) {\r\n        let found = false;\r\n        let position = this._editor.getPosition();\r\n        if (!position) {\r\n            this.nextIdx = 0;\r\n            return;\r\n        }\r\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\r\n            let range = this.ranges[i].range;\r\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\r\n                this.nextIdx = i + (fwd ? 0 : -1);\r\n                found = true;\r\n            }\r\n        }\r\n        if (!found) {\r\n            // after the last change\r\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\r\n        }\r\n        if (this.nextIdx < 0) {\r\n            this.nextIdx = this.ranges.length - 1;\r\n        }\r\n    }\r\n    _move(fwd, scrollType) {\r\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\r\n        if (!this.canNavigate()) {\r\n            return;\r\n        }\r\n        if (this.nextIdx === -1) {\r\n            this._initIdx(fwd);\r\n        }\r\n        else if (fwd) {\r\n            this.nextIdx += 1;\r\n            if (this.nextIdx >= this.ranges.length) {\r\n                this.nextIdx = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.nextIdx -= 1;\r\n            if (this.nextIdx < 0) {\r\n                this.nextIdx = this.ranges.length - 1;\r\n            }\r\n        }\r\n        let info = this.ranges[this.nextIdx];\r\n        this.ignoreSelectionChange = true;\r\n        try {\r\n            let pos = info.range.getStartPosition();\r\n            this._editor.setPosition(pos);\r\n            this._editor.revealPositionInCenter(pos, scrollType);\r\n        }\r\n        finally {\r\n            this.ignoreSelectionChange = false;\r\n        }\r\n    }\r\n    canNavigate() {\r\n        return this.ranges && this.ranges.length > 0;\r\n    }\r\n    next(scrollType = 0 /* Smooth */) {\r\n        this._move(true, scrollType);\r\n    }\r\n    previous(scrollType = 0 /* Smooth */) {\r\n        this._move(false, scrollType);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.ranges = [];\r\n        this.disposed = true;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { transformErrorForSerialization } from '../errors.js';\r\nimport { Disposable } from '../lifecycle.js';\r\nimport { isWeb } from '../platform.js';\r\nimport * as types from '../types.js';\r\nconst INITIALIZE = '$initialize';\r\nlet webWorkerWarningLogged = false;\r\nexport function logOnceWebWorkerWarning(err) {\r\n    if (!isWeb) {\r\n        // running tests\r\n        return;\r\n    }\r\n    if (!webWorkerWarningLogged) {\r\n        webWorkerWarningLogged = true;\r\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\r\n    }\r\n    console.warn(err.message);\r\n}\r\nclass SimpleWorkerProtocol {\r\n    constructor(handler) {\r\n        this._workerId = -1;\r\n        this._handler = handler;\r\n        this._lastSentReq = 0;\r\n        this._pendingReplies = Object.create(null);\r\n    }\r\n    setWorkerId(workerId) {\r\n        this._workerId = workerId;\r\n    }\r\n    sendMessage(method, args) {\r\n        let req = String(++this._lastSentReq);\r\n        return new Promise((resolve, reject) => {\r\n            this._pendingReplies[req] = {\r\n                resolve: resolve,\r\n                reject: reject\r\n            };\r\n            this._send({\r\n                vsWorker: this._workerId,\r\n                req: req,\r\n                method: method,\r\n                args: args\r\n            });\r\n        });\r\n    }\r\n    handleMessage(message) {\r\n        if (!message || !message.vsWorker) {\r\n            return;\r\n        }\r\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\r\n            return;\r\n        }\r\n        this._handleMessage(message);\r\n    }\r\n    _handleMessage(msg) {\r\n        if (msg.seq) {\r\n            let replyMessage = msg;\r\n            if (!this._pendingReplies[replyMessage.seq]) {\r\n                console.warn('Got reply to unknown seq');\r\n                return;\r\n            }\r\n            let reply = this._pendingReplies[replyMessage.seq];\r\n            delete this._pendingReplies[replyMessage.seq];\r\n            if (replyMessage.err) {\r\n                let err = replyMessage.err;\r\n                if (replyMessage.err.$isError) {\r\n                    err = new Error();\r\n                    err.name = replyMessage.err.name;\r\n                    err.message = replyMessage.err.message;\r\n                    err.stack = replyMessage.err.stack;\r\n                }\r\n                reply.reject(err);\r\n                return;\r\n            }\r\n            reply.resolve(replyMessage.res);\r\n            return;\r\n        }\r\n        let requestMessage = msg;\r\n        let req = requestMessage.req;\r\n        let result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\r\n        result.then((r) => {\r\n            this._send({\r\n                vsWorker: this._workerId,\r\n                seq: req,\r\n                res: r,\r\n                err: undefined\r\n            });\r\n        }, (e) => {\r\n            if (e.detail instanceof Error) {\r\n                // Loading errors have a detail property that points to the actual error\r\n                e.detail = transformErrorForSerialization(e.detail);\r\n            }\r\n            this._send({\r\n                vsWorker: this._workerId,\r\n                seq: req,\r\n                res: undefined,\r\n                err: transformErrorForSerialization(e)\r\n            });\r\n        });\r\n    }\r\n    _send(msg) {\r\n        let transfer = [];\r\n        if (msg.req) {\r\n            const m = msg;\r\n            for (let i = 0; i < m.args.length; i++) {\r\n                if (m.args[i] instanceof ArrayBuffer) {\r\n                    transfer.push(m.args[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const m = msg;\r\n            if (m.res instanceof ArrayBuffer) {\r\n                transfer.push(m.res);\r\n            }\r\n        }\r\n        this._handler.sendMessage(msg, transfer);\r\n    }\r\n}\r\n/**\r\n * Main thread side\r\n */\r\nexport class SimpleWorkerClient extends Disposable {\r\n    constructor(workerFactory, moduleId, host) {\r\n        super();\r\n        let lazyProxyReject = null;\r\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\r\n            this._protocol.handleMessage(msg);\r\n        }, (err) => {\r\n            // in Firefox, web workers fail lazily :(\r\n            // we will reject the proxy\r\n            if (lazyProxyReject) {\r\n                lazyProxyReject(err);\r\n            }\r\n        }));\r\n        this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: (msg, transfer) => {\r\n                this._worker.postMessage(msg, transfer);\r\n            },\r\n            handleMessage: (method, args) => {\r\n                if (typeof host[method] !== 'function') {\r\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\r\n                }\r\n                try {\r\n                    return Promise.resolve(host[method].apply(host, args));\r\n                }\r\n                catch (e) {\r\n                    return Promise.reject(e);\r\n                }\r\n            }\r\n        });\r\n        this._protocol.setWorkerId(this._worker.getId());\r\n        // Gather loader configuration\r\n        let loaderConfiguration = null;\r\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\r\n            // Get the configuration from the Monaco AMD Loader\r\n            loaderConfiguration = self.require.getConfig();\r\n        }\r\n        else if (typeof self.requirejs !== 'undefined') {\r\n            // Get the configuration from requirejs\r\n            loaderConfiguration = self.requirejs.s.contexts._.config;\r\n        }\r\n        const hostMethods = types.getAllMethodNames(host);\r\n        // Send initialize message\r\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\r\n            this._worker.getId(),\r\n            JSON.parse(JSON.stringify(loaderConfiguration)),\r\n            moduleId,\r\n            hostMethods,\r\n        ]);\r\n        // Create proxy to loaded code\r\n        const proxyMethodRequest = (method, args) => {\r\n            return this._request(method, args);\r\n        };\r\n        this._lazyProxy = new Promise((resolve, reject) => {\r\n            lazyProxyReject = reject;\r\n            this._onModuleLoaded.then((availableMethods) => {\r\n                resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\r\n            }, (e) => {\r\n                reject(e);\r\n                this._onError('Worker failed to load ' + moduleId, e);\r\n            });\r\n        });\r\n    }\r\n    getProxyObject() {\r\n        return this._lazyProxy;\r\n    }\r\n    _request(method, args) {\r\n        return new Promise((resolve, reject) => {\r\n            this._onModuleLoaded.then(() => {\r\n                this._protocol.sendMessage(method, args).then(resolve, reject);\r\n            }, reject);\r\n        });\r\n    }\r\n    _onError(message, error) {\r\n        console.error(message);\r\n        console.info(error);\r\n    }\r\n}\r\n/**\r\n * Worker side\r\n */\r\nexport class SimpleWorkerServer {\r\n    constructor(postMessage, requestHandlerFactory) {\r\n        this._requestHandlerFactory = requestHandlerFactory;\r\n        this._requestHandler = null;\r\n        this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: (msg, transfer) => {\r\n                postMessage(msg, transfer);\r\n            },\r\n            handleMessage: (method, args) => this._handleMessage(method, args)\r\n        });\r\n    }\r\n    onmessage(msg) {\r\n        this._protocol.handleMessage(msg);\r\n    }\r\n    _handleMessage(method, args) {\r\n        if (method === INITIALIZE) {\r\n            return this.initialize(args[0], args[1], args[2], args[3]);\r\n        }\r\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\r\n        this._protocol.setWorkerId(workerId);\r\n        const proxyMethodRequest = (method, args) => {\r\n            return this._protocol.sendMessage(method, args);\r\n        };\r\n        const hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\r\n        if (this._requestHandlerFactory) {\r\n            // static request handler\r\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\r\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\r\n        }\r\n        if (loaderConfig) {\r\n            // Remove 'baseUrl', handling it is beyond scope for now\r\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\r\n                delete loaderConfig['baseUrl'];\r\n            }\r\n            if (typeof loaderConfig.paths !== 'undefined') {\r\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\r\n                    delete loaderConfig.paths['vs'];\r\n                }\r\n            }\r\n            if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\r\n                // don't use, it has been destroyed during serialize\r\n                delete loaderConfig['trustedTypesPolicy'];\r\n            }\r\n            // Since this is in a web worker, enable catching errors\r\n            loaderConfig.catchError = true;\r\n            self.require.config(loaderConfig);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            // Use the global require to be sure to get the global config\r\n            self.require([moduleId], (module) => {\r\n                this._requestHandler = module.create(hostProxy);\r\n                if (!this._requestHandler) {\r\n                    reject(new Error(`No RequestHandler!`));\r\n                    return;\r\n                }\r\n                resolve(types.getAllMethodNames(this._requestHandler));\r\n            }, reject);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Called on the worker side\r\n */\r\nexport function create(postMessage) {\r\n    return new SimpleWorkerServer(postMessage, null);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a;\r\nimport { globals } from '../common/platform.js';\r\nimport { logOnceWebWorkerWarning } from '../common/worker/simpleWorker.js';\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('defaultWorkerFactory', { createScriptURL: value => value });\r\nfunction getWorker(workerId, label) {\r\n    // Option for hosts to overwrite the worker script (used in the standalone editor)\r\n    if (globals.MonacoEnvironment) {\r\n        if (typeof globals.MonacoEnvironment.getWorker === 'function') {\r\n            return globals.MonacoEnvironment.getWorker(workerId, label);\r\n        }\r\n        if (typeof globals.MonacoEnvironment.getWorkerUrl === 'function') {\r\n            const wokerUrl = globals.MonacoEnvironment.getWorkerUrl(workerId, label);\r\n            return new Worker(ttPolicy ? ttPolicy.createScriptURL(wokerUrl) : wokerUrl, { name: label });\r\n        }\r\n    }\r\n    // ESM-comment-begin\r\n    // \tif (typeof require === 'function') {\r\n    // \t\t// check if the JS lives on a different origin\r\n    // \t\tconst workerMain = require.toUrl('./' + workerId); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\r\n    // \t\tconst workerUrl = getWorkerBootstrapUrl(workerMain, label);\r\n    // \t\treturn new Worker(ttPolicy ? ttPolicy.createScriptURL(workerUrl) as unknown as string : workerUrl, { name: label });\r\n    // \t}\r\n    // ESM-comment-end\r\n    throw new Error(`You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker`);\r\n}\r\n// ESM-comment-begin\r\n// export function getWorkerBootstrapUrl(scriptPath: string, label: string): string {\r\n// \tif (/^((http:)|(https:)|(file:))/.test(scriptPath) && scriptPath.substring(0, self.origin.length) !== self.origin) {\r\n// \t\t// this is the cross-origin case\r\n// \t\t// i.e. the webpage is running at a different origin than where the scripts are loaded from\r\n// \t\tconst myPath = 'vs/base/worker/defaultWorkerFactory.js';\r\n// \t\tconst workerBaseUrl = require.toUrl(myPath).slice(0, -myPath.length); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\r\n// \t\tconst js = `/*${label}*/self.MonacoEnvironment={baseUrl: '${workerBaseUrl}'};const ttPolicy = self.trustedTypes?.createPolicy('defaultWorkerFactory', { createScriptURL: value => value });importScripts(ttPolicy?.createScriptURL('${scriptPath}') ?? '${scriptPath}');/*${label}*/`;\r\n// \t\tconst blob = new Blob([js], { type: 'application/javascript' });\r\n// \t\treturn URL.createObjectURL(blob);\r\n// \t}\r\n// \treturn scriptPath + '#' + label;\r\n// }\r\n// ESM-comment-end\r\nfunction isPromiseLike(obj) {\r\n    if (typeof obj.then === 'function') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * A worker that uses HTML5 web workers so that is has\r\n * its own global scope and its own thread.\r\n */\r\nclass WebWorker {\r\n    constructor(moduleId, id, label, onMessageCallback, onErrorCallback) {\r\n        this.id = id;\r\n        const workerOrPromise = getWorker('workerMain.js', label);\r\n        if (isPromiseLike(workerOrPromise)) {\r\n            this.worker = workerOrPromise;\r\n        }\r\n        else {\r\n            this.worker = Promise.resolve(workerOrPromise);\r\n        }\r\n        this.postMessage(moduleId, []);\r\n        this.worker.then((w) => {\r\n            w.onmessage = function (ev) {\r\n                onMessageCallback(ev.data);\r\n            };\r\n            w.onmessageerror = onErrorCallback;\r\n            if (typeof w.addEventListener === 'function') {\r\n                w.addEventListener('error', onErrorCallback);\r\n            }\r\n        });\r\n    }\r\n    getId() {\r\n        return this.id;\r\n    }\r\n    postMessage(message, transfer) {\r\n        if (this.worker) {\r\n            this.worker.then(w => w.postMessage(message, transfer));\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this.worker) {\r\n            this.worker.then(w => w.terminate());\r\n        }\r\n        this.worker = null;\r\n    }\r\n}\r\nexport class DefaultWorkerFactory {\r\n    constructor(label) {\r\n        this._label = label;\r\n        this._webWorkerFailedBeforeError = false;\r\n    }\r\n    create(moduleId, onMessageCallback, onErrorCallback) {\r\n        let workerId = (++DefaultWorkerFactory.LAST_WORKER_ID);\r\n        if (this._webWorkerFailedBeforeError) {\r\n            throw this._webWorkerFailedBeforeError;\r\n        }\r\n        return new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, (err) => {\r\n            logOnceWebWorkerWarning(err);\r\n            this._webWorkerFailedBeforeError = err;\r\n            onErrorCallback(err);\r\n        });\r\n    }\r\n}\r\nDefaultWorkerFactory.LAST_WORKER_ID = 0;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\r\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\r\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\r\n    return diffAlgo.ComputeDiff(pretty);\r\n}\r\nclass LineSequence {\r\n    constructor(lines) {\r\n        const startColumns = [];\r\n        const endColumns = [];\r\n        for (let i = 0, length = lines.length; i < length; i++) {\r\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\r\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\r\n        }\r\n        this.lines = lines;\r\n        this._startColumns = startColumns;\r\n        this._endColumns = endColumns;\r\n    }\r\n    getElements() {\r\n        const elements = [];\r\n        for (let i = 0, len = this.lines.length; i < len; i++) {\r\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\r\n        }\r\n        return elements;\r\n    }\r\n    getStrictElement(index) {\r\n        return this.lines[index];\r\n    }\r\n    getStartLineNumber(i) {\r\n        return i + 1;\r\n    }\r\n    getEndLineNumber(i) {\r\n        return i + 1;\r\n    }\r\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\r\n        const charCodes = [];\r\n        const lineNumbers = [];\r\n        const columns = [];\r\n        let len = 0;\r\n        for (let index = startIndex; index <= endIndex; index++) {\r\n            const lineContent = this.lines[index];\r\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\r\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\r\n            for (let col = startColumn; col < endColumn; col++) {\r\n                charCodes[len] = lineContent.charCodeAt(col - 1);\r\n                lineNumbers[len] = index + 1;\r\n                columns[len] = col;\r\n                len++;\r\n            }\r\n        }\r\n        return new CharSequence(charCodes, lineNumbers, columns);\r\n    }\r\n}\r\nclass CharSequence {\r\n    constructor(charCodes, lineNumbers, columns) {\r\n        this._charCodes = charCodes;\r\n        this._lineNumbers = lineNumbers;\r\n        this._columns = columns;\r\n    }\r\n    getElements() {\r\n        return this._charCodes;\r\n    }\r\n    getStartLineNumber(i) {\r\n        return this._lineNumbers[i];\r\n    }\r\n    getStartColumn(i) {\r\n        return this._columns[i];\r\n    }\r\n    getEndLineNumber(i) {\r\n        return this._lineNumbers[i];\r\n    }\r\n    getEndColumn(i) {\r\n        return this._columns[i] + 1;\r\n    }\r\n}\r\nclass CharChange {\r\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\r\n        this.originalStartLineNumber = originalStartLineNumber;\r\n        this.originalStartColumn = originalStartColumn;\r\n        this.originalEndLineNumber = originalEndLineNumber;\r\n        this.originalEndColumn = originalEndColumn;\r\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\r\n        this.modifiedStartColumn = modifiedStartColumn;\r\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\r\n        this.modifiedEndColumn = modifiedEndColumn;\r\n    }\r\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\r\n        let originalStartLineNumber;\r\n        let originalStartColumn;\r\n        let originalEndLineNumber;\r\n        let originalEndColumn;\r\n        let modifiedStartLineNumber;\r\n        let modifiedStartColumn;\r\n        let modifiedEndLineNumber;\r\n        let modifiedEndColumn;\r\n        if (diffChange.originalLength === 0) {\r\n            originalStartLineNumber = 0;\r\n            originalStartColumn = 0;\r\n            originalEndLineNumber = 0;\r\n            originalEndColumn = 0;\r\n        }\r\n        else {\r\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\r\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\r\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\r\n        }\r\n        if (diffChange.modifiedLength === 0) {\r\n            modifiedStartLineNumber = 0;\r\n            modifiedStartColumn = 0;\r\n            modifiedEndLineNumber = 0;\r\n            modifiedEndColumn = 0;\r\n        }\r\n        else {\r\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\r\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\r\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n        }\r\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\r\n    }\r\n}\r\nfunction postProcessCharChanges(rawChanges) {\r\n    if (rawChanges.length <= 1) {\r\n        return rawChanges;\r\n    }\r\n    const result = [rawChanges[0]];\r\n    let prevChange = result[0];\r\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\r\n        const currChange = rawChanges[i];\r\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\r\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\r\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\r\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\r\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\r\n            // Merge the current change into the previous one\r\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\r\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\r\n        }\r\n        else {\r\n            // Add the current change\r\n            result.push(currChange);\r\n            prevChange = currChange;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nclass LineChange {\r\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\r\n        this.originalStartLineNumber = originalStartLineNumber;\r\n        this.originalEndLineNumber = originalEndLineNumber;\r\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\r\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\r\n        this.charChanges = charChanges;\r\n    }\r\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\r\n        let originalStartLineNumber;\r\n        let originalEndLineNumber;\r\n        let modifiedStartLineNumber;\r\n        let modifiedEndLineNumber;\r\n        let charChanges = undefined;\r\n        if (diffChange.originalLength === 0) {\r\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\r\n            originalEndLineNumber = 0;\r\n        }\r\n        else {\r\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\r\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n        }\r\n        if (diffChange.modifiedLength === 0) {\r\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\r\n            modifiedEndLineNumber = 0;\r\n        }\r\n        else {\r\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\r\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n        }\r\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\r\n            // Compute character changes for diff chunks of at most 20 lines...\r\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\r\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n            let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\r\n            if (shouldPostProcessCharChanges) {\r\n                rawChanges = postProcessCharChanges(rawChanges);\r\n            }\r\n            charChanges = [];\r\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\r\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\r\n            }\r\n        }\r\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\r\n    }\r\n}\r\nexport class DiffComputer {\r\n    constructor(originalLines, modifiedLines, opts) {\r\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\r\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\r\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\r\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\r\n        this.originalLines = originalLines;\r\n        this.modifiedLines = modifiedLines;\r\n        this.original = new LineSequence(originalLines);\r\n        this.modified = new LineSequence(modifiedLines);\r\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\r\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\r\n    }\r\n    computeDiff() {\r\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\r\n            // empty original => fast path\r\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\r\n                return {\r\n                    quitEarly: false,\r\n                    changes: []\r\n                };\r\n            }\r\n            return {\r\n                quitEarly: false,\r\n                changes: [{\r\n                        originalStartLineNumber: 1,\r\n                        originalEndLineNumber: 1,\r\n                        modifiedStartLineNumber: 1,\r\n                        modifiedEndLineNumber: this.modified.lines.length,\r\n                        charChanges: [{\r\n                                modifiedEndColumn: 0,\r\n                                modifiedEndLineNumber: 0,\r\n                                modifiedStartColumn: 0,\r\n                                modifiedStartLineNumber: 0,\r\n                                originalEndColumn: 0,\r\n                                originalEndLineNumber: 0,\r\n                                originalStartColumn: 0,\r\n                                originalStartLineNumber: 0\r\n                            }]\r\n                    }]\r\n            };\r\n        }\r\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\r\n            // empty modified => fast path\r\n            return {\r\n                quitEarly: false,\r\n                changes: [{\r\n                        originalStartLineNumber: 1,\r\n                        originalEndLineNumber: this.original.lines.length,\r\n                        modifiedStartLineNumber: 1,\r\n                        modifiedEndLineNumber: 1,\r\n                        charChanges: [{\r\n                                modifiedEndColumn: 0,\r\n                                modifiedEndLineNumber: 0,\r\n                                modifiedStartColumn: 0,\r\n                                modifiedStartLineNumber: 0,\r\n                                originalEndColumn: 0,\r\n                                originalEndLineNumber: 0,\r\n                                originalStartColumn: 0,\r\n                                originalStartLineNumber: 0\r\n                            }]\r\n                    }]\r\n            };\r\n        }\r\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\r\n        const rawChanges = diffResult.changes;\r\n        const quitEarly = diffResult.quitEarly;\r\n        // The diff is always computed with ignoring trim whitespace\r\n        // This ensures we get the prettiest diff\r\n        if (this.shouldIgnoreTrimWhitespace) {\r\n            const lineChanges = [];\r\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\r\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n            }\r\n            return {\r\n                quitEarly: quitEarly,\r\n                changes: lineChanges\r\n            };\r\n        }\r\n        // Need to post-process and introduce changes where the trim whitespace is different\r\n        // Note that we are looping starting at -1 to also cover the lines before the first change\r\n        const result = [];\r\n        let originalLineIndex = 0;\r\n        let modifiedLineIndex = 0;\r\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\r\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\r\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\r\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\r\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\r\n                const originalLine = this.originalLines[originalLineIndex];\r\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\r\n                if (originalLine !== modifiedLine) {\r\n                    // These lines differ only in trim whitespace\r\n                    // Check the leading whitespace\r\n                    {\r\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\r\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\r\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\r\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\r\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\r\n                            if (originalChar !== modifiedChar) {\r\n                                break;\r\n                            }\r\n                            originalStartColumn--;\r\n                            modifiedStartColumn--;\r\n                        }\r\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\r\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\r\n                        }\r\n                    }\r\n                    // Check the trailing whitespace\r\n                    {\r\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\r\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\r\n                        const originalMaxColumn = originalLine.length + 1;\r\n                        const modifiedMaxColumn = modifiedLine.length + 1;\r\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\r\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\r\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\r\n                            if (originalChar !== modifiedChar) {\r\n                                break;\r\n                            }\r\n                            originalEndColumn++;\r\n                            modifiedEndColumn++;\r\n                        }\r\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\r\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\r\n                        }\r\n                    }\r\n                }\r\n                originalLineIndex++;\r\n                modifiedLineIndex++;\r\n            }\r\n            if (nextChange) {\r\n                // Emit the actual change\r\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n                originalLineIndex += nextChange.originalLength;\r\n                modifiedLineIndex += nextChange.modifiedLength;\r\n            }\r\n        }\r\n        return {\r\n            quitEarly: quitEarly,\r\n            changes: result\r\n        };\r\n    }\r\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\r\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\r\n            // Merged into previous\r\n            return;\r\n        }\r\n        let charChanges = undefined;\r\n        if (this.shouldComputeCharChanges) {\r\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\r\n        }\r\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\r\n    }\r\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\r\n        const len = result.length;\r\n        if (len === 0) {\r\n            return false;\r\n        }\r\n        const prevChange = result[len - 1];\r\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\r\n            // Don't merge with inserts/deletes\r\n            return false;\r\n        }\r\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\r\n            prevChange.originalEndLineNumber = originalLineNumber;\r\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\r\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\r\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nfunction getFirstNonBlankColumn(txt, defaultValue) {\r\n    const r = strings.firstNonWhitespaceIndex(txt);\r\n    if (r === -1) {\r\n        return defaultValue;\r\n    }\r\n    return r + 1;\r\n}\r\nfunction getLastNonBlankColumn(txt, defaultValue) {\r\n    const r = strings.lastNonWhitespaceIndex(txt);\r\n    if (r === -1) {\r\n        return defaultValue;\r\n    }\r\n    return r + 2;\r\n}\r\nfunction createContinueProcessingPredicate(maximumRuntime) {\r\n    if (maximumRuntime === 0) {\r\n        return () => true;\r\n    }\r\n    const startTime = Date.now();\r\n    return () => {\r\n        return Date.now() - startTime < maximumRuntime;\r\n    };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { splitLines } from '../../../base/common/strings.js';\r\nimport { Position } from '../core/position.js';\r\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\r\nexport class MirrorTextModel {\r\n    constructor(uri, lines, eol, versionId) {\r\n        this._uri = uri;\r\n        this._lines = lines;\r\n        this._eol = eol;\r\n        this._versionId = versionId;\r\n        this._lineStarts = null;\r\n        this._cachedTextValue = null;\r\n    }\r\n    dispose() {\r\n        this._lines.length = 0;\r\n    }\r\n    get version() {\r\n        return this._versionId;\r\n    }\r\n    getText() {\r\n        if (this._cachedTextValue === null) {\r\n            this._cachedTextValue = this._lines.join(this._eol);\r\n        }\r\n        return this._cachedTextValue;\r\n    }\r\n    onEvents(e) {\r\n        if (e.eol && e.eol !== this._eol) {\r\n            this._eol = e.eol;\r\n            this._lineStarts = null;\r\n        }\r\n        // Update my lines\r\n        const changes = e.changes;\r\n        for (const change of changes) {\r\n            this._acceptDeleteRange(change.range);\r\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\r\n        }\r\n        this._versionId = e.versionId;\r\n        this._cachedTextValue = null;\r\n    }\r\n    _ensureLineStarts() {\r\n        if (!this._lineStarts) {\r\n            const eolLength = this._eol.length;\r\n            const linesLength = this._lines.length;\r\n            const lineStartValues = new Uint32Array(linesLength);\r\n            for (let i = 0; i < linesLength; i++) {\r\n                lineStartValues[i] = this._lines[i].length + eolLength;\r\n            }\r\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\r\n        }\r\n    }\r\n    /**\r\n     * All changes to a line's text go through this method\r\n     */\r\n    _setLineText(lineIndex, newValue) {\r\n        this._lines[lineIndex] = newValue;\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n        }\r\n    }\r\n    _acceptDeleteRange(range) {\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            if (range.startColumn === range.endColumn) {\r\n                // Nothing to delete\r\n                return;\r\n            }\r\n            // Delete text on the affected line\r\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\r\n            return;\r\n        }\r\n        // Take remaining text on last line and append it to remaining text on first line\r\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\r\n        // Delete middle lines\r\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        }\r\n    }\r\n    _acceptInsertText(position, insertText) {\r\n        if (insertText.length === 0) {\r\n            // Nothing to insert\r\n            return;\r\n        }\r\n        let insertLines = splitLines(insertText);\r\n        if (insertLines.length === 1) {\r\n            // Inserting text on one line\r\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                + insertLines[0]\r\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\r\n            return;\r\n        }\r\n        // Append overflowing text from first line to the end of text to insert\r\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n        // Delete overflowing text from first line and insert text on first line\r\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n            + insertLines[0]);\r\n        // Insert new lines & store lengths\r\n        let newLengths = new Uint32Array(insertLines.length - 1);\r\n        for (let i = 1; i < insertLines.length; i++) {\r\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n        }\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CharacterClassifier } from '../core/characterClassifier.js';\r\nexport class Uint8Matrix {\r\n    constructor(rows, cols, defaultValue) {\r\n        const data = new Uint8Array(rows * cols);\r\n        for (let i = 0, len = rows * cols; i < len; i++) {\r\n            data[i] = defaultValue;\r\n        }\r\n        this._data = data;\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n    }\r\n    get(row, col) {\r\n        return this._data[row * this.cols + col];\r\n    }\r\n    set(row, col, value) {\r\n        this._data[row * this.cols + col] = value;\r\n    }\r\n}\r\nexport class StateMachine {\r\n    constructor(edges) {\r\n        let maxCharCode = 0;\r\n        let maxState = 0 /* Invalid */;\r\n        for (let i = 0, len = edges.length; i < len; i++) {\r\n            let [from, chCode, to] = edges[i];\r\n            if (chCode > maxCharCode) {\r\n                maxCharCode = chCode;\r\n            }\r\n            if (from > maxState) {\r\n                maxState = from;\r\n            }\r\n            if (to > maxState) {\r\n                maxState = to;\r\n            }\r\n        }\r\n        maxCharCode++;\r\n        maxState++;\r\n        let states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\r\n        for (let i = 0, len = edges.length; i < len; i++) {\r\n            let [from, chCode, to] = edges[i];\r\n            states.set(from, chCode, to);\r\n        }\r\n        this._states = states;\r\n        this._maxCharCode = maxCharCode;\r\n    }\r\n    nextState(currentState, chCode) {\r\n        if (chCode < 0 || chCode >= this._maxCharCode) {\r\n            return 0 /* Invalid */;\r\n        }\r\n        return this._states.get(currentState, chCode);\r\n    }\r\n}\r\n// State machine for http:// or https:// or file://\r\nlet _stateMachine = null;\r\nfunction getStateMachine() {\r\n    if (_stateMachine === null) {\r\n        _stateMachine = new StateMachine([\r\n            [1 /* Start */, 104 /* h */, 2 /* H */],\r\n            [1 /* Start */, 72 /* H */, 2 /* H */],\r\n            [1 /* Start */, 102 /* f */, 6 /* F */],\r\n            [1 /* Start */, 70 /* F */, 6 /* F */],\r\n            [2 /* H */, 116 /* t */, 3 /* HT */],\r\n            [2 /* H */, 84 /* T */, 3 /* HT */],\r\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\r\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\r\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\r\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\r\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\r\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\r\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\r\n            [6 /* F */, 105 /* i */, 7 /* FI */],\r\n            [6 /* F */, 73 /* I */, 7 /* FI */],\r\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\r\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\r\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\r\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\r\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\r\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\r\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\r\n        ]);\r\n    }\r\n    return _stateMachine;\r\n}\r\nlet _classifier = null;\r\nfunction getClassifier() {\r\n    if (_classifier === null) {\r\n        _classifier = new CharacterClassifier(0 /* None */);\r\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"\u3001\u3002\uFF61\uFF64\uFF0C\uFF0E\uFF1A\uFF1B\u2018\u3008\u300C\u300E\u3014\uFF08\uFF3B\uFF5B\uFF62\uFF63\uFF5D\uFF3D\uFF09\u3015\u300F\u300D\u3009\u2019\uFF40\uFF5E\u2026';\r\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\r\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\r\n        }\r\n        const CANNOT_END_WITH_CHARACTERS = '.,;';\r\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\r\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\r\n        }\r\n    }\r\n    return _classifier;\r\n}\r\nexport class LinkComputer {\r\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\r\n        // Do not allow to end link in certain characters...\r\n        let lastIncludedCharIndex = linkEndIndex - 1;\r\n        do {\r\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\r\n            const chClass = classifier.get(chCode);\r\n            if (chClass !== 2 /* CannotEndIn */) {\r\n                break;\r\n            }\r\n            lastIncludedCharIndex--;\r\n        } while (lastIncludedCharIndex > linkBeginIndex);\r\n        // Handle links enclosed in parens, square brackets and curlys.\r\n        if (linkBeginIndex > 0) {\r\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\r\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\r\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\r\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\r\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\r\n                // Do not end in ) if ( is before the link start\r\n                // Do not end in ] if [ is before the link start\r\n                // Do not end in } if { is before the link start\r\n                lastIncludedCharIndex--;\r\n            }\r\n        }\r\n        return {\r\n            range: {\r\n                startLineNumber: lineNumber,\r\n                startColumn: linkBeginIndex + 1,\r\n                endLineNumber: lineNumber,\r\n                endColumn: lastIncludedCharIndex + 2\r\n            },\r\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\r\n        };\r\n    }\r\n    static computeLinks(model, stateMachine = getStateMachine()) {\r\n        const classifier = getClassifier();\r\n        let result = [];\r\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\r\n            const line = model.getLineContent(i);\r\n            const len = line.length;\r\n            let j = 0;\r\n            let linkBeginIndex = 0;\r\n            let linkBeginChCode = 0;\r\n            let state = 1 /* Start */;\r\n            let hasOpenParens = false;\r\n            let hasOpenSquareBracket = false;\r\n            let inSquareBrackets = false;\r\n            let hasOpenCurlyBracket = false;\r\n            while (j < len) {\r\n                let resetStateMachine = false;\r\n                const chCode = line.charCodeAt(j);\r\n                if (state === 13 /* Accept */) {\r\n                    let chClass;\r\n                    switch (chCode) {\r\n                        case 40 /* OpenParen */:\r\n                            hasOpenParens = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 41 /* CloseParen */:\r\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        case 91 /* OpenSquareBracket */:\r\n                            inSquareBrackets = true;\r\n                            hasOpenSquareBracket = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 93 /* CloseSquareBracket */:\r\n                            inSquareBrackets = false;\r\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        case 123 /* OpenCurlyBrace */:\r\n                            hasOpenCurlyBracket = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 125 /* CloseCurlyBrace */:\r\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\r\n                        case 39 /* SingleQuote */:\r\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 34 /* DoubleQuote */:\r\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 96 /* BackTick */:\r\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 42 /* Asterisk */:\r\n                            // `*` terminates a link if the link began with `*`\r\n                            chClass = (linkBeginChCode === 42 /* Asterisk */) ? 1 /* ForceTermination */ : 0 /* None */;\r\n                            break;\r\n                        case 124 /* Pipe */:\r\n                            // `|` terminates a link if the link began with `|`\r\n                            chClass = (linkBeginChCode === 124 /* Pipe */) ? 1 /* ForceTermination */ : 0 /* None */;\r\n                            break;\r\n                        case 32 /* Space */:\r\n                            // ` ` allow space in between [ and ]\r\n                            chClass = (inSquareBrackets ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        default:\r\n                            chClass = classifier.get(chCode);\r\n                    }\r\n                    // Check if character terminates link\r\n                    if (chClass === 1 /* ForceTermination */) {\r\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\r\n                        resetStateMachine = true;\r\n                    }\r\n                }\r\n                else if (state === 12 /* End */) {\r\n                    let chClass;\r\n                    if (chCode === 91 /* OpenSquareBracket */) {\r\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\r\n                        hasOpenSquareBracket = true;\r\n                        chClass = 0 /* None */;\r\n                    }\r\n                    else {\r\n                        chClass = classifier.get(chCode);\r\n                    }\r\n                    // Check if character terminates link\r\n                    if (chClass === 1 /* ForceTermination */) {\r\n                        resetStateMachine = true;\r\n                    }\r\n                    else {\r\n                        state = 13 /* Accept */;\r\n                    }\r\n                }\r\n                else {\r\n                    state = stateMachine.nextState(state, chCode);\r\n                    if (state === 0 /* Invalid */) {\r\n                        resetStateMachine = true;\r\n                    }\r\n                }\r\n                if (resetStateMachine) {\r\n                    state = 1 /* Start */;\r\n                    hasOpenParens = false;\r\n                    hasOpenSquareBracket = false;\r\n                    hasOpenCurlyBracket = false;\r\n                    // Record where the link started\r\n                    linkBeginIndex = j + 1;\r\n                    linkBeginChCode = chCode;\r\n                }\r\n                j++;\r\n            }\r\n            if (state === 13 /* Accept */) {\r\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Returns an array of all links contains in the provided\r\n * document. *Note* that this operation is computational\r\n * expensive and should not run in the UI thread.\r\n */\r\nexport function computeLinks(model) {\r\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\r\n        // Unknown caller!\r\n        return [];\r\n    }\r\n    return LinkComputer.computeLinks(model);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class BasicInplaceReplace {\r\n    constructor() {\r\n        this._defaultValueSet = [\r\n            ['true', 'false'],\r\n            ['True', 'False'],\r\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\r\n            ['public', 'protected', 'private'],\r\n        ];\r\n    }\r\n    navigateValueSet(range1, text1, range2, text2, up) {\r\n        if (range1 && text1) {\r\n            let result = this.doNavigateValueSet(text1, up);\r\n            if (result) {\r\n                return {\r\n                    range: range1,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        if (range2 && text2) {\r\n            let result = this.doNavigateValueSet(text2, up);\r\n            if (result) {\r\n                return {\r\n                    range: range2,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    doNavigateValueSet(text, up) {\r\n        let numberResult = this.numberReplace(text, up);\r\n        if (numberResult !== null) {\r\n            return numberResult;\r\n        }\r\n        return this.textReplace(text, up);\r\n    }\r\n    numberReplace(value, up) {\r\n        let precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\r\n        let n1 = Number(value);\r\n        let n2 = parseFloat(value);\r\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\r\n            if (n1 === 0 && !up) {\r\n                return null; // don't do negative\r\n                //\t\t\t} else if(n1 === 9 && up) {\r\n                //\t\t\t\treturn null; // don't insert 10 into a number\r\n            }\r\n            else {\r\n                n1 = Math.floor(n1 * precision);\r\n                n1 += up ? precision : -precision;\r\n                return String(n1 / precision);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    textReplace(value, up) {\r\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\r\n    }\r\n    valueSetsReplace(valueSets, value, up) {\r\n        let result = null;\r\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\r\n            result = this.valueSetReplace(valueSets[i], value, up);\r\n        }\r\n        return result;\r\n    }\r\n    valueSetReplace(valueSet, value, up) {\r\n        let idx = valueSet.indexOf(value);\r\n        if (idx >= 0) {\r\n            idx += up ? +1 : -1;\r\n            if (idx < 0) {\r\n                idx = valueSet.length - 1;\r\n            }\r\n            else {\r\n                idx %= valueSet.length;\r\n            }\r\n            return valueSet[idx];\r\n        }\r\n        return null;\r\n    }\r\n}\r\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { stringDiff } from '../../../base/common/diff/diff.js';\r\nimport { globals } from '../../../base/common/platform.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { DiffComputer } from '../diff/diffComputer.js';\r\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\r\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\r\nimport { computeLinks } from '../modes/linkComputer.js';\r\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\r\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\n/**\r\n * @internal\r\n */\r\nclass MirrorModel extends BaseMirrorModel {\r\n    get uri() {\r\n        return this._uri;\r\n    }\r\n    get eol() {\r\n        return this._eol;\r\n    }\r\n    getValue() {\r\n        return this.getText();\r\n    }\r\n    getLinesContent() {\r\n        return this._lines.slice(0);\r\n    }\r\n    getLineCount() {\r\n        return this._lines.length;\r\n    }\r\n    getLineContent(lineNumber) {\r\n        return this._lines[lineNumber - 1];\r\n    }\r\n    getWordAtPosition(position, wordDefinition) {\r\n        let wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\r\n        if (wordAtText) {\r\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\r\n        }\r\n        return null;\r\n    }\r\n    words(wordDefinition) {\r\n        const lines = this._lines;\r\n        const wordenize = this._wordenize.bind(this);\r\n        let lineNumber = 0;\r\n        let lineText = '';\r\n        let wordRangesIdx = 0;\r\n        let wordRanges = [];\r\n        return {\r\n            *[Symbol.iterator]() {\r\n                while (true) {\r\n                    if (wordRangesIdx < wordRanges.length) {\r\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\r\n                        wordRangesIdx += 1;\r\n                        yield value;\r\n                    }\r\n                    else {\r\n                        if (lineNumber < lines.length) {\r\n                            lineText = lines[lineNumber];\r\n                            wordRanges = wordenize(lineText, wordDefinition);\r\n                            wordRangesIdx = 0;\r\n                            lineNumber += 1;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    getLineWords(lineNumber, wordDefinition) {\r\n        let content = this._lines[lineNumber - 1];\r\n        let ranges = this._wordenize(content, wordDefinition);\r\n        let words = [];\r\n        for (const range of ranges) {\r\n            words.push({\r\n                word: content.substring(range.start, range.end),\r\n                startColumn: range.start + 1,\r\n                endColumn: range.end + 1\r\n            });\r\n        }\r\n        return words;\r\n    }\r\n    _wordenize(content, wordDefinition) {\r\n        const result = [];\r\n        let match;\r\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\r\n        while (match = wordDefinition.exec(content)) {\r\n            if (match[0].length === 0) {\r\n                // it did match the empty string\r\n                break;\r\n            }\r\n            result.push({ start: match.index, end: match.index + match[0].length });\r\n        }\r\n        return result;\r\n    }\r\n    getValueInRange(range) {\r\n        range = this._validateRange(range);\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\r\n        }\r\n        let lineEnding = this._eol;\r\n        let startLineIndex = range.startLineNumber - 1;\r\n        let endLineIndex = range.endLineNumber - 1;\r\n        let resultLines = [];\r\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\r\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\r\n            resultLines.push(this._lines[i]);\r\n        }\r\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\r\n        return resultLines.join(lineEnding);\r\n    }\r\n    offsetAt(position) {\r\n        position = this._validatePosition(position);\r\n        this._ensureLineStarts();\r\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\r\n    }\r\n    positionAt(offset) {\r\n        offset = Math.floor(offset);\r\n        offset = Math.max(0, offset);\r\n        this._ensureLineStarts();\r\n        let out = this._lineStarts.getIndexOf(offset);\r\n        let lineLength = this._lines[out.index].length;\r\n        // Ensure we return a valid position\r\n        return {\r\n            lineNumber: 1 + out.index,\r\n            column: 1 + Math.min(out.remainder, lineLength)\r\n        };\r\n    }\r\n    _validateRange(range) {\r\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\r\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\r\n        if (start.lineNumber !== range.startLineNumber\r\n            || start.column !== range.startColumn\r\n            || end.lineNumber !== range.endLineNumber\r\n            || end.column !== range.endColumn) {\r\n            return {\r\n                startLineNumber: start.lineNumber,\r\n                startColumn: start.column,\r\n                endLineNumber: end.lineNumber,\r\n                endColumn: end.column\r\n            };\r\n        }\r\n        return range;\r\n    }\r\n    _validatePosition(position) {\r\n        if (!Position.isIPosition(position)) {\r\n            throw new Error('bad position');\r\n        }\r\n        let { lineNumber, column } = position;\r\n        let hasChanged = false;\r\n        if (lineNumber < 1) {\r\n            lineNumber = 1;\r\n            column = 1;\r\n            hasChanged = true;\r\n        }\r\n        else if (lineNumber > this._lines.length) {\r\n            lineNumber = this._lines.length;\r\n            column = this._lines[lineNumber - 1].length + 1;\r\n            hasChanged = true;\r\n        }\r\n        else {\r\n            let maxCharacter = this._lines[lineNumber - 1].length + 1;\r\n            if (column < 1) {\r\n                column = 1;\r\n                hasChanged = true;\r\n            }\r\n            else if (column > maxCharacter) {\r\n                column = maxCharacter;\r\n                hasChanged = true;\r\n            }\r\n        }\r\n        if (!hasChanged) {\r\n            return position;\r\n        }\r\n        else {\r\n            return { lineNumber, column };\r\n        }\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class EditorSimpleWorker {\r\n    constructor(host, foreignModuleFactory) {\r\n        this._host = host;\r\n        this._models = Object.create(null);\r\n        this._foreignModuleFactory = foreignModuleFactory;\r\n        this._foreignModule = null;\r\n    }\r\n    dispose() {\r\n        this._models = Object.create(null);\r\n    }\r\n    _getModel(uri) {\r\n        return this._models[uri];\r\n    }\r\n    _getModels() {\r\n        let all = [];\r\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\r\n        return all;\r\n    }\r\n    acceptNewModel(data) {\r\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\r\n    }\r\n    acceptModelChanged(strURL, e) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        let model = this._models[strURL];\r\n        model.onEvents(e);\r\n    }\r\n    acceptRemovedModel(strURL) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        delete this._models[strURL];\r\n    }\r\n    // ---- BEGIN diff --------------------------------------------------------------------------\r\n    computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const original = this._getModel(originalUrl);\r\n            const modified = this._getModel(modifiedUrl);\r\n            if (!original || !modified) {\r\n                return null;\r\n            }\r\n            const originalLines = original.getLinesContent();\r\n            const modifiedLines = modified.getLinesContent();\r\n            const diffComputer = new DiffComputer(originalLines, modifiedLines, {\r\n                shouldComputeCharChanges: true,\r\n                shouldPostProcessCharChanges: true,\r\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\r\n                shouldMakePrettyDiff: true,\r\n                maxComputationTime: maxComputationTime\r\n            });\r\n            const diffResult = diffComputer.computeDiff();\r\n            const identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\r\n            return {\r\n                quitEarly: diffResult.quitEarly,\r\n                identical: identical,\r\n                changes: diffResult.changes\r\n            };\r\n        });\r\n    }\r\n    _modelsAreIdentical(original, modified) {\r\n        const originalLineCount = original.getLineCount();\r\n        const modifiedLineCount = modified.getLineCount();\r\n        if (originalLineCount !== modifiedLineCount) {\r\n            return false;\r\n        }\r\n        for (let line = 1; line <= originalLineCount; line++) {\r\n            const originalLine = original.getLineContent(line);\r\n            const modifiedLine = modified.getLineContent(line);\r\n            if (originalLine !== modifiedLine) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    computeMoreMinimalEdits(modelUrl, edits) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const model = this._getModel(modelUrl);\r\n            if (!model) {\r\n                return edits;\r\n            }\r\n            const result = [];\r\n            let lastEol = undefined;\r\n            edits = edits.slice(0).sort((a, b) => {\r\n                if (a.range && b.range) {\r\n                    return Range.compareRangesUsingStarts(a.range, b.range);\r\n                }\r\n                // eol only changes should go to the end\r\n                let aRng = a.range ? 0 : 1;\r\n                let bRng = b.range ? 0 : 1;\r\n                return aRng - bRng;\r\n            });\r\n            for (let { range, text, eol } of edits) {\r\n                if (typeof eol === 'number') {\r\n                    lastEol = eol;\r\n                }\r\n                if (Range.isEmpty(range) && !text) {\r\n                    // empty change\r\n                    continue;\r\n                }\r\n                const original = model.getValueInRange(range);\r\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\r\n                if (original === text) {\r\n                    // noop\r\n                    continue;\r\n                }\r\n                // make sure diff won't take too long\r\n                if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\r\n                    result.push({ range, text });\r\n                    continue;\r\n                }\r\n                // compute diff between original and edit.text\r\n                const changes = stringDiff(original, text, false);\r\n                const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\r\n                for (const change of changes) {\r\n                    const start = model.positionAt(editOffset + change.originalStart);\r\n                    const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\r\n                    const newEdit = {\r\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\r\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\r\n                    };\r\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\r\n                        result.push(newEdit);\r\n                    }\r\n                }\r\n            }\r\n            if (typeof lastEol === 'number') {\r\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    // ---- END minimal edits ---------------------------------------------------------------\r\n    computeLinks(modelUrl) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let model = this._getModel(modelUrl);\r\n            if (!model) {\r\n                return null;\r\n            }\r\n            return computeLinks(model);\r\n        });\r\n    }\r\n    textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const sw = new StopWatch(true);\r\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n            const seen = new Set();\r\n            outer: for (let url of modelUrls) {\r\n                const model = this._getModel(url);\r\n                if (!model) {\r\n                    continue;\r\n                }\r\n                for (let word of model.words(wordDefRegExp)) {\r\n                    if (word === leadingWord || !isNaN(Number(word))) {\r\n                        continue;\r\n                    }\r\n                    seen.add(word);\r\n                    if (seen.size > EditorSimpleWorker._suggestionsLimit) {\r\n                        break outer;\r\n                    }\r\n                }\r\n            }\r\n            return { words: Array.from(seen), duration: sw.elapsed() };\r\n        });\r\n    }\r\n    // ---- END suggest --------------------------------------------------------------------------\r\n    //#region -- word ranges --\r\n    computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let model = this._getModel(modelUrl);\r\n            if (!model) {\r\n                return Object.create(null);\r\n            }\r\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n            const result = Object.create(null);\r\n            for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\r\n                let words = model.getLineWords(line, wordDefRegExp);\r\n                for (const word of words) {\r\n                    if (!isNaN(Number(word.word))) {\r\n                        continue;\r\n                    }\r\n                    let array = result[word.word];\r\n                    if (!array) {\r\n                        array = [];\r\n                        result[word.word] = array;\r\n                    }\r\n                    array.push({\r\n                        startLineNumber: line,\r\n                        startColumn: word.startColumn,\r\n                        endLineNumber: line,\r\n                        endColumn: word.endColumn\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    //#endregion\r\n    navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let model = this._getModel(modelUrl);\r\n            if (!model) {\r\n                return null;\r\n            }\r\n            let wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n            if (range.startColumn === range.endColumn) {\r\n                range = {\r\n                    startLineNumber: range.startLineNumber,\r\n                    startColumn: range.startColumn,\r\n                    endLineNumber: range.endLineNumber,\r\n                    endColumn: range.endColumn + 1\r\n                };\r\n            }\r\n            let selectionText = model.getValueInRange(range);\r\n            let wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\r\n            if (!wordRange) {\r\n                return null;\r\n            }\r\n            let word = model.getValueInRange(wordRange);\r\n            let result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\r\n            return result;\r\n        });\r\n    }\r\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\r\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\r\n        const proxyMethodRequest = (method, args) => {\r\n            return this._host.fhr(method, args);\r\n        };\r\n        const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\r\n        let ctx = {\r\n            host: foreignHost,\r\n            getMirrorModels: () => {\r\n                return this._getModels();\r\n            }\r\n        };\r\n        if (this._foreignModuleFactory) {\r\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\r\n            // static foreing module\r\n            return Promise.resolve(types.getAllMethodNames(this._foreignModule));\r\n        }\r\n        // ESM-comment-begin\r\n        // \t\treturn new Promise<any>((resolve, reject) => {\r\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\r\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\r\n        // \r\n        // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\r\n        // \r\n        // \t\t\t}, reject);\r\n        // \t\t});\r\n        // ESM-comment-end\r\n        // ESM-uncomment-begin\r\n        return Promise.reject(new Error(`Unexpected usage`));\r\n        // ESM-uncomment-end\r\n    }\r\n    // foreign method request\r\n    fmr(method, args) {\r\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n}\r\n// ---- END diff --------------------------------------------------------------------------\r\n// ---- BEGIN minimal edits ---------------------------------------------------------------\r\nEditorSimpleWorker._diffLimit = 100000;\r\n// ---- BEGIN suggest --------------------------------------------------------------------------\r\nEditorSimpleWorker._suggestionsLimit = 10000;\r\n/**\r\n * Called on the worker side\r\n * @internal\r\n */\r\nexport function create(host) {\r\n    return new EditorSimpleWorker(host, null);\r\n}\r\nif (typeof importScripts === 'function') {\r\n    // Running in a web worker\r\n    globals.monaco = createMonacoBaseAPI();\r\n}\r\n", "import { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nexport const ITextResourceConfigurationService = createDecorator('textResourceConfigurationService');\r\nexport const ITextResourcePropertiesService = createDecorator('textResourcePropertiesService');\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\r\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\r\nimport { DefaultWorkerFactory } from '../../../base/worker/defaultWorkerFactory.js';\r\nimport { Range } from '../core/range.js';\r\nimport * as modes from '../modes.js';\r\nimport { LanguageConfigurationRegistry } from '../modes/languageConfigurationRegistry.js';\r\nimport { EditorSimpleWorker } from './editorSimpleWorker.js';\r\nimport { IModelService } from './modelService.js';\r\nimport { ITextResourceConfigurationService } from './textResourceConfigurationService.js';\r\nimport { regExpFlags } from '../../../base/common/strings.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { canceled } from '../../../base/common/errors.js';\r\n/**\r\n * Stop syncing a model to the worker if it was not needed for 1 min.\r\n */\r\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\r\n/**\r\n * Stop the worker if it was not needed for 5 min.\r\n */\r\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\r\nfunction canSyncModel(modelService, resource) {\r\n    let model = modelService.getModel(resource);\r\n    if (!model) {\r\n        return false;\r\n    }\r\n    if (model.isTooLargeForSyncing()) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nlet EditorWorkerServiceImpl = class EditorWorkerServiceImpl extends Disposable {\r\n    constructor(modelService, configurationService, logService) {\r\n        super();\r\n        this._modelService = modelService;\r\n        this._workerManager = this._register(new WorkerManager(this._modelService));\r\n        this._logService = logService;\r\n        // register default link-provider and default completions-provider\r\n        this._register(modes.LinkProviderRegistry.register('*', {\r\n            provideLinks: (model, token) => {\r\n                if (!canSyncModel(this._modelService, model.uri)) {\r\n                    return Promise.resolve({ links: [] }); // File too large\r\n                }\r\n                return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\r\n                    return links && { links };\r\n                });\r\n            }\r\n        }));\r\n        this._register(modes.CompletionProviderRegistry.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService)));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    canComputeDiff(original, modified) {\r\n        return (canSyncModel(this._modelService, original) && canSyncModel(this._modelService, modified));\r\n    }\r\n    computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\r\n        return this._workerManager.withWorker().then(client => client.computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime));\r\n    }\r\n    computeMoreMinimalEdits(resource, edits) {\r\n        if (isNonEmptyArray(edits)) {\r\n            if (!canSyncModel(this._modelService, resource)) {\r\n                return Promise.resolve(edits); // File too large\r\n            }\r\n            const sw = StopWatch.create(true);\r\n            const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits));\r\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\r\n            return Promise.race([result, timeout(1000).then(() => edits)]);\r\n        }\r\n        else {\r\n            return Promise.resolve(undefined);\r\n        }\r\n    }\r\n    canNavigateValueSet(resource) {\r\n        return (canSyncModel(this._modelService, resource));\r\n    }\r\n    navigateValueSet(resource, range, up) {\r\n        return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\r\n    }\r\n    canComputeWordRanges(resource) {\r\n        return canSyncModel(this._modelService, resource);\r\n    }\r\n    computeWordRanges(resource, range) {\r\n        return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\r\n    }\r\n};\r\nEditorWorkerServiceImpl = __decorate([\r\n    __param(0, IModelService),\r\n    __param(1, ITextResourceConfigurationService),\r\n    __param(2, ILogService)\r\n], EditorWorkerServiceImpl);\r\nexport { EditorWorkerServiceImpl };\r\nclass WordBasedCompletionItemProvider {\r\n    constructor(workerManager, configurationService, modelService) {\r\n        this._debugDisplayName = 'wordbasedCompletions';\r\n        this._workerManager = workerManager;\r\n        this._configurationService = configurationService;\r\n        this._modelService = modelService;\r\n    }\r\n    provideCompletionItems(model, position) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const config = this._configurationService.getValue(model.uri, position, 'editor');\r\n            if (!config.wordBasedSuggestions) {\r\n                return undefined;\r\n            }\r\n            const models = [];\r\n            if (config.wordBasedSuggestionsMode === 'currentDocument') {\r\n                // only current file and only if not too large\r\n                if (canSyncModel(this._modelService, model.uri)) {\r\n                    models.push(model.uri);\r\n                }\r\n            }\r\n            else {\r\n                // either all files or files of same language\r\n                for (const candidate of this._modelService.getModels()) {\r\n                    if (!canSyncModel(this._modelService, candidate.uri)) {\r\n                        continue;\r\n                    }\r\n                    if (candidate === model) {\r\n                        models.unshift(candidate.uri);\r\n                    }\r\n                    else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageIdentifier().id === model.getLanguageIdentifier().id) {\r\n                        models.push(candidate.uri);\r\n                    }\r\n                }\r\n            }\r\n            if (models.length === 0) {\r\n                return undefined; // File too large, no other files\r\n            }\r\n            const wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            const word = model.getWordAtPosition(position);\r\n            const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n            const insert = replace.setEndPosition(position.lineNumber, position.column);\r\n            const client = yield this._workerManager.withWorker();\r\n            const data = yield client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\r\n            if (!data) {\r\n                return undefined;\r\n            }\r\n            return {\r\n                duration: data.duration,\r\n                suggestions: data.words.map((word) => {\r\n                    return {\r\n                        kind: 18 /* Text */,\r\n                        label: word,\r\n                        insertText: word,\r\n                        range: { insert, replace }\r\n                    };\r\n                }),\r\n            };\r\n        });\r\n    }\r\n}\r\nclass WorkerManager extends Disposable {\r\n    constructor(modelService) {\r\n        super();\r\n        this._modelService = modelService;\r\n        this._editorWorkerClient = null;\r\n        this._lastWorkerUsedTime = (new Date()).getTime();\r\n        let stopWorkerInterval = this._register(new IntervalTimer());\r\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\r\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\r\n    }\r\n    dispose() {\r\n        if (this._editorWorkerClient) {\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n    /**\r\n     * Check if the model service has no more models and stop the worker if that is the case.\r\n     */\r\n    _checkStopEmptyWorker() {\r\n        if (!this._editorWorkerClient) {\r\n            return;\r\n        }\r\n        let models = this._modelService.getModels();\r\n        if (models.length === 0) {\r\n            // There are no more models => nothing possible for me to do\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n    }\r\n    /**\r\n     * Check if the worker has been idle for a while and then stop it.\r\n     */\r\n    _checkStopIdleWorker() {\r\n        if (!this._editorWorkerClient) {\r\n            return;\r\n        }\r\n        let timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\r\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\r\n            this._editorWorkerClient.dispose();\r\n            this._editorWorkerClient = null;\r\n        }\r\n    }\r\n    withWorker() {\r\n        this._lastWorkerUsedTime = (new Date()).getTime();\r\n        if (!this._editorWorkerClient) {\r\n            this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService');\r\n        }\r\n        return Promise.resolve(this._editorWorkerClient);\r\n    }\r\n}\r\nclass EditorModelManager extends Disposable {\r\n    constructor(proxy, modelService, keepIdleModels) {\r\n        super();\r\n        this._syncedModels = Object.create(null);\r\n        this._syncedModelsLastUsedTime = Object.create(null);\r\n        this._proxy = proxy;\r\n        this._modelService = modelService;\r\n        if (!keepIdleModels) {\r\n            let timer = new IntervalTimer();\r\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\r\n            this._register(timer);\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let modelUrl in this._syncedModels) {\r\n            dispose(this._syncedModels[modelUrl]);\r\n        }\r\n        this._syncedModels = Object.create(null);\r\n        this._syncedModelsLastUsedTime = Object.create(null);\r\n        super.dispose();\r\n    }\r\n    ensureSyncedResources(resources) {\r\n        for (const resource of resources) {\r\n            let resourceStr = resource.toString();\r\n            if (!this._syncedModels[resourceStr]) {\r\n                this._beginModelSync(resource);\r\n            }\r\n            if (this._syncedModels[resourceStr]) {\r\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\r\n            }\r\n        }\r\n    }\r\n    _checkStopModelSync() {\r\n        let currentTime = (new Date()).getTime();\r\n        let toRemove = [];\r\n        for (let modelUrl in this._syncedModelsLastUsedTime) {\r\n            let elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\r\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\r\n                toRemove.push(modelUrl);\r\n            }\r\n        }\r\n        for (const e of toRemove) {\r\n            this._stopModelSync(e);\r\n        }\r\n    }\r\n    _beginModelSync(resource) {\r\n        let model = this._modelService.getModel(resource);\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (model.isTooLargeForSyncing()) {\r\n            return;\r\n        }\r\n        let modelUrl = resource.toString();\r\n        this._proxy.acceptNewModel({\r\n            url: model.uri.toString(),\r\n            lines: model.getLinesContent(),\r\n            EOL: model.getEOL(),\r\n            versionId: model.getVersionId()\r\n        });\r\n        const toDispose = new DisposableStore();\r\n        toDispose.add(model.onDidChangeContent((e) => {\r\n            this._proxy.acceptModelChanged(modelUrl.toString(), e);\r\n        }));\r\n        toDispose.add(model.onWillDispose(() => {\r\n            this._stopModelSync(modelUrl);\r\n        }));\r\n        toDispose.add(toDisposable(() => {\r\n            this._proxy.acceptRemovedModel(modelUrl);\r\n        }));\r\n        this._syncedModels[modelUrl] = toDispose;\r\n    }\r\n    _stopModelSync(modelUrl) {\r\n        let toDispose = this._syncedModels[modelUrl];\r\n        delete this._syncedModels[modelUrl];\r\n        delete this._syncedModelsLastUsedTime[modelUrl];\r\n        dispose(toDispose);\r\n    }\r\n}\r\nclass SynchronousWorkerClient {\r\n    constructor(instance) {\r\n        this._instance = instance;\r\n        this._proxyObj = Promise.resolve(this._instance);\r\n    }\r\n    dispose() {\r\n        this._instance.dispose();\r\n    }\r\n    getProxyObject() {\r\n        return this._proxyObj;\r\n    }\r\n}\r\nexport class EditorWorkerHost {\r\n    constructor(workerClient) {\r\n        this._workerClient = workerClient;\r\n    }\r\n    // foreign host request\r\n    fhr(method, args) {\r\n        return this._workerClient.fhr(method, args);\r\n    }\r\n}\r\nexport class EditorWorkerClient extends Disposable {\r\n    constructor(modelService, keepIdleModels, label) {\r\n        super();\r\n        this._disposed = false;\r\n        this._modelService = modelService;\r\n        this._keepIdleModels = keepIdleModels;\r\n        this._workerFactory = new DefaultWorkerFactory(label);\r\n        this._worker = null;\r\n        this._modelManager = null;\r\n    }\r\n    // foreign host request\r\n    fhr(method, args) {\r\n        throw new Error(`Not implemented!`);\r\n    }\r\n    _getOrCreateWorker() {\r\n        if (!this._worker) {\r\n            try {\r\n                this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\r\n            }\r\n            catch (err) {\r\n                logOnceWebWorkerWarning(err);\r\n                this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\r\n            }\r\n        }\r\n        return this._worker;\r\n    }\r\n    _getProxy() {\r\n        return this._getOrCreateWorker().getProxyObject().then(undefined, (err) => {\r\n            logOnceWebWorkerWarning(err);\r\n            this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\r\n            return this._getOrCreateWorker().getProxyObject();\r\n        });\r\n    }\r\n    _getOrCreateModelManager(proxy) {\r\n        if (!this._modelManager) {\r\n            this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\r\n        }\r\n        return this._modelManager;\r\n    }\r\n    _withSyncedResources(resources) {\r\n        if (this._disposed) {\r\n            return Promise.reject(canceled());\r\n        }\r\n        return this._getProxy().then((proxy) => {\r\n            this._getOrCreateModelManager(proxy).ensureSyncedResources(resources);\r\n            return proxy;\r\n        });\r\n    }\r\n    computeDiff(original, modified, ignoreTrimWhitespace, maxComputationTime) {\r\n        return this._withSyncedResources([original, modified]).then(proxy => {\r\n            return proxy.computeDiff(original.toString(), modified.toString(), ignoreTrimWhitespace, maxComputationTime);\r\n        });\r\n    }\r\n    computeMoreMinimalEdits(resource, edits) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            return proxy.computeMoreMinimalEdits(resource.toString(), edits);\r\n        });\r\n    }\r\n    computeLinks(resource) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            return proxy.computeLinks(resource.toString());\r\n        });\r\n    }\r\n    textualSuggest(resources, leadingWord, wordDefRegExp) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const proxy = yield this._withSyncedResources(resources);\r\n            const wordDef = wordDefRegExp.source;\r\n            const wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    computeWordRanges(resource, range) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            let model = this._modelService.getModel(resource);\r\n            if (!model) {\r\n                return Promise.resolve(null);\r\n            }\r\n            let wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            let wordDef = wordDefRegExp.source;\r\n            let wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    navigateValueSet(resource, range, up) {\r\n        return this._withSyncedResources([resource]).then(proxy => {\r\n            let model = this._modelService.getModel(resource);\r\n            if (!model) {\r\n                return null;\r\n            }\r\n            let wordDefRegExp = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n            let wordDef = wordDefRegExp.source;\r\n            let wordDefFlags = regExpFlags(wordDefRegExp);\r\n            return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\r\n        });\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._disposed = true;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditorWorkerClient } from './editorWorkerServiceImpl.js';\r\nimport * as types from '../../../base/common/types.js';\r\n/**\r\n * Create a new web worker that has model syncing capabilities built in.\r\n * Specify an AMD module to load that will `create` an object that will be proxied.\r\n */\r\nexport function createWebWorker(modelService, opts) {\r\n    return new MonacoWebWorkerImpl(modelService, opts);\r\n}\r\nclass MonacoWebWorkerImpl extends EditorWorkerClient {\r\n    constructor(modelService, opts) {\r\n        super(modelService, opts.keepIdleModels || false, opts.label);\r\n        this._foreignModuleId = opts.moduleId;\r\n        this._foreignModuleCreateData = opts.createData || null;\r\n        this._foreignModuleHost = opts.host || null;\r\n        this._foreignProxy = null;\r\n    }\r\n    // foreign host request\r\n    fhr(method, args) {\r\n        if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\r\n            return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\r\n        }\r\n        try {\r\n            return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    _getForeignProxy() {\r\n        if (!this._foreignProxy) {\r\n            this._foreignProxy = this._getProxy().then((proxy) => {\r\n                const foreignHostMethods = this._foreignModuleHost ? types.getAllMethodNames(this._foreignModuleHost) : [];\r\n                return proxy.loadForeignModule(this._foreignModuleId, this._foreignModuleCreateData, foreignHostMethods).then((foreignMethods) => {\r\n                    this._foreignModuleCreateData = null;\r\n                    const proxyMethodRequest = (method, args) => {\r\n                        return proxy.fmr(method, args);\r\n                    };\r\n                    const createProxyMethod = (method, proxyMethodRequest) => {\r\n                        return function () {\r\n                            const args = Array.prototype.slice.call(arguments, 0);\r\n                            return proxyMethodRequest(method, args);\r\n                        };\r\n                    };\r\n                    let foreignProxy = {};\r\n                    for (const foreignMethod of foreignMethods) {\r\n                        foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\r\n                    }\r\n                    return foreignProxy;\r\n                });\r\n            });\r\n        }\r\n        return this._foreignProxy;\r\n    }\r\n    getProxy() {\r\n        return this._getForeignProxy();\r\n    }\r\n    withSyncedResources(resources) {\r\n        return this._withSyncedResources(resources).then(_ => this.getProxy());\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function isFuzzyActionArr(what) {\r\n    return (Array.isArray(what));\r\n}\r\nexport function isFuzzyAction(what) {\r\n    return !isFuzzyActionArr(what);\r\n}\r\nexport function isString(what) {\r\n    return (typeof what === 'string');\r\n}\r\nexport function isIAction(what) {\r\n    return !isString(what);\r\n}\r\n// Small helper functions\r\n/**\r\n * Is a string null, undefined, or empty?\r\n */\r\nexport function empty(s) {\r\n    return (s ? false : true);\r\n}\r\n/**\r\n * Puts a string to lower case if 'ignoreCase' is set.\r\n */\r\nexport function fixCase(lexer, str) {\r\n    return (lexer.ignoreCase && str ? str.toLowerCase() : str);\r\n}\r\n/**\r\n * Ensures there are no bad characters in a CSS token class.\r\n */\r\nexport function sanitize(s) {\r\n    return s.replace(/[&<>'\"_]/g, '-'); // used on all output token CSS classes\r\n}\r\n// Logging\r\n/**\r\n * Logs a message.\r\n */\r\nexport function log(lexer, msg) {\r\n    console.log(`${lexer.languageId}: ${msg}`);\r\n}\r\n// Throwing errors\r\nexport function createError(lexer, msg) {\r\n    return new Error(`${lexer.languageId}: ${msg}`);\r\n}\r\n// Helper functions for rule finding and substitution\r\n/**\r\n * substituteMatches is used on lexer strings and can substitutes predefined patterns:\r\n * \t\t$$  => $\r\n * \t\t$#  => id\r\n * \t\t$n  => matched entry n\r\n * \t\t@attr => contents of lexer[attr]\r\n *\r\n * See documentation for more info\r\n */\r\nexport function substituteMatches(lexer, str, id, matches, state) {\r\n    const re = /\\$((\\$)|(#)|(\\d\\d?)|[sS](\\d\\d?)|@(\\w+))/g;\r\n    let stateMatches = null;\r\n    return str.replace(re, function (full, sub, dollar, hash, n, s, attr, ofs, total) {\r\n        if (!empty(dollar)) {\r\n            return '$'; // $$\r\n        }\r\n        if (!empty(hash)) {\r\n            return fixCase(lexer, id); // default $#\r\n        }\r\n        if (!empty(n) && n < matches.length) {\r\n            return fixCase(lexer, matches[n]); // $n\r\n        }\r\n        if (!empty(attr) && lexer && typeof (lexer[attr]) === 'string') {\r\n            return lexer[attr]; //@attribute\r\n        }\r\n        if (stateMatches === null) { // split state on demand\r\n            stateMatches = state.split('.');\r\n            stateMatches.unshift(state);\r\n        }\r\n        if (!empty(s) && s < stateMatches.length) {\r\n            return fixCase(lexer, stateMatches[s]); //$Sn\r\n        }\r\n        return '';\r\n    });\r\n}\r\n/**\r\n * Find the tokenizer rules for a specific state (i.e. next action)\r\n */\r\nexport function findRules(lexer, inState) {\r\n    let state = inState;\r\n    while (state && state.length > 0) {\r\n        const rules = lexer.tokenizer[state];\r\n        if (rules) {\r\n            return rules;\r\n        }\r\n        const idx = state.lastIndexOf('.');\r\n        if (idx < 0) {\r\n            state = null; // no further parent\r\n        }\r\n        else {\r\n            state = state.substr(0, idx);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Is a certain state defined? In contrast to 'findRules' this works on a ILexerMin.\r\n * This is used during compilation where we may know the defined states\r\n * but not yet whether the corresponding rules are correct.\r\n */\r\nexport function stateExists(lexer, inState) {\r\n    let state = inState;\r\n    while (state && state.length > 0) {\r\n        const exist = lexer.stateNames[state];\r\n        if (exist) {\r\n            return true;\r\n        }\r\n        const idx = state.lastIndexOf('.');\r\n        if (idx < 0) {\r\n            state = null; // no further parent\r\n        }\r\n        else {\r\n            state = state.substr(0, idx);\r\n        }\r\n    }\r\n    return false;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Token, TokenizationResult, TokenizationResult2 } from '../../../common/core/token.js';\r\nimport * as modes from '../../../common/modes.js';\r\nimport { NULL_MODE_ID, NULL_STATE } from '../../../common/modes/nullMode.js';\r\nimport * as monarchCommon from './monarchCommon.js';\r\nconst CACHE_STACK_DEPTH = 5;\r\n/**\r\n * Reuse the same stack elements up to a certain depth.\r\n */\r\nclass MonarchStackElementFactory {\r\n    constructor(maxCacheDepth) {\r\n        this._maxCacheDepth = maxCacheDepth;\r\n        this._entries = Object.create(null);\r\n    }\r\n    static create(parent, state) {\r\n        return this._INSTANCE.create(parent, state);\r\n    }\r\n    create(parent, state) {\r\n        if (parent !== null && parent.depth >= this._maxCacheDepth) {\r\n            // no caching above a certain depth\r\n            return new MonarchStackElement(parent, state);\r\n        }\r\n        let stackElementId = MonarchStackElement.getStackElementId(parent);\r\n        if (stackElementId.length > 0) {\r\n            stackElementId += '|';\r\n        }\r\n        stackElementId += state;\r\n        let result = this._entries[stackElementId];\r\n        if (result) {\r\n            return result;\r\n        }\r\n        result = new MonarchStackElement(parent, state);\r\n        this._entries[stackElementId] = result;\r\n        return result;\r\n    }\r\n}\r\nMonarchStackElementFactory._INSTANCE = new MonarchStackElementFactory(CACHE_STACK_DEPTH);\r\nclass MonarchStackElement {\r\n    constructor(parent, state) {\r\n        this.parent = parent;\r\n        this.state = state;\r\n        this.depth = (this.parent ? this.parent.depth : 0) + 1;\r\n    }\r\n    static getStackElementId(element) {\r\n        let result = '';\r\n        while (element !== null) {\r\n            if (result.length > 0) {\r\n                result += '|';\r\n            }\r\n            result += element.state;\r\n            element = element.parent;\r\n        }\r\n        return result;\r\n    }\r\n    static _equals(a, b) {\r\n        while (a !== null && b !== null) {\r\n            if (a === b) {\r\n                return true;\r\n            }\r\n            if (a.state !== b.state) {\r\n                return false;\r\n            }\r\n            a = a.parent;\r\n            b = b.parent;\r\n        }\r\n        if (a === null && b === null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    equals(other) {\r\n        return MonarchStackElement._equals(this, other);\r\n    }\r\n    push(state) {\r\n        return MonarchStackElementFactory.create(this, state);\r\n    }\r\n    pop() {\r\n        return this.parent;\r\n    }\r\n    popall() {\r\n        let result = this;\r\n        while (result.parent) {\r\n            result = result.parent;\r\n        }\r\n        return result;\r\n    }\r\n    switchTo(state) {\r\n        return MonarchStackElementFactory.create(this.parent, state);\r\n    }\r\n}\r\nclass EmbeddedModeData {\r\n    constructor(modeId, state) {\r\n        this.modeId = modeId;\r\n        this.state = state;\r\n    }\r\n    equals(other) {\r\n        return (this.modeId === other.modeId\r\n            && this.state.equals(other.state));\r\n    }\r\n    clone() {\r\n        let stateClone = this.state.clone();\r\n        // save an object\r\n        if (stateClone === this.state) {\r\n            return this;\r\n        }\r\n        return new EmbeddedModeData(this.modeId, this.state);\r\n    }\r\n}\r\n/**\r\n * Reuse the same line states up to a certain depth.\r\n */\r\nclass MonarchLineStateFactory {\r\n    constructor(maxCacheDepth) {\r\n        this._maxCacheDepth = maxCacheDepth;\r\n        this._entries = Object.create(null);\r\n    }\r\n    static create(stack, embeddedModeData) {\r\n        return this._INSTANCE.create(stack, embeddedModeData);\r\n    }\r\n    create(stack, embeddedModeData) {\r\n        if (embeddedModeData !== null) {\r\n            // no caching when embedding\r\n            return new MonarchLineState(stack, embeddedModeData);\r\n        }\r\n        if (stack !== null && stack.depth >= this._maxCacheDepth) {\r\n            // no caching above a certain depth\r\n            return new MonarchLineState(stack, embeddedModeData);\r\n        }\r\n        let stackElementId = MonarchStackElement.getStackElementId(stack);\r\n        let result = this._entries[stackElementId];\r\n        if (result) {\r\n            return result;\r\n        }\r\n        result = new MonarchLineState(stack, null);\r\n        this._entries[stackElementId] = result;\r\n        return result;\r\n    }\r\n}\r\nMonarchLineStateFactory._INSTANCE = new MonarchLineStateFactory(CACHE_STACK_DEPTH);\r\nclass MonarchLineState {\r\n    constructor(stack, embeddedModeData) {\r\n        this.stack = stack;\r\n        this.embeddedModeData = embeddedModeData;\r\n    }\r\n    clone() {\r\n        let embeddedModeDataClone = this.embeddedModeData ? this.embeddedModeData.clone() : null;\r\n        // save an object\r\n        if (embeddedModeDataClone === this.embeddedModeData) {\r\n            return this;\r\n        }\r\n        return MonarchLineStateFactory.create(this.stack, this.embeddedModeData);\r\n    }\r\n    equals(other) {\r\n        if (!(other instanceof MonarchLineState)) {\r\n            return false;\r\n        }\r\n        if (!this.stack.equals(other.stack)) {\r\n            return false;\r\n        }\r\n        if (this.embeddedModeData === null && other.embeddedModeData === null) {\r\n            return true;\r\n        }\r\n        if (this.embeddedModeData === null || other.embeddedModeData === null) {\r\n            return false;\r\n        }\r\n        return this.embeddedModeData.equals(other.embeddedModeData);\r\n    }\r\n}\r\nclass MonarchClassicTokensCollector {\r\n    constructor() {\r\n        this._tokens = [];\r\n        this._language = null;\r\n        this._lastTokenType = null;\r\n        this._lastTokenLanguage = null;\r\n    }\r\n    enterMode(startOffset, modeId) {\r\n        this._language = modeId;\r\n    }\r\n    emit(startOffset, type) {\r\n        if (this._lastTokenType === type && this._lastTokenLanguage === this._language) {\r\n            return;\r\n        }\r\n        this._lastTokenType = type;\r\n        this._lastTokenLanguage = this._language;\r\n        this._tokens.push(new Token(startOffset, type, this._language));\r\n    }\r\n    nestedModeTokenize(embeddedModeLine, hasEOL, embeddedModeData, offsetDelta) {\r\n        const nestedModeId = embeddedModeData.modeId;\r\n        const embeddedModeState = embeddedModeData.state;\r\n        const nestedModeTokenizationSupport = modes.TokenizationRegistry.get(nestedModeId);\r\n        if (!nestedModeTokenizationSupport) {\r\n            this.enterMode(offsetDelta, nestedModeId);\r\n            this.emit(offsetDelta, '');\r\n            return embeddedModeState;\r\n        }\r\n        let nestedResult = nestedModeTokenizationSupport.tokenize(embeddedModeLine, hasEOL, embeddedModeState, offsetDelta);\r\n        this._tokens = this._tokens.concat(nestedResult.tokens);\r\n        this._lastTokenType = null;\r\n        this._lastTokenLanguage = null;\r\n        this._language = null;\r\n        return nestedResult.endState;\r\n    }\r\n    finalize(endState) {\r\n        return new TokenizationResult(this._tokens, endState);\r\n    }\r\n}\r\nclass MonarchModernTokensCollector {\r\n    constructor(modeService, theme) {\r\n        this._modeService = modeService;\r\n        this._theme = theme;\r\n        this._prependTokens = null;\r\n        this._tokens = [];\r\n        this._currentLanguageId = 0 /* Null */;\r\n        this._lastTokenMetadata = 0;\r\n    }\r\n    enterMode(startOffset, modeId) {\r\n        this._currentLanguageId = this._modeService.getLanguageIdentifier(modeId).id;\r\n    }\r\n    emit(startOffset, type) {\r\n        let metadata = this._theme.match(this._currentLanguageId, type);\r\n        if (this._lastTokenMetadata === metadata) {\r\n            return;\r\n        }\r\n        this._lastTokenMetadata = metadata;\r\n        this._tokens.push(startOffset);\r\n        this._tokens.push(metadata);\r\n    }\r\n    static _merge(a, b, c) {\r\n        let aLen = (a !== null ? a.length : 0);\r\n        let bLen = b.length;\r\n        let cLen = (c !== null ? c.length : 0);\r\n        if (aLen === 0 && bLen === 0 && cLen === 0) {\r\n            return new Uint32Array(0);\r\n        }\r\n        if (aLen === 0 && bLen === 0) {\r\n            return c;\r\n        }\r\n        if (bLen === 0 && cLen === 0) {\r\n            return a;\r\n        }\r\n        let result = new Uint32Array(aLen + bLen + cLen);\r\n        if (a !== null) {\r\n            result.set(a);\r\n        }\r\n        for (let i = 0; i < bLen; i++) {\r\n            result[aLen + i] = b[i];\r\n        }\r\n        if (c !== null) {\r\n            result.set(c, aLen + bLen);\r\n        }\r\n        return result;\r\n    }\r\n    nestedModeTokenize(embeddedModeLine, hasEOL, embeddedModeData, offsetDelta) {\r\n        const nestedModeId = embeddedModeData.modeId;\r\n        const embeddedModeState = embeddedModeData.state;\r\n        const nestedModeTokenizationSupport = modes.TokenizationRegistry.get(nestedModeId);\r\n        if (!nestedModeTokenizationSupport) {\r\n            this.enterMode(offsetDelta, nestedModeId);\r\n            this.emit(offsetDelta, '');\r\n            return embeddedModeState;\r\n        }\r\n        let nestedResult = nestedModeTokenizationSupport.tokenize2(embeddedModeLine, hasEOL, embeddedModeState, offsetDelta);\r\n        this._prependTokens = MonarchModernTokensCollector._merge(this._prependTokens, this._tokens, nestedResult.tokens);\r\n        this._tokens = [];\r\n        this._currentLanguageId = 0;\r\n        this._lastTokenMetadata = 0;\r\n        return nestedResult.endState;\r\n    }\r\n    finalize(endState) {\r\n        return new TokenizationResult2(MonarchModernTokensCollector._merge(this._prependTokens, this._tokens, null), endState);\r\n    }\r\n}\r\nexport class MonarchTokenizer {\r\n    constructor(modeService, standaloneThemeService, modeId, lexer) {\r\n        this._modeService = modeService;\r\n        this._standaloneThemeService = standaloneThemeService;\r\n        this._modeId = modeId;\r\n        this._lexer = lexer;\r\n        this._embeddedModes = Object.create(null);\r\n        this.embeddedLoaded = Promise.resolve(undefined);\r\n        // Set up listening for embedded modes\r\n        let emitting = false;\r\n        this._tokenizationRegistryListener = modes.TokenizationRegistry.onDidChange((e) => {\r\n            if (emitting) {\r\n                return;\r\n            }\r\n            let isOneOfMyEmbeddedModes = false;\r\n            for (let i = 0, len = e.changedLanguages.length; i < len; i++) {\r\n                let language = e.changedLanguages[i];\r\n                if (this._embeddedModes[language]) {\r\n                    isOneOfMyEmbeddedModes = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isOneOfMyEmbeddedModes) {\r\n                emitting = true;\r\n                modes.TokenizationRegistry.fire([this._modeId]);\r\n                emitting = false;\r\n            }\r\n        });\r\n    }\r\n    dispose() {\r\n        this._tokenizationRegistryListener.dispose();\r\n    }\r\n    getLoadStatus() {\r\n        let promises = [];\r\n        for (let nestedModeId in this._embeddedModes) {\r\n            const tokenizationSupport = modes.TokenizationRegistry.get(nestedModeId);\r\n            if (tokenizationSupport) {\r\n                // The nested mode is already loaded\r\n                if (tokenizationSupport instanceof MonarchTokenizer) {\r\n                    const nestedModeStatus = tokenizationSupport.getLoadStatus();\r\n                    if (nestedModeStatus.loaded === false) {\r\n                        promises.push(nestedModeStatus.promise);\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n            const tokenizationSupportPromise = modes.TokenizationRegistry.getPromise(nestedModeId);\r\n            if (tokenizationSupportPromise) {\r\n                // The nested mode is in the process of being loaded\r\n                promises.push(tokenizationSupportPromise);\r\n            }\r\n        }\r\n        if (promises.length === 0) {\r\n            return {\r\n                loaded: true\r\n            };\r\n        }\r\n        return {\r\n            loaded: false,\r\n            promise: Promise.all(promises).then(_ => undefined)\r\n        };\r\n    }\r\n    getInitialState() {\r\n        let rootState = MonarchStackElementFactory.create(null, this._lexer.start);\r\n        return MonarchLineStateFactory.create(rootState, null);\r\n    }\r\n    tokenize(line, hasEOL, lineState, offsetDelta) {\r\n        let tokensCollector = new MonarchClassicTokensCollector();\r\n        let endLineState = this._tokenize(line, hasEOL, lineState, offsetDelta, tokensCollector);\r\n        return tokensCollector.finalize(endLineState);\r\n    }\r\n    tokenize2(line, hasEOL, lineState, offsetDelta) {\r\n        let tokensCollector = new MonarchModernTokensCollector(this._modeService, this._standaloneThemeService.getColorTheme().tokenTheme);\r\n        let endLineState = this._tokenize(line, hasEOL, lineState, offsetDelta, tokensCollector);\r\n        return tokensCollector.finalize(endLineState);\r\n    }\r\n    _tokenize(line, hasEOL, lineState, offsetDelta, collector) {\r\n        if (lineState.embeddedModeData) {\r\n            return this._nestedTokenize(line, hasEOL, lineState, offsetDelta, collector);\r\n        }\r\n        else {\r\n            return this._myTokenize(line, hasEOL, lineState, offsetDelta, collector);\r\n        }\r\n    }\r\n    _findLeavingNestedModeOffset(line, state) {\r\n        let rules = this._lexer.tokenizer[state.stack.state];\r\n        if (!rules) {\r\n            rules = monarchCommon.findRules(this._lexer, state.stack.state); // do parent matching\r\n            if (!rules) {\r\n                throw monarchCommon.createError(this._lexer, 'tokenizer state is not defined: ' + state.stack.state);\r\n            }\r\n        }\r\n        let popOffset = -1;\r\n        let hasEmbeddedPopRule = false;\r\n        for (const rule of rules) {\r\n            if (!monarchCommon.isIAction(rule.action) || rule.action.nextEmbedded !== '@pop') {\r\n                continue;\r\n            }\r\n            hasEmbeddedPopRule = true;\r\n            let regex = rule.regex;\r\n            let regexSource = rule.regex.source;\r\n            if (regexSource.substr(0, 4) === '^(?:' && regexSource.substr(regexSource.length - 1, 1) === ')') {\r\n                let flags = (regex.ignoreCase ? 'i' : '') + (regex.unicode ? 'u' : '');\r\n                regex = new RegExp(regexSource.substr(4, regexSource.length - 5), flags);\r\n            }\r\n            let result = line.search(regex);\r\n            if (result === -1 || (result !== 0 && rule.matchOnlyAtLineStart)) {\r\n                continue;\r\n            }\r\n            if (popOffset === -1 || result < popOffset) {\r\n                popOffset = result;\r\n            }\r\n        }\r\n        if (!hasEmbeddedPopRule) {\r\n            throw monarchCommon.createError(this._lexer, 'no rule containing nextEmbedded: \"@pop\" in tokenizer embedded state: ' + state.stack.state);\r\n        }\r\n        return popOffset;\r\n    }\r\n    _nestedTokenize(line, hasEOL, lineState, offsetDelta, tokensCollector) {\r\n        let popOffset = this._findLeavingNestedModeOffset(line, lineState);\r\n        if (popOffset === -1) {\r\n            // tokenization will not leave nested mode\r\n            let nestedEndState = tokensCollector.nestedModeTokenize(line, hasEOL, lineState.embeddedModeData, offsetDelta);\r\n            return MonarchLineStateFactory.create(lineState.stack, new EmbeddedModeData(lineState.embeddedModeData.modeId, nestedEndState));\r\n        }\r\n        let nestedModeLine = line.substring(0, popOffset);\r\n        if (nestedModeLine.length > 0) {\r\n            // tokenize with the nested mode\r\n            tokensCollector.nestedModeTokenize(nestedModeLine, false, lineState.embeddedModeData, offsetDelta);\r\n        }\r\n        let restOfTheLine = line.substring(popOffset);\r\n        return this._myTokenize(restOfTheLine, hasEOL, lineState, offsetDelta + popOffset, tokensCollector);\r\n    }\r\n    _safeRuleName(rule) {\r\n        if (rule) {\r\n            return rule.name;\r\n        }\r\n        return '(unknown)';\r\n    }\r\n    _myTokenize(lineWithoutLF, hasEOL, lineState, offsetDelta, tokensCollector) {\r\n        tokensCollector.enterMode(offsetDelta, this._modeId);\r\n        const lineWithoutLFLength = lineWithoutLF.length;\r\n        const line = (hasEOL && this._lexer.includeLF ? lineWithoutLF + '\\n' : lineWithoutLF);\r\n        const lineLength = line.length;\r\n        let embeddedModeData = lineState.embeddedModeData;\r\n        let stack = lineState.stack;\r\n        let pos = 0;\r\n        let groupMatching = null;\r\n        // See https://github.com/microsoft/monaco-editor/issues/1235\r\n        // Evaluate rules at least once for an empty line\r\n        let forceEvaluation = true;\r\n        while (forceEvaluation || pos < lineLength) {\r\n            const pos0 = pos;\r\n            const stackLen0 = stack.depth;\r\n            const groupLen0 = groupMatching ? groupMatching.groups.length : 0;\r\n            const state = stack.state;\r\n            let matches = null;\r\n            let matched = null;\r\n            let action = null;\r\n            let rule = null;\r\n            let enteringEmbeddedMode = null;\r\n            // check if we need to process group matches first\r\n            if (groupMatching) {\r\n                matches = groupMatching.matches;\r\n                const groupEntry = groupMatching.groups.shift();\r\n                matched = groupEntry.matched;\r\n                action = groupEntry.action;\r\n                rule = groupMatching.rule;\r\n                // cleanup if necessary\r\n                if (groupMatching.groups.length === 0) {\r\n                    groupMatching = null;\r\n                }\r\n            }\r\n            else {\r\n                // otherwise we match on the token stream\r\n                if (!forceEvaluation && pos >= lineLength) {\r\n                    // nothing to do\r\n                    break;\r\n                }\r\n                forceEvaluation = false;\r\n                // get the rules for this state\r\n                let rules = this._lexer.tokenizer[state];\r\n                if (!rules) {\r\n                    rules = monarchCommon.findRules(this._lexer, state); // do parent matching\r\n                    if (!rules) {\r\n                        throw monarchCommon.createError(this._lexer, 'tokenizer state is not defined: ' + state);\r\n                    }\r\n                }\r\n                // try each rule until we match\r\n                let restOfLine = line.substr(pos);\r\n                for (const rule of rules) {\r\n                    if (pos === 0 || !rule.matchOnlyAtLineStart) {\r\n                        matches = restOfLine.match(rule.regex);\r\n                        if (matches) {\r\n                            matched = matches[0];\r\n                            action = rule.action;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // We matched 'rule' with 'matches' and 'action'\r\n            if (!matches) {\r\n                matches = [''];\r\n                matched = '';\r\n            }\r\n            if (!action) {\r\n                // bad: we didn't match anything, and there is no action to take\r\n                // we need to advance the stream or we get progress trouble\r\n                if (pos < lineLength) {\r\n                    matches = [line.charAt(pos)];\r\n                    matched = matches[0];\r\n                }\r\n                action = this._lexer.defaultToken;\r\n            }\r\n            if (matched === null) {\r\n                // should never happen, needed for strict null checking\r\n                break;\r\n            }\r\n            // advance stream\r\n            pos += matched.length;\r\n            // maybe call action function (used for 'cases')\r\n            while (monarchCommon.isFuzzyAction(action) && monarchCommon.isIAction(action) && action.test) {\r\n                action = action.test(matched, matches, state, pos === lineLength);\r\n            }\r\n            let result = null;\r\n            // set the result: either a string or an array of actions\r\n            if (typeof action === 'string' || Array.isArray(action)) {\r\n                result = action;\r\n            }\r\n            else if (action.group) {\r\n                result = action.group;\r\n            }\r\n            else if (action.token !== null && action.token !== undefined) {\r\n                // do $n replacements?\r\n                if (action.tokenSubst) {\r\n                    result = monarchCommon.substituteMatches(this._lexer, action.token, matched, matches, state);\r\n                }\r\n                else {\r\n                    result = action.token;\r\n                }\r\n                // enter embedded mode?\r\n                if (action.nextEmbedded) {\r\n                    if (action.nextEmbedded === '@pop') {\r\n                        if (!embeddedModeData) {\r\n                            throw monarchCommon.createError(this._lexer, 'cannot pop embedded mode if not inside one');\r\n                        }\r\n                        embeddedModeData = null;\r\n                    }\r\n                    else if (embeddedModeData) {\r\n                        throw monarchCommon.createError(this._lexer, 'cannot enter embedded mode from within an embedded mode');\r\n                    }\r\n                    else {\r\n                        enteringEmbeddedMode = monarchCommon.substituteMatches(this._lexer, action.nextEmbedded, matched, matches, state);\r\n                    }\r\n                }\r\n                // state transformations\r\n                if (action.goBack) { // back up the stream..\r\n                    pos = Math.max(0, pos - action.goBack);\r\n                }\r\n                if (action.switchTo && typeof action.switchTo === 'string') {\r\n                    let nextState = monarchCommon.substituteMatches(this._lexer, action.switchTo, matched, matches, state); // switch state without a push...\r\n                    if (nextState[0] === '@') {\r\n                        nextState = nextState.substr(1); // peel off starting '@'\r\n                    }\r\n                    if (!monarchCommon.findRules(this._lexer, nextState)) {\r\n                        throw monarchCommon.createError(this._lexer, 'trying to switch to a state \\'' + nextState + '\\' that is undefined in rule: ' + this._safeRuleName(rule));\r\n                    }\r\n                    else {\r\n                        stack = stack.switchTo(nextState);\r\n                    }\r\n                }\r\n                else if (action.transform && typeof action.transform === 'function') {\r\n                    throw monarchCommon.createError(this._lexer, 'action.transform not supported');\r\n                }\r\n                else if (action.next) {\r\n                    if (action.next === '@push') {\r\n                        if (stack.depth >= this._lexer.maxStack) {\r\n                            throw monarchCommon.createError(this._lexer, 'maximum tokenizer stack size reached: [' +\r\n                                stack.state + ',' + stack.parent.state + ',...]');\r\n                        }\r\n                        else {\r\n                            stack = stack.push(state);\r\n                        }\r\n                    }\r\n                    else if (action.next === '@pop') {\r\n                        if (stack.depth <= 1) {\r\n                            throw monarchCommon.createError(this._lexer, 'trying to pop an empty stack in rule: ' + this._safeRuleName(rule));\r\n                        }\r\n                        else {\r\n                            stack = stack.pop();\r\n                        }\r\n                    }\r\n                    else if (action.next === '@popall') {\r\n                        stack = stack.popall();\r\n                    }\r\n                    else {\r\n                        let nextState = monarchCommon.substituteMatches(this._lexer, action.next, matched, matches, state);\r\n                        if (nextState[0] === '@') {\r\n                            nextState = nextState.substr(1); // peel off starting '@'\r\n                        }\r\n                        if (!monarchCommon.findRules(this._lexer, nextState)) {\r\n                            throw monarchCommon.createError(this._lexer, 'trying to set a next state \\'' + nextState + '\\' that is undefined in rule: ' + this._safeRuleName(rule));\r\n                        }\r\n                        else {\r\n                            stack = stack.push(nextState);\r\n                        }\r\n                    }\r\n                }\r\n                if (action.log && typeof (action.log) === 'string') {\r\n                    monarchCommon.log(this._lexer, this._lexer.languageId + ': ' + monarchCommon.substituteMatches(this._lexer, action.log, matched, matches, state));\r\n                }\r\n            }\r\n            // check result\r\n            if (result === null) {\r\n                throw monarchCommon.createError(this._lexer, 'lexer rule has no well-defined action in rule: ' + this._safeRuleName(rule));\r\n            }\r\n            const computeNewStateForEmbeddedMode = (enteringEmbeddedMode) => {\r\n                // substitute language alias to known modes to support syntax highlighting\r\n                let enteringEmbeddedModeId = this._modeService.getModeIdForLanguageName(enteringEmbeddedMode);\r\n                if (enteringEmbeddedModeId) {\r\n                    enteringEmbeddedMode = enteringEmbeddedModeId;\r\n                }\r\n                const embeddedModeData = this._getNestedEmbeddedModeData(enteringEmbeddedMode);\r\n                if (pos < lineLength) {\r\n                    // there is content from the embedded mode on this line\r\n                    const restOfLine = lineWithoutLF.substr(pos);\r\n                    return this._nestedTokenize(restOfLine, hasEOL, MonarchLineStateFactory.create(stack, embeddedModeData), offsetDelta + pos, tokensCollector);\r\n                }\r\n                else {\r\n                    return MonarchLineStateFactory.create(stack, embeddedModeData);\r\n                }\r\n            };\r\n            // is the result a group match?\r\n            if (Array.isArray(result)) {\r\n                if (groupMatching && groupMatching.groups.length > 0) {\r\n                    throw monarchCommon.createError(this._lexer, 'groups cannot be nested: ' + this._safeRuleName(rule));\r\n                }\r\n                if (matches.length !== result.length + 1) {\r\n                    throw monarchCommon.createError(this._lexer, 'matched number of groups does not match the number of actions in rule: ' + this._safeRuleName(rule));\r\n                }\r\n                let totalLen = 0;\r\n                for (let i = 1; i < matches.length; i++) {\r\n                    totalLen += matches[i].length;\r\n                }\r\n                if (totalLen !== matched.length) {\r\n                    throw monarchCommon.createError(this._lexer, 'with groups, all characters should be matched in consecutive groups in rule: ' + this._safeRuleName(rule));\r\n                }\r\n                groupMatching = {\r\n                    rule: rule,\r\n                    matches: matches,\r\n                    groups: []\r\n                };\r\n                for (let i = 0; i < result.length; i++) {\r\n                    groupMatching.groups[i] = {\r\n                        action: result[i],\r\n                        matched: matches[i + 1]\r\n                    };\r\n                }\r\n                pos -= matched.length;\r\n                // call recursively to initiate first result match\r\n                continue;\r\n            }\r\n            else {\r\n                // regular result\r\n                // check for '@rematch'\r\n                if (result === '@rematch') {\r\n                    pos -= matched.length;\r\n                    matched = ''; // better set the next state too..\r\n                    matches = null;\r\n                    result = '';\r\n                    // Even though `@rematch` was specified, if `nextEmbedded` also specified,\r\n                    // a state transition should occur.\r\n                    if (enteringEmbeddedMode !== null) {\r\n                        return computeNewStateForEmbeddedMode(enteringEmbeddedMode);\r\n                    }\r\n                }\r\n                // check progress\r\n                if (matched.length === 0) {\r\n                    if (lineLength === 0 || stackLen0 !== stack.depth || state !== stack.state || (!groupMatching ? 0 : groupMatching.groups.length) !== groupLen0) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        throw monarchCommon.createError(this._lexer, 'no progress in tokenizer in rule: ' + this._safeRuleName(rule));\r\n                    }\r\n                }\r\n                // return the result (and check for brace matching)\r\n                // todo: for efficiency we could pre-sanitize tokenPostfix and substitutions\r\n                let tokenType = null;\r\n                if (monarchCommon.isString(result) && result.indexOf('@brackets') === 0) {\r\n                    let rest = result.substr('@brackets'.length);\r\n                    let bracket = findBracket(this._lexer, matched);\r\n                    if (!bracket) {\r\n                        throw monarchCommon.createError(this._lexer, '@brackets token returned but no bracket defined as: ' + matched);\r\n                    }\r\n                    tokenType = monarchCommon.sanitize(bracket.token + rest);\r\n                }\r\n                else {\r\n                    let token = (result === '' ? '' : result + this._lexer.tokenPostfix);\r\n                    tokenType = monarchCommon.sanitize(token);\r\n                }\r\n                if (pos0 < lineWithoutLFLength) {\r\n                    tokensCollector.emit(pos0 + offsetDelta, tokenType);\r\n                }\r\n            }\r\n            if (enteringEmbeddedMode !== null) {\r\n                return computeNewStateForEmbeddedMode(enteringEmbeddedMode);\r\n            }\r\n        }\r\n        return MonarchLineStateFactory.create(stack, embeddedModeData);\r\n    }\r\n    _getNestedEmbeddedModeData(mimetypeOrModeId) {\r\n        let nestedModeId = this._locateMode(mimetypeOrModeId);\r\n        if (nestedModeId) {\r\n            let tokenizationSupport = modes.TokenizationRegistry.get(nestedModeId);\r\n            if (tokenizationSupport) {\r\n                return new EmbeddedModeData(nestedModeId, tokenizationSupport.getInitialState());\r\n            }\r\n        }\r\n        return new EmbeddedModeData(nestedModeId || NULL_MODE_ID, NULL_STATE);\r\n    }\r\n    _locateMode(mimetypeOrModeId) {\r\n        if (!mimetypeOrModeId || !this._modeService.isRegisteredMode(mimetypeOrModeId)) {\r\n            return null;\r\n        }\r\n        if (mimetypeOrModeId === this._modeId) {\r\n            // embedding myself...\r\n            return mimetypeOrModeId;\r\n        }\r\n        let modeId = this._modeService.getModeId(mimetypeOrModeId);\r\n        if (modeId) {\r\n            // Fire mode loading event\r\n            this._modeService.triggerMode(modeId);\r\n            this._embeddedModes[modeId] = true;\r\n        }\r\n        return modeId;\r\n    }\r\n}\r\n/**\r\n * Searches for a bracket in the 'brackets' attribute that matches the input.\r\n */\r\nfunction findBracket(lexer, matched) {\r\n    if (!matched) {\r\n        return null;\r\n    }\r\n    matched = monarchCommon.fixCase(lexer, matched);\r\n    let brackets = lexer.brackets;\r\n    for (const bracket of brackets) {\r\n        if (bracket.open === matched) {\r\n            return { token: bracket.token, bracketType: 1 /* Open */ };\r\n        }\r\n        else if (bracket.close === matched) {\r\n            return { token: bracket.token, bracketType: -1 /* Close */ };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function createTokenizationSupport(modeService, standaloneThemeService, modeId, lexer) {\r\n    return new MonarchTokenizer(modeService, standaloneThemeService, modeId, lexer);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a;\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\r\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('standaloneColorizer', { createHTML: value => value });\r\nexport class Colorizer {\r\n    static colorizeElement(themeService, modeService, domNode, options) {\r\n        options = options || {};\r\n        let theme = options.theme || 'vs';\r\n        let mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\r\n        if (!mimeType) {\r\n            console.error('Mode not detected');\r\n            return Promise.resolve();\r\n        }\r\n        themeService.setTheme(theme);\r\n        let text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\r\n        domNode.className += ' ' + theme;\r\n        let render = (str) => {\r\n            var _a;\r\n            const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(str)) !== null && _a !== void 0 ? _a : str;\r\n            domNode.innerHTML = trustedhtml;\r\n        };\r\n        return this.colorize(modeService, text || '', mimeType, options).then(render, (err) => console.error(err));\r\n    }\r\n    static colorize(modeService, text, mimeType, options) {\r\n        let tabSize = 4;\r\n        if (options && typeof options.tabSize === 'number') {\r\n            tabSize = options.tabSize;\r\n        }\r\n        if (strings.startsWithUTF8BOM(text)) {\r\n            text = text.substr(1);\r\n        }\r\n        let lines = strings.splitLines(text);\r\n        let language = modeService.getModeId(mimeType);\r\n        if (!language) {\r\n            return Promise.resolve(_fakeColorize(lines, tabSize));\r\n        }\r\n        // Send out the event to create the mode\r\n        modeService.triggerMode(language);\r\n        const tokenizationSupport = TokenizationRegistry.get(language);\r\n        if (tokenizationSupport) {\r\n            return _colorize(lines, tabSize, tokenizationSupport);\r\n        }\r\n        const tokenizationSupportPromise = TokenizationRegistry.getPromise(language);\r\n        if (tokenizationSupportPromise) {\r\n            // A tokenizer will be registered soon\r\n            return new Promise((resolve, reject) => {\r\n                tokenizationSupportPromise.then(tokenizationSupport => {\r\n                    _colorize(lines, tabSize, tokenizationSupport).then(resolve, reject);\r\n                }, reject);\r\n            });\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let listener = null;\r\n            let timeout = null;\r\n            const execute = () => {\r\n                if (listener) {\r\n                    listener.dispose();\r\n                    listener = null;\r\n                }\r\n                if (timeout) {\r\n                    timeout.dispose();\r\n                    timeout = null;\r\n                }\r\n                const tokenizationSupport = TokenizationRegistry.get(language);\r\n                if (tokenizationSupport) {\r\n                    _colorize(lines, tabSize, tokenizationSupport).then(resolve, reject);\r\n                    return;\r\n                }\r\n                resolve(_fakeColorize(lines, tabSize));\r\n            };\r\n            // wait 500ms for mode to load, then give up\r\n            timeout = new TimeoutTimer();\r\n            timeout.cancelAndSet(execute, 500);\r\n            listener = TokenizationRegistry.onDidChange((e) => {\r\n                if (e.changedLanguages.indexOf(language) >= 0) {\r\n                    execute();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    static colorizeLine(line, mightContainNonBasicASCII, mightContainRTL, tokens, tabSize = 4) {\r\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\r\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\r\n        let renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\r\n        return renderResult.html;\r\n    }\r\n    static colorizeModelLine(model, lineNumber, tabSize = 4) {\r\n        let content = model.getLineContent(lineNumber);\r\n        model.forceTokenization(lineNumber);\r\n        let tokens = model.getLineTokens(lineNumber);\r\n        let inflatedTokens = tokens.inflate();\r\n        return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\r\n    }\r\n}\r\nfunction _colorize(lines, tabSize, tokenizationSupport) {\r\n    return new Promise((c, e) => {\r\n        const execute = () => {\r\n            const result = _actualColorize(lines, tabSize, tokenizationSupport);\r\n            if (tokenizationSupport instanceof MonarchTokenizer) {\r\n                const status = tokenizationSupport.getLoadStatus();\r\n                if (status.loaded === false) {\r\n                    status.promise.then(execute, e);\r\n                    return;\r\n                }\r\n            }\r\n            c(result);\r\n        };\r\n        execute();\r\n    });\r\n}\r\nfunction _fakeColorize(lines, tabSize) {\r\n    let html = [];\r\n    const defaultMetadata = ((0 /* None */ << 11 /* FONT_STYLE_OFFSET */)\r\n        | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\r\n        | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n    const tokens = new Uint32Array(2);\r\n    tokens[0] = 0;\r\n    tokens[1] = defaultMetadata;\r\n    for (let i = 0, length = lines.length; i < length; i++) {\r\n        let line = lines[i];\r\n        tokens[0] = line.length;\r\n        const lineTokens = new LineTokens(tokens, line);\r\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\r\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\r\n        let renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\r\n        html = html.concat(renderResult.html);\r\n        html.push('<br/>');\r\n    }\r\n    return html.join('');\r\n}\r\nfunction _actualColorize(lines, tabSize, tokenizationSupport) {\r\n    let html = [];\r\n    let state = tokenizationSupport.getInitialState();\r\n    for (let i = 0, length = lines.length; i < length; i++) {\r\n        let line = lines[i];\r\n        let tokenizeResult = tokenizationSupport.tokenize2(line, true, state, 0);\r\n        LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\r\n        let lineTokens = new LineTokens(tokenizeResult.tokens, line);\r\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\r\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\r\n        let renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\r\n        html = html.concat(renderResult.html);\r\n        html.push('<br/>');\r\n        state = tokenizeResult.endState;\r\n    }\r\n    return html.join('');\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as editorCommon from '../common/editorCommon.js';\r\n/**\r\n *@internal\r\n */\r\nexport function isCodeEditor(thing) {\r\n    if (thing && typeof thing.getEditorType === 'function') {\r\n        return thing.getEditorType() === editorCommon.EditorType.ICodeEditor;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n *@internal\r\n */\r\nexport function isDiffEditor(thing) {\r\n    if (thing && typeof thing.getEditorType === 'function') {\r\n        return thing.getEditorType() === editorCommon.EditorType.IDiffEditor;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n *@internal\r\n */\r\nexport function getCodeEditor(thing) {\r\n    if (isCodeEditor(thing)) {\r\n        return thing;\r\n    }\r\n    if (isDiffEditor(thing)) {\r\n        return thing.getModifiedEditor();\r\n    }\r\n    return null;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { isObject } from '../../../base/common/types.js';\r\nexport const IBulkEditService = createDecorator('IWorkspaceEditService');\r\nfunction isWorkspaceFileEdit(thing) {\r\n    return isObject(thing) && (Boolean(thing.newUri) || Boolean(thing.oldUri));\r\n}\r\nfunction isWorkspaceTextEdit(thing) {\r\n    return isObject(thing) && URI.isUri(thing.resource) && isObject(thing.edit);\r\n}\r\nexport class ResourceEdit {\r\n    constructor(metadata) {\r\n        this.metadata = metadata;\r\n    }\r\n    static convert(edit) {\r\n        return edit.edits.map(edit => {\r\n            if (isWorkspaceTextEdit(edit)) {\r\n                return new ResourceTextEdit(edit.resource, edit.edit, edit.modelVersionId, edit.metadata);\r\n            }\r\n            if (isWorkspaceFileEdit(edit)) {\r\n                return new ResourceFileEdit(edit.oldUri, edit.newUri, edit.options, edit.metadata);\r\n            }\r\n            throw new Error('Unsupported edit');\r\n        });\r\n    }\r\n}\r\nexport class ResourceTextEdit extends ResourceEdit {\r\n    constructor(resource, textEdit, versionId, metadata) {\r\n        super(metadata);\r\n        this.resource = resource;\r\n        this.textEdit = textEdit;\r\n        this.versionId = versionId;\r\n    }\r\n}\r\nexport class ResourceFileEdit extends ResourceEdit {\r\n    constructor(oldResource, newResource, options, metadata) {\r\n        super(metadata);\r\n        this.oldResource = oldResource;\r\n        this.newResource = newResource;\r\n        this.options = options;\r\n    }\r\n}\r\n", "import { ResourceMap } from '../../../base/common/map.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { OVERRIDE_PROPERTY_PATTERN, overrideIdentifierFromKey } from './configurationRegistry.js';\r\nimport { addToValueTree, toValuesTree, getConfigurationValue, getDefaultValues, getConfigurationKeys, removeFromValueTree } from './configuration.js';\r\nexport class ConfigurationModel {\r\n    constructor(_contents = {}, _keys = [], _overrides = []) {\r\n        this._contents = _contents;\r\n        this._keys = _keys;\r\n        this._overrides = _overrides;\r\n        this.isFrozen = false;\r\n    }\r\n    get contents() {\r\n        return this.checkAndFreeze(this._contents);\r\n    }\r\n    get overrides() {\r\n        return this.checkAndFreeze(this._overrides);\r\n    }\r\n    get keys() {\r\n        return this.checkAndFreeze(this._keys);\r\n    }\r\n    isEmpty() {\r\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\r\n    }\r\n    getValue(section) {\r\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\r\n    }\r\n    override(identifier) {\r\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\r\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\r\n            // If there are no valid overrides, return self\r\n            return this;\r\n        }\r\n        let contents = {};\r\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\r\n            let contentsForKey = this.contents[key];\r\n            let overrideContentsForKey = overrideContents[key];\r\n            // If there are override contents for the key, clone and merge otherwise use base contents\r\n            if (overrideContentsForKey) {\r\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\r\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\r\n                    contentsForKey = objects.deepClone(contentsForKey);\r\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\r\n                }\r\n                else {\r\n                    contentsForKey = overrideContentsForKey;\r\n                }\r\n            }\r\n            contents[key] = contentsForKey;\r\n        }\r\n        return new ConfigurationModel(contents, this.keys, this.overrides);\r\n    }\r\n    merge(...others) {\r\n        const contents = objects.deepClone(this.contents);\r\n        const overrides = objects.deepClone(this.overrides);\r\n        const keys = [...this.keys];\r\n        for (const other of others) {\r\n            this.mergeContents(contents, other.contents);\r\n            for (const otherOverride of other.overrides) {\r\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\r\n                if (override) {\r\n                    this.mergeContents(override.contents, otherOverride.contents);\r\n                }\r\n                else {\r\n                    overrides.push(objects.deepClone(otherOverride));\r\n                }\r\n            }\r\n            for (const key of other.keys) {\r\n                if (keys.indexOf(key) === -1) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n        }\r\n        return new ConfigurationModel(contents, keys, overrides);\r\n    }\r\n    freeze() {\r\n        this.isFrozen = true;\r\n        return this;\r\n    }\r\n    mergeContents(source, target) {\r\n        for (const key of Object.keys(target)) {\r\n            if (key in source) {\r\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\r\n                    this.mergeContents(source[key], target[key]);\r\n                    continue;\r\n                }\r\n            }\r\n            source[key] = objects.deepClone(target[key]);\r\n        }\r\n    }\r\n    checkAndFreeze(data) {\r\n        if (this.isFrozen && !Object.isFrozen(data)) {\r\n            return objects.deepFreeze(data);\r\n        }\r\n        return data;\r\n    }\r\n    getContentsForOverrideIdentifer(identifier) {\r\n        for (const override of this.overrides) {\r\n            if (override.identifiers.indexOf(identifier) !== -1) {\r\n                return override.contents;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            contents: this.contents,\r\n            overrides: this.overrides,\r\n            keys: this.keys\r\n        };\r\n    }\r\n    // Update methods\r\n    setValue(key, value) {\r\n        this.addKey(key);\r\n        addToValueTree(this.contents, key, value, e => { throw new Error(e); });\r\n    }\r\n    removeValue(key) {\r\n        if (this.removeKey(key)) {\r\n            removeFromValueTree(this.contents, key);\r\n        }\r\n    }\r\n    addKey(key) {\r\n        let index = this.keys.length;\r\n        for (let i = 0; i < index; i++) {\r\n            if (key.indexOf(this.keys[i]) === 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        this.keys.splice(index, 1, key);\r\n    }\r\n    removeKey(key) {\r\n        let index = this.keys.indexOf(key);\r\n        if (index !== -1) {\r\n            this.keys.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class DefaultConfigurationModel extends ConfigurationModel {\r\n    constructor() {\r\n        const contents = getDefaultValues();\r\n        const keys = getConfigurationKeys();\r\n        const overrides = [];\r\n        for (const key of Object.keys(contents)) {\r\n            if (OVERRIDE_PROPERTY_PATTERN.test(key)) {\r\n                overrides.push({\r\n                    identifiers: [overrideIdentifierFromKey(key).trim()],\r\n                    keys: Object.keys(contents[key]),\r\n                    contents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\r\n                });\r\n            }\r\n        }\r\n        super(contents, keys, overrides);\r\n    }\r\n}\r\nexport class Configuration {\r\n    constructor(_defaultConfiguration, _localUserConfiguration, _remoteUserConfiguration = new ConfigurationModel(), _workspaceConfiguration = new ConfigurationModel(), _folderConfigurations = new ResourceMap(), _memoryConfiguration = new ConfigurationModel(), _memoryConfigurationByResource = new ResourceMap(), _freeze = true) {\r\n        this._defaultConfiguration = _defaultConfiguration;\r\n        this._localUserConfiguration = _localUserConfiguration;\r\n        this._remoteUserConfiguration = _remoteUserConfiguration;\r\n        this._workspaceConfiguration = _workspaceConfiguration;\r\n        this._folderConfigurations = _folderConfigurations;\r\n        this._memoryConfiguration = _memoryConfiguration;\r\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\r\n        this._freeze = _freeze;\r\n        this._workspaceConsolidatedConfiguration = null;\r\n        this._foldersConsolidatedConfigurations = new ResourceMap();\r\n        this._userConfiguration = null;\r\n    }\r\n    getValue(section, overrides, workspace) {\r\n        const consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\r\n        return consolidateConfigurationModel.getValue(section);\r\n    }\r\n    updateValue(key, value, overrides = {}) {\r\n        let memoryConfiguration;\r\n        if (overrides.resource) {\r\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\r\n            if (!memoryConfiguration) {\r\n                memoryConfiguration = new ConfigurationModel();\r\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\r\n            }\r\n        }\r\n        else {\r\n            memoryConfiguration = this._memoryConfiguration;\r\n        }\r\n        if (value === undefined) {\r\n            memoryConfiguration.removeValue(key);\r\n        }\r\n        else {\r\n            memoryConfiguration.setValue(key, value);\r\n        }\r\n        if (!overrides.resource) {\r\n            this._workspaceConsolidatedConfiguration = null;\r\n        }\r\n    }\r\n    get userConfiguration() {\r\n        if (!this._userConfiguration) {\r\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\r\n            if (this._freeze) {\r\n                this._userConfiguration.freeze();\r\n            }\r\n        }\r\n        return this._userConfiguration;\r\n    }\r\n    getConsolidateConfigurationModel(overrides, workspace) {\r\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\r\n        return overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\r\n    }\r\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\r\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\r\n        if (workspace && resource) {\r\n            const root = workspace.getFolder(resource);\r\n            if (root) {\r\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\r\n            }\r\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\r\n            if (memoryConfigurationForResource) {\r\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\r\n            }\r\n        }\r\n        return consolidateConfiguration;\r\n    }\r\n    getWorkspaceConsolidatedConfiguration() {\r\n        if (!this._workspaceConsolidatedConfiguration) {\r\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\r\n            if (this._freeze) {\r\n                this._workspaceConfiguration = this._workspaceConfiguration.freeze();\r\n            }\r\n        }\r\n        return this._workspaceConsolidatedConfiguration;\r\n    }\r\n    getFolderConsolidatedConfiguration(folder) {\r\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\r\n        if (!folderConsolidatedConfiguration) {\r\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\r\n            const folderConfiguration = this._folderConfigurations.get(folder);\r\n            if (folderConfiguration) {\r\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\r\n                if (this._freeze) {\r\n                    folderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\r\n                }\r\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\r\n            }\r\n            else {\r\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\r\n            }\r\n        }\r\n        return folderConsolidatedConfiguration;\r\n    }\r\n    toData() {\r\n        return {\r\n            defaults: {\r\n                contents: this._defaultConfiguration.contents,\r\n                overrides: this._defaultConfiguration.overrides,\r\n                keys: this._defaultConfiguration.keys\r\n            },\r\n            user: {\r\n                contents: this.userConfiguration.contents,\r\n                overrides: this.userConfiguration.overrides,\r\n                keys: this.userConfiguration.keys\r\n            },\r\n            workspace: {\r\n                contents: this._workspaceConfiguration.contents,\r\n                overrides: this._workspaceConfiguration.overrides,\r\n                keys: this._workspaceConfiguration.keys\r\n            },\r\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\r\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\r\n                result.push([folder, { contents, overrides, keys }]);\r\n                return result;\r\n            }, [])\r\n        };\r\n    }\r\n    static parse(data) {\r\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults);\r\n        const userConfiguration = this.parseConfigurationModel(data.user);\r\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace);\r\n        const folders = data.folders.reduce((result, value) => {\r\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\r\n            return result;\r\n        }, new ResourceMap());\r\n        return new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap(), false);\r\n    }\r\n    static parseConfigurationModel(model) {\r\n        return new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\r\n    }\r\n}\r\nexport class ConfigurationChangeEvent {\r\n    constructor(change, previous, currentConfiguraiton, currentWorkspace) {\r\n        this.change = change;\r\n        this.previous = previous;\r\n        this.currentConfiguraiton = currentConfiguraiton;\r\n        this.currentWorkspace = currentWorkspace;\r\n        this._previousConfiguration = undefined;\r\n        const keysSet = new Set();\r\n        change.keys.forEach(key => keysSet.add(key));\r\n        change.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\r\n        this.affectedKeys = [...keysSet.values()];\r\n        const configurationModel = new ConfigurationModel();\r\n        this.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\r\n        this.affectedKeysTree = configurationModel.contents;\r\n    }\r\n    get previousConfiguration() {\r\n        if (!this._previousConfiguration && this.previous) {\r\n            this._previousConfiguration = Configuration.parse(this.previous.data);\r\n        }\r\n        return this._previousConfiguration;\r\n    }\r\n    affectsConfiguration(section, overrides) {\r\n        var _a;\r\n        if (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\r\n            if (overrides) {\r\n                const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, (_a = this.previous) === null || _a === void 0 ? void 0 : _a.workspace) : undefined;\r\n                const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\r\n                return !objects.equals(value1, value2);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    doesAffectedKeysTreeContains(affectedKeysTree, section) {\r\n        let requestedTree = toValuesTree({ [section]: true }, () => { });\r\n        let key;\r\n        while (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\r\n            affectedKeysTree = affectedKeysTree[key];\r\n            if (!affectedKeysTree) {\r\n                return false; // Requested tree is not found\r\n            }\r\n            requestedTree = requestedTree[key];\r\n        }\r\n        return true;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { IntervalTimer, TimeoutTimer } from '../../../base/common/async.js';\r\nimport { Emitter, Event } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nexport class AbstractKeybindingService extends Disposable {\r\n    constructor(_contextKeyService, _commandService, _telemetryService, _notificationService, _logService) {\r\n        super();\r\n        this._contextKeyService = _contextKeyService;\r\n        this._commandService = _commandService;\r\n        this._telemetryService = _telemetryService;\r\n        this._notificationService = _notificationService;\r\n        this._logService = _logService;\r\n        this._onDidUpdateKeybindings = this._register(new Emitter());\r\n        this._currentChord = null;\r\n        this._currentChordChecker = new IntervalTimer();\r\n        this._currentChordStatusMessage = null;\r\n        this._currentSingleModifier = null;\r\n        this._currentSingleModifierClearTimeout = new TimeoutTimer();\r\n        this._logging = false;\r\n    }\r\n    get onDidUpdateKeybindings() {\r\n        return this._onDidUpdateKeybindings ? this._onDidUpdateKeybindings.event : Event.None; // Sinon stubbing walks properties on prototype\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    _log(str) {\r\n        if (this._logging) {\r\n            this._logService.info(`[KeybindingService]: ${str}`);\r\n        }\r\n    }\r\n    getKeybindings() {\r\n        return this._getResolver().getKeybindings();\r\n    }\r\n    lookupKeybinding(commandId, context) {\r\n        const result = this._getResolver().lookupPrimaryKeybinding(commandId, context || this._contextKeyService);\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        return result.resolvedKeybinding;\r\n    }\r\n    dispatchEvent(e, target) {\r\n        return this._dispatch(e, target);\r\n    }\r\n    softDispatch(e, target) {\r\n        const keybinding = this.resolveKeyboardEvent(e);\r\n        if (keybinding.isChord()) {\r\n            console.warn('Unexpected keyboard event mapped to a chord');\r\n            return null;\r\n        }\r\n        const [firstPart,] = keybinding.getDispatchParts();\r\n        if (firstPart === null) {\r\n            // cannot be dispatched, probably only modifier keys\r\n            return null;\r\n        }\r\n        const contextValue = this._contextKeyService.getContext(target);\r\n        const currentChord = this._currentChord ? this._currentChord.keypress : null;\r\n        return this._getResolver().resolve(contextValue, currentChord, firstPart);\r\n    }\r\n    _enterChordMode(firstPart, keypressLabel) {\r\n        this._currentChord = {\r\n            keypress: firstPart,\r\n            label: keypressLabel\r\n        };\r\n        this._currentChordStatusMessage = this._notificationService.status(nls.localize('first.chord', \"({0}) was pressed. Waiting for second key of chord...\", keypressLabel));\r\n        const chordEnterTime = Date.now();\r\n        this._currentChordChecker.cancelAndSet(() => {\r\n            if (!this._documentHasFocus()) {\r\n                // Focus has been lost => leave chord mode\r\n                this._leaveChordMode();\r\n                return;\r\n            }\r\n            if (Date.now() - chordEnterTime > 5000) {\r\n                // 5 seconds elapsed => leave chord mode\r\n                this._leaveChordMode();\r\n            }\r\n        }, 500);\r\n    }\r\n    _leaveChordMode() {\r\n        if (this._currentChordStatusMessage) {\r\n            this._currentChordStatusMessage.dispose();\r\n            this._currentChordStatusMessage = null;\r\n        }\r\n        this._currentChordChecker.cancel();\r\n        this._currentChord = null;\r\n    }\r\n    _dispatch(e, target) {\r\n        return this._doDispatch(this.resolveKeyboardEvent(e), target, /*isSingleModiferChord*/ false);\r\n    }\r\n    _singleModifierDispatch(e, target) {\r\n        const keybinding = this.resolveKeyboardEvent(e);\r\n        const [singleModifier,] = keybinding.getSingleModifierDispatchParts();\r\n        if (singleModifier !== null && this._currentSingleModifier === null) {\r\n            // we have a valid `singleModifier`, store it for the next keyup, but clear it in 300ms\r\n            this._log(`+ Storing single modifier for possible chord ${singleModifier}.`);\r\n            this._currentSingleModifier = singleModifier;\r\n            this._currentSingleModifierClearTimeout.cancelAndSet(() => {\r\n                this._log(`+ Clearing single modifier due to 300ms elapsed.`);\r\n                this._currentSingleModifier = null;\r\n            }, 300);\r\n            return false;\r\n        }\r\n        if (singleModifier !== null && singleModifier === this._currentSingleModifier) {\r\n            // bingo!\r\n            this._log(`/ Dispatching single modifier chord ${singleModifier} ${singleModifier}`);\r\n            this._currentSingleModifierClearTimeout.cancel();\r\n            this._currentSingleModifier = null;\r\n            return this._doDispatch(keybinding, target, /*isSingleModiferChord*/ true);\r\n        }\r\n        this._currentSingleModifierClearTimeout.cancel();\r\n        this._currentSingleModifier = null;\r\n        return false;\r\n    }\r\n    _doDispatch(keybinding, target, isSingleModiferChord = false) {\r\n        let shouldPreventDefault = false;\r\n        if (keybinding.isChord()) {\r\n            console.warn('Unexpected keyboard event mapped to a chord');\r\n            return false;\r\n        }\r\n        let firstPart = null; // the first keybinding i.e. Ctrl+K\r\n        let currentChord = null; // the \"second\" keybinding i.e. Ctrl+K \"Ctrl+D\"\r\n        if (isSingleModiferChord) {\r\n            const [dispatchKeyname,] = keybinding.getSingleModifierDispatchParts();\r\n            firstPart = dispatchKeyname;\r\n            currentChord = dispatchKeyname;\r\n        }\r\n        else {\r\n            [firstPart,] = keybinding.getDispatchParts();\r\n            currentChord = this._currentChord ? this._currentChord.keypress : null;\r\n        }\r\n        if (firstPart === null) {\r\n            this._log(`\\\\ Keyboard event cannot be dispatched in keydown phase.`);\r\n            // cannot be dispatched, probably only modifier keys\r\n            return shouldPreventDefault;\r\n        }\r\n        const contextValue = this._contextKeyService.getContext(target);\r\n        const keypressLabel = keybinding.getLabel();\r\n        const resolveResult = this._getResolver().resolve(contextValue, currentChord, firstPart);\r\n        this._logService.trace('KeybindingService#dispatch', keypressLabel, resolveResult === null || resolveResult === void 0 ? void 0 : resolveResult.commandId);\r\n        if (resolveResult && resolveResult.enterChord) {\r\n            shouldPreventDefault = true;\r\n            this._enterChordMode(firstPart, keypressLabel);\r\n            return shouldPreventDefault;\r\n        }\r\n        if (this._currentChord) {\r\n            if (!resolveResult || !resolveResult.commandId) {\r\n                this._notificationService.status(nls.localize('missing.chord', \"The key combination ({0}, {1}) is not a command.\", this._currentChord.label, keypressLabel), { hideAfter: 10 * 1000 /* 10s */ });\r\n                shouldPreventDefault = true;\r\n            }\r\n        }\r\n        this._leaveChordMode();\r\n        if (resolveResult && resolveResult.commandId) {\r\n            if (!resolveResult.bubble) {\r\n                shouldPreventDefault = true;\r\n            }\r\n            if (typeof resolveResult.commandArgs === 'undefined') {\r\n                this._commandService.executeCommand(resolveResult.commandId).then(undefined, err => this._notificationService.warn(err));\r\n            }\r\n            else {\r\n                this._commandService.executeCommand(resolveResult.commandId, resolveResult.commandArgs).then(undefined, err => this._notificationService.warn(err));\r\n            }\r\n            this._telemetryService.publicLog2('workbenchActionExecuted', { id: resolveResult.commandId, from: 'keybinding' });\r\n        }\r\n        return shouldPreventDefault;\r\n    }\r\n    mightProducePrintableCharacter(event) {\r\n        if (event.ctrlKey || event.metaKey) {\r\n            // ignore ctrl/cmd-combination but not shift/alt-combinatios\r\n            return false;\r\n        }\r\n        // weak check for certain ranges. this is properly implemented in a subclass\r\n        // with access to the KeyboardMapperFactory.\r\n        if ((event.keyCode >= 31 /* KEY_A */ && event.keyCode <= 56 /* KEY_Z */)\r\n            || (event.keyCode >= 21 /* KEY_0 */ && event.keyCode <= 30 /* KEY_9 */)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class KeybindingResolver {\r\n    constructor(defaultKeybindings, overrides, log) {\r\n        this._log = log;\r\n        this._defaultKeybindings = defaultKeybindings;\r\n        this._defaultBoundCommands = new Map();\r\n        for (let i = 0, len = defaultKeybindings.length; i < len; i++) {\r\n            const command = defaultKeybindings[i].command;\r\n            if (command) {\r\n                this._defaultBoundCommands.set(command, true);\r\n            }\r\n        }\r\n        this._map = new Map();\r\n        this._lookupMap = new Map();\r\n        this._keybindings = KeybindingResolver.combine(defaultKeybindings, overrides);\r\n        for (let i = 0, len = this._keybindings.length; i < len; i++) {\r\n            let k = this._keybindings[i];\r\n            if (k.keypressParts.length === 0) {\r\n                // unbound\r\n                continue;\r\n            }\r\n            if (k.when && k.when.type === 0 /* False */) {\r\n                // when condition is false\r\n                continue;\r\n            }\r\n            // TODO@chords\r\n            this._addKeyPress(k.keypressParts[0], k);\r\n        }\r\n    }\r\n    static _isTargetedForRemoval(defaultKb, keypressFirstPart, keypressChordPart, command, when) {\r\n        if (defaultKb.command !== command) {\r\n            return false;\r\n        }\r\n        // TODO@chords\r\n        if (keypressFirstPart && defaultKb.keypressParts[0] !== keypressFirstPart) {\r\n            return false;\r\n        }\r\n        // TODO@chords\r\n        if (keypressChordPart && defaultKb.keypressParts[1] !== keypressChordPart) {\r\n            return false;\r\n        }\r\n        if (when) {\r\n            if (!defaultKb.when) {\r\n                return false;\r\n            }\r\n            if (!when.equals(defaultKb.when)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Looks for rules containing -command in `overrides` and removes them directly from `defaults`.\r\n     */\r\n    static combine(defaults, rawOverrides) {\r\n        defaults = defaults.slice(0);\r\n        let overrides = [];\r\n        for (const override of rawOverrides) {\r\n            if (!override.command || override.command.length === 0 || override.command.charAt(0) !== '-') {\r\n                overrides.push(override);\r\n                continue;\r\n            }\r\n            const command = override.command.substr(1);\r\n            // TODO@chords\r\n            const keypressFirstPart = override.keypressParts[0];\r\n            const keypressChordPart = override.keypressParts[1];\r\n            const when = override.when;\r\n            for (let j = defaults.length - 1; j >= 0; j--) {\r\n                if (this._isTargetedForRemoval(defaults[j], keypressFirstPart, keypressChordPart, command, when)) {\r\n                    defaults.splice(j, 1);\r\n                }\r\n            }\r\n        }\r\n        return defaults.concat(overrides);\r\n    }\r\n    _addKeyPress(keypress, item) {\r\n        const conflicts = this._map.get(keypress);\r\n        if (typeof conflicts === 'undefined') {\r\n            // There is no conflict so far\r\n            this._map.set(keypress, [item]);\r\n            this._addToLookupMap(item);\r\n            return;\r\n        }\r\n        for (let i = conflicts.length - 1; i >= 0; i--) {\r\n            let conflict = conflicts[i];\r\n            if (conflict.command === item.command) {\r\n                continue;\r\n            }\r\n            const conflictIsChord = (conflict.keypressParts.length > 1);\r\n            const itemIsChord = (item.keypressParts.length > 1);\r\n            // TODO@chords\r\n            if (conflictIsChord && itemIsChord && conflict.keypressParts[1] !== item.keypressParts[1]) {\r\n                // The conflict only shares the chord start with this command\r\n                continue;\r\n            }\r\n            if (KeybindingResolver.whenIsEntirelyIncluded(conflict.when, item.when)) {\r\n                // `item` completely overwrites `conflict`\r\n                // Remove conflict from the lookupMap\r\n                this._removeFromLookupMap(conflict);\r\n            }\r\n        }\r\n        conflicts.push(item);\r\n        this._addToLookupMap(item);\r\n    }\r\n    _addToLookupMap(item) {\r\n        if (!item.command) {\r\n            return;\r\n        }\r\n        let arr = this._lookupMap.get(item.command);\r\n        if (typeof arr === 'undefined') {\r\n            arr = [item];\r\n            this._lookupMap.set(item.command, arr);\r\n        }\r\n        else {\r\n            arr.push(item);\r\n        }\r\n    }\r\n    _removeFromLookupMap(item) {\r\n        if (!item.command) {\r\n            return;\r\n        }\r\n        let arr = this._lookupMap.get(item.command);\r\n        if (typeof arr === 'undefined') {\r\n            return;\r\n        }\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            if (arr[i] === item) {\r\n                arr.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns true if it is provable `a` implies `b`.\r\n     */\r\n    static whenIsEntirelyIncluded(a, b) {\r\n        if (!b || b.type === 1 /* True */) {\r\n            return true;\r\n        }\r\n        if (!a || a.type === 1 /* True */) {\r\n            return false;\r\n        }\r\n        return this._implies(a, b);\r\n    }\r\n    /**\r\n     * Returns true if it is provable `p` implies `q`.\r\n     */\r\n    static _implies(p, q) {\r\n        const notP = p.negate();\r\n        const terminals = (node) => {\r\n            if (node.type === 9 /* Or */) {\r\n                return node.expr;\r\n            }\r\n            return [node];\r\n        };\r\n        let expr = terminals(notP).concat(terminals(q));\r\n        for (let i = 0; i < expr.length; i++) {\r\n            const a = expr[i];\r\n            const notA = a.negate();\r\n            for (let j = i + 1; j < expr.length; j++) {\r\n                const b = expr[j];\r\n                if (notA.equals(b)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getKeybindings() {\r\n        return this._keybindings;\r\n    }\r\n    lookupPrimaryKeybinding(commandId, context) {\r\n        const items = this._lookupMap.get(commandId);\r\n        if (typeof items === 'undefined' || items.length === 0) {\r\n            return null;\r\n        }\r\n        if (items.length === 1) {\r\n            return items[0];\r\n        }\r\n        for (let i = items.length - 1; i >= 0; i--) {\r\n            const item = items[i];\r\n            if (context.contextMatchesRules(item.when)) {\r\n                return item;\r\n            }\r\n        }\r\n        return items[items.length - 1];\r\n    }\r\n    resolve(context, currentChord, keypress) {\r\n        this._log(`| Resolving ${keypress}${currentChord ? ` chorded from ${currentChord}` : ``}`);\r\n        let lookupMap = null;\r\n        if (currentChord !== null) {\r\n            // Fetch all chord bindings for `currentChord`\r\n            const candidates = this._map.get(currentChord);\r\n            if (typeof candidates === 'undefined') {\r\n                // No chords starting with `currentChord`\r\n                this._log(`\\\\ No keybinding entries.`);\r\n                return null;\r\n            }\r\n            lookupMap = [];\r\n            for (let i = 0, len = candidates.length; i < len; i++) {\r\n                let candidate = candidates[i];\r\n                // TODO@chords\r\n                if (candidate.keypressParts[1] === keypress) {\r\n                    lookupMap.push(candidate);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const candidates = this._map.get(keypress);\r\n            if (typeof candidates === 'undefined') {\r\n                // No bindings with `keypress`\r\n                this._log(`\\\\ No keybinding entries.`);\r\n                return null;\r\n            }\r\n            lookupMap = candidates;\r\n        }\r\n        let result = this._findCommand(context, lookupMap);\r\n        if (!result) {\r\n            this._log(`\\\\ From ${lookupMap.length} keybinding entries, no when clauses matched the context.`);\r\n            return null;\r\n        }\r\n        // TODO@chords\r\n        if (currentChord === null && result.keypressParts.length > 1 && result.keypressParts[1] !== null) {\r\n            this._log(`\\\\ From ${lookupMap.length} keybinding entries, matched chord, when: ${printWhenExplanation(result.when)}, source: ${printSourceExplanation(result)}.`);\r\n            return {\r\n                enterChord: true,\r\n                leaveChord: false,\r\n                commandId: null,\r\n                commandArgs: null,\r\n                bubble: false\r\n            };\r\n        }\r\n        this._log(`\\\\ From ${lookupMap.length} keybinding entries, matched ${result.command}, when: ${printWhenExplanation(result.when)}, source: ${printSourceExplanation(result)}.`);\r\n        return {\r\n            enterChord: false,\r\n            leaveChord: result.keypressParts.length > 1,\r\n            commandId: result.command,\r\n            commandArgs: result.commandArgs,\r\n            bubble: result.bubble\r\n        };\r\n    }\r\n    _findCommand(context, matches) {\r\n        for (let i = matches.length - 1; i >= 0; i--) {\r\n            let k = matches[i];\r\n            if (!KeybindingResolver.contextMatchesRules(context, k.when)) {\r\n                continue;\r\n            }\r\n            return k;\r\n        }\r\n        return null;\r\n    }\r\n    static contextMatchesRules(context, rules) {\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        return rules.evaluate(context);\r\n    }\r\n}\r\nfunction printWhenExplanation(when) {\r\n    if (!when) {\r\n        return `no when condition`;\r\n    }\r\n    return `${when.serialize()}`;\r\n}\r\nfunction printSourceExplanation(kb) {\r\n    return (kb.extensionId\r\n        ? (kb.isBuiltinExtension ? `built-in extension ${kb.extensionId}` : `user extension ${kb.extensionId}`)\r\n        : (kb.isDefault ? `built-in` : `user`));\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class ResolvedKeybindingItem {\r\n    constructor(resolvedKeybinding, command, commandArgs, when, isDefault, extensionId, isBuiltinExtension) {\r\n        this._resolvedKeybindingItemBrand = undefined;\r\n        this.resolvedKeybinding = resolvedKeybinding;\r\n        this.keypressParts = resolvedKeybinding ? removeElementsAfterNulls(resolvedKeybinding.getDispatchParts()) : [];\r\n        if (resolvedKeybinding && this.keypressParts.length === 0) {\r\n            // handle possible single modifier chord keybindings\r\n            this.keypressParts = removeElementsAfterNulls(resolvedKeybinding.getSingleModifierDispatchParts());\r\n        }\r\n        this.bubble = (command ? command.charCodeAt(0) === 94 /* Caret */ : false);\r\n        this.command = this.bubble ? command.substr(1) : command;\r\n        this.commandArgs = commandArgs;\r\n        this.when = when;\r\n        this.isDefault = isDefault;\r\n        this.extensionId = extensionId;\r\n        this.isBuiltinExtension = isBuiltinExtension;\r\n    }\r\n}\r\nexport function removeElementsAfterNulls(arr) {\r\n    let result = [];\r\n    for (let i = 0, len = arr.length; i < len; i++) {\r\n        const element = arr[i];\r\n        if (!element) {\r\n            // stop processing at first encountered null\r\n            return result;\r\n        }\r\n        result.push(element);\r\n    }\r\n    return result;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalArgument } from '../../../base/common/errors.js';\r\nimport { UILabelProvider, AriaLabelProvider } from '../../../base/common/keybindingLabels.js';\r\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from '../../../base/common/keyCodes.js';\r\nexport class BaseResolvedKeybinding extends ResolvedKeybinding {\r\n    constructor(os, parts) {\r\n        super();\r\n        if (parts.length === 0) {\r\n            throw illegalArgument(`parts`);\r\n        }\r\n        this._os = os;\r\n        this._parts = parts;\r\n    }\r\n    getLabel() {\r\n        return UILabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getLabel(keybinding));\r\n    }\r\n    getAriaLabel() {\r\n        return AriaLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getAriaLabel(keybinding));\r\n    }\r\n    isChord() {\r\n        return (this._parts.length > 1);\r\n    }\r\n    getParts() {\r\n        return this._parts.map((keybinding) => this._getPart(keybinding));\r\n    }\r\n    _getPart(keybinding) {\r\n        return new ResolvedKeybindingPart(keybinding.ctrlKey, keybinding.shiftKey, keybinding.altKey, keybinding.metaKey, this._getLabel(keybinding), this._getAriaLabel(keybinding));\r\n    }\r\n    getDispatchParts() {\r\n        return this._parts.map((keybinding) => this._getDispatchPart(keybinding));\r\n    }\r\n    getSingleModifierDispatchParts() {\r\n        return this._parts.map((keybinding) => this._getSingleModifierDispatchPart(keybinding));\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { KeyCodeUtils } from '../../../base/common/keyCodes.js';\r\nimport { BaseResolvedKeybinding } from './baseResolvedKeybinding.js';\r\n/**\r\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\r\n */\r\nexport class USLayoutResolvedKeybinding extends BaseResolvedKeybinding {\r\n    constructor(actual, os) {\r\n        super(os, actual.parts);\r\n    }\r\n    _keyCodeToUILabel(keyCode) {\r\n        if (this._os === 2 /* Macintosh */) {\r\n            switch (keyCode) {\r\n                case 15 /* LeftArrow */:\r\n                    return '\u2190';\r\n                case 16 /* UpArrow */:\r\n                    return '\u2191';\r\n                case 17 /* RightArrow */:\r\n                    return '\u2192';\r\n                case 18 /* DownArrow */:\r\n                    return '\u2193';\r\n            }\r\n        }\r\n        return KeyCodeUtils.toString(keyCode);\r\n    }\r\n    _getLabel(keybinding) {\r\n        if (keybinding.isDuplicateModifierCase()) {\r\n            return '';\r\n        }\r\n        return this._keyCodeToUILabel(keybinding.keyCode);\r\n    }\r\n    _getAriaLabel(keybinding) {\r\n        if (keybinding.isDuplicateModifierCase()) {\r\n            return '';\r\n        }\r\n        return KeyCodeUtils.toString(keybinding.keyCode);\r\n    }\r\n    _getDispatchPart(keybinding) {\r\n        return USLayoutResolvedKeybinding.getDispatchStr(keybinding);\r\n    }\r\n    static getDispatchStr(keybinding) {\r\n        if (keybinding.isModifierKey()) {\r\n            return null;\r\n        }\r\n        let result = '';\r\n        if (keybinding.ctrlKey) {\r\n            result += 'ctrl+';\r\n        }\r\n        if (keybinding.shiftKey) {\r\n            result += 'shift+';\r\n        }\r\n        if (keybinding.altKey) {\r\n            result += 'alt+';\r\n        }\r\n        if (keybinding.metaKey) {\r\n            result += 'meta+';\r\n        }\r\n        result += KeyCodeUtils.toString(keybinding.keyCode);\r\n        return result;\r\n    }\r\n    _getSingleModifierDispatchPart(keybinding) {\r\n        if (keybinding.keyCode === 5 /* Ctrl */ && !keybinding.shiftKey && !keybinding.altKey && !keybinding.metaKey) {\r\n            return 'ctrl';\r\n        }\r\n        if (keybinding.keyCode === 4 /* Shift */ && !keybinding.ctrlKey && !keybinding.altKey && !keybinding.metaKey) {\r\n            return 'shift';\r\n        }\r\n        if (keybinding.keyCode === 6 /* Alt */ && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.metaKey) {\r\n            return 'alt';\r\n        }\r\n        if (keybinding.keyCode === 57 /* Meta */ && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.altKey) {\r\n            return 'meta';\r\n        }\r\n        return null;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../nls.js';\r\nexport var AccessibilityHelpNLS;\r\n(function (AccessibilityHelpNLS) {\r\n    AccessibilityHelpNLS.noSelection = nls.localize(\"noSelection\", \"No selection\");\r\n    AccessibilityHelpNLS.singleSelectionRange = nls.localize(\"singleSelectionRange\", \"Line {0}, Column {1} ({2} selected)\");\r\n    AccessibilityHelpNLS.singleSelection = nls.localize(\"singleSelection\", \"Line {0}, Column {1}\");\r\n    AccessibilityHelpNLS.multiSelectionRange = nls.localize(\"multiSelectionRange\", \"{0} selections ({1} characters selected)\");\r\n    AccessibilityHelpNLS.multiSelection = nls.localize(\"multiSelection\", \"{0} selections\");\r\n    AccessibilityHelpNLS.emergencyConfOn = nls.localize(\"emergencyConfOn\", \"Now changing the setting `accessibilitySupport` to 'on'.\");\r\n    AccessibilityHelpNLS.openingDocs = nls.localize(\"openingDocs\", \"Now opening the Editor Accessibility documentation page.\");\r\n    AccessibilityHelpNLS.readonlyDiffEditor = nls.localize(\"readonlyDiffEditor\", \" in a read-only pane of a diff editor.\");\r\n    AccessibilityHelpNLS.editableDiffEditor = nls.localize(\"editableDiffEditor\", \" in a pane of a diff editor.\");\r\n    AccessibilityHelpNLS.readonlyEditor = nls.localize(\"readonlyEditor\", \" in a read-only code editor\");\r\n    AccessibilityHelpNLS.editableEditor = nls.localize(\"editableEditor\", \" in a code editor\");\r\n    AccessibilityHelpNLS.changeConfigToOnMac = nls.localize(\"changeConfigToOnMac\", \"To configure the editor to be optimized for usage with a Screen Reader press Command+E now.\");\r\n    AccessibilityHelpNLS.changeConfigToOnWinLinux = nls.localize(\"changeConfigToOnWinLinux\", \"To configure the editor to be optimized for usage with a Screen Reader press Control+E now.\");\r\n    AccessibilityHelpNLS.auto_on = nls.localize(\"auto_on\", \"The editor is configured to be optimized for usage with a Screen Reader.\");\r\n    AccessibilityHelpNLS.auto_off = nls.localize(\"auto_off\", \"The editor is configured to never be optimized for usage with a Screen Reader, which is not the case at this time.\");\r\n    AccessibilityHelpNLS.tabFocusModeOnMsg = nls.localize(\"tabFocusModeOnMsg\", \"Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.\");\r\n    AccessibilityHelpNLS.tabFocusModeOnMsgNoKb = nls.localize(\"tabFocusModeOnMsgNoKb\", \"Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.\");\r\n    AccessibilityHelpNLS.tabFocusModeOffMsg = nls.localize(\"tabFocusModeOffMsg\", \"Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.\");\r\n    AccessibilityHelpNLS.tabFocusModeOffMsgNoKb = nls.localize(\"tabFocusModeOffMsgNoKb\", \"Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.\");\r\n    AccessibilityHelpNLS.openDocMac = nls.localize(\"openDocMac\", \"Press Command+H now to open a browser window with more information related to editor accessibility.\");\r\n    AccessibilityHelpNLS.openDocWinLinux = nls.localize(\"openDocWinLinux\", \"Press Control+H now to open a browser window with more information related to editor accessibility.\");\r\n    AccessibilityHelpNLS.outroMsg = nls.localize(\"outroMsg\", \"You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.\");\r\n    AccessibilityHelpNLS.showAccessibilityHelpAction = nls.localize(\"showAccessibilityHelpAction\", \"Show Accessibility Help\");\r\n})(AccessibilityHelpNLS || (AccessibilityHelpNLS = {}));\r\nexport var InspectTokensNLS;\r\n(function (InspectTokensNLS) {\r\n    InspectTokensNLS.inspectTokensAction = nls.localize('inspectTokens', \"Developer: Inspect Tokens\");\r\n})(InspectTokensNLS || (InspectTokensNLS = {}));\r\nexport var GoToLineNLS;\r\n(function (GoToLineNLS) {\r\n    GoToLineNLS.gotoLineActionLabel = nls.localize('gotoLineActionLabel', \"Go to Line/Column...\");\r\n})(GoToLineNLS || (GoToLineNLS = {}));\r\nexport var QuickHelpNLS;\r\n(function (QuickHelpNLS) {\r\n    QuickHelpNLS.helpQuickAccessActionLabel = nls.localize('helpQuickAccess', \"Show all Quick Access Providers\");\r\n})(QuickHelpNLS || (QuickHelpNLS = {}));\r\nexport var QuickCommandNLS;\r\n(function (QuickCommandNLS) {\r\n    QuickCommandNLS.quickCommandActionLabel = nls.localize('quickCommandActionLabel', \"Command Palette\");\r\n    QuickCommandNLS.quickCommandHelp = nls.localize('quickCommandActionHelp', \"Show And Run Commands\");\r\n})(QuickCommandNLS || (QuickCommandNLS = {}));\r\nexport var QuickOutlineNLS;\r\n(function (QuickOutlineNLS) {\r\n    QuickOutlineNLS.quickOutlineActionLabel = nls.localize('quickOutlineActionLabel', \"Go to Symbol...\");\r\n    QuickOutlineNLS.quickOutlineByCategoryActionLabel = nls.localize('quickOutlineByCategoryActionLabel', \"Go to Symbol by Category...\");\r\n})(QuickOutlineNLS || (QuickOutlineNLS = {}));\r\nexport var StandaloneCodeEditorNLS;\r\n(function (StandaloneCodeEditorNLS) {\r\n    StandaloneCodeEditorNLS.editorViewAccessibleLabel = nls.localize('editorViewAccessibleLabel', \"Editor content\");\r\n    StandaloneCodeEditorNLS.accessibilityHelpMessage = nls.localize('accessibilityHelpMessage', \"Press Alt+F1 for Accessibility Options.\");\r\n})(StandaloneCodeEditorNLS || (StandaloneCodeEditorNLS = {}));\r\nexport var ToggleHighContrastNLS;\r\n(function (ToggleHighContrastNLS) {\r\n    ToggleHighContrastNLS.toggleHighContrast = nls.localize('toggleHighContrast', \"Toggle High Contrast Theme\");\r\n})(ToggleHighContrastNLS || (ToggleHighContrastNLS = {}));\r\nexport var SimpleServicesNLS;\r\n(function (SimpleServicesNLS) {\r\n    SimpleServicesNLS.bulkEditServiceSummary = nls.localize('bulkEditServiceSummary', \"Made {0} edits in {1} files\");\r\n})(SimpleServicesNLS || (SimpleServicesNLS = {}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\r\nimport { Emitter, Event } from '../../../base/common/event.js';\r\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keyCodes.js';\r\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\r\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { ResourceTextEdit } from '../../browser/services/bulkEditService.js';\r\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/commonEditorConfig.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position as Pos } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { Configuration, ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\r\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\r\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\r\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\r\nimport { NoOpNotification } from '../../../platform/notification/common/notification.js';\r\nimport { WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\r\nimport { SimpleServicesNLS } from '../../common/standaloneStrings.js';\r\nexport class SimpleModel {\r\n    constructor(model) {\r\n        this.disposed = false;\r\n        this.model = model;\r\n        this._onWillDispose = new Emitter();\r\n    }\r\n    get textEditorModel() {\r\n        return this.model;\r\n    }\r\n    dispose() {\r\n        this.disposed = true;\r\n        this._onWillDispose.fire();\r\n    }\r\n}\r\nfunction withTypedEditor(widget, codeEditorCallback, diffEditorCallback) {\r\n    if (isCodeEditor(widget)) {\r\n        // Single Editor\r\n        return codeEditorCallback(widget);\r\n    }\r\n    else {\r\n        // Diff Editor\r\n        return diffEditorCallback(widget);\r\n    }\r\n}\r\nlet SimpleEditorModelResolverService = class SimpleEditorModelResolverService {\r\n    constructor(modelService) {\r\n        this.modelService = modelService;\r\n    }\r\n    setEditor(editor) {\r\n        this.editor = editor;\r\n    }\r\n    createModelReference(resource) {\r\n        let model = null;\r\n        if (this.editor) {\r\n            model = withTypedEditor(this.editor, (editor) => this.findModel(editor, resource), (diffEditor) => this.findModel(diffEditor.getOriginalEditor(), resource) || this.findModel(diffEditor.getModifiedEditor(), resource));\r\n        }\r\n        if (!model) {\r\n            return Promise.reject(new Error(`Model not found`));\r\n        }\r\n        return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\r\n    }\r\n    findModel(editor, resource) {\r\n        let model = this.modelService.getModel(resource);\r\n        if (model && model.uri.toString() !== resource.toString()) {\r\n            return null;\r\n        }\r\n        return model;\r\n    }\r\n};\r\nSimpleEditorModelResolverService = __decorate([\r\n    __param(0, IModelService)\r\n], SimpleEditorModelResolverService);\r\nexport { SimpleEditorModelResolverService };\r\nexport class SimpleEditorProgressService {\r\n    show() {\r\n        return SimpleEditorProgressService.NULL_PROGRESS_RUNNER;\r\n    }\r\n    showWhile(promise, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield promise;\r\n        });\r\n    }\r\n}\r\nSimpleEditorProgressService.NULL_PROGRESS_RUNNER = {\r\n    done: () => { },\r\n    total: () => { },\r\n    worked: () => { }\r\n};\r\nexport class SimpleDialogService {\r\n    confirm(confirmation) {\r\n        return this.doConfirm(confirmation).then(confirmed => {\r\n            return {\r\n                confirmed,\r\n                checkboxChecked: false // unsupported\r\n            };\r\n        });\r\n    }\r\n    doConfirm(confirmation) {\r\n        let messageText = confirmation.message;\r\n        if (confirmation.detail) {\r\n            messageText = messageText + '\\n\\n' + confirmation.detail;\r\n        }\r\n        return Promise.resolve(window.confirm(messageText));\r\n    }\r\n    show(severity, message, buttons, options) {\r\n        return Promise.resolve({ choice: 0 });\r\n    }\r\n}\r\nexport class SimpleNotificationService {\r\n    info(message) {\r\n        return this.notify({ severity: Severity.Info, message });\r\n    }\r\n    warn(message) {\r\n        return this.notify({ severity: Severity.Warning, message });\r\n    }\r\n    error(error) {\r\n        return this.notify({ severity: Severity.Error, message: error });\r\n    }\r\n    notify(notification) {\r\n        switch (notification.severity) {\r\n            case Severity.Error:\r\n                console.error(notification.message);\r\n                break;\r\n            case Severity.Warning:\r\n                console.warn(notification.message);\r\n                break;\r\n            default:\r\n                console.log(notification.message);\r\n                break;\r\n        }\r\n        return SimpleNotificationService.NO_OP;\r\n    }\r\n    status(message, options) {\r\n        return Disposable.None;\r\n    }\r\n}\r\nSimpleNotificationService.NO_OP = new NoOpNotification();\r\nexport class StandaloneCommandService {\r\n    constructor(instantiationService) {\r\n        this._onWillExecuteCommand = new Emitter();\r\n        this._onDidExecuteCommand = new Emitter();\r\n        this.onDidExecuteCommand = this._onDidExecuteCommand.event;\r\n        this._instantiationService = instantiationService;\r\n    }\r\n    executeCommand(id, ...args) {\r\n        const command = CommandsRegistry.getCommand(id);\r\n        if (!command) {\r\n            return Promise.reject(new Error(`command '${id}' not found`));\r\n        }\r\n        try {\r\n            this._onWillExecuteCommand.fire({ commandId: id, args });\r\n            const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\r\n            this._onDidExecuteCommand.fire({ commandId: id, args });\r\n            return Promise.resolve(result);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n}\r\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\r\n    constructor(contextKeyService, commandService, telemetryService, notificationService, logService, domNode) {\r\n        super(contextKeyService, commandService, telemetryService, notificationService, logService);\r\n        this._cachedResolver = null;\r\n        this._dynamicKeybindings = [];\r\n        // for standard keybindings\r\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => {\r\n            const keyEvent = new StandardKeyboardEvent(e);\r\n            const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\r\n            if (shouldPreventDefault) {\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopPropagation();\r\n            }\r\n        }));\r\n        // for single modifier chord keybindings (e.g. shift shift)\r\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, (e) => {\r\n            const keyEvent = new StandardKeyboardEvent(e);\r\n            const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\r\n            if (shouldPreventDefault) {\r\n                keyEvent.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n    addDynamicKeybinding(commandId, _keybinding, handler, when) {\r\n        const keybinding = createKeybinding(_keybinding, OS);\r\n        const toDispose = new DisposableStore();\r\n        if (keybinding) {\r\n            this._dynamicKeybindings.push({\r\n                keybinding: keybinding,\r\n                command: commandId,\r\n                when: when,\r\n                weight1: 1000,\r\n                weight2: 0,\r\n                extensionId: null,\r\n                isBuiltinExtension: false\r\n            });\r\n            toDispose.add(toDisposable(() => {\r\n                for (let i = 0; i < this._dynamicKeybindings.length; i++) {\r\n                    let kb = this._dynamicKeybindings[i];\r\n                    if (kb.command === commandId) {\r\n                        this._dynamicKeybindings.splice(i, 1);\r\n                        this.updateResolver({ source: 1 /* Default */ });\r\n                        return;\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n        toDispose.add(CommandsRegistry.registerCommand(commandId, handler));\r\n        this.updateResolver({ source: 1 /* Default */ });\r\n        return toDispose;\r\n    }\r\n    updateResolver(event) {\r\n        this._cachedResolver = null;\r\n        this._onDidUpdateKeybindings.fire(event);\r\n    }\r\n    _getResolver() {\r\n        if (!this._cachedResolver) {\r\n            const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\r\n            const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\r\n            this._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\r\n        }\r\n        return this._cachedResolver;\r\n    }\r\n    _documentHasFocus() {\r\n        return document.hasFocus();\r\n    }\r\n    _toNormalizedKeybindingItems(items, isDefault) {\r\n        let result = [], resultLen = 0;\r\n        for (const item of items) {\r\n            const when = item.when || undefined;\r\n            const keybinding = item.keybinding;\r\n            if (!keybinding) {\r\n                // This might be a removal keybinding item in user settings => accept it\r\n                result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\r\n            }\r\n            else {\r\n                const resolvedKeybindings = this.resolveKeybinding(keybinding);\r\n                for (const resolvedKeybinding of resolvedKeybindings) {\r\n                    result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    resolveKeybinding(keybinding) {\r\n        return [new USLayoutResolvedKeybinding(keybinding, OS)];\r\n    }\r\n    resolveKeyboardEvent(keyboardEvent) {\r\n        let keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\r\n        return new USLayoutResolvedKeybinding(keybinding, OS);\r\n    }\r\n}\r\nfunction isConfigurationOverrides(thing) {\r\n    return thing\r\n        && typeof thing === 'object'\r\n        && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\r\n        && (!thing.resource || thing.resource instanceof URI);\r\n}\r\nexport class SimpleConfigurationService {\r\n    constructor() {\r\n        this._onDidChangeConfiguration = new Emitter();\r\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\r\n        this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\r\n    }\r\n    getValue(arg1, arg2) {\r\n        const section = typeof arg1 === 'string' ? arg1 : undefined;\r\n        const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\r\n        return this._configuration.getValue(section, overrides, undefined);\r\n    }\r\n    updateValues(values) {\r\n        const previous = { data: this._configuration.toData() };\r\n        let changedKeys = [];\r\n        for (const entry of values) {\r\n            const [key, value] = entry;\r\n            if (this.getValue(key) === value) {\r\n                continue;\r\n            }\r\n            this._configuration.updateValue(key, value);\r\n            changedKeys.push(key);\r\n        }\r\n        if (changedKeys.length > 0) {\r\n            const configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\r\n            configurationChangeEvent.source = 7 /* MEMORY */;\r\n            configurationChangeEvent.sourceConfig = null;\r\n            this._onDidChangeConfiguration.fire(configurationChangeEvent);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nexport class SimpleResourceConfigurationService {\r\n    constructor(configurationService) {\r\n        this.configurationService = configurationService;\r\n        this._onDidChangeConfiguration = new Emitter();\r\n        this.configurationService.onDidChangeConfiguration((e) => {\r\n            this._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration) });\r\n        });\r\n    }\r\n    getValue(resource, arg2, arg3) {\r\n        const position = Pos.isIPosition(arg2) ? arg2 : null;\r\n        const section = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\r\n        if (typeof section === 'undefined') {\r\n            return this.configurationService.getValue();\r\n        }\r\n        return this.configurationService.getValue(section);\r\n    }\r\n}\r\nlet SimpleResourcePropertiesService = class SimpleResourcePropertiesService {\r\n    constructor(configurationService) {\r\n        this.configurationService = configurationService;\r\n    }\r\n    getEOL(resource, language) {\r\n        const eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\r\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\r\n            return eol;\r\n        }\r\n        return (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\r\n    }\r\n};\r\nSimpleResourcePropertiesService = __decorate([\r\n    __param(0, IConfigurationService)\r\n], SimpleResourcePropertiesService);\r\nexport { SimpleResourcePropertiesService };\r\nexport class StandaloneTelemetryService {\r\n    publicLog(eventName, data) {\r\n        return Promise.resolve(undefined);\r\n    }\r\n    publicLog2(eventName, data) {\r\n        return this.publicLog(eventName, data);\r\n    }\r\n}\r\nexport class SimpleWorkspaceContextService {\r\n    constructor() {\r\n        const resource = URI.from({ scheme: SimpleWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\r\n        this.workspace = { id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82', folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\r\n    }\r\n    getWorkspace() {\r\n        return this.workspace;\r\n    }\r\n}\r\nSimpleWorkspaceContextService.SCHEME = 'inmemory';\r\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\r\n    if (!source) {\r\n        return;\r\n    }\r\n    if (!(configurationService instanceof SimpleConfigurationService)) {\r\n        return;\r\n    }\r\n    let toUpdate = [];\r\n    Object.keys(source).forEach((key) => {\r\n        if (isEditorConfigurationKey(key)) {\r\n            toUpdate.push([`editor.${key}`, source[key]]);\r\n        }\r\n        if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\r\n            toUpdate.push([`diffEditor.${key}`, source[key]]);\r\n        }\r\n    });\r\n    if (toUpdate.length > 0) {\r\n        configurationService.updateValues(toUpdate);\r\n    }\r\n}\r\nexport class SimpleBulkEditService {\r\n    constructor(_modelService) {\r\n        this._modelService = _modelService;\r\n        //\r\n    }\r\n    hasPreviewHandler() {\r\n        return false;\r\n    }\r\n    apply(edits, _options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const textEdits = new Map();\r\n            for (let edit of edits) {\r\n                if (!(edit instanceof ResourceTextEdit)) {\r\n                    throw new Error('bad edit - only text edits are supported');\r\n                }\r\n                const model = this._modelService.getModel(edit.resource);\r\n                if (!model) {\r\n                    throw new Error('bad edit - model not found');\r\n                }\r\n                if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\r\n                    throw new Error('bad state - model changed in the meantime');\r\n                }\r\n                let array = textEdits.get(model);\r\n                if (!array) {\r\n                    array = [];\r\n                    textEdits.set(model, array);\r\n                }\r\n                array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\r\n            }\r\n            let totalEdits = 0;\r\n            let totalFiles = 0;\r\n            for (const [model, edits] of textEdits) {\r\n                model.pushStackElement();\r\n                model.pushEditOperations([], edits, () => []);\r\n                model.pushStackElement();\r\n                totalFiles += 1;\r\n                totalEdits += edits.length;\r\n            }\r\n            return {\r\n                ariaSummary: strings.format(SimpleServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\r\n            };\r\n        });\r\n    }\r\n}\r\nexport class SimpleUriLabelService {\r\n    getUriLabel(resource, options) {\r\n        if (resource.scheme === 'file') {\r\n            return resource.fsPath;\r\n        }\r\n        return resource.path;\r\n    }\r\n}\r\nexport class SimpleLayoutService {\r\n    constructor(_codeEditorService, _container) {\r\n        this._codeEditorService = _codeEditorService;\r\n        this._container = _container;\r\n        this.onDidLayout = Event.None;\r\n    }\r\n    get dimension() {\r\n        if (!this._dimension) {\r\n            this._dimension = dom.getClientArea(window.document.body);\r\n        }\r\n        return this._dimension;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    focus() {\r\n        var _a;\r\n        (_a = this._codeEditorService.getFocusedCodeEditor()) === null || _a === void 0 ? void 0 : _a.focus();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport './media/diffEditor.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Configuration } from '../config/configuration.js';\r\nimport { StableEditorScrollState } from '../core/editorState.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { CodeEditorWidget } from './codeEditorWidget.js';\r\nimport { DiffReview } from './diffReview.js';\r\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption } from '../../common/config/editorOptions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\r\nimport * as editorCommon from '../../common/editorCommon.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { OverviewRulerZone } from '../../common/view/overviewZoneManager.js';\r\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\r\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nclass VisualEditorState {\r\n    constructor(_contextMenuService, _clipboardService) {\r\n        this._contextMenuService = _contextMenuService;\r\n        this._clipboardService = _clipboardService;\r\n        this._zones = [];\r\n        this._inlineDiffMargins = [];\r\n        this._zonesMap = {};\r\n        this._decorations = [];\r\n    }\r\n    getForeignViewZones(allViewZones) {\r\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\r\n    }\r\n    clean(editor) {\r\n        // (1) View zones\r\n        if (this._zones.length > 0) {\r\n            editor.changeViewZones((viewChangeAccessor) => {\r\n                for (const zoneId of this._zones) {\r\n                    viewChangeAccessor.removeZone(zoneId);\r\n                }\r\n            });\r\n        }\r\n        this._zones = [];\r\n        this._zonesMap = {};\r\n        // (2) Model decorations\r\n        this._decorations = editor.deltaDecorations(this._decorations, []);\r\n    }\r\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\r\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\r\n        // view zones\r\n        editor.changeViewZones((viewChangeAccessor) => {\r\n            for (const zoneId of this._zones) {\r\n                viewChangeAccessor.removeZone(zoneId);\r\n            }\r\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\r\n                inlineDiffMargin.dispose();\r\n            }\r\n            this._zones = [];\r\n            this._zonesMap = {};\r\n            this._inlineDiffMargins = [];\r\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\r\n                const viewZone = newDecorations.zones[i];\r\n                viewZone.suppressMouseDown = true;\r\n                const zoneId = viewChangeAccessor.addZone(viewZone);\r\n                this._zones.push(zoneId);\r\n                this._zonesMap[String(zoneId)] = true;\r\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\r\n                    viewZone.suppressMouseDown = false;\r\n                    this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\r\n                }\r\n            }\r\n        });\r\n        if (scrollState) {\r\n            scrollState.restore(editor);\r\n        }\r\n        // decorations\r\n        this._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations);\r\n        // overview ruler\r\n        if (overviewRuler) {\r\n            overviewRuler.setZones(newDecorations.overviewZones);\r\n        }\r\n    }\r\n}\r\nlet DIFF_EDITOR_ID = 0;\r\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\r\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\r\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\r\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\r\n        super();\r\n        this._editorProgressService = _editorProgressService;\r\n        this._onDidDispose = this._register(new Emitter());\r\n        this.onDidDispose = this._onDidDispose.event;\r\n        this._onDidUpdateDiff = this._register(new Emitter());\r\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\r\n        this._onDidContentSizeChange = this._register(new Emitter());\r\n        this._lastOriginalWarning = null;\r\n        this._lastModifiedWarning = null;\r\n        this._editorWorkerService = editorWorkerService;\r\n        this._codeEditorService = codeEditorService;\r\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\r\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\r\n        this._contextKeyService.createKey('isInDiffEditor', true);\r\n        this._themeService = themeService;\r\n        this._notificationService = notificationService;\r\n        this._id = (++DIFF_EDITOR_ID);\r\n        this._state = 0 /* Idle */;\r\n        this._updatingDiffProgress = null;\r\n        this._domElement = domElement;\r\n        options = options || {};\r\n        // renderSideBySide\r\n        this._renderSideBySide = true;\r\n        if (typeof options.renderSideBySide !== 'undefined') {\r\n            this._renderSideBySide = options.renderSideBySide;\r\n        }\r\n        // maxComputationTime\r\n        this._maxComputationTime = 5000;\r\n        if (typeof options.maxComputationTime !== 'undefined') {\r\n            this._maxComputationTime = options.maxComputationTime;\r\n        }\r\n        // ignoreTrimWhitespace\r\n        this._ignoreTrimWhitespace = true;\r\n        if (typeof options.ignoreTrimWhitespace !== 'undefined') {\r\n            this._ignoreTrimWhitespace = options.ignoreTrimWhitespace;\r\n        }\r\n        // renderIndicators\r\n        this._renderIndicators = true;\r\n        if (typeof options.renderIndicators !== 'undefined') {\r\n            this._renderIndicators = options.renderIndicators;\r\n        }\r\n        this._originalIsEditable = validateBooleanOption(options.originalEditable, false);\r\n        this._diffCodeLens = validateBooleanOption(options.diffCodeLens, false);\r\n        this._diffWordWrap = validateDiffWordWrap(options.diffWordWrap, 'inherit');\r\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\r\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\r\n        }\r\n        else {\r\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\r\n        }\r\n        this._renderOverviewRuler = true;\r\n        if (typeof options.renderOverviewRuler !== 'undefined') {\r\n            this._renderOverviewRuler = Boolean(options.renderOverviewRuler);\r\n        }\r\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\r\n        this._containerDomElement = document.createElement('div');\r\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        this._containerDomElement.style.position = 'relative';\r\n        this._containerDomElement.style.height = '100%';\r\n        this._domElement.appendChild(this._containerDomElement);\r\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\r\n        this._overviewViewportDomElement.setClassName('diffViewport');\r\n        this._overviewViewportDomElement.setPosition('absolute');\r\n        this._overviewDomElement = document.createElement('div');\r\n        this._overviewDomElement.className = 'diffOverview';\r\n        this._overviewDomElement.style.position = 'absolute';\r\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\r\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, 'mousedown', (e) => {\r\n            this._modifiedEditor.delegateVerticalScrollbarMouseDown(e);\r\n        }));\r\n        if (this._renderOverviewRuler) {\r\n            this._containerDomElement.appendChild(this._overviewDomElement);\r\n        }\r\n        // Create left side\r\n        this._originalDomNode = document.createElement('div');\r\n        this._originalDomNode.className = 'editor original';\r\n        this._originalDomNode.style.position = 'absolute';\r\n        this._originalDomNode.style.height = '100%';\r\n        this._containerDomElement.appendChild(this._originalDomNode);\r\n        // Create right side\r\n        this._modifiedDomNode = document.createElement('div');\r\n        this._modifiedDomNode.className = 'editor modified';\r\n        this._modifiedDomNode.style.position = 'absolute';\r\n        this._modifiedDomNode.style.height = '100%';\r\n        this._containerDomElement.appendChild(this._modifiedDomNode);\r\n        this._beginUpdateDecorationsTimeout = -1;\r\n        this._currentlyChangingViewZones = false;\r\n        this._diffComputationToken = 0;\r\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\r\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\r\n        this._isVisible = true;\r\n        this._isHandlingScrollEvent = false;\r\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension, () => this._onDidContainerSizeChanged()));\r\n        if (options.automaticLayout) {\r\n            this._elementSizeObserver.startObserving();\r\n        }\r\n        this._diffComputationResult = null;\r\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {});\r\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {});\r\n        this._originalOverviewRuler = null;\r\n        this._modifiedOverviewRuler = null;\r\n        this._reviewPane = new DiffReview(this);\r\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\r\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\r\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\r\n        // enableSplitViewResizing\r\n        this._enableSplitViewResizing = true;\r\n        if (typeof options.enableSplitViewResizing !== 'undefined') {\r\n            this._enableSplitViewResizing = options.enableSplitViewResizing;\r\n        }\r\n        if (this._renderSideBySide) {\r\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\r\n        }\r\n        else {\r\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\r\n        }\r\n        this._register(themeService.onDidColorThemeChange(t => {\r\n            if (this._strategy && this._strategy.applyColors(t)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        }));\r\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\r\n        for (const desc of contributions) {\r\n            try {\r\n                this._register(instantiationService.createInstance(desc.ctor, this));\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n        }\r\n        this._codeEditorService.addDiffEditor(this);\r\n    }\r\n    _setState(newState) {\r\n        if (this._state === newState) {\r\n            return;\r\n        }\r\n        this._state = newState;\r\n        if (this._updatingDiffProgress) {\r\n            this._updatingDiffProgress.done();\r\n            this._updatingDiffProgress = null;\r\n        }\r\n        if (this._state === 1 /* ComputingDiff */) {\r\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\r\n        }\r\n    }\r\n    diffReviewNext() {\r\n        this._reviewPane.next();\r\n    }\r\n    diffReviewPrev() {\r\n        this._reviewPane.prev();\r\n    }\r\n    static _getClassName(theme, renderSideBySide) {\r\n        let result = 'monaco-diff-editor monaco-editor-background ';\r\n        if (renderSideBySide) {\r\n            result += 'side-by-side ';\r\n        }\r\n        result += getThemeTypeSelector(theme.type);\r\n        return result;\r\n    }\r\n    _recreateOverviewRulers() {\r\n        if (!this._renderOverviewRuler) {\r\n            return;\r\n        }\r\n        if (this._originalOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\r\n            this._originalOverviewRuler.dispose();\r\n        }\r\n        if (this._originalEditor.hasModel()) {\r\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\r\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\r\n        }\r\n        if (this._modifiedOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\r\n            this._modifiedOverviewRuler.dispose();\r\n        }\r\n        if (this._modifiedEditor.hasModel()) {\r\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\r\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\r\n        }\r\n        this._layoutOverviewRulers();\r\n    }\r\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\r\n        const editor = this._createInnerEditor(this._instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\r\n        this._register(editor.onDidScrollChange((e) => {\r\n            if (this._isHandlingScrollEvent) {\r\n                return;\r\n            }\r\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\r\n                return;\r\n            }\r\n            this._isHandlingScrollEvent = true;\r\n            this._modifiedEditor.setScrollPosition({\r\n                scrollLeft: e.scrollLeft,\r\n                scrollTop: e.scrollTop\r\n            });\r\n            this._isHandlingScrollEvent = false;\r\n            this._layoutOverviewViewport();\r\n        }));\r\n        this._register(editor.onDidChangeViewZones(() => {\r\n            this._onViewZonesChanged();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (!editor.getModel()) {\r\n                return;\r\n            }\r\n            if (e.hasChanged(41 /* fontInfo */)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            if (e.hasChanged(130 /* wrappingInfo */)) {\r\n                this._updateDecorationsRunner.cancel();\r\n                this._updateDecorations();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }));\r\n        const isInDiffLeftEditorKey = this._contextKeyService.createKey('isInDiffLeftEditor', editor.hasWidgetFocus());\r\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\r\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\r\n        this._register(editor.onDidContentSizeChange(e => {\r\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\r\n            this._onDidContentSizeChange.fire({\r\n                contentHeight: height,\r\n                contentWidth: width,\r\n                contentHeightChanged: e.contentHeightChanged,\r\n                contentWidthChanged: e.contentWidthChanged\r\n            });\r\n        }));\r\n        return editor;\r\n    }\r\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\r\n        const editor = this._createInnerEditor(this._instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\r\n        this._register(editor.onDidScrollChange((e) => {\r\n            if (this._isHandlingScrollEvent) {\r\n                return;\r\n            }\r\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\r\n                return;\r\n            }\r\n            this._isHandlingScrollEvent = true;\r\n            this._originalEditor.setScrollPosition({\r\n                scrollLeft: e.scrollLeft,\r\n                scrollTop: e.scrollTop\r\n            });\r\n            this._isHandlingScrollEvent = false;\r\n            this._layoutOverviewViewport();\r\n        }));\r\n        this._register(editor.onDidChangeViewZones(() => {\r\n            this._onViewZonesChanged();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (!editor.getModel()) {\r\n                return;\r\n            }\r\n            if (e.hasChanged(41 /* fontInfo */)) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n            if (e.hasChanged(130 /* wrappingInfo */)) {\r\n                this._updateDecorationsRunner.cancel();\r\n                this._updateDecorations();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModelOptions((e) => {\r\n            if (e.tabSize) {\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n        }));\r\n        const isInDiffRightEditorKey = this._contextKeyService.createKey('isInDiffRightEditor', editor.hasWidgetFocus());\r\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\r\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\r\n        this._register(editor.onDidContentSizeChange(e => {\r\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\r\n            this._onDidContentSizeChange.fire({\r\n                contentHeight: height,\r\n                contentWidth: width,\r\n                contentHeightChanged: e.contentHeightChanged,\r\n                contentWidthChanged: e.contentWidthChanged\r\n            });\r\n        }));\r\n        return editor;\r\n    }\r\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\r\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\r\n    }\r\n    dispose() {\r\n        this._codeEditorService.removeDiffEditor(this);\r\n        if (this._beginUpdateDecorationsTimeout !== -1) {\r\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\r\n            this._beginUpdateDecorationsTimeout = -1;\r\n        }\r\n        this._cleanViewZonesAndDecorations();\r\n        if (this._originalOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\r\n            this._originalOverviewRuler.dispose();\r\n        }\r\n        if (this._modifiedOverviewRuler) {\r\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\r\n            this._modifiedOverviewRuler.dispose();\r\n        }\r\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\r\n        if (this._renderOverviewRuler) {\r\n            this._containerDomElement.removeChild(this._overviewDomElement);\r\n        }\r\n        this._containerDomElement.removeChild(this._originalDomNode);\r\n        this._originalEditor.dispose();\r\n        this._containerDomElement.removeChild(this._modifiedDomNode);\r\n        this._modifiedEditor.dispose();\r\n        this._strategy.dispose();\r\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\r\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\r\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\r\n        this._reviewPane.dispose();\r\n        this._domElement.removeChild(this._containerDomElement);\r\n        this._onDidDispose.fire();\r\n        super.dispose();\r\n    }\r\n    //------------ begin IDiffEditor methods\r\n    getId() {\r\n        return this.getEditorType() + ':' + this._id;\r\n    }\r\n    getEditorType() {\r\n        return editorCommon.EditorType.IDiffEditor;\r\n    }\r\n    getLineChanges() {\r\n        if (!this._diffComputationResult) {\r\n            return null;\r\n        }\r\n        return this._diffComputationResult.changes;\r\n    }\r\n    getOriginalEditor() {\r\n        return this._originalEditor;\r\n    }\r\n    getModifiedEditor() {\r\n        return this._modifiedEditor;\r\n    }\r\n    updateOptions(newOptions) {\r\n        // Handle side by side\r\n        let renderSideBySideChanged = false;\r\n        if (typeof newOptions.renderSideBySide !== 'undefined') {\r\n            if (this._renderSideBySide !== newOptions.renderSideBySide) {\r\n                this._renderSideBySide = newOptions.renderSideBySide;\r\n                renderSideBySideChanged = true;\r\n            }\r\n        }\r\n        if (typeof newOptions.maxComputationTime !== 'undefined') {\r\n            this._maxComputationTime = newOptions.maxComputationTime;\r\n            if (this._isVisible) {\r\n                this._beginUpdateDecorationsSoon();\r\n            }\r\n        }\r\n        let beginUpdateDecorations = false;\r\n        if (typeof newOptions.ignoreTrimWhitespace !== 'undefined') {\r\n            if (this._ignoreTrimWhitespace !== newOptions.ignoreTrimWhitespace) {\r\n                this._ignoreTrimWhitespace = newOptions.ignoreTrimWhitespace;\r\n                // Begin comparing\r\n                beginUpdateDecorations = true;\r\n            }\r\n        }\r\n        if (typeof newOptions.renderIndicators !== 'undefined') {\r\n            if (this._renderIndicators !== newOptions.renderIndicators) {\r\n                this._renderIndicators = newOptions.renderIndicators;\r\n                beginUpdateDecorations = true;\r\n            }\r\n        }\r\n        if (beginUpdateDecorations) {\r\n            this._beginUpdateDecorations();\r\n        }\r\n        this._originalIsEditable = validateBooleanOption(newOptions.originalEditable, this._originalIsEditable);\r\n        this._diffCodeLens = validateBooleanOption(newOptions.diffCodeLens, this._diffCodeLens);\r\n        this._diffWordWrap = validateDiffWordWrap(newOptions.diffWordWrap, this._diffWordWrap);\r\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(newOptions));\r\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(newOptions));\r\n        // enableSplitViewResizing\r\n        if (typeof newOptions.enableSplitViewResizing !== 'undefined') {\r\n            this._enableSplitViewResizing = newOptions.enableSplitViewResizing;\r\n        }\r\n        this._strategy.setEnableSplitViewResizing(this._enableSplitViewResizing);\r\n        // renderSideBySide\r\n        if (renderSideBySideChanged) {\r\n            if (this._renderSideBySide) {\r\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\r\n            }\r\n            else {\r\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\r\n            }\r\n            // Update class name\r\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._renderSideBySide);\r\n        }\r\n        // renderOverviewRuler\r\n        if (typeof newOptions.renderOverviewRuler !== 'undefined' && this._renderOverviewRuler !== newOptions.renderOverviewRuler) {\r\n            this._renderOverviewRuler = newOptions.renderOverviewRuler;\r\n            if (this._renderOverviewRuler) {\r\n                this._containerDomElement.appendChild(this._overviewDomElement);\r\n            }\r\n            else {\r\n                this._containerDomElement.removeChild(this._overviewDomElement);\r\n            }\r\n        }\r\n    }\r\n    getModel() {\r\n        return {\r\n            original: this._originalEditor.getModel(),\r\n            modified: this._modifiedEditor.getModel()\r\n        };\r\n    }\r\n    setModel(model) {\r\n        // Guard us against partial null model\r\n        if (model && (!model.original || !model.modified)) {\r\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\r\n        }\r\n        // Remove all view zones & decorations\r\n        this._cleanViewZonesAndDecorations();\r\n        // Update code editor models\r\n        this._originalEditor.setModel(model ? model.original : null);\r\n        this._modifiedEditor.setModel(model ? model.modified : null);\r\n        this._updateDecorationsRunner.cancel();\r\n        // this.originalEditor.onDidChangeModelOptions\r\n        if (model) {\r\n            this._originalEditor.setScrollTop(0);\r\n            this._modifiedEditor.setScrollTop(0);\r\n        }\r\n        // Disable any diff computations that will come in\r\n        this._diffComputationResult = null;\r\n        this._diffComputationToken++;\r\n        this._setState(0 /* Idle */);\r\n        if (model) {\r\n            this._recreateOverviewRulers();\r\n            // Begin comparing\r\n            this._beginUpdateDecorations();\r\n        }\r\n        this._layoutOverviewViewport();\r\n    }\r\n    getDomNode() {\r\n        return this._domElement;\r\n    }\r\n    getVisibleColumnFromPosition(position) {\r\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\r\n    }\r\n    getPosition() {\r\n        return this._modifiedEditor.getPosition();\r\n    }\r\n    setPosition(position) {\r\n        this._modifiedEditor.setPosition(position);\r\n    }\r\n    revealLine(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\r\n    }\r\n    revealLineInCenter(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\r\n    }\r\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\r\n    }\r\n    revealLineNearTop(lineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\r\n    }\r\n    revealPosition(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPosition(position, scrollType);\r\n    }\r\n    revealPositionInCenter(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\r\n    }\r\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\r\n    }\r\n    revealPositionNearTop(position, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\r\n    }\r\n    getSelection() {\r\n        return this._modifiedEditor.getSelection();\r\n    }\r\n    getSelections() {\r\n        return this._modifiedEditor.getSelections();\r\n    }\r\n    setSelection(something) {\r\n        this._modifiedEditor.setSelection(something);\r\n    }\r\n    setSelections(ranges) {\r\n        this._modifiedEditor.setSelections(ranges);\r\n    }\r\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\r\n    }\r\n    revealRange(range, scrollType = 0 /* Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\r\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\r\n    }\r\n    revealRangeInCenter(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\r\n    }\r\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\r\n    }\r\n    revealRangeNearTop(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\r\n    }\r\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\r\n    }\r\n    revealRangeAtTop(range, scrollType = 0 /* Smooth */) {\r\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\r\n    }\r\n    getSupportedActions() {\r\n        return this._modifiedEditor.getSupportedActions();\r\n    }\r\n    saveViewState() {\r\n        const originalViewState = this._originalEditor.saveViewState();\r\n        const modifiedViewState = this._modifiedEditor.saveViewState();\r\n        return {\r\n            original: originalViewState,\r\n            modified: modifiedViewState\r\n        };\r\n    }\r\n    restoreViewState(s) {\r\n        if (s && s.original && s.modified) {\r\n            const diffEditorState = s;\r\n            this._originalEditor.restoreViewState(diffEditorState.original);\r\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\r\n        }\r\n    }\r\n    layout(dimension) {\r\n        this._elementSizeObserver.observe(dimension);\r\n    }\r\n    focus() {\r\n        this._modifiedEditor.focus();\r\n    }\r\n    hasTextFocus() {\r\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\r\n    }\r\n    trigger(source, handlerId, payload) {\r\n        this._modifiedEditor.trigger(source, handlerId, payload);\r\n    }\r\n    changeDecorations(callback) {\r\n        return this._modifiedEditor.changeDecorations(callback);\r\n    }\r\n    //------------ end IDiffEditor methods\r\n    //------------ begin layouting methods\r\n    _onDidContainerSizeChanged() {\r\n        this._doLayout();\r\n    }\r\n    _getReviewHeight() {\r\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\r\n    }\r\n    _layoutOverviewRulers() {\r\n        if (!this._renderOverviewRuler) {\r\n            return;\r\n        }\r\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\r\n            return;\r\n        }\r\n        const height = this._elementSizeObserver.getHeight();\r\n        const reviewHeight = this._getReviewHeight();\r\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\r\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\r\n        if (layoutInfo) {\r\n            this._originalOverviewRuler.setLayout({\r\n                top: 0,\r\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                height: (height - reviewHeight)\r\n            });\r\n            this._modifiedOverviewRuler.setLayout({\r\n                top: 0,\r\n                right: 0,\r\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\r\n                height: (height - reviewHeight)\r\n            });\r\n        }\r\n    }\r\n    //------------ end layouting methods\r\n    _onViewZonesChanged() {\r\n        if (this._currentlyChangingViewZones) {\r\n            return;\r\n        }\r\n        this._updateDecorationsRunner.schedule();\r\n    }\r\n    _beginUpdateDecorationsSoon() {\r\n        // Clear previous timeout if necessary\r\n        if (this._beginUpdateDecorationsTimeout !== -1) {\r\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\r\n            this._beginUpdateDecorationsTimeout = -1;\r\n        }\r\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\r\n    }\r\n    static _equals(a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        return (a.toString() === b.toString());\r\n    }\r\n    _beginUpdateDecorations() {\r\n        this._beginUpdateDecorationsTimeout = -1;\r\n        const currentOriginalModel = this._originalEditor.getModel();\r\n        const currentModifiedModel = this._modifiedEditor.getModel();\r\n        if (!currentOriginalModel || !currentModifiedModel) {\r\n            return;\r\n        }\r\n        // Prevent old diff requests to come if a new request has been initiated\r\n        // The best method would be to call cancel on the Promise, but this is not\r\n        // yet supported, so using tokens for now.\r\n        this._diffComputationToken++;\r\n        const currentToken = this._diffComputationToken;\r\n        this._setState(1 /* ComputingDiff */);\r\n        if (!this._editorWorkerService.canComputeDiff(currentOriginalModel.uri, currentModifiedModel.uri)) {\r\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\r\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\r\n                this._lastOriginalWarning = currentOriginalModel.uri;\r\n                this._lastModifiedWarning = currentModifiedModel.uri;\r\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\r\n            }\r\n            return;\r\n        }\r\n        this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._ignoreTrimWhitespace, this._maxComputationTime).then((result) => {\r\n            if (currentToken === this._diffComputationToken\r\n                && currentOriginalModel === this._originalEditor.getModel()\r\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\r\n                this._setState(2 /* DiffComputed */);\r\n                this._diffComputationResult = result;\r\n                this._updateDecorationsRunner.schedule();\r\n                this._onDidUpdateDiff.fire();\r\n            }\r\n        }, (error) => {\r\n            if (currentToken === this._diffComputationToken\r\n                && currentOriginalModel === this._originalEditor.getModel()\r\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\r\n                this._setState(2 /* DiffComputed */);\r\n                this._diffComputationResult = null;\r\n                this._updateDecorationsRunner.schedule();\r\n            }\r\n        });\r\n    }\r\n    _cleanViewZonesAndDecorations() {\r\n        this._originalEditorState.clean(this._originalEditor);\r\n        this._modifiedEditorState.clean(this._modifiedEditor);\r\n    }\r\n    _updateDecorations() {\r\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\r\n            return;\r\n        }\r\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\r\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\r\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\r\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._ignoreTrimWhitespace, this._renderIndicators, foreignOriginal, foreignModified);\r\n        try {\r\n            this._currentlyChangingViewZones = true;\r\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\r\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\r\n        }\r\n        finally {\r\n            this._currentlyChangingViewZones = false;\r\n        }\r\n    }\r\n    _adjustOptionsForSubEditor(options) {\r\n        const clonedOptions = Object.assign({}, options);\r\n        clonedOptions.inDiffEditor = true;\r\n        clonedOptions.automaticLayout = false;\r\n        // Clone scrollbar options before changing them\r\n        clonedOptions.scrollbar = Object.assign({}, (clonedOptions.scrollbar || {}));\r\n        clonedOptions.scrollbar.vertical = 'visible';\r\n        clonedOptions.folding = false;\r\n        clonedOptions.codeLens = this._diffCodeLens;\r\n        clonedOptions.fixedOverflowWidgets = true;\r\n        // clonedOptions.lineDecorationsWidth = '2ch';\r\n        // Clone minimap options before changing them\r\n        clonedOptions.minimap = Object.assign({}, (clonedOptions.minimap || {}));\r\n        clonedOptions.minimap.enabled = false;\r\n        return clonedOptions;\r\n    }\r\n    _adjustOptionsForLeftHandSide(options) {\r\n        const result = this._adjustOptionsForSubEditor(options);\r\n        if (!this._renderSideBySide) {\r\n            // never wrap hidden editor\r\n            result.wordWrapOverride1 = 'off';\r\n        }\r\n        else {\r\n            result.wordWrapOverride1 = this._diffWordWrap;\r\n        }\r\n        if (options.originalAriaLabel) {\r\n            result.ariaLabel = options.originalAriaLabel;\r\n        }\r\n        result.readOnly = !this._originalIsEditable;\r\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\r\n        return Object.assign(Object.assign({}, result), { dimension: {\r\n                height: 0,\r\n                width: 0\r\n            } });\r\n    }\r\n    _adjustOptionsForRightHandSide(options) {\r\n        const result = this._adjustOptionsForSubEditor(options);\r\n        if (options.modifiedAriaLabel) {\r\n            result.ariaLabel = options.modifiedAriaLabel;\r\n        }\r\n        result.wordWrapOverride1 = this._diffWordWrap;\r\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\r\n        result.scrollbar.verticalHasArrows = false;\r\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\r\n        return Object.assign(Object.assign({}, result), { dimension: {\r\n                height: 0,\r\n                width: 0\r\n            } });\r\n    }\r\n    doLayout() {\r\n        this._elementSizeObserver.observe();\r\n        this._doLayout();\r\n    }\r\n    _doLayout() {\r\n        const width = this._elementSizeObserver.getWidth();\r\n        const height = this._elementSizeObserver.getHeight();\r\n        const reviewHeight = this._getReviewHeight();\r\n        const splitPoint = this._strategy.layout();\r\n        this._originalDomNode.style.width = splitPoint + 'px';\r\n        this._originalDomNode.style.left = '0px';\r\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\r\n        this._modifiedDomNode.style.left = splitPoint + 'px';\r\n        this._overviewDomElement.style.top = '0px';\r\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\r\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\r\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\r\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\r\n        this._overviewViewportDomElement.setHeight(30);\r\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\r\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\r\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\r\n            this._layoutOverviewRulers();\r\n        }\r\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\r\n        this._layoutOverviewViewport();\r\n    }\r\n    _layoutOverviewViewport() {\r\n        const layout = this._computeOverviewViewport();\r\n        if (!layout) {\r\n            this._overviewViewportDomElement.setTop(0);\r\n            this._overviewViewportDomElement.setHeight(0);\r\n        }\r\n        else {\r\n            this._overviewViewportDomElement.setTop(layout.top);\r\n            this._overviewViewportDomElement.setHeight(layout.height);\r\n        }\r\n    }\r\n    _computeOverviewViewport() {\r\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\r\n        if (!layoutInfo) {\r\n            return null;\r\n        }\r\n        const scrollTop = this._modifiedEditor.getScrollTop();\r\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\r\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\r\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\r\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\r\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\r\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\r\n        return {\r\n            height: computedSliderSize,\r\n            top: computedSliderPosition\r\n        };\r\n    }\r\n    _createDataSource() {\r\n        return {\r\n            getWidth: () => {\r\n                return this._elementSizeObserver.getWidth();\r\n            },\r\n            getHeight: () => {\r\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\r\n            },\r\n            getOptions: () => {\r\n                return {\r\n                    renderOverviewRuler: this._renderOverviewRuler\r\n                };\r\n            },\r\n            getContainerDomNode: () => {\r\n                return this._containerDomElement;\r\n            },\r\n            relayoutEditors: () => {\r\n                this._doLayout();\r\n            },\r\n            getOriginalEditor: () => {\r\n                return this._originalEditor;\r\n            },\r\n            getModifiedEditor: () => {\r\n                return this._modifiedEditor;\r\n            }\r\n        };\r\n    }\r\n    _setStrategy(newStrategy) {\r\n        if (this._strategy) {\r\n            this._strategy.dispose();\r\n        }\r\n        this._strategy = newStrategy;\r\n        newStrategy.applyColors(this._themeService.getColorTheme());\r\n        if (this._diffComputationResult) {\r\n            this._updateDecorations();\r\n        }\r\n        // Just do a layout, the strategy might need it\r\n        this._doLayout();\r\n    }\r\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\r\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\r\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\r\n            // There are no changes or `lineNumber` is before the first change\r\n            return null;\r\n        }\r\n        let min = 0;\r\n        let max = lineChanges.length - 1;\r\n        while (min < max) {\r\n            const mid = Math.floor((min + max) / 2);\r\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\r\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n            if (lineNumber < midStart) {\r\n                max = mid - 1;\r\n            }\r\n            else if (lineNumber >= midEnd) {\r\n                min = mid + 1;\r\n            }\r\n            else {\r\n                // HIT!\r\n                min = mid;\r\n                max = mid;\r\n            }\r\n        }\r\n        return lineChanges[min];\r\n    }\r\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\r\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\r\n        if (!lineChange) {\r\n            return lineNumber;\r\n        }\r\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\r\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\r\n        const delta = lineNumber - originalEquivalentLineNumber;\r\n        if (delta <= lineChangeOriginalLength) {\r\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\r\n        }\r\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\r\n    }\r\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\r\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\r\n        if (!lineChange) {\r\n            return lineNumber;\r\n        }\r\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\r\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\r\n        const delta = lineNumber - modifiedEquivalentLineNumber;\r\n        if (delta <= lineChangeModifiedLength) {\r\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\r\n        }\r\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\r\n    }\r\n    getDiffLineInformationForOriginal(lineNumber) {\r\n        if (!this._diffComputationResult) {\r\n            // Cannot answer that which I don't know\r\n            return null;\r\n        }\r\n        return {\r\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\r\n        };\r\n    }\r\n    getDiffLineInformationForModified(lineNumber) {\r\n        if (!this._diffComputationResult) {\r\n            // Cannot answer that which I don't know\r\n            return null;\r\n        }\r\n        return {\r\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\r\n        };\r\n    }\r\n};\r\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\r\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\r\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\r\nDiffEditorWidget = __decorate([\r\n    __param(3, IClipboardService),\r\n    __param(4, IEditorWorkerService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IInstantiationService),\r\n    __param(7, ICodeEditorService),\r\n    __param(8, IThemeService),\r\n    __param(9, INotificationService),\r\n    __param(10, IContextMenuService),\r\n    __param(11, IEditorProgressService)\r\n], DiffEditorWidget);\r\nexport { DiffEditorWidget };\r\nclass DiffEditorWidgetStyle extends Disposable {\r\n    constructor(dataSource) {\r\n        super();\r\n        this._dataSource = dataSource;\r\n        this._insertColor = null;\r\n        this._removeColor = null;\r\n    }\r\n    applyColors(theme) {\r\n        const newInsertColor = (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\r\n        const newRemoveColor = (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\r\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\r\n        this._insertColor = newInsertColor;\r\n        this._removeColor = newRemoveColor;\r\n        return hasChanges;\r\n    }\r\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalWhitespaces, modifiedWhitespaces) {\r\n        // Get view zones\r\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\r\n        // Get decorations & overview ruler zones\r\n        const originalDecorations = this._getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\r\n        const modifiedDecorations = this._getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\r\n        return {\r\n            original: {\r\n                decorations: originalDecorations.decorations,\r\n                overviewZones: originalDecorations.overviewZones,\r\n                zones: zones.original\r\n            },\r\n            modified: {\r\n                decorations: modifiedDecorations.decorations,\r\n                overviewZones: modifiedDecorations.overviewZones,\r\n                zones: zones.modified\r\n            }\r\n        };\r\n    }\r\n}\r\nclass ForeignViewZonesIterator {\r\n    constructor(source) {\r\n        this._source = source;\r\n        this._index = -1;\r\n        this.current = null;\r\n        this.advance();\r\n    }\r\n    advance() {\r\n        this._index++;\r\n        if (this._index < this._source.length) {\r\n            this.current = this._source[this._index];\r\n        }\r\n        else {\r\n            this.current = null;\r\n        }\r\n    }\r\n}\r\nclass ViewZonesComputer {\r\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\r\n        this._lineChanges = _lineChanges;\r\n        this._originalForeignVZ = _originalForeignVZ;\r\n        this._modifiedForeignVZ = _modifiedForeignVZ;\r\n        this._originalEditor = _originalEditor;\r\n        this._modifiedEditor = _modifiedEditor;\r\n    }\r\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\r\n        const model = editor.getModel();\r\n        const viewModel = editor._getViewModel();\r\n        if (model && viewModel) {\r\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\r\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\r\n        }\r\n        return (endLineNumber - startLineNumber + 1);\r\n    }\r\n    getViewZones() {\r\n        const originalLineHeight = this._originalEditor.getOption(57 /* lineHeight */);\r\n        const modifiedLineHeight = this._modifiedEditor.getOption(57 /* lineHeight */);\r\n        const originalHasWrapping = (this._originalEditor.getOption(130 /* wrappingInfo */).wrappingColumn !== -1);\r\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(130 /* wrappingInfo */).wrappingColumn !== -1);\r\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\r\n        const originalModel = this._originalEditor.getModel();\r\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\r\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\r\n        const result = {\r\n            original: [],\r\n            modified: []\r\n        };\r\n        let lineChangeModifiedLength = 0;\r\n        let lineChangeOriginalLength = 0;\r\n        let originalEquivalentLineNumber = 0;\r\n        let modifiedEquivalentLineNumber = 0;\r\n        let originalEndEquivalentLineNumber = 0;\r\n        let modifiedEndEquivalentLineNumber = 0;\r\n        const sortMyViewZones = (a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        };\r\n        const addAndCombineIfPossible = (destination, item) => {\r\n            if (item.domNode === null && destination.length > 0) {\r\n                const lastItem = destination[destination.length - 1];\r\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\r\n                    lastItem.heightInLines += item.heightInLines;\r\n                    return;\r\n                }\r\n            }\r\n            destination.push(item);\r\n        };\r\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\r\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\r\n        let lastOriginalLineNumber = 1;\r\n        let lastModifiedLineNumber = 1;\r\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\r\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\r\n            const lineChange = (i < length ? this._lineChanges[i] : null);\r\n            if (lineChange !== null) {\r\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\r\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\r\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\r\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\r\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n            }\r\n            else {\r\n                // Increase to very large value to get the producing tests of foreign view zones running\r\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\r\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\r\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\r\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\r\n            }\r\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\r\n            let stepOriginal = [];\r\n            let stepModified = [];\r\n            // ---------------------------- PRODUCE VIEW ZONES\r\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\r\n            if (hasWrapping) {\r\n                let count;\r\n                if (lineChange) {\r\n                    if (lineChange.originalEndLineNumber > 0) {\r\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\r\n                    }\r\n                    else {\r\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\r\n                    }\r\n                }\r\n                else {\r\n                    count = originalModel.getLineCount() - lastOriginalLineNumber;\r\n                }\r\n                for (let i = 0; i < count; i++) {\r\n                    const originalLineNumber = lastOriginalLineNumber + i;\r\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\r\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\r\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\r\n                    if (originalViewLineCount < modifiedViewLineCount) {\r\n                        stepOriginal.push({\r\n                            afterLineNumber: originalLineNumber,\r\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\r\n                            domNode: null,\r\n                            marginDomNode: null\r\n                        });\r\n                    }\r\n                    else if (originalViewLineCount > modifiedViewLineCount) {\r\n                        stepModified.push({\r\n                            afterLineNumber: modifiedLineNumber,\r\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\r\n                            domNode: null,\r\n                            marginDomNode: null\r\n                        });\r\n                    }\r\n                }\r\n                if (lineChange) {\r\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\r\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\r\n                }\r\n            }\r\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\r\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\r\n                let viewZoneLineNumber;\r\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\r\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\r\n                }\r\n                else {\r\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\r\n                }\r\n                let marginDomNode = null;\r\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\r\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\r\n                }\r\n                stepOriginal.push({\r\n                    afterLineNumber: viewZoneLineNumber,\r\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\r\n                    domNode: null,\r\n                    marginDomNode: marginDomNode\r\n                });\r\n                modifiedForeignVZ.advance();\r\n            }\r\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\r\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\r\n                let viewZoneLineNumber;\r\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\r\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\r\n                }\r\n                else {\r\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\r\n                }\r\n                stepModified.push({\r\n                    afterLineNumber: viewZoneLineNumber,\r\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\r\n                    domNode: null\r\n                });\r\n                originalForeignVZ.advance();\r\n            }\r\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\r\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\r\n                if (r) {\r\n                    stepOriginal.push(r);\r\n                }\r\n            }\r\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\r\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\r\n                if (r) {\r\n                    stepModified.push(r);\r\n                }\r\n            }\r\n            // ---------------------------- END PRODUCE VIEW ZONES\r\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\r\n            // [CANCEL & EMIT] Try to cancel view zones out\r\n            let stepOriginalIndex = 0;\r\n            let stepModifiedIndex = 0;\r\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\r\n            stepModified = stepModified.sort(sortMyViewZones);\r\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\r\n                const original = stepOriginal[stepOriginalIndex];\r\n                const modified = stepModified[stepModifiedIndex];\r\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\r\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\r\n                if (originalDelta < modifiedDelta) {\r\n                    addAndCombineIfPossible(result.original, original);\r\n                    stepOriginalIndex++;\r\n                }\r\n                else if (modifiedDelta < originalDelta) {\r\n                    addAndCombineIfPossible(result.modified, modified);\r\n                    stepModifiedIndex++;\r\n                }\r\n                else if (original.shouldNotShrink) {\r\n                    addAndCombineIfPossible(result.original, original);\r\n                    stepOriginalIndex++;\r\n                }\r\n                else if (modified.shouldNotShrink) {\r\n                    addAndCombineIfPossible(result.modified, modified);\r\n                    stepModifiedIndex++;\r\n                }\r\n                else {\r\n                    if (original.heightInLines >= modified.heightInLines) {\r\n                        // modified view zone gets removed\r\n                        original.heightInLines -= modified.heightInLines;\r\n                        stepModifiedIndex++;\r\n                    }\r\n                    else {\r\n                        // original view zone gets removed\r\n                        modified.heightInLines -= original.heightInLines;\r\n                        stepOriginalIndex++;\r\n                    }\r\n                }\r\n            }\r\n            // [EMIT] Remaining original view zones\r\n            while (stepOriginalIndex < stepOriginal.length) {\r\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\r\n                stepOriginalIndex++;\r\n            }\r\n            // [EMIT] Remaining modified view zones\r\n            while (stepModifiedIndex < stepModified.length) {\r\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\r\n                stepModifiedIndex++;\r\n            }\r\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\r\n        }\r\n        return {\r\n            original: ViewZonesComputer._ensureDomNodes(result.original),\r\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\r\n        };\r\n    }\r\n    static _ensureDomNodes(zones) {\r\n        return zones.map((z) => {\r\n            if (!z.domNode) {\r\n                z.domNode = createFakeLinesDiv();\r\n            }\r\n            return z;\r\n        });\r\n    }\r\n}\r\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\r\n    return {\r\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\r\n        options: options\r\n    };\r\n}\r\nconst DECORATIONS = {\r\n    charDelete: ModelDecorationOptions.register({\r\n        description: 'diff-editor-char-delete',\r\n        className: 'char-delete'\r\n    }),\r\n    charDeleteWholeLine: ModelDecorationOptions.register({\r\n        description: 'diff-editor-char-delete-whole-line',\r\n        className: 'char-delete',\r\n        isWholeLine: true\r\n    }),\r\n    charInsert: ModelDecorationOptions.register({\r\n        description: 'diff-editor-char-insert',\r\n        className: 'char-insert'\r\n    }),\r\n    charInsertWholeLine: ModelDecorationOptions.register({\r\n        description: 'diff-editor-char-insert-whole-line',\r\n        className: 'char-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineInsert: ModelDecorationOptions.register({\r\n        description: 'diff-editor-line-insert',\r\n        className: 'line-insert',\r\n        marginClassName: 'line-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineInsertWithSign: ModelDecorationOptions.register({\r\n        description: 'diff-editor-line-insert-with-sign',\r\n        className: 'line-insert',\r\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\r\n        marginClassName: 'line-insert',\r\n        isWholeLine: true\r\n    }),\r\n    lineDelete: ModelDecorationOptions.register({\r\n        description: 'diff-editor-line-delete',\r\n        className: 'line-delete',\r\n        marginClassName: 'line-delete',\r\n        isWholeLine: true\r\n    }),\r\n    lineDeleteWithSign: ModelDecorationOptions.register({\r\n        description: 'diff-editor-line-delete-with-sign',\r\n        className: 'line-delete',\r\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\r\n        marginClassName: 'line-delete',\r\n        isWholeLine: true\r\n    }),\r\n    lineDeleteMargin: ModelDecorationOptions.register({\r\n        description: 'diff-editor-line-delete-margin',\r\n        marginClassName: 'line-delete',\r\n    })\r\n};\r\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\r\n    constructor(dataSource, enableSplitViewResizing) {\r\n        super(dataSource);\r\n        this._disableSash = (enableSplitViewResizing === false);\r\n        this._sashRatio = null;\r\n        this._sashPosition = null;\r\n        this._startSashPosition = null;\r\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* VERTICAL */ }));\r\n        if (this._disableSash) {\r\n            this._sash.state = 0 /* Disabled */;\r\n        }\r\n        this._sash.onDidStart(() => this._onSashDragStart());\r\n        this._sash.onDidChange((e) => this._onSashDrag(e));\r\n        this._sash.onDidEnd(() => this._onSashDragEnd());\r\n        this._sash.onDidReset(() => this._onSashReset());\r\n    }\r\n    setEnableSplitViewResizing(enableSplitViewResizing) {\r\n        const newDisableSash = (enableSplitViewResizing === false);\r\n        if (this._disableSash !== newDisableSash) {\r\n            this._disableSash = newDisableSash;\r\n            this._sash.state = this._disableSash ? 0 /* Disabled */ : 3 /* Enabled */;\r\n        }\r\n    }\r\n    layout(sashRatio = this._sashRatio) {\r\n        const w = this._dataSource.getWidth();\r\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\r\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\r\n        const midPoint = Math.floor(0.5 * contentWidth);\r\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\r\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\r\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\r\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\r\n            }\r\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\r\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\r\n            }\r\n        }\r\n        else {\r\n            sashPosition = midPoint;\r\n        }\r\n        if (this._sashPosition !== sashPosition) {\r\n            this._sashPosition = sashPosition;\r\n            this._sash.layout();\r\n        }\r\n        return this._sashPosition;\r\n    }\r\n    _onSashDragStart() {\r\n        this._startSashPosition = this._sashPosition;\r\n    }\r\n    _onSashDrag(e) {\r\n        const w = this._dataSource.getWidth();\r\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\r\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\r\n        this._sashRatio = sashPosition / contentWidth;\r\n        this._dataSource.relayoutEditors();\r\n    }\r\n    _onSashDragEnd() {\r\n        this._sash.layout();\r\n    }\r\n    _onSashReset() {\r\n        this._sashRatio = 0.5;\r\n        this._dataSource.relayoutEditors();\r\n        this._sash.layout();\r\n    }\r\n    getVerticalSashTop(sash) {\r\n        return 0;\r\n    }\r\n    getVerticalSashLeft(sash) {\r\n        return this._sashPosition;\r\n    }\r\n    getVerticalSashHeight(sash) {\r\n        return this._dataSource.getHeight();\r\n    }\r\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n        return c.getViewZones();\r\n    }\r\n    _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const overviewZoneColor = String(this._removeColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const originalModel = originalEditor.getModel();\r\n        const originalViewModel = originalEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            if (isChangeOrDelete(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\r\n                });\r\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\r\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\r\n                }\r\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrDelete(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.originalStartLineNumber) {\r\n                                        startColumn = charChange.originalStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.originalEndLineNumber) {\r\n                                        endColumn = charChange.originalEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const overviewZoneColor = String(this._insertColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const modifiedModel = modifiedEditor.getModel();\r\n        const modifiedViewModel = modifiedEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            if (isChangeOrInsert(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\r\n                });\r\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\r\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\r\n                }\r\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrInsert(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\r\n                                        startColumn = charChange.modifiedStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\r\n                                        endColumn = charChange.modifiedEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\r\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\r\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\r\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n    }\r\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\r\n        return null;\r\n    }\r\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\r\n            return {\r\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\r\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\r\n                domNode: null\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\r\n            return {\r\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\r\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\r\n                domNode: null\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\r\n    constructor(dataSource, enableSplitViewResizing) {\r\n        super(dataSource);\r\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\r\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\r\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\r\n                this._decorationsLeft = layoutInfo.decorationsLeft;\r\n                dataSource.relayoutEditors();\r\n            }\r\n        }));\r\n    }\r\n    setEnableSplitViewResizing(enableSplitViewResizing) {\r\n        // Nothing to do..\r\n    }\r\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\r\n        return computer.getViewZones();\r\n    }\r\n    _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const overviewZoneColor = String(this._removeColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const originalEditor = this._dataSource.getOriginalEditor();\r\n        const originalModel = originalEditor.getModel();\r\n        const originalViewModel = originalEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            // Add overview zones in the overview ruler\r\n            if (isChangeOrDelete(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: DECORATIONS.lineDeleteMargin\r\n                });\r\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\r\n        const modifiedEditor = this._dataSource.getModifiedEditor();\r\n        const overviewZoneColor = String(this._insertColor);\r\n        const result = {\r\n            decorations: [],\r\n            overviewZones: []\r\n        };\r\n        const modifiedModel = modifiedEditor.getModel();\r\n        const modifiedViewModel = modifiedEditor._getViewModel();\r\n        for (const lineChange of lineChanges) {\r\n            // Add decorations & overview zones\r\n            if (isChangeOrInsert(lineChange)) {\r\n                result.decorations.push({\r\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\r\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\r\n                });\r\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\r\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\r\n                if (lineChange.charChanges) {\r\n                    for (const charChange of lineChange.charChanges) {\r\n                        if (isChangeOrInsert(charChange)) {\r\n                            if (ignoreTrimWhitespace) {\r\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\r\n                                    let startColumn;\r\n                                    let endColumn;\r\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\r\n                                        startColumn = charChange.modifiedStartColumn;\r\n                                    }\r\n                                    else {\r\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\r\n                                        endColumn = charChange.modifiedEndColumn;\r\n                                    }\r\n                                    else {\r\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\r\n                                    }\r\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\r\n                                }\r\n                            }\r\n                            else {\r\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    layout() {\r\n        // An editor should not be smaller than 5px\r\n        return Math.max(5, this._decorationsLeft);\r\n    }\r\n}\r\nclass InlineViewZonesComputer extends ViewZonesComputer {\r\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\r\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\r\n        this._originalModel = originalEditor.getModel();\r\n        this._renderIndicators = renderIndicators;\r\n        this._pendingLineChange = [];\r\n        this._pendingViewZones = [];\r\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\r\n    }\r\n    getViewZones() {\r\n        const result = super.getViewZones();\r\n        this._finalize(result);\r\n        return result;\r\n    }\r\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\r\n        const result = document.createElement('div');\r\n        result.className = 'inline-added-margin-view-zone';\r\n        return result;\r\n    }\r\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        const marginDomNode = document.createElement('div');\r\n        marginDomNode.className = 'inline-added-margin-view-zone';\r\n        return {\r\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\r\n            heightInLines: lineChangeModifiedLength,\r\n            domNode: document.createElement('div'),\r\n            marginDomNode: marginDomNode\r\n        };\r\n    }\r\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\r\n        const domNode = document.createElement('div');\r\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\r\n        const marginDomNode = document.createElement('div');\r\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\r\n        const viewZone = {\r\n            shouldNotShrink: true,\r\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\r\n            heightInLines: lineChangeOriginalLength,\r\n            minWidthInPx: 0,\r\n            domNode: domNode,\r\n            marginDomNode: marginDomNode,\r\n            diff: {\r\n                originalStartLineNumber: lineChange.originalStartLineNumber,\r\n                originalEndLineNumber: lineChange.originalEndLineNumber,\r\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\r\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\r\n                originalModel: this._originalModel,\r\n                viewLineCounts: null,\r\n            }\r\n        };\r\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\r\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null, null);\r\n        }\r\n        this._pendingLineChange.push(lineChange);\r\n        this._pendingViewZones.push(viewZone);\r\n        return viewZone;\r\n    }\r\n    _finalize(result) {\r\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\r\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\r\n        const fontInfo = modifiedEditorOptions.get(41 /* fontInfo */);\r\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(27 /* disableMonospaceOptimizations */);\r\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\r\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(92 /* scrollBeyondLastColumn */);\r\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\r\n        const mightContainRTL = this._originalModel.mightContainRTL();\r\n        const lineHeight = modifiedEditorOptions.get(57 /* lineHeight */);\r\n        const layoutInfo = modifiedEditorOptions.get(129 /* layoutInfo */);\r\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\r\n        const stopRenderingLineAfter = modifiedEditorOptions.get(104 /* stopRenderingLineAfter */);\r\n        const renderWhitespace = modifiedEditorOptions.get(87 /* renderWhitespace */);\r\n        const renderControlCharacters = modifiedEditorOptions.get(81 /* renderControlCharacters */);\r\n        const fontLigatures = modifiedEditorOptions.get(42 /* fontLigatures */);\r\n        const lineBreaks = this._lineBreaksComputer.finalize();\r\n        let lineBreakIndex = 0;\r\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\r\n            const lineChange = this._pendingLineChange[i];\r\n            const viewZone = this._pendingViewZones[i];\r\n            const domNode = viewZone.domNode;\r\n            Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n            const marginDomNode = viewZone.marginDomNode;\r\n            Configuration.applyFontInfoSlow(marginDomNode, fontInfo);\r\n            const decorations = [];\r\n            if (lineChange.charChanges) {\r\n                for (const charChange of lineChange.charChanges) {\r\n                    if (isChangeOrDelete(charChange)) {\r\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* Regular */));\r\n                    }\r\n                }\r\n            }\r\n            const hasCharChanges = (decorations.length > 0);\r\n            const sb = createStringBuilder(10000);\r\n            let maxCharsPerLine = 0;\r\n            let renderedLineCount = 0;\r\n            let viewLineCounts = null;\r\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\r\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\r\n                const lineTokens = this._originalModel.getLineTokens(lineNumber);\r\n                const lineContent = lineTokens.getLineContent();\r\n                const lineBreakData = lineBreaks[lineBreakIndex++];\r\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\r\n                if (lineBreakData) {\r\n                    let lastBreakOffset = 0;\r\n                    for (const breakOffset of lineBreakData.breakOffsets) {\r\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\r\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\r\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\r\n                        lastBreakOffset = breakOffset;\r\n                    }\r\n                    if (!viewLineCounts) {\r\n                        viewLineCounts = [];\r\n                    }\r\n                    // make sure all lines before this one have an entry in `viewLineCounts`\r\n                    while (viewLineCounts.length < lineIndex) {\r\n                        viewLineCounts[viewLineCounts.length] = 1;\r\n                    }\r\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\r\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\r\n                    const marginDomNode2 = document.createElement('div');\r\n                    marginDomNode2.className = 'line-delete';\r\n                    result.original.push({\r\n                        afterLineNumber: lineNumber,\r\n                        afterColumn: 0,\r\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\r\n                        domNode: createFakeLinesDiv(),\r\n                        marginDomNode: marginDomNode2\r\n                    });\r\n                }\r\n                else {\r\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\r\n                }\r\n            }\r\n            maxCharsPerLine += scrollBeyondLastColumn;\r\n            const html = sb.build();\r\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\r\n            domNode.innerHTML = trustedhtml;\r\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\r\n            if (viewLineCounts) {\r\n                // make sure all lines have an entry in `viewLineCounts`\r\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\r\n                while (viewLineCounts.length <= cnt) {\r\n                    viewLineCounts[viewLineCounts.length] = 1;\r\n                }\r\n            }\r\n            viewZone.diff.viewLineCounts = viewLineCounts;\r\n        }\r\n        result.original.sort((a, b) => {\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n    }\r\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\r\n        sb.appendASCIIString('<div class=\"view-line');\r\n        if (!hasCharChanges) {\r\n            // No char changes\r\n            sb.appendASCIIString(' char-delete');\r\n        }\r\n        sb.appendASCIIString('\" style=\"top:');\r\n        sb.appendASCIIString(String(renderedLineCount * lineHeight));\r\n        sb.appendASCIIString('px;width:1000000px;\">');\r\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\r\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\r\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\r\n        ), sb);\r\n        sb.appendASCIIString('</div>');\r\n        if (this._renderIndicators) {\r\n            const marginElement = document.createElement('div');\r\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\r\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\r\n            marginDomNode.appendChild(marginElement);\r\n        }\r\n        return output.characterMapping.getAbsoluteOffset(output.characterMapping.length);\r\n    }\r\n}\r\nfunction validateDiffWordWrap(value, defaultValue) {\r\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\r\n}\r\nfunction isChangeOrInsert(lineChange) {\r\n    return lineChange.modifiedEndLineNumber > 0;\r\n}\r\nfunction isChangeOrDelete(lineChange) {\r\n    return lineChange.originalEndLineNumber > 0;\r\n}\r\nfunction createFakeLinesDiv() {\r\n    const r = document.createElement('div');\r\n    r.className = 'diagonal-fill';\r\n    return r;\r\n}\r\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\r\n    const lineCount = model.getLineCount();\r\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\r\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\r\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const added = theme.getColor(diffInserted);\r\n    if (added) {\r\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { background-color: ${added}; }`);\r\n        collector.addRule(`.monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);\r\n        collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${added}; }`);\r\n    }\r\n    const removed = theme.getColor(diffRemoved);\r\n    if (removed) {\r\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { background-color: ${removed}; }`);\r\n        collector.addRule(`.monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);\r\n        collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${removed}; }`);\r\n    }\r\n    const addedOutline = theme.getColor(diffInsertedOutline);\r\n    if (addedOutline) {\r\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${addedOutline}; }`);\r\n    }\r\n    const removedOutline = theme.getColor(diffRemovedOutline);\r\n    if (removedOutline) {\r\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${removedOutline}; }`);\r\n    }\r\n    const shadow = theme.getColor(scrollbarShadow);\r\n    if (shadow) {\r\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);\r\n    }\r\n    const border = theme.getColor(diffBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);\r\n    }\r\n    const scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\r\n    if (scrollbarSliderBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\r\n    if (scrollbarSliderHoverBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\r\n    if (scrollbarSliderActiveBackgroundColor) {\r\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\r\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a;\r\nimport './media/diffReview.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { Action } from '../../../base/common/actions.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Configuration } from '../config/configuration.js';\r\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { editorLineNumbers } from '../../common/view/editorColorRegistry.js';\r\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nconst DIFF_LINES_PADDING = 3;\r\nclass DiffEntry {\r\n    constructor(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\r\n        this.originalLineStart = originalLineStart;\r\n        this.originalLineEnd = originalLineEnd;\r\n        this.modifiedLineStart = modifiedLineStart;\r\n        this.modifiedLineEnd = modifiedLineEnd;\r\n    }\r\n    getType() {\r\n        if (this.originalLineStart === 0) {\r\n            return 1 /* Insert */;\r\n        }\r\n        if (this.modifiedLineStart === 0) {\r\n            return 2 /* Delete */;\r\n        }\r\n        return 0 /* Equal */;\r\n    }\r\n}\r\nclass Diff {\r\n    constructor(entries) {\r\n        this.entries = entries;\r\n    }\r\n}\r\nconst diffReviewInsertIcon = registerIcon('diff-review-insert', Codicon.add, nls.localize('diffReviewInsertIcon', 'Icon for \\'Insert\\' in diff review.'));\r\nconst diffReviewRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, nls.localize('diffReviewRemoveIcon', 'Icon for \\'Remove\\' in diff review.'));\r\nconst diffReviewCloseIcon = registerIcon('diff-review-close', Codicon.close, nls.localize('diffReviewCloseIcon', 'Icon for \\'Close\\' in diff review.'));\r\nexport class DiffReview extends Disposable {\r\n    constructor(diffEditor) {\r\n        super();\r\n        this._width = 0;\r\n        this._diffEditor = diffEditor;\r\n        this._isVisible = false;\r\n        this.shadow = createFastDomNode(document.createElement('div'));\r\n        this.shadow.setClassName('diff-review-shadow');\r\n        this.actionBarContainer = createFastDomNode(document.createElement('div'));\r\n        this.actionBarContainer.setClassName('diff-review-actions');\r\n        this._actionBar = this._register(new ActionBar(this.actionBarContainer.domNode));\r\n        this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(diffReviewCloseIcon), true, () => __awaiter(this, void 0, void 0, function* () { return this.hide(); })), { label: false, icon: true });\r\n        this.domNode = createFastDomNode(document.createElement('div'));\r\n        this.domNode.setClassName('diff-review monaco-editor-background');\r\n        this._content = createFastDomNode(document.createElement('div'));\r\n        this._content.setClassName('diff-review-content');\r\n        this._content.setAttribute('role', 'code');\r\n        this.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\r\n        this.domNode.domNode.appendChild(this.scrollbar.getDomNode());\r\n        this._register(diffEditor.onDidUpdateDiff(() => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            this._diffs = this._compute();\r\n            this._render();\r\n        }));\r\n        this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            this._render();\r\n        }));\r\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\r\n            e.preventDefault();\r\n            let row = dom.findParentWithClass(e.target, 'diff-review-row');\r\n            if (row) {\r\n                this._goToRow(row);\r\n            }\r\n        }));\r\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\r\n            if (e.equals(18 /* DownArrow */)\r\n                || e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)\r\n                || e.equals(512 /* Alt */ | 18 /* DownArrow */)) {\r\n                e.preventDefault();\r\n                this._goToRow(this._getNextRow());\r\n            }\r\n            if (e.equals(16 /* UpArrow */)\r\n                || e.equals(2048 /* CtrlCmd */ | 16 /* UpArrow */)\r\n                || e.equals(512 /* Alt */ | 16 /* UpArrow */)) {\r\n                e.preventDefault();\r\n                this._goToRow(this._getPrevRow());\r\n            }\r\n            if (e.equals(9 /* Escape */)\r\n                || e.equals(2048 /* CtrlCmd */ | 9 /* Escape */)\r\n                || e.equals(512 /* Alt */ | 9 /* Escape */)\r\n                || e.equals(1024 /* Shift */ | 9 /* Escape */)) {\r\n                e.preventDefault();\r\n                this.hide();\r\n            }\r\n            if (e.equals(10 /* Space */)\r\n                || e.equals(3 /* Enter */)) {\r\n                e.preventDefault();\r\n                this.accept();\r\n            }\r\n        }));\r\n        this._diffs = [];\r\n        this._currentDiff = null;\r\n    }\r\n    prev() {\r\n        let index = 0;\r\n        if (!this._isVisible) {\r\n            this._diffs = this._compute();\r\n        }\r\n        if (this._isVisible) {\r\n            let currentIndex = -1;\r\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\r\n                if (this._diffs[i] === this._currentDiff) {\r\n                    currentIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            index = (this._diffs.length + currentIndex - 1);\r\n        }\r\n        else {\r\n            index = this._findDiffIndex(this._diffEditor.getPosition());\r\n        }\r\n        if (this._diffs.length === 0) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        index = index % this._diffs.length;\r\n        const entries = this._diffs[index].entries;\r\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\r\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\r\n        this._isVisible = true;\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n        this._goToRow(this._getNextRow());\r\n    }\r\n    next() {\r\n        let index = 0;\r\n        if (!this._isVisible) {\r\n            this._diffs = this._compute();\r\n        }\r\n        if (this._isVisible) {\r\n            let currentIndex = -1;\r\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\r\n                if (this._diffs[i] === this._currentDiff) {\r\n                    currentIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            index = (currentIndex + 1);\r\n        }\r\n        else {\r\n            index = this._findDiffIndex(this._diffEditor.getPosition());\r\n        }\r\n        if (this._diffs.length === 0) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        index = index % this._diffs.length;\r\n        const entries = this._diffs[index].entries;\r\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\r\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\r\n        this._isVisible = true;\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n        this._goToRow(this._getNextRow());\r\n    }\r\n    accept() {\r\n        let jumpToLineNumber = -1;\r\n        let current = this._getCurrentFocusedRow();\r\n        if (current) {\r\n            let lineNumber = parseInt(current.getAttribute('data-line'), 10);\r\n            if (!isNaN(lineNumber)) {\r\n                jumpToLineNumber = lineNumber;\r\n            }\r\n        }\r\n        this.hide();\r\n        if (jumpToLineNumber !== -1) {\r\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\r\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* Immediate */);\r\n        }\r\n    }\r\n    hide() {\r\n        this._isVisible = false;\r\n        this._diffEditor.updateOptions({ readOnly: false });\r\n        this._diffEditor.focus();\r\n        this._diffEditor.doLayout();\r\n        this._render();\r\n    }\r\n    _getPrevRow() {\r\n        let current = this._getCurrentFocusedRow();\r\n        if (!current) {\r\n            return this._getFirstRow();\r\n        }\r\n        if (current.previousElementSibling) {\r\n            return current.previousElementSibling;\r\n        }\r\n        return current;\r\n    }\r\n    _getNextRow() {\r\n        let current = this._getCurrentFocusedRow();\r\n        if (!current) {\r\n            return this._getFirstRow();\r\n        }\r\n        if (current.nextElementSibling) {\r\n            return current.nextElementSibling;\r\n        }\r\n        return current;\r\n    }\r\n    _getFirstRow() {\r\n        return this.domNode.domNode.querySelector('.diff-review-row');\r\n    }\r\n    _getCurrentFocusedRow() {\r\n        let result = document.activeElement;\r\n        if (result && /diff-review-row/.test(result.className)) {\r\n            return result;\r\n        }\r\n        return null;\r\n    }\r\n    _goToRow(row) {\r\n        let prev = this._getCurrentFocusedRow();\r\n        row.tabIndex = 0;\r\n        row.focus();\r\n        if (prev && prev !== row) {\r\n            prev.tabIndex = -1;\r\n        }\r\n        this.scrollbar.scanDomNode();\r\n    }\r\n    isVisible() {\r\n        return this._isVisible;\r\n    }\r\n    layout(top, width, height) {\r\n        this._width = width;\r\n        this.shadow.setTop(top - 6);\r\n        this.shadow.setWidth(width);\r\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\r\n        this.domNode.setTop(top);\r\n        this.domNode.setWidth(width);\r\n        this.domNode.setHeight(height);\r\n        this._content.setHeight(height);\r\n        this._content.setWidth(width);\r\n        if (this._isVisible) {\r\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\r\n            this.actionBarContainer.setDisplay('block');\r\n        }\r\n        else {\r\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\r\n            this.actionBarContainer.setDisplay('none');\r\n        }\r\n    }\r\n    _compute() {\r\n        const lineChanges = this._diffEditor.getLineChanges();\r\n        if (!lineChanges || lineChanges.length === 0) {\r\n            return [];\r\n        }\r\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\r\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\r\n        if (!originalModel || !modifiedModel) {\r\n            return [];\r\n        }\r\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\r\n    }\r\n    static _mergeAdjacent(lineChanges, originalLineCount, modifiedLineCount) {\r\n        if (!lineChanges || lineChanges.length === 0) {\r\n            return [];\r\n        }\r\n        let diffs = [], diffsLength = 0;\r\n        for (let i = 0, len = lineChanges.length; i < len; i++) {\r\n            const lineChange = lineChanges[i];\r\n            const originalStart = lineChange.originalStartLineNumber;\r\n            const originalEnd = lineChange.originalEndLineNumber;\r\n            const modifiedStart = lineChange.modifiedStartLineNumber;\r\n            const modifiedEnd = lineChange.modifiedEndLineNumber;\r\n            let r = [], rLength = 0;\r\n            // Emit before anchors\r\n            {\r\n                const originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\r\n                const modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\r\n                // Make sure we don't step into the previous diff\r\n                let minOriginal = 1;\r\n                let minModified = 1;\r\n                if (i > 0) {\r\n                    const prevLineChange = lineChanges[i - 1];\r\n                    if (prevLineChange.originalEndLineNumber === 0) {\r\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\r\n                    }\r\n                    else {\r\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\r\n                    }\r\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\r\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\r\n                    }\r\n                    else {\r\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\r\n                    }\r\n                }\r\n                let fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\r\n                let fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\r\n                if (fromOriginal < minOriginal) {\r\n                    const delta = minOriginal - fromOriginal;\r\n                    fromOriginal = fromOriginal + delta;\r\n                    fromModified = fromModified + delta;\r\n                }\r\n                if (fromModified < minModified) {\r\n                    const delta = minModified - fromModified;\r\n                    fromOriginal = fromOriginal + delta;\r\n                    fromModified = fromModified + delta;\r\n                }\r\n                r[rLength++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\r\n            }\r\n            // Emit deleted lines\r\n            {\r\n                if (originalEnd !== 0) {\r\n                    r[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\r\n                }\r\n            }\r\n            // Emit inserted lines\r\n            {\r\n                if (modifiedEnd !== 0) {\r\n                    r[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\r\n                }\r\n            }\r\n            // Emit after anchors\r\n            {\r\n                const originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\r\n                const modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\r\n                // Make sure we don't step into the next diff\r\n                let maxOriginal = originalLineCount;\r\n                let maxModified = modifiedLineCount;\r\n                if (i + 1 < len) {\r\n                    const nextLineChange = lineChanges[i + 1];\r\n                    if (nextLineChange.originalEndLineNumber === 0) {\r\n                        maxOriginal = nextLineChange.originalStartLineNumber;\r\n                    }\r\n                    else {\r\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\r\n                    }\r\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\r\n                        maxModified = nextLineChange.modifiedStartLineNumber;\r\n                    }\r\n                    else {\r\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\r\n                    }\r\n                }\r\n                let toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\r\n                let toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\r\n                if (toOriginal > maxOriginal) {\r\n                    const delta = maxOriginal - toOriginal;\r\n                    toOriginal = toOriginal + delta;\r\n                    toModified = toModified + delta;\r\n                }\r\n                if (toModified > maxModified) {\r\n                    const delta = maxModified - toModified;\r\n                    toOriginal = toOriginal + delta;\r\n                    toModified = toModified + delta;\r\n                }\r\n                r[rLength++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\r\n            }\r\n            diffs[diffsLength++] = new Diff(r);\r\n        }\r\n        // Merge adjacent diffs\r\n        let curr = diffs[0].entries;\r\n        let r = [], rLength = 0;\r\n        for (let i = 1, len = diffs.length; i < len; i++) {\r\n            const thisDiff = diffs[i].entries;\r\n            const currLast = curr[curr.length - 1];\r\n            const thisFirst = thisDiff[0];\r\n            if (currLast.getType() === 0 /* Equal */\r\n                && thisFirst.getType() === 0 /* Equal */\r\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\r\n                // We are dealing with equal lines that overlap\r\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\r\n                curr = curr.concat(thisDiff.slice(1));\r\n                continue;\r\n            }\r\n            r[rLength++] = new Diff(curr);\r\n            curr = thisDiff;\r\n        }\r\n        r[rLength++] = new Diff(curr);\r\n        return r;\r\n    }\r\n    _findDiffIndex(pos) {\r\n        const lineNumber = pos.lineNumber;\r\n        for (let i = 0, len = this._diffs.length; i < len; i++) {\r\n            const diff = this._diffs[i].entries;\r\n            const lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\r\n            if (lineNumber <= lastModifiedLine) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    _render() {\r\n        const originalOptions = this._diffEditor.getOriginalEditor().getOptions();\r\n        const modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\r\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\r\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\r\n        const originalModelOpts = originalModel.getOptions();\r\n        const modifiedModelOpts = modifiedModel.getOptions();\r\n        if (!this._isVisible || !originalModel || !modifiedModel) {\r\n            dom.clearNode(this._content.domNode);\r\n            this._currentDiff = null;\r\n            this.scrollbar.scanDomNode();\r\n            return;\r\n        }\r\n        this._diffEditor.updateOptions({ readOnly: true });\r\n        const diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\r\n        if (this._diffs[diffIndex] === this._currentDiff) {\r\n            return;\r\n        }\r\n        this._currentDiff = this._diffs[diffIndex];\r\n        const diffs = this._diffs[diffIndex].entries;\r\n        let container = document.createElement('div');\r\n        container.className = 'diff-review-table';\r\n        container.setAttribute('role', 'list');\r\n        container.setAttribute('aria-label', 'Difference review. Use \"Stage | Unstage | Revert Selected Ranges\" commands');\r\n        Configuration.applyFontInfoSlow(container, modifiedOptions.get(41 /* fontInfo */));\r\n        let minOriginalLine = 0;\r\n        let maxOriginalLine = 0;\r\n        let minModifiedLine = 0;\r\n        let maxModifiedLine = 0;\r\n        for (let i = 0, len = diffs.length; i < len; i++) {\r\n            const diffEntry = diffs[i];\r\n            const originalLineStart = diffEntry.originalLineStart;\r\n            const originalLineEnd = diffEntry.originalLineEnd;\r\n            const modifiedLineStart = diffEntry.modifiedLineStart;\r\n            const modifiedLineEnd = diffEntry.modifiedLineEnd;\r\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\r\n                minOriginalLine = originalLineStart;\r\n            }\r\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\r\n                maxOriginalLine = originalLineEnd;\r\n            }\r\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\r\n                minModifiedLine = modifiedLineStart;\r\n            }\r\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\r\n                maxModifiedLine = modifiedLineEnd;\r\n            }\r\n        }\r\n        let header = document.createElement('div');\r\n        header.className = 'diff-review-row';\r\n        let cell = document.createElement('div');\r\n        cell.className = 'diff-review-cell diff-review-summary';\r\n        const originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\r\n        const modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\r\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\r\n        header.setAttribute('data-line', String(minModifiedLine));\r\n        const getAriaLines = (lines) => {\r\n            if (lines === 0) {\r\n                return nls.localize('no_lines_changed', \"no lines changed\");\r\n            }\r\n            else if (lines === 1) {\r\n                return nls.localize('one_line_changed', \"1 line changed\");\r\n            }\r\n            else {\r\n                return nls.localize('more_lines_changed', \"{0} lines changed\", lines);\r\n            }\r\n        };\r\n        const originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\r\n        const modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\r\n        header.setAttribute('aria-label', nls.localize({\r\n            key: 'header',\r\n            comment: [\r\n                'This is the ARIA label for a git diff header.',\r\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\r\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\r\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\r\n                'Variables 2 and 4 will be numbers (a line number).',\r\n                'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\r\n            ]\r\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\r\n        header.appendChild(cell);\r\n        // @@ -504,7 +517,7 @@\r\n        header.setAttribute('role', 'listitem');\r\n        container.appendChild(header);\r\n        const lineHeight = modifiedOptions.get(57 /* lineHeight */);\r\n        let modLine = minModifiedLine;\r\n        for (let i = 0, len = diffs.length; i < len; i++) {\r\n            const diffEntry = diffs[i];\r\n            DiffReview._renderSection(container, diffEntry, modLine, lineHeight, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts);\r\n            if (diffEntry.modifiedLineStart !== 0) {\r\n                modLine = diffEntry.modifiedLineEnd;\r\n            }\r\n        }\r\n        dom.clearNode(this._content.domNode);\r\n        this._content.domNode.appendChild(container);\r\n        this.scrollbar.scanDomNode();\r\n    }\r\n    static _renderSection(dest, diffEntry, modLine, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts) {\r\n        const type = diffEntry.getType();\r\n        let rowClassName = 'diff-review-row';\r\n        let lineNumbersExtraClassName = '';\r\n        const spacerClassName = 'diff-review-spacer';\r\n        let spacerIcon = null;\r\n        switch (type) {\r\n            case 1 /* Insert */:\r\n                rowClassName = 'diff-review-row line-insert';\r\n                lineNumbersExtraClassName = ' char-insert';\r\n                spacerIcon = diffReviewInsertIcon;\r\n                break;\r\n            case 2 /* Delete */:\r\n                rowClassName = 'diff-review-row line-delete';\r\n                lineNumbersExtraClassName = ' char-delete';\r\n                spacerIcon = diffReviewRemoveIcon;\r\n                break;\r\n        }\r\n        const originalLineStart = diffEntry.originalLineStart;\r\n        const originalLineEnd = diffEntry.originalLineEnd;\r\n        const modifiedLineStart = diffEntry.modifiedLineStart;\r\n        const modifiedLineEnd = diffEntry.modifiedLineEnd;\r\n        const cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\r\n        const originalLayoutInfo = originalOptions.get(129 /* layoutInfo */);\r\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\r\n        const modifiedLayoutInfo = modifiedOptions.get(129 /* layoutInfo */);\r\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\r\n        for (let i = 0; i <= cnt; i++) {\r\n            const originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\r\n            const modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\r\n            const row = document.createElement('div');\r\n            row.style.minWidth = width + 'px';\r\n            row.className = rowClassName;\r\n            row.setAttribute('role', 'listitem');\r\n            if (modifiedLine !== 0) {\r\n                modLine = modifiedLine;\r\n            }\r\n            row.setAttribute('data-line', String(modLine));\r\n            let cell = document.createElement('div');\r\n            cell.className = 'diff-review-cell';\r\n            cell.style.height = `${lineHeight}px`;\r\n            row.appendChild(cell);\r\n            const originalLineNumber = document.createElement('span');\r\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\r\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\r\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\r\n            if (originalLine !== 0) {\r\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\r\n            }\r\n            else {\r\n                originalLineNumber.innerText = '\\u00a0';\r\n            }\r\n            cell.appendChild(originalLineNumber);\r\n            const modifiedLineNumber = document.createElement('span');\r\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\r\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\r\n            modifiedLineNumber.style.paddingRight = '10px';\r\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\r\n            if (modifiedLine !== 0) {\r\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\r\n            }\r\n            else {\r\n                modifiedLineNumber.innerText = '\\u00a0';\r\n            }\r\n            cell.appendChild(modifiedLineNumber);\r\n            const spacer = document.createElement('span');\r\n            spacer.className = spacerClassName;\r\n            if (spacerIcon) {\r\n                const spacerCodicon = document.createElement('span');\r\n                spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\r\n                spacerCodicon.innerText = '\\u00a0\\u00a0';\r\n                spacer.appendChild(spacerCodicon);\r\n            }\r\n            else {\r\n                spacer.innerText = '\\u00a0\\u00a0';\r\n            }\r\n            cell.appendChild(spacer);\r\n            let lineContent;\r\n            if (modifiedLine !== 0) {\r\n                let html = this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine);\r\n                if (DiffReview._ttPolicy) {\r\n                    html = DiffReview._ttPolicy.createHTML(html);\r\n                }\r\n                cell.insertAdjacentHTML('beforeend', html);\r\n                lineContent = modifiedModel.getLineContent(modifiedLine);\r\n            }\r\n            else {\r\n                let html = this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine);\r\n                if (DiffReview._ttPolicy) {\r\n                    html = DiffReview._ttPolicy.createHTML(html);\r\n                }\r\n                cell.insertAdjacentHTML('beforeend', html);\r\n                lineContent = originalModel.getLineContent(originalLine);\r\n            }\r\n            if (lineContent.length === 0) {\r\n                lineContent = nls.localize('blankLine', \"blank\");\r\n            }\r\n            let ariaLabel = '';\r\n            switch (type) {\r\n                case 0 /* Equal */:\r\n                    if (originalLine === modifiedLine) {\r\n                        ariaLabel = nls.localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, originalLine);\r\n                    }\r\n                    else {\r\n                        ariaLabel = nls.localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, originalLine, modifiedLine);\r\n                    }\r\n                    break;\r\n                case 1 /* Insert */:\r\n                    ariaLabel = nls.localize('insertLine', \"+ {0} modified line {1}\", lineContent, modifiedLine);\r\n                    break;\r\n                case 2 /* Delete */:\r\n                    ariaLabel = nls.localize('deleteLine', \"- {0} original line {1}\", lineContent, originalLine);\r\n                    break;\r\n            }\r\n            row.setAttribute('aria-label', ariaLabel);\r\n            dest.appendChild(row);\r\n        }\r\n    }\r\n    static _renderLine(model, options, tabSize, lineNumber) {\r\n        const lineContent = model.getLineContent(lineNumber);\r\n        const fontInfo = options.get(41 /* fontInfo */);\r\n        const lineTokens = LineTokens.createEmpty(lineContent);\r\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\r\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\r\n        const r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(27 /* disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(104 /* stopRenderingLineAfter */), options.get(87 /* renderWhitespace */), options.get(81 /* renderControlCharacters */), options.get(42 /* fontLigatures */) !== EditorFontLigatures.OFF, null));\r\n        return r.html;\r\n    }\r\n}\r\nDiffReview._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffReview', { createHTML: value => value });\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const lineNumbers = theme.getColor(editorLineNumbers);\r\n    if (lineNumbers) {\r\n        collector.addRule(`.monaco-diff-editor .diff-review-line-number { color: ${lineNumbers}; }`);\r\n    }\r\n    const shadow = theme.getColor(scrollbarShadow);\r\n    if (shadow) {\r\n        collector.addRule(`.monaco-diff-editor .diff-review-shadow { box-shadow: ${shadow} 0 -6px 6px -6px inset; }`);\r\n    }\r\n});\r\nclass DiffReviewNext extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.diffReview.next',\r\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\r\n            alias: 'Go to Next Difference',\r\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const diffEditor = findFocusedDiffEditor(accessor);\r\n        if (diffEditor) {\r\n            diffEditor.diffReviewNext();\r\n        }\r\n    }\r\n}\r\nclass DiffReviewPrev extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.diffReview.prev',\r\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\r\n            alias: 'Go to Previous Difference',\r\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 1024 /* Shift */ | 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const diffEditor = findFocusedDiffEditor(accessor);\r\n        if (diffEditor) {\r\n            diffEditor.diffReviewPrev();\r\n        }\r\n    }\r\n}\r\nfunction findFocusedDiffEditor(accessor) {\r\n    const codeEditorService = accessor.get(ICodeEditorService);\r\n    const diffEditors = codeEditorService.listDiffEditors();\r\n    const activeCodeEditor = codeEditorService.getActiveCodeEditor();\r\n    if (!activeCodeEditor) {\r\n        return null;\r\n    }\r\n    for (let i = 0, len = diffEditors.length; i < len; i++) {\r\n        const diffEditor = diffEditors[i];\r\n        if (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\r\n            return diffEditor;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nregisterEditorAction(DiffReviewNext);\r\nregisterEditorAction(DiffReviewPrev);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Action } from '../../../base/common/actions.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport class InlineDiffMargin extends Disposable {\r\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\r\n        super();\r\n        this._viewZoneId = _viewZoneId;\r\n        this._marginDomNode = _marginDomNode;\r\n        this.editor = editor;\r\n        this.diff = diff;\r\n        this._contextMenuService = _contextMenuService;\r\n        this._clipboardService = _clipboardService;\r\n        this._visibility = false;\r\n        // make sure the diff margin shows above overlay.\r\n        this._marginDomNode.style.zIndex = '10';\r\n        this._diffActions = document.createElement('div');\r\n        this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\r\n        this._diffActions.style.position = 'absolute';\r\n        const lineHeight = editor.getOption(57 /* lineHeight */);\r\n        const lineFeed = editor.getModel().getEOL();\r\n        this._diffActions.style.right = '0px';\r\n        this._diffActions.style.visibility = 'hidden';\r\n        this._diffActions.style.height = `${lineHeight}px`;\r\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\r\n        this._marginDomNode.appendChild(this._diffActions);\r\n        const actions = [];\r\n        // default action\r\n        actions.push(new Action('diff.clipboard.copyDeletedContent', diff.originalEndLineNumber > diff.modifiedStartLineNumber\r\n            ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\r\n            : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\r\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\r\n            const deletedText = diff.originalModel.getValueInRange(range);\r\n            yield this._clipboardService.writeText(deletedText);\r\n        })));\r\n        let currentLineNumberOffset = 0;\r\n        let copyLineAction = undefined;\r\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\r\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\r\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\r\n                yield this._clipboardService.writeText(lineContent);\r\n            }));\r\n            actions.push(copyLineAction);\r\n        }\r\n        const readOnly = editor.getOption(79 /* readOnly */);\r\n        if (!readOnly) {\r\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\r\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\r\n                const deletedText = diff.originalModel.getValueInRange(range);\r\n                if (diff.modifiedEndLineNumber === 0) {\r\n                    // deletion only\r\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\r\n                    editor.executeEdits('diffEditor', [\r\n                        {\r\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\r\n                            text: lineFeed + deletedText\r\n                        }\r\n                    ]);\r\n                }\r\n                else {\r\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\r\n                    editor.executeEdits('diffEditor', [\r\n                        {\r\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\r\n                            text: deletedText\r\n                        }\r\n                    ]);\r\n                }\r\n            })));\r\n        }\r\n        const showContextMenu = (x, y) => {\r\n            this._contextMenuService.showContextMenu({\r\n                getAnchor: () => {\r\n                    return {\r\n                        x,\r\n                        y\r\n                    };\r\n                },\r\n                getActions: () => {\r\n                    if (copyLineAction) {\r\n                        copyLineAction.label = nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\r\n                    }\r\n                    return actions;\r\n                },\r\n                autoSelectFirstItem: true\r\n            });\r\n        };\r\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\r\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\r\n            let pad = Math.floor(lineHeight / 3);\r\n            e.preventDefault();\r\n            showContextMenu(e.posx, top + height + pad);\r\n        }));\r\n        this._register(editor.onMouseMove((e) => {\r\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\r\n                const viewZoneId = e.target.detail.viewZoneId;\r\n                if (viewZoneId === this._viewZoneId) {\r\n                    this.visibility = true;\r\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\r\n                }\r\n                else {\r\n                    this.visibility = false;\r\n                }\r\n            }\r\n            else {\r\n                this.visibility = false;\r\n            }\r\n        }));\r\n        this._register(editor.onMouseDown((e) => {\r\n            if (!e.event.rightButton) {\r\n                return;\r\n            }\r\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\r\n                const viewZoneId = e.target.detail.viewZoneId;\r\n                if (viewZoneId === this._viewZoneId) {\r\n                    e.event.preventDefault();\r\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\r\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    get visibility() {\r\n        return this._visibility;\r\n    }\r\n    set visibility(_visibility) {\r\n        if (this._visibility !== _visibility) {\r\n            this._visibility = _visibility;\r\n            if (_visibility) {\r\n                this._diffActions.style.visibility = 'visible';\r\n            }\r\n            else {\r\n                this._diffActions.style.visibility = 'hidden';\r\n            }\r\n        }\r\n    }\r\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\r\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\r\n        const offset = y - top;\r\n        const lineNumberOffset = Math.floor(offset / lineHeight);\r\n        const newTop = lineNumberOffset * lineHeight;\r\n        this._diffActions.style.top = `${newTop}px`;\r\n        if (this.diff.viewLineCounts) {\r\n            let acc = 0;\r\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\r\n                acc += this.diff.viewLineCounts[i];\r\n                if (lineNumberOffset < acc) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return lineNumberOffset;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nexport class Progress {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n    report(item) {\r\n        this._value = item;\r\n        this.callback(this._value);\r\n    }\r\n}\r\nProgress.None = Object.freeze({ report() { } });\r\nexport const IEditorProgressService = createDecorator('editorProgressService');\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nexport const IStandaloneThemeService = createDecorator('themeService');\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nexport class AbstractCodeEditorService extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this._onCodeEditorAdd = this._register(new Emitter());\r\n        this.onCodeEditorAdd = this._onCodeEditorAdd.event;\r\n        this._onCodeEditorRemove = this._register(new Emitter());\r\n        this.onCodeEditorRemove = this._onCodeEditorRemove.event;\r\n        this._onDiffEditorAdd = this._register(new Emitter());\r\n        this._onDiffEditorRemove = this._register(new Emitter());\r\n        this._onDecorationTypeRegistered = this._register(new Emitter());\r\n        this._modelProperties = new Map();\r\n        this._codeEditors = Object.create(null);\r\n        this._diffEditors = Object.create(null);\r\n    }\r\n    addCodeEditor(editor) {\r\n        this._codeEditors[editor.getId()] = editor;\r\n        this._onCodeEditorAdd.fire(editor);\r\n    }\r\n    removeCodeEditor(editor) {\r\n        if (delete this._codeEditors[editor.getId()]) {\r\n            this._onCodeEditorRemove.fire(editor);\r\n        }\r\n    }\r\n    listCodeEditors() {\r\n        return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\r\n    }\r\n    addDiffEditor(editor) {\r\n        this._diffEditors[editor.getId()] = editor;\r\n        this._onDiffEditorAdd.fire(editor);\r\n    }\r\n    removeDiffEditor(editor) {\r\n        if (delete this._diffEditors[editor.getId()]) {\r\n            this._onDiffEditorRemove.fire(editor);\r\n        }\r\n    }\r\n    listDiffEditors() {\r\n        return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\r\n    }\r\n    getFocusedCodeEditor() {\r\n        let editorWithWidgetFocus = null;\r\n        const editors = this.listCodeEditors();\r\n        for (const editor of editors) {\r\n            if (editor.hasTextFocus()) {\r\n                // bingo!\r\n                return editor;\r\n            }\r\n            if (editor.hasWidgetFocus()) {\r\n                editorWithWidgetFocus = editor;\r\n            }\r\n        }\r\n        return editorWithWidgetFocus;\r\n    }\r\n    setModelProperty(resource, key, value) {\r\n        const key1 = resource.toString();\r\n        let dest;\r\n        if (this._modelProperties.has(key1)) {\r\n            dest = this._modelProperties.get(key1);\r\n        }\r\n        else {\r\n            dest = new Map();\r\n            this._modelProperties.set(key1, dest);\r\n        }\r\n        dest.set(key, value);\r\n    }\r\n    getModelProperty(resource, key) {\r\n        const key1 = resource.toString();\r\n        if (this._modelProperties.has(key1)) {\r\n            const innerMap = this._modelProperties.get(key1);\r\n            return innerMap.get(key);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { AbstractCodeEditorService } from './abstractCodeEditorService.js';\r\nimport { isThemeColor } from '../../common/editorCommon.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nexport class RefCountedStyleSheet {\r\n    constructor(parent, editorId, styleSheet) {\r\n        this._parent = parent;\r\n        this._editorId = editorId;\r\n        this._styleSheet = styleSheet;\r\n        this._refCount = 0;\r\n    }\r\n    ref() {\r\n        this._refCount++;\r\n    }\r\n    unref() {\r\n        var _a;\r\n        this._refCount--;\r\n        if (this._refCount === 0) {\r\n            (_a = this._styleSheet.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this._styleSheet);\r\n            this._parent._removeEditorStyleSheets(this._editorId);\r\n        }\r\n    }\r\n    insertRule(rule, index) {\r\n        const sheet = this._styleSheet.sheet;\r\n        sheet.insertRule(rule, index);\r\n    }\r\n    removeRulesContainingSelector(ruleName) {\r\n        dom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\r\n    }\r\n}\r\nexport class GlobalStyleSheet {\r\n    constructor(styleSheet) {\r\n        this._styleSheet = styleSheet;\r\n    }\r\n    ref() {\r\n    }\r\n    unref() {\r\n    }\r\n    insertRule(rule, index) {\r\n        const sheet = this._styleSheet.sheet;\r\n        sheet.insertRule(rule, index);\r\n    }\r\n    removeRulesContainingSelector(ruleName) {\r\n        dom.removeCSSRulesContainingSelector(ruleName, this._styleSheet);\r\n    }\r\n}\r\nlet CodeEditorServiceImpl = class CodeEditorServiceImpl extends AbstractCodeEditorService {\r\n    constructor(styleSheet, themeService) {\r\n        super();\r\n        this._decorationOptionProviders = new Map();\r\n        this._editorStyleSheets = new Map();\r\n        this._globalStyleSheet = styleSheet ? styleSheet : null;\r\n        this._themeService = themeService;\r\n    }\r\n    _getOrCreateGlobalStyleSheet() {\r\n        if (!this._globalStyleSheet) {\r\n            this._globalStyleSheet = new GlobalStyleSheet(dom.createStyleSheet());\r\n        }\r\n        return this._globalStyleSheet;\r\n    }\r\n    _getOrCreateStyleSheet(editor) {\r\n        if (!editor) {\r\n            return this._getOrCreateGlobalStyleSheet();\r\n        }\r\n        const domNode = editor.getContainerDomNode();\r\n        if (!dom.isInShadowDOM(domNode)) {\r\n            return this._getOrCreateGlobalStyleSheet();\r\n        }\r\n        const editorId = editor.getId();\r\n        if (!this._editorStyleSheets.has(editorId)) {\r\n            const refCountedStyleSheet = new RefCountedStyleSheet(this, editorId, dom.createStyleSheet(domNode));\r\n            this._editorStyleSheets.set(editorId, refCountedStyleSheet);\r\n        }\r\n        return this._editorStyleSheets.get(editorId);\r\n    }\r\n    _removeEditorStyleSheets(editorId) {\r\n        this._editorStyleSheets.delete(editorId);\r\n    }\r\n    registerDecorationType(description, key, options, parentTypeKey, editor) {\r\n        let provider = this._decorationOptionProviders.get(key);\r\n        if (!provider) {\r\n            const styleSheet = this._getOrCreateStyleSheet(editor);\r\n            const providerArgs = {\r\n                styleSheet: styleSheet,\r\n                key: key,\r\n                parentTypeKey: parentTypeKey,\r\n                options: options || Object.create(null)\r\n            };\r\n            if (!parentTypeKey) {\r\n                provider = new DecorationTypeOptionsProvider(description, this._themeService, styleSheet, providerArgs);\r\n            }\r\n            else {\r\n                provider = new DecorationSubTypeOptionsProvider(this._themeService, styleSheet, providerArgs);\r\n            }\r\n            this._decorationOptionProviders.set(key, provider);\r\n            this._onDecorationTypeRegistered.fire(key);\r\n        }\r\n        provider.refCount++;\r\n    }\r\n    removeDecorationType(key) {\r\n        const provider = this._decorationOptionProviders.get(key);\r\n        if (provider) {\r\n            provider.refCount--;\r\n            if (provider.refCount <= 0) {\r\n                this._decorationOptionProviders.delete(key);\r\n                provider.dispose();\r\n                this.listCodeEditors().forEach((ed) => ed.removeDecorations(key));\r\n            }\r\n        }\r\n    }\r\n    resolveDecorationOptions(decorationTypeKey, writable) {\r\n        const provider = this._decorationOptionProviders.get(decorationTypeKey);\r\n        if (!provider) {\r\n            throw new Error('Unknown decoration type key: ' + decorationTypeKey);\r\n        }\r\n        return provider.getOptions(this, writable);\r\n    }\r\n};\r\nCodeEditorServiceImpl = __decorate([\r\n    __param(1, IThemeService)\r\n], CodeEditorServiceImpl);\r\nexport { CodeEditorServiceImpl };\r\nexport class DecorationSubTypeOptionsProvider {\r\n    constructor(themeService, styleSheet, providerArgs) {\r\n        this._styleSheet = styleSheet;\r\n        this._styleSheet.ref();\r\n        this._parentTypeKey = providerArgs.parentTypeKey;\r\n        this.refCount = 0;\r\n        this._beforeContentRules = new DecorationCSSRules(3 /* BeforeContentClassName */, providerArgs, themeService);\r\n        this._afterContentRules = new DecorationCSSRules(4 /* AfterContentClassName */, providerArgs, themeService);\r\n    }\r\n    getOptions(codeEditorService, writable) {\r\n        const options = codeEditorService.resolveDecorationOptions(this._parentTypeKey, true);\r\n        if (this._beforeContentRules) {\r\n            options.beforeContentClassName = this._beforeContentRules.className;\r\n        }\r\n        if (this._afterContentRules) {\r\n            options.afterContentClassName = this._afterContentRules.className;\r\n        }\r\n        return options;\r\n    }\r\n    dispose() {\r\n        if (this._beforeContentRules) {\r\n            this._beforeContentRules.dispose();\r\n            this._beforeContentRules = null;\r\n        }\r\n        if (this._afterContentRules) {\r\n            this._afterContentRules.dispose();\r\n            this._afterContentRules = null;\r\n        }\r\n        this._styleSheet.unref();\r\n    }\r\n}\r\nexport class DecorationTypeOptionsProvider {\r\n    constructor(description, themeService, styleSheet, providerArgs) {\r\n        this._disposables = new DisposableStore();\r\n        this.description = description;\r\n        this._styleSheet = styleSheet;\r\n        this._styleSheet.ref();\r\n        this.refCount = 0;\r\n        const createCSSRules = (type) => {\r\n            const rules = new DecorationCSSRules(type, providerArgs, themeService);\r\n            this._disposables.add(rules);\r\n            if (rules.hasContent) {\r\n                return rules.className;\r\n            }\r\n            return undefined;\r\n        };\r\n        const createInlineCSSRules = (type) => {\r\n            const rules = new DecorationCSSRules(type, providerArgs, themeService);\r\n            this._disposables.add(rules);\r\n            if (rules.hasContent) {\r\n                return { className: rules.className, hasLetterSpacing: rules.hasLetterSpacing };\r\n            }\r\n            return null;\r\n        };\r\n        this.className = createCSSRules(0 /* ClassName */);\r\n        const inlineData = createInlineCSSRules(1 /* InlineClassName */);\r\n        if (inlineData) {\r\n            this.inlineClassName = inlineData.className;\r\n            this.inlineClassNameAffectsLetterSpacing = inlineData.hasLetterSpacing;\r\n        }\r\n        this.beforeContentClassName = createCSSRules(3 /* BeforeContentClassName */);\r\n        this.afterContentClassName = createCSSRules(4 /* AfterContentClassName */);\r\n        if (providerArgs.options.beforeInjectedText && providerArgs.options.beforeInjectedText.contentText) {\r\n            const beforeInlineData = createInlineCSSRules(5 /* BeforeInjectedTextClassName */);\r\n            this.beforeInjectedText = {\r\n                content: providerArgs.options.beforeInjectedText.contentText,\r\n                inlineClassName: beforeInlineData === null || beforeInlineData === void 0 ? void 0 : beforeInlineData.className,\r\n                inlineClassNameAffectsLetterSpacing: (beforeInlineData === null || beforeInlineData === void 0 ? void 0 : beforeInlineData.hasLetterSpacing) || providerArgs.options.beforeInjectedText.affectsLetterSpacing\r\n            };\r\n        }\r\n        if (providerArgs.options.afterInjectedText && providerArgs.options.afterInjectedText.contentText) {\r\n            const afterInlineData = createInlineCSSRules(6 /* AfterInjectedTextClassName */);\r\n            this.afterInjectedText = {\r\n                content: providerArgs.options.afterInjectedText.contentText,\r\n                inlineClassName: afterInlineData === null || afterInlineData === void 0 ? void 0 : afterInlineData.className,\r\n                inlineClassNameAffectsLetterSpacing: (afterInlineData === null || afterInlineData === void 0 ? void 0 : afterInlineData.hasLetterSpacing) || providerArgs.options.afterInjectedText.affectsLetterSpacing\r\n            };\r\n        }\r\n        this.glyphMarginClassName = createCSSRules(2 /* GlyphMarginClassName */);\r\n        const options = providerArgs.options;\r\n        this.isWholeLine = Boolean(options.isWholeLine);\r\n        this.stickiness = options.rangeBehavior;\r\n        const lightOverviewRulerColor = options.light && options.light.overviewRulerColor || options.overviewRulerColor;\r\n        const darkOverviewRulerColor = options.dark && options.dark.overviewRulerColor || options.overviewRulerColor;\r\n        if (typeof lightOverviewRulerColor !== 'undefined'\r\n            || typeof darkOverviewRulerColor !== 'undefined') {\r\n            this.overviewRuler = {\r\n                color: lightOverviewRulerColor || darkOverviewRulerColor,\r\n                darkColor: darkOverviewRulerColor || lightOverviewRulerColor,\r\n                position: options.overviewRulerLane || OverviewRulerLane.Center\r\n            };\r\n        }\r\n    }\r\n    getOptions(codeEditorService, writable) {\r\n        if (!writable) {\r\n            return this;\r\n        }\r\n        return {\r\n            description: this.description,\r\n            inlineClassName: this.inlineClassName,\r\n            beforeContentClassName: this.beforeContentClassName,\r\n            afterContentClassName: this.afterContentClassName,\r\n            className: this.className,\r\n            glyphMarginClassName: this.glyphMarginClassName,\r\n            isWholeLine: this.isWholeLine,\r\n            overviewRuler: this.overviewRuler,\r\n            stickiness: this.stickiness,\r\n            before: this.beforeInjectedText\r\n        };\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._styleSheet.unref();\r\n    }\r\n}\r\nexport const _CSS_MAP = {\r\n    color: 'color:{0} !important;',\r\n    opacity: 'opacity:{0};',\r\n    backgroundColor: 'background-color:{0};',\r\n    outline: 'outline:{0};',\r\n    outlineColor: 'outline-color:{0};',\r\n    outlineStyle: 'outline-style:{0};',\r\n    outlineWidth: 'outline-width:{0};',\r\n    border: 'border:{0};',\r\n    borderColor: 'border-color:{0};',\r\n    borderRadius: 'border-radius:{0};',\r\n    borderSpacing: 'border-spacing:{0};',\r\n    borderStyle: 'border-style:{0};',\r\n    borderWidth: 'border-width:{0};',\r\n    fontStyle: 'font-style:{0};',\r\n    fontWeight: 'font-weight:{0};',\r\n    fontSize: 'font-size:{0};',\r\n    fontFamily: 'font-family:{0};',\r\n    textDecoration: 'text-decoration:{0};',\r\n    cursor: 'cursor:{0};',\r\n    letterSpacing: 'letter-spacing:{0};',\r\n    gutterIconPath: 'background:{0} center center no-repeat;',\r\n    gutterIconSize: 'background-size:{0};',\r\n    contentText: 'content:\\'{0}\\';',\r\n    contentIconPath: 'content:{0};',\r\n    margin: 'margin:{0};',\r\n    padding: 'padding:{0};',\r\n    width: 'width:{0};',\r\n    height: 'height:{0};'\r\n};\r\nclass DecorationCSSRules {\r\n    constructor(ruleType, providerArgs, themeService) {\r\n        this._theme = themeService.getColorTheme();\r\n        this._ruleType = ruleType;\r\n        this._providerArgs = providerArgs;\r\n        this._usesThemeColors = false;\r\n        this._hasContent = false;\r\n        this._hasLetterSpacing = false;\r\n        let className = CSSNameHelper.getClassName(this._providerArgs.key, ruleType);\r\n        if (this._providerArgs.parentTypeKey) {\r\n            className = className + ' ' + CSSNameHelper.getClassName(this._providerArgs.parentTypeKey, ruleType);\r\n        }\r\n        this._className = className;\r\n        this._unThemedSelector = CSSNameHelper.getSelector(this._providerArgs.key, this._providerArgs.parentTypeKey, ruleType);\r\n        this._buildCSS();\r\n        if (this._usesThemeColors) {\r\n            this._themeListener = themeService.onDidColorThemeChange(theme => {\r\n                this._theme = themeService.getColorTheme();\r\n                this._removeCSS();\r\n                this._buildCSS();\r\n            });\r\n        }\r\n        else {\r\n            this._themeListener = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._hasContent) {\r\n            this._removeCSS();\r\n            this._hasContent = false;\r\n        }\r\n        if (this._themeListener) {\r\n            this._themeListener.dispose();\r\n            this._themeListener = null;\r\n        }\r\n    }\r\n    get hasContent() {\r\n        return this._hasContent;\r\n    }\r\n    get hasLetterSpacing() {\r\n        return this._hasLetterSpacing;\r\n    }\r\n    get className() {\r\n        return this._className;\r\n    }\r\n    _buildCSS() {\r\n        const options = this._providerArgs.options;\r\n        let unthemedCSS, lightCSS, darkCSS;\r\n        switch (this._ruleType) {\r\n            case 0 /* ClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationClassName(options);\r\n                lightCSS = this.getCSSTextForModelDecorationClassName(options.light);\r\n                darkCSS = this.getCSSTextForModelDecorationClassName(options.dark);\r\n                break;\r\n            case 1 /* InlineClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationInlineClassName(options);\r\n                lightCSS = this.getCSSTextForModelDecorationInlineClassName(options.light);\r\n                darkCSS = this.getCSSTextForModelDecorationInlineClassName(options.dark);\r\n                break;\r\n            case 2 /* GlyphMarginClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options);\r\n                lightCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options.light);\r\n                darkCSS = this.getCSSTextForModelDecorationGlyphMarginClassName(options.dark);\r\n                break;\r\n            case 3 /* BeforeContentClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.before);\r\n                lightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.before);\r\n                darkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.before);\r\n                break;\r\n            case 4 /* AfterContentClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.after);\r\n                lightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.after);\r\n                darkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.after);\r\n                break;\r\n            case 5 /* BeforeInjectedTextClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.beforeInjectedText);\r\n                lightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.beforeInjectedText);\r\n                darkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.beforeInjectedText);\r\n                break;\r\n            case 6 /* AfterInjectedTextClassName */:\r\n                unthemedCSS = this.getCSSTextForModelDecorationContentClassName(options.afterInjectedText);\r\n                lightCSS = this.getCSSTextForModelDecorationContentClassName(options.light && options.light.afterInjectedText);\r\n                darkCSS = this.getCSSTextForModelDecorationContentClassName(options.dark && options.dark.afterInjectedText);\r\n                break;\r\n            default:\r\n                throw new Error('Unknown rule type: ' + this._ruleType);\r\n        }\r\n        const sheet = this._providerArgs.styleSheet;\r\n        let hasContent = false;\r\n        if (unthemedCSS.length > 0) {\r\n            sheet.insertRule(`${this._unThemedSelector} {${unthemedCSS}}`, 0);\r\n            hasContent = true;\r\n        }\r\n        if (lightCSS.length > 0) {\r\n            sheet.insertRule(`.vs${this._unThemedSelector} {${lightCSS}}`, 0);\r\n            hasContent = true;\r\n        }\r\n        if (darkCSS.length > 0) {\r\n            sheet.insertRule(`.vs-dark${this._unThemedSelector}, .hc-black${this._unThemedSelector} {${darkCSS}}`, 0);\r\n            hasContent = true;\r\n        }\r\n        this._hasContent = hasContent;\r\n    }\r\n    _removeCSS() {\r\n        this._providerArgs.styleSheet.removeRulesContainingSelector(this._unThemedSelector);\r\n    }\r\n    /**\r\n     * Build the CSS for decorations styled via `className`.\r\n     */\r\n    getCSSTextForModelDecorationClassName(opts) {\r\n        if (!opts) {\r\n            return '';\r\n        }\r\n        const cssTextArr = [];\r\n        this.collectCSSText(opts, ['backgroundColor'], cssTextArr);\r\n        this.collectCSSText(opts, ['outline', 'outlineColor', 'outlineStyle', 'outlineWidth'], cssTextArr);\r\n        this.collectBorderSettingsCSSText(opts, cssTextArr);\r\n        return cssTextArr.join('');\r\n    }\r\n    /**\r\n     * Build the CSS for decorations styled via `inlineClassName`.\r\n     */\r\n    getCSSTextForModelDecorationInlineClassName(opts) {\r\n        if (!opts) {\r\n            return '';\r\n        }\r\n        const cssTextArr = [];\r\n        this.collectCSSText(opts, ['fontStyle', 'fontWeight', 'textDecoration', 'cursor', 'color', 'opacity', 'letterSpacing'], cssTextArr);\r\n        if (opts.letterSpacing) {\r\n            this._hasLetterSpacing = true;\r\n        }\r\n        return cssTextArr.join('');\r\n    }\r\n    /**\r\n     * Build the CSS for decorations styled before or after content.\r\n     */\r\n    getCSSTextForModelDecorationContentClassName(opts) {\r\n        if (!opts) {\r\n            return '';\r\n        }\r\n        const cssTextArr = [];\r\n        if (typeof opts !== 'undefined') {\r\n            this.collectBorderSettingsCSSText(opts, cssTextArr);\r\n            if (typeof opts.contentIconPath !== 'undefined') {\r\n                cssTextArr.push(strings.format(_CSS_MAP.contentIconPath, dom.asCSSUrl(URI.revive(opts.contentIconPath))));\r\n            }\r\n            if (typeof opts.contentText === 'string') {\r\n                const truncated = opts.contentText.match(/^.*$/m)[0]; // only take first line\r\n                const escaped = truncated.replace(/['\\\\]/g, '\\\\$&');\r\n                cssTextArr.push(strings.format(_CSS_MAP.contentText, escaped));\r\n            }\r\n            this.collectCSSText(opts, ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'textDecoration', 'color', 'opacity', 'backgroundColor', 'margin', 'padding'], cssTextArr);\r\n            if (this.collectCSSText(opts, ['width', 'height'], cssTextArr)) {\r\n                cssTextArr.push('display:inline-block;');\r\n            }\r\n        }\r\n        return cssTextArr.join('');\r\n    }\r\n    /**\r\n     * Build the CSS for decorations styled via `glpyhMarginClassName`.\r\n     */\r\n    getCSSTextForModelDecorationGlyphMarginClassName(opts) {\r\n        if (!opts) {\r\n            return '';\r\n        }\r\n        const cssTextArr = [];\r\n        if (typeof opts.gutterIconPath !== 'undefined') {\r\n            cssTextArr.push(strings.format(_CSS_MAP.gutterIconPath, dom.asCSSUrl(URI.revive(opts.gutterIconPath))));\r\n            if (typeof opts.gutterIconSize !== 'undefined') {\r\n                cssTextArr.push(strings.format(_CSS_MAP.gutterIconSize, opts.gutterIconSize));\r\n            }\r\n        }\r\n        return cssTextArr.join('');\r\n    }\r\n    collectBorderSettingsCSSText(opts, cssTextArr) {\r\n        if (this.collectCSSText(opts, ['border', 'borderColor', 'borderRadius', 'borderSpacing', 'borderStyle', 'borderWidth'], cssTextArr)) {\r\n            cssTextArr.push(strings.format('box-sizing: border-box;'));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    collectCSSText(opts, properties, cssTextArr) {\r\n        const lenBefore = cssTextArr.length;\r\n        for (let property of properties) {\r\n            const value = this.resolveValue(opts[property]);\r\n            if (typeof value === 'string') {\r\n                cssTextArr.push(strings.format(_CSS_MAP[property], value));\r\n            }\r\n        }\r\n        return cssTextArr.length !== lenBefore;\r\n    }\r\n    resolveValue(value) {\r\n        if (isThemeColor(value)) {\r\n            this._usesThemeColors = true;\r\n            const color = this._theme.getColor(value.id);\r\n            if (color) {\r\n                return color.toString();\r\n            }\r\n            return 'transparent';\r\n        }\r\n        return value;\r\n    }\r\n}\r\nclass CSSNameHelper {\r\n    static getClassName(key, type) {\r\n        return 'ced-' + key + '-' + type;\r\n    }\r\n    static getSelector(key, parentKey, ruleType) {\r\n        let selector = '.monaco-editor .' + this.getClassName(key, ruleType);\r\n        if (parentKey) {\r\n            selector = selector + '.' + this.getClassName(parentKey, ruleType);\r\n        }\r\n        if (ruleType === 3 /* BeforeContentClassName */) {\r\n            selector += '::before';\r\n        }\r\n        else if (ruleType === 4 /* AfterContentClassName */) {\r\n            selector += '::after';\r\n        }\r\n        return selector;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { windowOpenNoOpener } from '../../../base/browser/dom.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { CodeEditorServiceImpl } from '../../browser/services/codeEditorServiceImpl.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nlet StandaloneCodeEditorServiceImpl = class StandaloneCodeEditorServiceImpl extends CodeEditorServiceImpl {\r\n    constructor(styleSheet, contextKeyService, themeService) {\r\n        super(styleSheet, themeService);\r\n        this.onCodeEditorAdd(() => this._checkContextKey());\r\n        this.onCodeEditorRemove(() => this._checkContextKey());\r\n        this._editorIsOpen = contextKeyService.createKey('editorIsOpen', false);\r\n        this._activeCodeEditor = null;\r\n    }\r\n    _checkContextKey() {\r\n        let hasCodeEditor = false;\r\n        for (const editor of this.listCodeEditors()) {\r\n            if (!editor.isSimpleWidget) {\r\n                hasCodeEditor = true;\r\n                break;\r\n            }\r\n        }\r\n        this._editorIsOpen.set(hasCodeEditor);\r\n    }\r\n    setActiveCodeEditor(activeCodeEditor) {\r\n        this._activeCodeEditor = activeCodeEditor;\r\n    }\r\n    getActiveCodeEditor() {\r\n        return this._activeCodeEditor;\r\n    }\r\n    openCodeEditor(input, source, sideBySide) {\r\n        if (!source) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return Promise.resolve(this.doOpenEditor(source, input));\r\n    }\r\n    doOpenEditor(editor, input) {\r\n        const model = this.findModel(editor, input.resource);\r\n        if (!model) {\r\n            if (input.resource) {\r\n                const schema = input.resource.scheme;\r\n                if (schema === Schemas.http || schema === Schemas.https) {\r\n                    // This is a fully qualified http or https URL\r\n                    windowOpenNoOpener(input.resource.toString());\r\n                    return editor;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        const selection = (input.options ? input.options.selection : null);\r\n        if (selection) {\r\n            if (typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\r\n                editor.setSelection(selection);\r\n                editor.revealRangeInCenter(selection, 1 /* Immediate */);\r\n            }\r\n            else {\r\n                const pos = {\r\n                    lineNumber: selection.startLineNumber,\r\n                    column: selection.startColumn\r\n                };\r\n                editor.setPosition(pos);\r\n                editor.revealPositionInCenter(pos, 1 /* Immediate */);\r\n            }\r\n        }\r\n        return editor;\r\n    }\r\n    findModel(editor, resource) {\r\n        const model = editor.getModel();\r\n        if (model && model.uri.toString() !== resource.toString()) {\r\n            return null;\r\n        }\r\n        return model;\r\n    }\r\n};\r\nStandaloneCodeEditorServiceImpl = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IThemeService)\r\n], StandaloneCodeEditorServiceImpl);\r\nexport { StandaloneCodeEditorServiceImpl };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\r\nimport { Disposable, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CodeEditorWidget } from '../../browser/widget/codeEditorWidget.js';\r\nimport { DiffEditorWidget } from '../../browser/widget/diffEditorWidget.js';\r\nimport { InternalEditorAction } from '../../common/editorAction.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { StandaloneKeybindingService, updateConfigurationService } from './simpleServices.js';\r\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\r\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextViewService, IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nimport { StandaloneCodeEditorNLS } from '../../common/standaloneStrings.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { StandaloneCodeEditorServiceImpl } from './standaloneCodeServiceImpl.js';\r\nimport { Mimes } from '../../../base/common/mime.js';\r\nlet LAST_GENERATED_COMMAND_ID = 0;\r\nlet ariaDomNodeCreated = false;\r\nfunction createAriaDomNode() {\r\n    if (ariaDomNodeCreated) {\r\n        return;\r\n    }\r\n    ariaDomNodeCreated = true;\r\n    aria.setARIAContainer(document.body);\r\n}\r\n/**\r\n * A code editor to be used both by the standalone editor and the standalone diff editor.\r\n */\r\nlet StandaloneCodeEditor = class StandaloneCodeEditor extends CodeEditorWidget {\r\n    constructor(domElement, _options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService) {\r\n        const options = Object.assign({}, _options);\r\n        options.ariaLabel = options.ariaLabel || StandaloneCodeEditorNLS.editorViewAccessibleLabel;\r\n        options.ariaLabel = options.ariaLabel + ';' + (StandaloneCodeEditorNLS.accessibilityHelpMessage);\r\n        super(domElement, options, {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService);\r\n        if (keybindingService instanceof StandaloneKeybindingService) {\r\n            this._standaloneKeybindingService = keybindingService;\r\n        }\r\n        else {\r\n            this._standaloneKeybindingService = null;\r\n        }\r\n        // Create the ARIA dom node as soon as the first editor is instantiated\r\n        createAriaDomNode();\r\n    }\r\n    addCommand(keybinding, handler, context) {\r\n        if (!this._standaloneKeybindingService) {\r\n            console.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\r\n            return null;\r\n        }\r\n        let commandId = 'DYNAMIC_' + (++LAST_GENERATED_COMMAND_ID);\r\n        let whenExpression = ContextKeyExpr.deserialize(context);\r\n        this._standaloneKeybindingService.addDynamicKeybinding(commandId, keybinding, handler, whenExpression);\r\n        return commandId;\r\n    }\r\n    createContextKey(key, defaultValue) {\r\n        return this._contextKeyService.createKey(key, defaultValue);\r\n    }\r\n    addAction(_descriptor) {\r\n        if ((typeof _descriptor.id !== 'string') || (typeof _descriptor.label !== 'string') || (typeof _descriptor.run !== 'function')) {\r\n            throw new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\r\n        }\r\n        if (!this._standaloneKeybindingService) {\r\n            console.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\r\n            return Disposable.None;\r\n        }\r\n        // Read descriptor options\r\n        const id = _descriptor.id;\r\n        const label = _descriptor.label;\r\n        const precondition = ContextKeyExpr.and(ContextKeyExpr.equals('editorId', this.getId()), ContextKeyExpr.deserialize(_descriptor.precondition));\r\n        const keybindings = _descriptor.keybindings;\r\n        const keybindingsWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(_descriptor.keybindingContext));\r\n        const contextMenuGroupId = _descriptor.contextMenuGroupId || null;\r\n        const contextMenuOrder = _descriptor.contextMenuOrder || 0;\r\n        const run = (accessor, ...args) => {\r\n            return Promise.resolve(_descriptor.run(this, ...args));\r\n        };\r\n        const toDispose = new DisposableStore();\r\n        // Generate a unique id to allow the same descriptor.id across multiple editor instances\r\n        const uniqueId = this.getId() + ':' + id;\r\n        // Register the command\r\n        toDispose.add(CommandsRegistry.registerCommand(uniqueId, run));\r\n        // Register the context menu item\r\n        if (contextMenuGroupId) {\r\n            let menuItem = {\r\n                command: {\r\n                    id: uniqueId,\r\n                    title: label\r\n                },\r\n                when: precondition,\r\n                group: contextMenuGroupId,\r\n                order: contextMenuOrder\r\n            };\r\n            toDispose.add(MenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem));\r\n        }\r\n        // Register the keybindings\r\n        if (Array.isArray(keybindings)) {\r\n            for (const kb of keybindings) {\r\n                toDispose.add(this._standaloneKeybindingService.addDynamicKeybinding(uniqueId, kb, run, keybindingsWhen));\r\n            }\r\n        }\r\n        // Finally, register an internal editor action\r\n        let internalAction = new InternalEditorAction(uniqueId, label, label, precondition, run, this._contextKeyService);\r\n        // Store it under the original id, such that trigger with the original id will work\r\n        this._actions[id] = internalAction;\r\n        toDispose.add(toDisposable(() => {\r\n            delete this._actions[id];\r\n        }));\r\n        return toDispose;\r\n    }\r\n    _triggerCommand(handlerId, payload) {\r\n        if (this._codeEditorService instanceof StandaloneCodeEditorServiceImpl) {\r\n            // Help commands find this editor as the active editor\r\n            try {\r\n                this._codeEditorService.setActiveCodeEditor(this);\r\n                super._triggerCommand(handlerId, payload);\r\n            }\r\n            finally {\r\n                this._codeEditorService.setActiveCodeEditor(null);\r\n            }\r\n        }\r\n        else {\r\n            super._triggerCommand(handlerId, payload);\r\n        }\r\n    }\r\n};\r\nStandaloneCodeEditor = __decorate([\r\n    __param(2, IInstantiationService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, ICommandService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IKeybindingService),\r\n    __param(7, IThemeService),\r\n    __param(8, INotificationService),\r\n    __param(9, IAccessibilityService)\r\n], StandaloneCodeEditor);\r\nexport { StandaloneCodeEditor };\r\nlet StandaloneEditor = class StandaloneEditor extends StandaloneCodeEditor {\r\n    constructor(domElement, _options, toDispose, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, contextViewService, themeService, notificationService, configurationService, accessibilityService, modelService, modeService) {\r\n        const options = Object.assign({}, _options);\r\n        updateConfigurationService(configurationService, options, false);\r\n        const themeDomRegistration = themeService.registerEditorContainer(domElement);\r\n        if (typeof options.theme === 'string') {\r\n            themeService.setTheme(options.theme);\r\n        }\r\n        if (typeof options.autoDetectHighContrast !== 'undefined') {\r\n            themeService.setAutoDetectHighContrast(Boolean(options.autoDetectHighContrast));\r\n        }\r\n        let _model = options.model;\r\n        delete options.model;\r\n        super(domElement, options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService);\r\n        this._contextViewService = contextViewService;\r\n        this._configurationService = configurationService;\r\n        this._standaloneThemeService = themeService;\r\n        this._register(toDispose);\r\n        this._register(themeDomRegistration);\r\n        let model;\r\n        if (typeof _model === 'undefined') {\r\n            model = createTextModel(modelService, modeService, options.value || '', options.language || Mimes.text, undefined);\r\n            this._ownsModel = true;\r\n        }\r\n        else {\r\n            model = _model;\r\n            this._ownsModel = false;\r\n        }\r\n        this._attachModel(model);\r\n        if (model) {\r\n            let e = {\r\n                oldModelUrl: null,\r\n                newModelUrl: model.uri\r\n            };\r\n            this._onDidChangeModel.fire(e);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    updateOptions(newOptions) {\r\n        updateConfigurationService(this._configurationService, newOptions, false);\r\n        if (typeof newOptions.theme === 'string') {\r\n            this._standaloneThemeService.setTheme(newOptions.theme);\r\n        }\r\n        if (typeof newOptions.autoDetectHighContrast !== 'undefined') {\r\n            this._standaloneThemeService.setAutoDetectHighContrast(Boolean(newOptions.autoDetectHighContrast));\r\n        }\r\n        super.updateOptions(newOptions);\r\n    }\r\n    _attachModel(model) {\r\n        super._attachModel(model);\r\n        if (this._modelData) {\r\n            this._contextViewService.setContainer(this._modelData.view.domNode.domNode);\r\n        }\r\n    }\r\n    _postDetachModelCleanup(detachedModel) {\r\n        super._postDetachModelCleanup(detachedModel);\r\n        if (detachedModel && this._ownsModel) {\r\n            detachedModel.dispose();\r\n            this._ownsModel = false;\r\n        }\r\n    }\r\n};\r\nStandaloneEditor = __decorate([\r\n    __param(3, IInstantiationService),\r\n    __param(4, ICodeEditorService),\r\n    __param(5, ICommandService),\r\n    __param(6, IContextKeyService),\r\n    __param(7, IKeybindingService),\r\n    __param(8, IContextViewService),\r\n    __param(9, IStandaloneThemeService),\r\n    __param(10, INotificationService),\r\n    __param(11, IConfigurationService),\r\n    __param(12, IAccessibilityService),\r\n    __param(13, IModelService),\r\n    __param(14, IModeService)\r\n], StandaloneEditor);\r\nexport { StandaloneEditor };\r\nlet StandaloneDiffEditor = class StandaloneDiffEditor extends DiffEditorWidget {\r\n    constructor(domElement, _options, toDispose, instantiationService, contextKeyService, keybindingService, contextViewService, editorWorkerService, codeEditorService, themeService, notificationService, configurationService, contextMenuService, editorProgressService, clipboardService) {\r\n        const options = Object.assign({}, _options);\r\n        updateConfigurationService(configurationService, options, true);\r\n        const themeDomRegistration = themeService.registerEditorContainer(domElement);\r\n        if (typeof options.theme === 'string') {\r\n            themeService.setTheme(options.theme);\r\n        }\r\n        if (typeof options.autoDetectHighContrast !== 'undefined') {\r\n            themeService.setAutoDetectHighContrast(Boolean(options.autoDetectHighContrast));\r\n        }\r\n        super(domElement, options, {}, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, editorProgressService);\r\n        this._contextViewService = contextViewService;\r\n        this._configurationService = configurationService;\r\n        this._standaloneThemeService = themeService;\r\n        this._register(toDispose);\r\n        this._register(themeDomRegistration);\r\n        this._contextViewService.setContainer(this._containerDomElement);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    updateOptions(newOptions) {\r\n        updateConfigurationService(this._configurationService, newOptions, true);\r\n        if (typeof newOptions.theme === 'string') {\r\n            this._standaloneThemeService.setTheme(newOptions.theme);\r\n        }\r\n        if (typeof newOptions.autoDetectHighContrast !== 'undefined') {\r\n            this._standaloneThemeService.setAutoDetectHighContrast(Boolean(newOptions.autoDetectHighContrast));\r\n        }\r\n        super.updateOptions(newOptions);\r\n    }\r\n    _createInnerEditor(instantiationService, container, options) {\r\n        return instantiationService.createInstance(StandaloneCodeEditor, container, options);\r\n    }\r\n    getOriginalEditor() {\r\n        return super.getOriginalEditor();\r\n    }\r\n    getModifiedEditor() {\r\n        return super.getModifiedEditor();\r\n    }\r\n    addCommand(keybinding, handler, context) {\r\n        return this.getModifiedEditor().addCommand(keybinding, handler, context);\r\n    }\r\n    createContextKey(key, defaultValue) {\r\n        return this.getModifiedEditor().createContextKey(key, defaultValue);\r\n    }\r\n    addAction(descriptor) {\r\n        return this.getModifiedEditor().addAction(descriptor);\r\n    }\r\n};\r\nStandaloneDiffEditor = __decorate([\r\n    __param(3, IInstantiationService),\r\n    __param(4, IContextKeyService),\r\n    __param(5, IKeybindingService),\r\n    __param(6, IContextViewService),\r\n    __param(7, IEditorWorkerService),\r\n    __param(8, ICodeEditorService),\r\n    __param(9, IStandaloneThemeService),\r\n    __param(10, INotificationService),\r\n    __param(11, IConfigurationService),\r\n    __param(12, IContextMenuService),\r\n    __param(13, IEditorProgressService),\r\n    __param(14, IClipboardService)\r\n], StandaloneDiffEditor);\r\nexport { StandaloneDiffEditor };\r\n/**\r\n * @internal\r\n */\r\nexport function createTextModel(modelService, modeService, value, language, uri) {\r\n    value = value || '';\r\n    if (!language) {\r\n        const firstLF = value.indexOf('\\n');\r\n        let firstLine = value;\r\n        if (firstLF !== -1) {\r\n            firstLine = value.substring(0, firstLF);\r\n        }\r\n        return doCreateModel(modelService, value, modeService.createByFilepathOrFirstLine(uri || null, firstLine), uri);\r\n    }\r\n    return doCreateModel(modelService, value, modeService.create(language), uri);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction doCreateModel(modelService, value, languageSelection, uri) {\r\n    return modelService.createModel(value, languageSelection, uri);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class FrankensteinMode {\r\n    constructor(languageIdentifier) {\r\n        this._languageIdentifier = languageIdentifier;\r\n    }\r\n    getId() {\r\n        return this._languageIdentifier.language;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as mime from '../../../base/common/mime.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { LanguageIdentifier } from '../modes.js';\r\nimport { ModesRegistry } from '../modes/modesRegistry.js';\r\nimport { NULL_LANGUAGE_IDENTIFIER, NULL_MODE_ID } from '../modes/nullMode.js';\r\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport class LanguagesRegistry extends Disposable {\r\n    constructor(useModesRegistry = true, warnOnOverwrite = false) {\r\n        super();\r\n        this._onDidChange = this._register(new Emitter());\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._warnOnOverwrite = warnOnOverwrite;\r\n        this._nextLanguageId2 = 1;\r\n        this._languageIdToLanguage = [];\r\n        this._languageToLanguageId = Object.create(null);\r\n        this._languages = {};\r\n        this._mimeTypesMap = {};\r\n        this._nameMap = {};\r\n        this._lowercaseNameMap = {};\r\n        if (useModesRegistry) {\r\n            this._initializeFromRegistry();\r\n            this._register(ModesRegistry.onDidChangeLanguages((m) => this._initializeFromRegistry()));\r\n        }\r\n    }\r\n    _initializeFromRegistry() {\r\n        this._languages = {};\r\n        this._mimeTypesMap = {};\r\n        this._nameMap = {};\r\n        this._lowercaseNameMap = {};\r\n        const desc = ModesRegistry.getLanguages();\r\n        this._registerLanguages(desc);\r\n    }\r\n    _registerLanguages(desc) {\r\n        for (const d of desc) {\r\n            this._registerLanguage(d);\r\n        }\r\n        // Rebuild fast path maps\r\n        this._mimeTypesMap = {};\r\n        this._nameMap = {};\r\n        this._lowercaseNameMap = {};\r\n        Object.keys(this._languages).forEach((langId) => {\r\n            let language = this._languages[langId];\r\n            if (language.name) {\r\n                this._nameMap[language.name] = language.identifier;\r\n            }\r\n            language.aliases.forEach((alias) => {\r\n                this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\r\n            });\r\n            language.mimetypes.forEach((mimetype) => {\r\n                this._mimeTypesMap[mimetype] = language.identifier;\r\n            });\r\n        });\r\n        Registry.as(Extensions.Configuration).registerOverrideIdentifiers(ModesRegistry.getLanguages().map(language => language.id));\r\n        this._onDidChange.fire();\r\n    }\r\n    _getLanguageId(language) {\r\n        if (this._languageToLanguageId[language]) {\r\n            return this._languageToLanguageId[language];\r\n        }\r\n        const languageId = this._nextLanguageId2++;\r\n        this._languageIdToLanguage[languageId] = language;\r\n        this._languageToLanguageId[language] = languageId;\r\n        return languageId;\r\n    }\r\n    _registerLanguage(lang) {\r\n        const langId = lang.id;\r\n        let resolvedLanguage;\r\n        if (hasOwnProperty.call(this._languages, langId)) {\r\n            resolvedLanguage = this._languages[langId];\r\n        }\r\n        else {\r\n            const languageId = this._getLanguageId(langId);\r\n            resolvedLanguage = {\r\n                identifier: new LanguageIdentifier(langId, languageId),\r\n                name: null,\r\n                mimetypes: [],\r\n                aliases: [],\r\n                extensions: [],\r\n                filenames: [],\r\n                configurationFiles: []\r\n            };\r\n            this._languages[langId] = resolvedLanguage;\r\n        }\r\n        this._mergeLanguage(resolvedLanguage, lang);\r\n    }\r\n    _mergeLanguage(resolvedLanguage, lang) {\r\n        const langId = lang.id;\r\n        let primaryMime = null;\r\n        if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\r\n            resolvedLanguage.mimetypes.push(...lang.mimetypes);\r\n            primaryMime = lang.mimetypes[0];\r\n        }\r\n        if (!primaryMime) {\r\n            primaryMime = `text/x-${langId}`;\r\n            resolvedLanguage.mimetypes.push(primaryMime);\r\n        }\r\n        if (Array.isArray(lang.extensions)) {\r\n            if (lang.configuration) {\r\n                // insert first as this appears to be the 'primary' language definition\r\n                resolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\r\n            }\r\n            else {\r\n                resolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\r\n            }\r\n            for (let extension of lang.extensions) {\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\r\n            }\r\n        }\r\n        if (Array.isArray(lang.filenames)) {\r\n            for (let filename of lang.filenames) {\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\r\n                resolvedLanguage.filenames.push(filename);\r\n            }\r\n        }\r\n        if (Array.isArray(lang.filenamePatterns)) {\r\n            for (let filenamePattern of lang.filenamePatterns) {\r\n                mime.registerTextMime({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\r\n            }\r\n        }\r\n        if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\r\n            let firstLineRegexStr = lang.firstLine;\r\n            if (firstLineRegexStr.charAt(0) !== '^') {\r\n                firstLineRegexStr = '^' + firstLineRegexStr;\r\n            }\r\n            try {\r\n                let firstLineRegex = new RegExp(firstLineRegexStr);\r\n                if (!strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\r\n                    mime.registerTextMime({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\r\n                }\r\n            }\r\n            catch (err) {\r\n                // Most likely, the regex was bad\r\n                onUnexpectedError(err);\r\n            }\r\n        }\r\n        resolvedLanguage.aliases.push(langId);\r\n        let langAliases = null;\r\n        if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\r\n            if (lang.aliases.length === 0) {\r\n                // signal that this language should not get a name\r\n                langAliases = [null];\r\n            }\r\n            else {\r\n                langAliases = lang.aliases;\r\n            }\r\n        }\r\n        if (langAliases !== null) {\r\n            for (const langAlias of langAliases) {\r\n                if (!langAlias || langAlias.length === 0) {\r\n                    continue;\r\n                }\r\n                resolvedLanguage.aliases.push(langAlias);\r\n            }\r\n        }\r\n        let containsAliases = (langAliases !== null && langAliases.length > 0);\r\n        if (containsAliases && langAliases[0] === null) {\r\n            // signal that this language should not get a name\r\n        }\r\n        else {\r\n            let bestName = (containsAliases ? langAliases[0] : null) || langId;\r\n            if (containsAliases || !resolvedLanguage.name) {\r\n                resolvedLanguage.name = bestName;\r\n            }\r\n        }\r\n        if (lang.configuration) {\r\n            resolvedLanguage.configurationFiles.push(lang.configuration);\r\n        }\r\n    }\r\n    isRegisteredMode(mimetypeOrModeId) {\r\n        // Is this a known mime type ?\r\n        if (hasOwnProperty.call(this._mimeTypesMap, mimetypeOrModeId)) {\r\n            return true;\r\n        }\r\n        // Is this a known mode id ?\r\n        return hasOwnProperty.call(this._languages, mimetypeOrModeId);\r\n    }\r\n    getModeIdForLanguageNameLowercase(languageNameLower) {\r\n        if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\r\n            return null;\r\n        }\r\n        return this._lowercaseNameMap[languageNameLower].language;\r\n    }\r\n    extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n        if (!commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n            return [];\r\n        }\r\n        return (commaSeparatedMimetypesOrCommaSeparatedIds.\r\n            split(',').\r\n            map((mimeTypeOrId) => mimeTypeOrId.trim()).\r\n            map((mimeTypeOrId) => {\r\n            if (hasOwnProperty.call(this._mimeTypesMap, mimeTypeOrId)) {\r\n                return this._mimeTypesMap[mimeTypeOrId].language;\r\n            }\r\n            return mimeTypeOrId;\r\n        }).\r\n            filter((modeId) => {\r\n            return hasOwnProperty.call(this._languages, modeId);\r\n        }));\r\n    }\r\n    getLanguageIdentifier(_modeId) {\r\n        if (_modeId === NULL_MODE_ID || _modeId === 0 /* Null */) {\r\n            return NULL_LANGUAGE_IDENTIFIER;\r\n        }\r\n        let modeId;\r\n        if (typeof _modeId === 'string') {\r\n            modeId = _modeId;\r\n        }\r\n        else {\r\n            modeId = this._languageIdToLanguage[_modeId];\r\n            if (!modeId) {\r\n                return null;\r\n            }\r\n        }\r\n        if (!hasOwnProperty.call(this._languages, modeId)) {\r\n            return null;\r\n        }\r\n        return this._languages[modeId].identifier;\r\n    }\r\n    getModeIdsFromFilepathOrFirstLine(resource, firstLine) {\r\n        if (!resource && !firstLine) {\r\n            return [];\r\n        }\r\n        let mimeTypes = mime.guessMimeTypes(resource, firstLine);\r\n        return this.extractModeIds(mimeTypes.join(','));\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { FrankensteinMode } from '../modes/abstractMode.js';\r\nimport { NULL_LANGUAGE_IDENTIFIER } from '../modes/nullMode.js';\r\nimport { LanguagesRegistry } from './languagesRegistry.js';\r\nimport { firstOrDefault } from '../../../base/common/arrays.js';\r\nclass LanguageSelection {\r\n    constructor(onLanguagesMaybeChanged, selector) {\r\n        this._selector = selector;\r\n        this.languageIdentifier = this._selector();\r\n        let listener;\r\n        this._onDidChange = new Emitter({\r\n            onFirstListenerAdd: () => {\r\n                listener = onLanguagesMaybeChanged(() => this._evaluate());\r\n            },\r\n            onLastListenerRemove: () => {\r\n                listener.dispose();\r\n            }\r\n        });\r\n        this.onDidChange = this._onDidChange.event;\r\n    }\r\n    _evaluate() {\r\n        let languageIdentifier = this._selector();\r\n        if (languageIdentifier.id === this.languageIdentifier.id) {\r\n            // no change\r\n            return;\r\n        }\r\n        this.languageIdentifier = languageIdentifier;\r\n        this._onDidChange.fire(this.languageIdentifier);\r\n    }\r\n}\r\nexport class ModeServiceImpl extends Disposable {\r\n    constructor(warnOnOverwrite = false) {\r\n        super();\r\n        this._onDidCreateMode = this._register(new Emitter());\r\n        this.onDidCreateMode = this._onDidCreateMode.event;\r\n        this._onLanguagesMaybeChanged = this._register(new Emitter({ leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */ }));\r\n        this.onLanguagesMaybeChanged = this._onLanguagesMaybeChanged.event;\r\n        this._instantiatedModes = {};\r\n        this._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\r\n        this._register(this._registry.onDidChange(() => this._onLanguagesMaybeChanged.fire()));\r\n    }\r\n    isRegisteredMode(mimetypeOrModeId) {\r\n        return this._registry.isRegisteredMode(mimetypeOrModeId);\r\n    }\r\n    getModeIdForLanguageName(alias) {\r\n        return this._registry.getModeIdForLanguageNameLowercase(alias);\r\n    }\r\n    getModeIdByFilepathOrFirstLine(resource, firstLine) {\r\n        const modeIds = this._registry.getModeIdsFromFilepathOrFirstLine(resource, firstLine);\r\n        return firstOrDefault(modeIds, null);\r\n    }\r\n    getModeId(commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n        const modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\r\n        return firstOrDefault(modeIds, null);\r\n    }\r\n    getLanguageIdentifier(modeId) {\r\n        return this._registry.getLanguageIdentifier(modeId);\r\n    }\r\n    // --- instantiation\r\n    create(commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n        return new LanguageSelection(this.onLanguagesMaybeChanged, () => {\r\n            const modeId = this.getModeId(commaSeparatedMimetypesOrCommaSeparatedIds);\r\n            return this._createModeAndGetLanguageIdentifier(modeId);\r\n        });\r\n    }\r\n    createByFilepathOrFirstLine(resource, firstLine) {\r\n        return new LanguageSelection(this.onLanguagesMaybeChanged, () => {\r\n            const modeId = this.getModeIdByFilepathOrFirstLine(resource, firstLine);\r\n            return this._createModeAndGetLanguageIdentifier(modeId);\r\n        });\r\n    }\r\n    _createModeAndGetLanguageIdentifier(modeId) {\r\n        // Fall back to plain text if no mode was found\r\n        const languageIdentifier = this.getLanguageIdentifier(modeId || 'plaintext') || NULL_LANGUAGE_IDENTIFIER;\r\n        this._getOrCreateMode(languageIdentifier.language);\r\n        return languageIdentifier;\r\n    }\r\n    triggerMode(commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n        const modeId = this.getModeId(commaSeparatedMimetypesOrCommaSeparatedIds);\r\n        // Fall back to plain text if no mode was found\r\n        this._getOrCreateMode(modeId || 'plaintext');\r\n    }\r\n    _getOrCreateMode(modeId) {\r\n        if (!this._instantiatedModes.hasOwnProperty(modeId)) {\r\n            let languageIdentifier = this.getLanguageIdentifier(modeId) || NULL_LANGUAGE_IDENTIFIER;\r\n            this._instantiatedModes[modeId] = new FrankensteinMode(languageIdentifier);\r\n            this._onDidCreateMode.fire(this._instantiatedModes[modeId]);\r\n        }\r\n        return this._instantiatedModes[modeId];\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nexport const IUndoRedoService = createDecorator('undoRedoService');\r\nexport class ResourceEditStackSnapshot {\r\n    constructor(resource, elements) {\r\n        this.resource = resource;\r\n        this.elements = elements;\r\n    }\r\n}\r\nexport class UndoRedoGroup {\r\n    constructor() {\r\n        this.id = UndoRedoGroup._ID++;\r\n        this.order = 1;\r\n    }\r\n    nextOrder() {\r\n        if (this.id === 0) {\r\n            return 0;\r\n        }\r\n        return this.order++;\r\n    }\r\n}\r\nUndoRedoGroup._ID = 0;\r\nUndoRedoGroup.None = new UndoRedoGroup();\r\nexport class UndoRedoSource {\r\n    constructor() {\r\n        this.id = UndoRedoSource._ID++;\r\n        this.order = 1;\r\n    }\r\n    nextOrder() {\r\n        if (this.id === 0) {\r\n            return 0;\r\n        }\r\n        return this.order++;\r\n    }\r\n}\r\nUndoRedoSource._ID = 0;\r\nUndoRedoSource.None = new UndoRedoSource();\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { TokenMetadata } from '../modes.js';\r\nimport { LogLevel } from '../../../platform/log/common/log.js';\r\nimport { MultilineTokens2, SparseEncodedTokens } from '../model/tokensStore.js';\r\nexport class SemanticTokensProviderStyling {\r\n    constructor(_legend, _themeService, _logService) {\r\n        this._legend = _legend;\r\n        this._themeService = _themeService;\r\n        this._logService = _logService;\r\n        this._hashTable = new HashTable();\r\n        this._hasWarnedOverlappingTokens = false;\r\n    }\r\n    getMetadata(tokenTypeIndex, tokenModifierSet, languageId) {\r\n        const entry = this._hashTable.get(tokenTypeIndex, tokenModifierSet, languageId.id);\r\n        let metadata;\r\n        if (entry) {\r\n            metadata = entry.metadata;\r\n            if (this._logService.getLevel() === LogLevel.Trace) {\r\n                this._logService.trace(`SemanticTokensProviderStyling [CACHED] ${tokenTypeIndex} / ${tokenModifierSet}: foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\r\n            }\r\n        }\r\n        else {\r\n            let tokenType = this._legend.tokenTypes[tokenTypeIndex];\r\n            const tokenModifiers = [];\r\n            if (tokenType) {\r\n                let modifierSet = tokenModifierSet;\r\n                for (let modifierIndex = 0; modifierSet > 0 && modifierIndex < this._legend.tokenModifiers.length; modifierIndex++) {\r\n                    if (modifierSet & 1) {\r\n                        tokenModifiers.push(this._legend.tokenModifiers[modifierIndex]);\r\n                    }\r\n                    modifierSet = modifierSet >> 1;\r\n                }\r\n                if (modifierSet > 0 && this._logService.getLevel() === LogLevel.Trace) {\r\n                    this._logService.trace(`SemanticTokensProviderStyling: unknown token modifier index: ${tokenModifierSet.toString(2)} for legend: ${JSON.stringify(this._legend.tokenModifiers)}`);\r\n                    tokenModifiers.push('not-in-legend');\r\n                }\r\n                const tokenStyle = this._themeService.getColorTheme().getTokenStyleMetadata(tokenType, tokenModifiers, languageId.language);\r\n                if (typeof tokenStyle === 'undefined') {\r\n                    metadata = 2147483647 /* NO_STYLING */;\r\n                }\r\n                else {\r\n                    metadata = 0;\r\n                    if (typeof tokenStyle.italic !== 'undefined') {\r\n                        const italicBit = (tokenStyle.italic ? 1 /* Italic */ : 0) << 11 /* FONT_STYLE_OFFSET */;\r\n                        metadata |= italicBit | 1 /* SEMANTIC_USE_ITALIC */;\r\n                    }\r\n                    if (typeof tokenStyle.bold !== 'undefined') {\r\n                        const boldBit = (tokenStyle.bold ? 2 /* Bold */ : 0) << 11 /* FONT_STYLE_OFFSET */;\r\n                        metadata |= boldBit | 2 /* SEMANTIC_USE_BOLD */;\r\n                    }\r\n                    if (typeof tokenStyle.underline !== 'undefined') {\r\n                        const underlineBit = (tokenStyle.underline ? 4 /* Underline */ : 0) << 11 /* FONT_STYLE_OFFSET */;\r\n                        metadata |= underlineBit | 4 /* SEMANTIC_USE_UNDERLINE */;\r\n                    }\r\n                    if (tokenStyle.foreground) {\r\n                        const foregroundBits = (tokenStyle.foreground) << 14 /* FOREGROUND_OFFSET */;\r\n                        metadata |= foregroundBits | 8 /* SEMANTIC_USE_FOREGROUND */;\r\n                    }\r\n                    if (metadata === 0) {\r\n                        // Nothing!\r\n                        metadata = 2147483647 /* NO_STYLING */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this._logService.getLevel() === LogLevel.Trace) {\r\n                    this._logService.trace(`SemanticTokensProviderStyling: unknown token type index: ${tokenTypeIndex} for legend: ${JSON.stringify(this._legend.tokenTypes)}`);\r\n                }\r\n                metadata = 2147483647 /* NO_STYLING */;\r\n                tokenType = 'not-in-legend';\r\n            }\r\n            this._hashTable.add(tokenTypeIndex, tokenModifierSet, languageId.id, metadata);\r\n            if (this._logService.getLevel() === LogLevel.Trace) {\r\n                this._logService.trace(`SemanticTokensProviderStyling ${tokenTypeIndex} (${tokenType}) / ${tokenModifierSet} (${tokenModifiers.join(' ')}): foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\r\n            }\r\n        }\r\n        return metadata;\r\n    }\r\n    warnOverlappingSemanticTokens(lineNumber, startColumn) {\r\n        if (!this._hasWarnedOverlappingTokens) {\r\n            this._hasWarnedOverlappingTokens = true;\r\n            console.warn(`Overlapping semantic tokens detected at lineNumber ${lineNumber}, column ${startColumn}`);\r\n        }\r\n    }\r\n}\r\nexport function toMultilineTokens2(tokens, styling, languageId) {\r\n    const srcData = tokens.data;\r\n    const tokenCount = (tokens.data.length / 5) | 0;\r\n    const tokensPerArea = Math.max(Math.ceil(tokenCount / 1024 /* DesiredMaxAreas */), 400 /* DesiredTokensPerArea */);\r\n    const result = [];\r\n    let tokenIndex = 0;\r\n    let lastLineNumber = 1;\r\n    let lastStartCharacter = 0;\r\n    while (tokenIndex < tokenCount) {\r\n        const tokenStartIndex = tokenIndex;\r\n        let tokenEndIndex = Math.min(tokenStartIndex + tokensPerArea, tokenCount);\r\n        // Keep tokens on the same line in the same area...\r\n        if (tokenEndIndex < tokenCount) {\r\n            let smallTokenEndIndex = tokenEndIndex;\r\n            while (smallTokenEndIndex - 1 > tokenStartIndex && srcData[5 * smallTokenEndIndex] === 0) {\r\n                smallTokenEndIndex--;\r\n            }\r\n            if (smallTokenEndIndex - 1 === tokenStartIndex) {\r\n                // there are so many tokens on this line that our area would be empty, we must now go right\r\n                let bigTokenEndIndex = tokenEndIndex;\r\n                while (bigTokenEndIndex + 1 < tokenCount && srcData[5 * bigTokenEndIndex] === 0) {\r\n                    bigTokenEndIndex++;\r\n                }\r\n                tokenEndIndex = bigTokenEndIndex;\r\n            }\r\n            else {\r\n                tokenEndIndex = smallTokenEndIndex;\r\n            }\r\n        }\r\n        let destData = new Uint32Array((tokenEndIndex - tokenStartIndex) * 4);\r\n        let destOffset = 0;\r\n        let areaLine = 0;\r\n        let prevLineNumber = 0;\r\n        let prevStartCharacter = 0;\r\n        let prevEndCharacter = 0;\r\n        while (tokenIndex < tokenEndIndex) {\r\n            const srcOffset = 5 * tokenIndex;\r\n            const deltaLine = srcData[srcOffset];\r\n            const deltaCharacter = srcData[srcOffset + 1];\r\n            const lineNumber = lastLineNumber + deltaLine;\r\n            const startCharacter = (deltaLine === 0 ? lastStartCharacter + deltaCharacter : deltaCharacter);\r\n            const length = srcData[srcOffset + 2];\r\n            const tokenTypeIndex = srcData[srcOffset + 3];\r\n            const tokenModifierSet = srcData[srcOffset + 4];\r\n            const metadata = styling.getMetadata(tokenTypeIndex, tokenModifierSet, languageId);\r\n            if (metadata !== 2147483647 /* NO_STYLING */) {\r\n                if (areaLine === 0) {\r\n                    areaLine = lineNumber;\r\n                }\r\n                if (prevLineNumber === lineNumber && prevEndCharacter > startCharacter) {\r\n                    styling.warnOverlappingSemanticTokens(lineNumber, startCharacter + 1);\r\n                    if (prevStartCharacter < startCharacter) {\r\n                        // the previous token survives after the overlapping one\r\n                        destData[destOffset - 4 + 2] = startCharacter;\r\n                    }\r\n                    else {\r\n                        // the previous token is entirely covered by the overlapping one\r\n                        destOffset -= 4;\r\n                    }\r\n                }\r\n                destData[destOffset] = lineNumber - areaLine;\r\n                destData[destOffset + 1] = startCharacter;\r\n                destData[destOffset + 2] = startCharacter + length;\r\n                destData[destOffset + 3] = metadata;\r\n                destOffset += 4;\r\n                prevLineNumber = lineNumber;\r\n                prevStartCharacter = startCharacter;\r\n                prevEndCharacter = startCharacter + length;\r\n            }\r\n            lastLineNumber = lineNumber;\r\n            lastStartCharacter = startCharacter;\r\n            tokenIndex++;\r\n        }\r\n        if (destOffset !== destData.length) {\r\n            destData = destData.subarray(0, destOffset);\r\n        }\r\n        const tokens = new MultilineTokens2(areaLine, new SparseEncodedTokens(destData));\r\n        result.push(tokens);\r\n    }\r\n    return result;\r\n}\r\nclass HashTableEntry {\r\n    constructor(tokenTypeIndex, tokenModifierSet, languageId, metadata) {\r\n        this.tokenTypeIndex = tokenTypeIndex;\r\n        this.tokenModifierSet = tokenModifierSet;\r\n        this.languageId = languageId;\r\n        this.metadata = metadata;\r\n        this.next = null;\r\n    }\r\n}\r\nclass HashTable {\r\n    constructor() {\r\n        this._elementsCount = 0;\r\n        this._currentLengthIndex = 0;\r\n        this._currentLength = HashTable._SIZES[this._currentLengthIndex];\r\n        this._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\r\n        this._elements = [];\r\n        HashTable._nullOutEntries(this._elements, this._currentLength);\r\n    }\r\n    static _nullOutEntries(entries, length) {\r\n        for (let i = 0; i < length; i++) {\r\n            entries[i] = null;\r\n        }\r\n    }\r\n    _hash2(n1, n2) {\r\n        return (((n1 << 5) - n1) + n2) | 0; // n1 * 31 + n2, keep as int32\r\n    }\r\n    _hashFunc(tokenTypeIndex, tokenModifierSet, languageId) {\r\n        return this._hash2(this._hash2(tokenTypeIndex, tokenModifierSet), languageId) % this._currentLength;\r\n    }\r\n    get(tokenTypeIndex, tokenModifierSet, languageId) {\r\n        const hash = this._hashFunc(tokenTypeIndex, tokenModifierSet, languageId);\r\n        let p = this._elements[hash];\r\n        while (p) {\r\n            if (p.tokenTypeIndex === tokenTypeIndex && p.tokenModifierSet === tokenModifierSet && p.languageId === languageId) {\r\n                return p;\r\n            }\r\n            p = p.next;\r\n        }\r\n        return null;\r\n    }\r\n    add(tokenTypeIndex, tokenModifierSet, languageId, metadata) {\r\n        this._elementsCount++;\r\n        if (this._growCount !== 0 && this._elementsCount >= this._growCount) {\r\n            // expand!\r\n            const oldElements = this._elements;\r\n            this._currentLengthIndex++;\r\n            this._currentLength = HashTable._SIZES[this._currentLengthIndex];\r\n            this._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\r\n            this._elements = [];\r\n            HashTable._nullOutEntries(this._elements, this._currentLength);\r\n            for (const first of oldElements) {\r\n                let p = first;\r\n                while (p) {\r\n                    const oldNext = p.next;\r\n                    p.next = null;\r\n                    this._add(p);\r\n                    p = oldNext;\r\n                }\r\n            }\r\n        }\r\n        this._add(new HashTableEntry(tokenTypeIndex, tokenModifierSet, languageId, metadata));\r\n    }\r\n    _add(element) {\r\n        const hash = this._hashFunc(element.tokenTypeIndex, element.tokenModifierSet, element.languageId);\r\n        element.next = this._elements[hash];\r\n        this._elements[hash] = element;\r\n    }\r\n}\r\nHashTable._SIZES = [3, 7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381, 32749, 65521, 131071, 262139, 524287, 1048573, 2097143];\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { VSBuffer } from '../../../base/common/buffer.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nfunction reverseEndianness(arr) {\r\n    for (let i = 0, len = arr.length; i < len; i += 4) {\r\n        // flip bytes 0<->3 and 1<->2\r\n        const b0 = arr[i + 0];\r\n        const b1 = arr[i + 1];\r\n        const b2 = arr[i + 2];\r\n        const b3 = arr[i + 3];\r\n        arr[i + 0] = b3;\r\n        arr[i + 1] = b2;\r\n        arr[i + 2] = b1;\r\n        arr[i + 3] = b0;\r\n    }\r\n}\r\nfunction toLittleEndianBuffer(arr) {\r\n    const uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\r\n    if (!platform.isLittleEndian()) {\r\n        // the byte order must be changed\r\n        reverseEndianness(uint8Arr);\r\n    }\r\n    return VSBuffer.wrap(uint8Arr);\r\n}\r\nexport function encodeSemanticTokensDto(semanticTokens) {\r\n    const dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\r\n    let offset = 0;\r\n    dest[offset++] = semanticTokens.id;\r\n    if (semanticTokens.type === 'full') {\r\n        dest[offset++] = 1 /* Full */;\r\n        dest[offset++] = semanticTokens.data.length;\r\n        dest.set(semanticTokens.data, offset);\r\n        offset += semanticTokens.data.length;\r\n    }\r\n    else {\r\n        dest[offset++] = 2 /* Delta */;\r\n        dest[offset++] = semanticTokens.deltas.length;\r\n        for (const delta of semanticTokens.deltas) {\r\n            dest[offset++] = delta.start;\r\n            dest[offset++] = delta.deleteCount;\r\n            if (delta.data) {\r\n                dest[offset++] = delta.data.length;\r\n                dest.set(delta.data, offset);\r\n                offset += delta.data.length;\r\n            }\r\n            else {\r\n                dest[offset++] = 0;\r\n            }\r\n        }\r\n    }\r\n    return toLittleEndianBuffer(dest);\r\n}\r\nfunction encodeSemanticTokensDtoSize(semanticTokens) {\r\n    let result = 0;\r\n    result += (+1 // id\r\n        + 1 // type\r\n    );\r\n    if (semanticTokens.type === 'full') {\r\n        result += (+1 // data length\r\n            + semanticTokens.data.length);\r\n    }\r\n    else {\r\n        result += (+1 // delta count\r\n        );\r\n        result += (+1 // start\r\n            + 1 // deleteCount\r\n            + 1 // data length\r\n        ) * semanticTokens.deltas.length;\r\n        for (const delta of semanticTokens.deltas) {\r\n            if (delta.data) {\r\n                result += delta.data.length;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { DocumentSemanticTokensProviderRegistry, DocumentRangeSemanticTokensProviderRegistry } from '../modes.js';\r\nimport { IModelService } from './modelService.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { encodeSemanticTokensDto } from './semanticTokensDto.js';\r\nimport { Range } from '../core/range.js';\r\nexport function isSemanticTokens(v) {\r\n    return v && !!(v.data);\r\n}\r\nexport function isSemanticTokensEdits(v) {\r\n    return v && Array.isArray(v.edits);\r\n}\r\nexport function getDocumentSemanticTokens(model, lastResultId, token) {\r\n    const provider = _getDocumentSemanticTokensProvider(model);\r\n    if (!provider) {\r\n        return null;\r\n    }\r\n    return {\r\n        provider: provider,\r\n        request: Promise.resolve(provider.provideDocumentSemanticTokens(model, lastResultId, token))\r\n    };\r\n}\r\nfunction _getDocumentSemanticTokensProvider(model) {\r\n    const result = DocumentSemanticTokensProviderRegistry.ordered(model);\r\n    return (result.length > 0 ? result[0] : null);\r\n}\r\nexport function getDocumentRangeSemanticTokensProvider(model) {\r\n    const result = DocumentRangeSemanticTokensProviderRegistry.ordered(model);\r\n    return (result.length > 0 ? result[0] : null);\r\n}\r\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokensLegend', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri] = args;\r\n    assertType(uri instanceof URI);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return undefined;\r\n    }\r\n    const provider = _getDocumentSemanticTokensProvider(model);\r\n    if (!provider) {\r\n        // there is no provider => fall back to a document range semantic tokens provider\r\n        return accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokensLegend', uri);\r\n    }\r\n    return provider.getLegend();\r\n}));\r\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokens', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri] = args;\r\n    assertType(uri instanceof URI);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return undefined;\r\n    }\r\n    const r = getDocumentSemanticTokens(model, null, CancellationToken.None);\r\n    if (!r) {\r\n        // there is no provider => fall back to a document range semantic tokens provider\r\n        return accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokens', uri, model.getFullModelRange());\r\n    }\r\n    const { provider, request } = r;\r\n    let result;\r\n    try {\r\n        result = yield request;\r\n    }\r\n    catch (err) {\r\n        onUnexpectedExternalError(err);\r\n        return undefined;\r\n    }\r\n    if (!result || !isSemanticTokens(result)) {\r\n        return undefined;\r\n    }\r\n    const buff = encodeSemanticTokensDto({\r\n        id: 0,\r\n        type: 'full',\r\n        data: result.data\r\n    });\r\n    if (result.resultId) {\r\n        provider.releaseDocumentSemanticTokens(result.resultId);\r\n    }\r\n    return buff;\r\n}));\r\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokensLegend', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri] = args;\r\n    assertType(uri instanceof URI);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return undefined;\r\n    }\r\n    const provider = getDocumentRangeSemanticTokensProvider(model);\r\n    if (!provider) {\r\n        return undefined;\r\n    }\r\n    return provider.getLegend();\r\n}));\r\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokens', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, range] = args;\r\n    assertType(uri instanceof URI);\r\n    assertType(Range.isIRange(range));\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return undefined;\r\n    }\r\n    const provider = getDocumentRangeSemanticTokensProvider(model);\r\n    if (!provider) {\r\n        // there is no provider\r\n        return undefined;\r\n    }\r\n    let result;\r\n    try {\r\n        result = yield provider.provideDocumentRangeSemanticTokens(model, Range.lift(range), CancellationToken.None);\r\n    }\r\n    catch (err) {\r\n        onUnexpectedExternalError(err);\r\n        return undefined;\r\n    }\r\n    if (!result || !isSemanticTokens(result)) {\r\n        return undefined;\r\n    }\r\n    return encodeSemanticTokensDto({\r\n        id: 0,\r\n        type: 'full',\r\n        data: result.data\r\n    });\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, DisposableStore, dispose } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport * as errors from '../../../base/common/errors.js';\r\nimport { EDITOR_MODEL_DEFAULTS } from '../config/editorOptions.js';\r\nimport { TextModel } from '../model/textModel.js';\r\nimport { DocumentSemanticTokensProviderRegistry } from '../modes.js';\r\nimport { PLAINTEXT_LANGUAGE_IDENTIFIER } from '../modes/modesRegistry.js';\r\nimport { ITextResourcePropertiesService } from './textResourceConfigurationService.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\r\nimport { StringSHA1 } from '../../../base/common/hash.js';\r\nimport { isEditStackElement } from '../model/editStack.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { SemanticTokensProviderStyling, toMultilineTokens2 } from './semanticTokensProviderStyling.js';\r\nimport { getDocumentSemanticTokens, isSemanticTokens, isSemanticTokensEdits } from './getSemanticTokens.js';\r\nfunction MODEL_ID(resource) {\r\n    return resource.toString();\r\n}\r\nfunction computeModelSha1(model) {\r\n    // compute the sha1\r\n    const shaComputer = new StringSHA1();\r\n    const snapshot = model.createSnapshot();\r\n    let text;\r\n    while ((text = snapshot.read())) {\r\n        shaComputer.update(text);\r\n    }\r\n    return shaComputer.digest();\r\n}\r\nclass ModelData {\r\n    constructor(model, onWillDispose, onDidChangeLanguage) {\r\n        this._modelEventListeners = new DisposableStore();\r\n        this.model = model;\r\n        this._languageSelection = null;\r\n        this._languageSelectionListener = null;\r\n        this._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\r\n        this._modelEventListeners.add(model.onDidChangeLanguage((e) => onDidChangeLanguage(model, e)));\r\n    }\r\n    _disposeLanguageSelection() {\r\n        if (this._languageSelectionListener) {\r\n            this._languageSelectionListener.dispose();\r\n            this._languageSelectionListener = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._modelEventListeners.dispose();\r\n        this._disposeLanguageSelection();\r\n    }\r\n    setLanguage(languageSelection) {\r\n        this._disposeLanguageSelection();\r\n        this._languageSelection = languageSelection;\r\n        this._languageSelectionListener = this._languageSelection.onDidChange(() => this.model.setMode(languageSelection.languageIdentifier));\r\n        this.model.setMode(languageSelection.languageIdentifier);\r\n    }\r\n}\r\nconst DEFAULT_EOL = (platform.isLinux || platform.isMacintosh) ? 1 /* LF */ : 2 /* CRLF */;\r\nclass DisposedModelInfo {\r\n    constructor(uri, initialUndoRedoSnapshot, time, sharesUndoRedoStack, heapSize, sha1, versionId, alternativeVersionId) {\r\n        this.uri = uri;\r\n        this.initialUndoRedoSnapshot = initialUndoRedoSnapshot;\r\n        this.time = time;\r\n        this.sharesUndoRedoStack = sharesUndoRedoStack;\r\n        this.heapSize = heapSize;\r\n        this.sha1 = sha1;\r\n        this.versionId = versionId;\r\n        this.alternativeVersionId = alternativeVersionId;\r\n    }\r\n}\r\nfunction schemaShouldMaintainUndoRedoElements(resource) {\r\n    return (resource.scheme === Schemas.file\r\n        || resource.scheme === Schemas.vscodeRemote\r\n        || resource.scheme === Schemas.userData\r\n        || resource.scheme === 'fake-fs' // for tests\r\n    );\r\n}\r\nlet ModelServiceImpl = class ModelServiceImpl extends Disposable {\r\n    constructor(_configurationService, _resourcePropertiesService, _themeService, _logService, _undoRedoService) {\r\n        super();\r\n        this._configurationService = _configurationService;\r\n        this._resourcePropertiesService = _resourcePropertiesService;\r\n        this._themeService = _themeService;\r\n        this._logService = _logService;\r\n        this._undoRedoService = _undoRedoService;\r\n        this._onModelAdded = this._register(new Emitter());\r\n        this.onModelAdded = this._onModelAdded.event;\r\n        this._onModelRemoved = this._register(new Emitter());\r\n        this.onModelRemoved = this._onModelRemoved.event;\r\n        this._onModelModeChanged = this._register(new Emitter());\r\n        this.onModelModeChanged = this._onModelModeChanged.event;\r\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\r\n        this._models = {};\r\n        this._disposedModels = new Map();\r\n        this._disposedModelsHeapSize = 0;\r\n        this._semanticStyling = this._register(new SemanticStyling(this._themeService, this._logService));\r\n        this._register(this._configurationService.onDidChangeConfiguration(() => this._updateModelOptions()));\r\n        this._updateModelOptions();\r\n        this._register(new SemanticColoringFeature(this, this._themeService, this._configurationService, this._semanticStyling));\r\n    }\r\n    static _readModelOptions(config, isForSimpleWidget) {\r\n        let tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\r\n        if (config.editor && typeof config.editor.tabSize !== 'undefined') {\r\n            const parsedTabSize = parseInt(config.editor.tabSize, 10);\r\n            if (!isNaN(parsedTabSize)) {\r\n                tabSize = parsedTabSize;\r\n            }\r\n            if (tabSize < 1) {\r\n                tabSize = 1;\r\n            }\r\n        }\r\n        let indentSize = tabSize;\r\n        if (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\r\n            const parsedIndentSize = parseInt(config.editor.indentSize, 10);\r\n            if (!isNaN(parsedIndentSize)) {\r\n                indentSize = parsedIndentSize;\r\n            }\r\n            if (indentSize < 1) {\r\n                indentSize = 1;\r\n            }\r\n        }\r\n        let insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\r\n        if (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\r\n            insertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\r\n        }\r\n        let newDefaultEOL = DEFAULT_EOL;\r\n        const eol = config.eol;\r\n        if (eol === '\\r\\n') {\r\n            newDefaultEOL = 2 /* CRLF */;\r\n        }\r\n        else if (eol === '\\n') {\r\n            newDefaultEOL = 1 /* LF */;\r\n        }\r\n        let trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\r\n        if (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\r\n            trimAutoWhitespace = (config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace));\r\n        }\r\n        let detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\r\n        if (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\r\n            detectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\r\n        }\r\n        let largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\r\n        if (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\r\n            largeFileOptimizations = (config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations));\r\n        }\r\n        return {\r\n            isForSimpleWidget: isForSimpleWidget,\r\n            tabSize: tabSize,\r\n            indentSize: indentSize,\r\n            insertSpaces: insertSpaces,\r\n            detectIndentation: detectIndentation,\r\n            defaultEOL: newDefaultEOL,\r\n            trimAutoWhitespace: trimAutoWhitespace,\r\n            largeFileOptimizations: largeFileOptimizations\r\n        };\r\n    }\r\n    _getEOL(resource, language) {\r\n        if (resource) {\r\n            return this._resourcePropertiesService.getEOL(resource, language);\r\n        }\r\n        const eol = this._configurationService.getValue('files.eol', { overrideIdentifier: language });\r\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\r\n            return eol;\r\n        }\r\n        return platform.OS === 3 /* Linux */ || platform.OS === 2 /* Macintosh */ ? '\\n' : '\\r\\n';\r\n    }\r\n    _shouldRestoreUndoStack() {\r\n        const result = this._configurationService.getValue('files.restoreUndoStack');\r\n        if (typeof result === 'boolean') {\r\n            return result;\r\n        }\r\n        return true;\r\n    }\r\n    getCreationOptions(language, resource, isForSimpleWidget) {\r\n        let creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\r\n        if (!creationOptions) {\r\n            const editor = this._configurationService.getValue('editor', { overrideIdentifier: language, resource });\r\n            const eol = this._getEOL(resource, language);\r\n            creationOptions = ModelServiceImpl._readModelOptions({ editor, eol }, isForSimpleWidget);\r\n            this._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\r\n        }\r\n        return creationOptions;\r\n    }\r\n    _updateModelOptions() {\r\n        const oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\r\n        this._modelCreationOptionsByLanguageAndResource = Object.create(null);\r\n        // Update options on all models\r\n        const keys = Object.keys(this._models);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            const modelId = keys[i];\r\n            const modelData = this._models[modelId];\r\n            const language = modelData.model.getLanguageIdentifier().language;\r\n            const uri = modelData.model.uri;\r\n            const oldOptions = oldOptionsByLanguageAndResource[language + uri];\r\n            const newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\r\n            ModelServiceImpl._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\r\n        }\r\n    }\r\n    static _setModelOptionsForModel(model, newOptions, currentOptions) {\r\n        if (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\r\n            model.setEOL(newOptions.defaultEOL === 1 /* LF */ ? 0 /* LF */ : 1 /* CRLF */);\r\n        }\r\n        if (currentOptions\r\n            && (currentOptions.detectIndentation === newOptions.detectIndentation)\r\n            && (currentOptions.insertSpaces === newOptions.insertSpaces)\r\n            && (currentOptions.tabSize === newOptions.tabSize)\r\n            && (currentOptions.indentSize === newOptions.indentSize)\r\n            && (currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace)) {\r\n            // Same indent opts, no need to touch the model\r\n            return;\r\n        }\r\n        if (newOptions.detectIndentation) {\r\n            model.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\r\n            model.updateOptions({\r\n                trimAutoWhitespace: newOptions.trimAutoWhitespace\r\n            });\r\n        }\r\n        else {\r\n            model.updateOptions({\r\n                insertSpaces: newOptions.insertSpaces,\r\n                tabSize: newOptions.tabSize,\r\n                indentSize: newOptions.indentSize,\r\n                trimAutoWhitespace: newOptions.trimAutoWhitespace\r\n            });\r\n        }\r\n    }\r\n    // --- begin IModelService\r\n    _insertDisposedModel(disposedModelData) {\r\n        this._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\r\n        this._disposedModelsHeapSize += disposedModelData.heapSize;\r\n    }\r\n    _removeDisposedModel(resource) {\r\n        const disposedModelData = this._disposedModels.get(MODEL_ID(resource));\r\n        if (disposedModelData) {\r\n            this._disposedModelsHeapSize -= disposedModelData.heapSize;\r\n        }\r\n        this._disposedModels.delete(MODEL_ID(resource));\r\n        return disposedModelData;\r\n    }\r\n    _ensureDisposedModelsHeapSize(maxModelsHeapSize) {\r\n        if (this._disposedModelsHeapSize > maxModelsHeapSize) {\r\n            // we must remove some old undo stack elements to free up some memory\r\n            const disposedModels = [];\r\n            this._disposedModels.forEach(entry => {\r\n                if (!entry.sharesUndoRedoStack) {\r\n                    disposedModels.push(entry);\r\n                }\r\n            });\r\n            disposedModels.sort((a, b) => a.time - b.time);\r\n            while (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\r\n                const disposedModel = disposedModels.shift();\r\n                this._removeDisposedModel(disposedModel.uri);\r\n                if (disposedModel.initialUndoRedoSnapshot !== null) {\r\n                    this._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _createModelData(value, languageIdentifier, resource, isForSimpleWidget) {\r\n        // create & save the model\r\n        const options = this.getCreationOptions(languageIdentifier.language, resource, isForSimpleWidget);\r\n        const model = new TextModel(value, options, languageIdentifier, resource, this._undoRedoService);\r\n        if (resource && this._disposedModels.has(MODEL_ID(resource))) {\r\n            const disposedModelData = this._removeDisposedModel(resource);\r\n            const elements = this._undoRedoService.getElements(resource);\r\n            const sha1IsEqual = (computeModelSha1(model) === disposedModelData.sha1);\r\n            if (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\r\n                for (const element of elements.past) {\r\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\r\n                        element.setModel(model);\r\n                    }\r\n                }\r\n                for (const element of elements.future) {\r\n                    if (isEditStackElement(element) && element.matchesResource(resource)) {\r\n                        element.setModel(model);\r\n                    }\r\n                }\r\n                this._undoRedoService.setElementsValidFlag(resource, true, (element) => (isEditStackElement(element) && element.matchesResource(resource)));\r\n                if (sha1IsEqual) {\r\n                    model._overwriteVersionId(disposedModelData.versionId);\r\n                    model._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\r\n                    model._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\r\n                }\r\n            }\r\n            else {\r\n                if (disposedModelData.initialUndoRedoSnapshot !== null) {\r\n                    this._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\r\n                }\r\n            }\r\n        }\r\n        const modelId = MODEL_ID(model.uri);\r\n        if (this._models[modelId]) {\r\n            // There already exists a model with this id => this is a programmer error\r\n            throw new Error('ModelService: Cannot add model because it already exists!');\r\n        }\r\n        const modelData = new ModelData(model, (model) => this._onWillDispose(model), (model, e) => this._onDidChangeLanguage(model, e));\r\n        this._models[modelId] = modelData;\r\n        return modelData;\r\n    }\r\n    createModel(value, languageSelection, resource, isForSimpleWidget = false) {\r\n        let modelData;\r\n        if (languageSelection) {\r\n            modelData = this._createModelData(value, languageSelection.languageIdentifier, resource, isForSimpleWidget);\r\n            this.setMode(modelData.model, languageSelection);\r\n        }\r\n        else {\r\n            modelData = this._createModelData(value, PLAINTEXT_LANGUAGE_IDENTIFIER, resource, isForSimpleWidget);\r\n        }\r\n        this._onModelAdded.fire(modelData.model);\r\n        return modelData.model;\r\n    }\r\n    setMode(model, languageSelection) {\r\n        if (!languageSelection) {\r\n            return;\r\n        }\r\n        const modelData = this._models[MODEL_ID(model.uri)];\r\n        if (!modelData) {\r\n            return;\r\n        }\r\n        modelData.setLanguage(languageSelection);\r\n    }\r\n    getModels() {\r\n        const ret = [];\r\n        const keys = Object.keys(this._models);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            const modelId = keys[i];\r\n            ret.push(this._models[modelId].model);\r\n        }\r\n        return ret;\r\n    }\r\n    getModel(resource) {\r\n        const modelId = MODEL_ID(resource);\r\n        const modelData = this._models[modelId];\r\n        if (!modelData) {\r\n            return null;\r\n        }\r\n        return modelData.model;\r\n    }\r\n    getSemanticTokensProviderStyling(provider) {\r\n        return this._semanticStyling.get(provider);\r\n    }\r\n    // --- end IModelService\r\n    _onWillDispose(model) {\r\n        const modelId = MODEL_ID(model.uri);\r\n        const modelData = this._models[modelId];\r\n        const sharesUndoRedoStack = (this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString());\r\n        let maintainUndoRedoStack = false;\r\n        let heapSize = 0;\r\n        if (sharesUndoRedoStack || (this._shouldRestoreUndoStack() && schemaShouldMaintainUndoRedoElements(model.uri))) {\r\n            const elements = this._undoRedoService.getElements(model.uri);\r\n            if (elements.past.length > 0 || elements.future.length > 0) {\r\n                for (const element of elements.past) {\r\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\r\n                        maintainUndoRedoStack = true;\r\n                        heapSize += element.heapSize(model.uri);\r\n                        element.setModel(model.uri); // remove reference from text buffer instance\r\n                    }\r\n                }\r\n                for (const element of elements.future) {\r\n                    if (isEditStackElement(element) && element.matchesResource(model.uri)) {\r\n                        maintainUndoRedoStack = true;\r\n                        heapSize += element.heapSize(model.uri);\r\n                        element.setModel(model.uri); // remove reference from text buffer instance\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const maxMemory = ModelServiceImpl.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\r\n        if (!maintainUndoRedoStack) {\r\n            if (!sharesUndoRedoStack) {\r\n                const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\r\n                if (initialUndoRedoSnapshot !== null) {\r\n                    this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\r\n                }\r\n            }\r\n        }\r\n        else if (!sharesUndoRedoStack && heapSize > maxMemory) {\r\n            // the undo stack for this file would never fit in the configured memory, so don't bother with it.\r\n            const initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\r\n            if (initialUndoRedoSnapshot !== null) {\r\n                this._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\r\n            }\r\n        }\r\n        else {\r\n            this._ensureDisposedModelsHeapSize(maxMemory - heapSize);\r\n            // We only invalidate the elements, but they remain in the undo-redo service.\r\n            this._undoRedoService.setElementsValidFlag(model.uri, false, (element) => (isEditStackElement(element) && element.matchesResource(model.uri)));\r\n            this._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, computeModelSha1(model), model.getVersionId(), model.getAlternativeVersionId()));\r\n        }\r\n        delete this._models[modelId];\r\n        modelData.dispose();\r\n        // clean up cache\r\n        delete this._modelCreationOptionsByLanguageAndResource[model.getLanguageIdentifier().language + model.uri];\r\n        this._onModelRemoved.fire(model);\r\n    }\r\n    _onDidChangeLanguage(model, e) {\r\n        const oldModeId = e.oldLanguage;\r\n        const newModeId = model.getLanguageIdentifier().language;\r\n        const oldOptions = this.getCreationOptions(oldModeId, model.uri, model.isForSimpleWidget);\r\n        const newOptions = this.getCreationOptions(newModeId, model.uri, model.isForSimpleWidget);\r\n        ModelServiceImpl._setModelOptionsForModel(model, newOptions, oldOptions);\r\n        this._onModelModeChanged.fire({ model, oldModeId });\r\n    }\r\n};\r\nModelServiceImpl.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\r\nModelServiceImpl = __decorate([\r\n    __param(0, IConfigurationService),\r\n    __param(1, ITextResourcePropertiesService),\r\n    __param(2, IThemeService),\r\n    __param(3, ILogService),\r\n    __param(4, IUndoRedoService)\r\n], ModelServiceImpl);\r\nexport { ModelServiceImpl };\r\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\r\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\r\n    var _a;\r\n    const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageIdentifier().language, resource: model.uri })) === null || _a === void 0 ? void 0 : _a.enabled;\r\n    if (typeof setting === 'boolean') {\r\n        return setting;\r\n    }\r\n    return themeService.getColorTheme().semanticHighlighting;\r\n}\r\nclass SemanticColoringFeature extends Disposable {\r\n    constructor(modelService, themeService, configurationService, semanticStyling) {\r\n        super();\r\n        this._watchers = Object.create(null);\r\n        this._semanticStyling = semanticStyling;\r\n        const register = (model) => {\r\n            this._watchers[model.uri.toString()] = new ModelSemanticColoring(model, themeService, this._semanticStyling);\r\n        };\r\n        const deregister = (model, modelSemanticColoring) => {\r\n            modelSemanticColoring.dispose();\r\n            delete this._watchers[model.uri.toString()];\r\n        };\r\n        const handleSettingOrThemeChange = () => {\r\n            for (let model of modelService.getModels()) {\r\n                const curr = this._watchers[model.uri.toString()];\r\n                if (isSemanticColoringEnabled(model, themeService, configurationService)) {\r\n                    if (!curr) {\r\n                        register(model);\r\n                    }\r\n                }\r\n                else {\r\n                    if (curr) {\r\n                        deregister(model, curr);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this._register(modelService.onModelAdded((model) => {\r\n            if (isSemanticColoringEnabled(model, themeService, configurationService)) {\r\n                register(model);\r\n            }\r\n        }));\r\n        this._register(modelService.onModelRemoved((model) => {\r\n            const curr = this._watchers[model.uri.toString()];\r\n            if (curr) {\r\n                deregister(model, curr);\r\n            }\r\n        }));\r\n        this._register(configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\r\n                handleSettingOrThemeChange();\r\n            }\r\n        }));\r\n        this._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\r\n    }\r\n}\r\nclass SemanticStyling extends Disposable {\r\n    constructor(_themeService, _logService) {\r\n        super();\r\n        this._themeService = _themeService;\r\n        this._logService = _logService;\r\n        this._caches = new WeakMap();\r\n        this._register(this._themeService.onDidColorThemeChange(() => {\r\n            this._caches = new WeakMap();\r\n        }));\r\n    }\r\n    get(provider) {\r\n        if (!this._caches.has(provider)) {\r\n            this._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._logService));\r\n        }\r\n        return this._caches.get(provider);\r\n    }\r\n}\r\nclass SemanticTokensResponse {\r\n    constructor(_provider, resultId, data) {\r\n        this._provider = _provider;\r\n        this.resultId = resultId;\r\n        this.data = data;\r\n    }\r\n    dispose() {\r\n        this._provider.releaseDocumentSemanticTokens(this.resultId);\r\n    }\r\n}\r\nexport class ModelSemanticColoring extends Disposable {\r\n    constructor(model, themeService, stylingProvider) {\r\n        super();\r\n        this._isDisposed = false;\r\n        this._model = model;\r\n        this._semanticStyling = stylingProvider;\r\n        this._fetchDocumentSemanticTokens = this._register(new RunOnceScheduler(() => this._fetchDocumentSemanticTokensNow(), ModelSemanticColoring.FETCH_DOCUMENT_SEMANTIC_TOKENS_DELAY));\r\n        this._currentDocumentResponse = null;\r\n        this._currentDocumentRequestCancellationTokenSource = null;\r\n        this._documentProvidersChangeListeners = [];\r\n        this._register(this._model.onDidChangeContent(() => {\r\n            if (!this._fetchDocumentSemanticTokens.isScheduled()) {\r\n                this._fetchDocumentSemanticTokens.schedule();\r\n            }\r\n        }));\r\n        this._register(this._model.onDidChangeLanguage(() => {\r\n            // clear any outstanding state\r\n            if (this._currentDocumentResponse) {\r\n                this._currentDocumentResponse.dispose();\r\n                this._currentDocumentResponse = null;\r\n            }\r\n            if (this._currentDocumentRequestCancellationTokenSource) {\r\n                this._currentDocumentRequestCancellationTokenSource.cancel();\r\n                this._currentDocumentRequestCancellationTokenSource = null;\r\n            }\r\n            this._setDocumentSemanticTokens(null, null, null, []);\r\n            this._fetchDocumentSemanticTokens.schedule(0);\r\n        }));\r\n        const bindDocumentChangeListeners = () => {\r\n            dispose(this._documentProvidersChangeListeners);\r\n            this._documentProvidersChangeListeners = [];\r\n            for (const provider of DocumentSemanticTokensProviderRegistry.all(model)) {\r\n                if (typeof provider.onDidChange === 'function') {\r\n                    this._documentProvidersChangeListeners.push(provider.onDidChange(() => this._fetchDocumentSemanticTokens.schedule(0)));\r\n                }\r\n            }\r\n        };\r\n        bindDocumentChangeListeners();\r\n        this._register(DocumentSemanticTokensProviderRegistry.onDidChange(() => {\r\n            bindDocumentChangeListeners();\r\n            this._fetchDocumentSemanticTokens.schedule();\r\n        }));\r\n        this._register(themeService.onDidColorThemeChange(_ => {\r\n            // clear out existing tokens\r\n            this._setDocumentSemanticTokens(null, null, null, []);\r\n            this._fetchDocumentSemanticTokens.schedule();\r\n        }));\r\n        this._fetchDocumentSemanticTokens.schedule(0);\r\n    }\r\n    dispose() {\r\n        if (this._currentDocumentResponse) {\r\n            this._currentDocumentResponse.dispose();\r\n            this._currentDocumentResponse = null;\r\n        }\r\n        if (this._currentDocumentRequestCancellationTokenSource) {\r\n            this._currentDocumentRequestCancellationTokenSource.cancel();\r\n            this._currentDocumentRequestCancellationTokenSource = null;\r\n        }\r\n        this._setDocumentSemanticTokens(null, null, null, []);\r\n        this._isDisposed = true;\r\n        super.dispose();\r\n    }\r\n    _fetchDocumentSemanticTokensNow() {\r\n        if (this._currentDocumentRequestCancellationTokenSource) {\r\n            // there is already a request running, let it finish...\r\n            return;\r\n        }\r\n        const cancellationTokenSource = new CancellationTokenSource();\r\n        const lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\r\n        const r = getDocumentSemanticTokens(this._model, lastResultId, cancellationTokenSource.token);\r\n        if (!r) {\r\n            // there is no provider\r\n            if (this._currentDocumentResponse) {\r\n                // there are semantic tokens set\r\n                this._model.setSemanticTokens(null, false);\r\n            }\r\n            return;\r\n        }\r\n        const { provider, request } = r;\r\n        this._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\r\n        const pendingChanges = [];\r\n        const contentChangeListener = this._model.onDidChangeContent((e) => {\r\n            pendingChanges.push(e);\r\n        });\r\n        const styling = this._semanticStyling.get(provider);\r\n        request.then((res) => {\r\n            this._currentDocumentRequestCancellationTokenSource = null;\r\n            contentChangeListener.dispose();\r\n            this._setDocumentSemanticTokens(provider, res || null, styling, pendingChanges);\r\n        }, (err) => {\r\n            const isExpectedError = err && (errors.isPromiseCanceledError(err) || (typeof err.message === 'string' && err.message.indexOf('busy') !== -1));\r\n            if (!isExpectedError) {\r\n                errors.onUnexpectedError(err);\r\n            }\r\n            // Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\r\n            // The API does not have a special error kind to express this...\r\n            this._currentDocumentRequestCancellationTokenSource = null;\r\n            contentChangeListener.dispose();\r\n            if (pendingChanges.length > 0) {\r\n                // More changes occurred while the request was running\r\n                if (!this._fetchDocumentSemanticTokens.isScheduled()) {\r\n                    this._fetchDocumentSemanticTokens.schedule();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static _copy(src, srcOffset, dest, destOffset, length) {\r\n        for (let i = 0; i < length; i++) {\r\n            dest[destOffset + i] = src[srcOffset + i];\r\n        }\r\n    }\r\n    _setDocumentSemanticTokens(provider, tokens, styling, pendingChanges) {\r\n        const currentResponse = this._currentDocumentResponse;\r\n        const rescheduleIfNeeded = () => {\r\n            if (pendingChanges.length > 0 && !this._fetchDocumentSemanticTokens.isScheduled()) {\r\n                this._fetchDocumentSemanticTokens.schedule();\r\n            }\r\n        };\r\n        if (this._currentDocumentResponse) {\r\n            this._currentDocumentResponse.dispose();\r\n            this._currentDocumentResponse = null;\r\n        }\r\n        if (this._isDisposed) {\r\n            // disposed!\r\n            if (provider && tokens) {\r\n                provider.releaseDocumentSemanticTokens(tokens.resultId);\r\n            }\r\n            return;\r\n        }\r\n        if (!provider || !styling) {\r\n            this._model.setSemanticTokens(null, false);\r\n            return;\r\n        }\r\n        if (!tokens) {\r\n            this._model.setSemanticTokens(null, true);\r\n            rescheduleIfNeeded();\r\n            return;\r\n        }\r\n        if (isSemanticTokensEdits(tokens)) {\r\n            if (!currentResponse) {\r\n                // not possible!\r\n                this._model.setSemanticTokens(null, true);\r\n                return;\r\n            }\r\n            if (tokens.edits.length === 0) {\r\n                // nothing to do!\r\n                tokens = {\r\n                    resultId: tokens.resultId,\r\n                    data: currentResponse.data\r\n                };\r\n            }\r\n            else {\r\n                let deltaLength = 0;\r\n                for (const edit of tokens.edits) {\r\n                    deltaLength += (edit.data ? edit.data.length : 0) - edit.deleteCount;\r\n                }\r\n                const srcData = currentResponse.data;\r\n                const destData = new Uint32Array(srcData.length + deltaLength);\r\n                let srcLastStart = srcData.length;\r\n                let destLastStart = destData.length;\r\n                for (let i = tokens.edits.length - 1; i >= 0; i--) {\r\n                    const edit = tokens.edits[i];\r\n                    const copyCount = srcLastStart - (edit.start + edit.deleteCount);\r\n                    if (copyCount > 0) {\r\n                        ModelSemanticColoring._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\r\n                        destLastStart -= copyCount;\r\n                    }\r\n                    if (edit.data) {\r\n                        ModelSemanticColoring._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\r\n                        destLastStart -= edit.data.length;\r\n                    }\r\n                    srcLastStart = edit.start;\r\n                }\r\n                if (srcLastStart > 0) {\r\n                    ModelSemanticColoring._copy(srcData, 0, destData, 0, srcLastStart);\r\n                }\r\n                tokens = {\r\n                    resultId: tokens.resultId,\r\n                    data: destData\r\n                };\r\n            }\r\n        }\r\n        if (isSemanticTokens(tokens)) {\r\n            this._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\r\n            const result = toMultilineTokens2(tokens, styling, this._model.getLanguageIdentifier());\r\n            // Adjust incoming semantic tokens\r\n            if (pendingChanges.length > 0) {\r\n                // More changes occurred while the request was running\r\n                // We need to:\r\n                // 1. Adjust incoming semantic tokens\r\n                // 2. Request them again\r\n                for (const change of pendingChanges) {\r\n                    for (const area of result) {\r\n                        for (const singleChange of change.changes) {\r\n                            area.applyEdit(singleChange.range, singleChange.text);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._model.setSemanticTokens(result, true);\r\n        }\r\n        else {\r\n            this._model.setSemanticTokens(null, true);\r\n        }\r\n        rescheduleIfNeeded();\r\n    }\r\n}\r\nModelSemanticColoring.FETCH_DOCUMENT_SEMANTIC_TOKENS_DELAY = 300;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Color } from '../../../../base/common/color.js';\r\nexport class ParsedTokenThemeRule {\r\n    constructor(token, index, fontStyle, foreground, background) {\r\n        this._parsedThemeRuleBrand = undefined;\r\n        this.token = token;\r\n        this.index = index;\r\n        this.fontStyle = fontStyle;\r\n        this.foreground = foreground;\r\n        this.background = background;\r\n    }\r\n}\r\n/**\r\n * Parse a raw theme into rules.\r\n */\r\nexport function parseTokenTheme(source) {\r\n    if (!source || !Array.isArray(source)) {\r\n        return [];\r\n    }\r\n    let result = [], resultLen = 0;\r\n    for (let i = 0, len = source.length; i < len; i++) {\r\n        let entry = source[i];\r\n        let fontStyle = -1 /* NotSet */;\r\n        if (typeof entry.fontStyle === 'string') {\r\n            fontStyle = 0 /* None */;\r\n            let segments = entry.fontStyle.split(' ');\r\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\r\n                let segment = segments[j];\r\n                switch (segment) {\r\n                    case 'italic':\r\n                        fontStyle = fontStyle | 1 /* Italic */;\r\n                        break;\r\n                    case 'bold':\r\n                        fontStyle = fontStyle | 2 /* Bold */;\r\n                        break;\r\n                    case 'underline':\r\n                        fontStyle = fontStyle | 4 /* Underline */;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        let foreground = null;\r\n        if (typeof entry.foreground === 'string') {\r\n            foreground = entry.foreground;\r\n        }\r\n        let background = null;\r\n        if (typeof entry.background === 'string') {\r\n            background = entry.background;\r\n        }\r\n        result[resultLen++] = new ParsedTokenThemeRule(entry.token || '', i, fontStyle, foreground, background);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Resolve rules (i.e. inheritance).\r\n */\r\nfunction resolveParsedTokenThemeRules(parsedThemeRules, customTokenColors) {\r\n    // Sort rules lexicographically, and then by index if necessary\r\n    parsedThemeRules.sort((a, b) => {\r\n        let r = strcmp(a.token, b.token);\r\n        if (r !== 0) {\r\n            return r;\r\n        }\r\n        return a.index - b.index;\r\n    });\r\n    // Determine defaults\r\n    let defaultFontStyle = 0 /* None */;\r\n    let defaultForeground = '000000';\r\n    let defaultBackground = 'ffffff';\r\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].token === '') {\r\n        let incomingDefaults = parsedThemeRules.shift();\r\n        if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\r\n            defaultFontStyle = incomingDefaults.fontStyle;\r\n        }\r\n        if (incomingDefaults.foreground !== null) {\r\n            defaultForeground = incomingDefaults.foreground;\r\n        }\r\n        if (incomingDefaults.background !== null) {\r\n            defaultBackground = incomingDefaults.background;\r\n        }\r\n    }\r\n    let colorMap = new ColorMap();\r\n    // start with token colors from custom token themes\r\n    for (let color of customTokenColors) {\r\n        colorMap.getId(color);\r\n    }\r\n    let foregroundColorId = colorMap.getId(defaultForeground);\r\n    let backgroundColorId = colorMap.getId(defaultBackground);\r\n    let defaults = new ThemeTrieElementRule(defaultFontStyle, foregroundColorId, backgroundColorId);\r\n    let root = new ThemeTrieElement(defaults);\r\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\r\n        let rule = parsedThemeRules[i];\r\n        root.insert(rule.token, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\r\n    }\r\n    return new TokenTheme(colorMap, root);\r\n}\r\nconst colorRegExp = /^#?([0-9A-Fa-f]{6})([0-9A-Fa-f]{2})?$/;\r\nexport class ColorMap {\r\n    constructor() {\r\n        this._lastColorId = 0;\r\n        this._id2color = [];\r\n        this._color2id = new Map();\r\n    }\r\n    getId(color) {\r\n        if (color === null) {\r\n            return 0;\r\n        }\r\n        const match = color.match(colorRegExp);\r\n        if (!match) {\r\n            throw new Error('Illegal value for token color: ' + color);\r\n        }\r\n        color = match[1].toUpperCase();\r\n        let value = this._color2id.get(color);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        value = ++this._lastColorId;\r\n        this._color2id.set(color, value);\r\n        this._id2color[value] = Color.fromHex('#' + color);\r\n        return value;\r\n    }\r\n    getColorMap() {\r\n        return this._id2color.slice(0);\r\n    }\r\n}\r\nexport class TokenTheme {\r\n    constructor(colorMap, root) {\r\n        this._colorMap = colorMap;\r\n        this._root = root;\r\n        this._cache = new Map();\r\n    }\r\n    static createFromRawTokenTheme(source, customTokenColors) {\r\n        return this.createFromParsedTokenTheme(parseTokenTheme(source), customTokenColors);\r\n    }\r\n    static createFromParsedTokenTheme(source, customTokenColors) {\r\n        return resolveParsedTokenThemeRules(source, customTokenColors);\r\n    }\r\n    getColorMap() {\r\n        return this._colorMap.getColorMap();\r\n    }\r\n    _match(token) {\r\n        return this._root.match(token);\r\n    }\r\n    match(languageId, token) {\r\n        // The cache contains the metadata without the language bits set.\r\n        let result = this._cache.get(token);\r\n        if (typeof result === 'undefined') {\r\n            let rule = this._match(token);\r\n            let standardToken = toStandardTokenType(token);\r\n            result = (rule.metadata\r\n                | (standardToken << 8 /* TOKEN_TYPE_OFFSET */)) >>> 0;\r\n            this._cache.set(token, result);\r\n        }\r\n        return (result\r\n            | (languageId << 0 /* LANGUAGEID_OFFSET */)) >>> 0;\r\n    }\r\n}\r\nconst STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|regexp)\\b/;\r\nexport function toStandardTokenType(tokenType) {\r\n    let m = tokenType.match(STANDARD_TOKEN_TYPE_REGEXP);\r\n    if (!m) {\r\n        return 0 /* Other */;\r\n    }\r\n    switch (m[1]) {\r\n        case 'comment':\r\n            return 1 /* Comment */;\r\n        case 'string':\r\n            return 2 /* String */;\r\n        case 'regex':\r\n            return 4 /* RegEx */;\r\n        case 'regexp':\r\n            return 4 /* RegEx */;\r\n    }\r\n    throw new Error('Unexpected match for standard token type!');\r\n}\r\nexport function strcmp(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    if (a > b) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport class ThemeTrieElementRule {\r\n    constructor(fontStyle, foreground, background) {\r\n        this._themeTrieElementRuleBrand = undefined;\r\n        this._fontStyle = fontStyle;\r\n        this._foreground = foreground;\r\n        this._background = background;\r\n        this.metadata = ((this._fontStyle << 11 /* FONT_STYLE_OFFSET */)\r\n            | (this._foreground << 14 /* FOREGROUND_OFFSET */)\r\n            | (this._background << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n    }\r\n    clone() {\r\n        return new ThemeTrieElementRule(this._fontStyle, this._foreground, this._background);\r\n    }\r\n    acceptOverwrite(fontStyle, foreground, background) {\r\n        if (fontStyle !== -1 /* NotSet */) {\r\n            this._fontStyle = fontStyle;\r\n        }\r\n        if (foreground !== 0 /* None */) {\r\n            this._foreground = foreground;\r\n        }\r\n        if (background !== 0 /* None */) {\r\n            this._background = background;\r\n        }\r\n        this.metadata = ((this._fontStyle << 11 /* FONT_STYLE_OFFSET */)\r\n            | (this._foreground << 14 /* FOREGROUND_OFFSET */)\r\n            | (this._background << 23 /* BACKGROUND_OFFSET */)) >>> 0;\r\n    }\r\n}\r\nexport class ThemeTrieElement {\r\n    constructor(mainRule) {\r\n        this._themeTrieElementBrand = undefined;\r\n        this._mainRule = mainRule;\r\n        this._children = new Map();\r\n    }\r\n    match(token) {\r\n        if (token === '') {\r\n            return this._mainRule;\r\n        }\r\n        let dotIndex = token.indexOf('.');\r\n        let head;\r\n        let tail;\r\n        if (dotIndex === -1) {\r\n            head = token;\r\n            tail = '';\r\n        }\r\n        else {\r\n            head = token.substring(0, dotIndex);\r\n            tail = token.substring(dotIndex + 1);\r\n        }\r\n        let child = this._children.get(head);\r\n        if (typeof child !== 'undefined') {\r\n            return child.match(tail);\r\n        }\r\n        return this._mainRule;\r\n    }\r\n    insert(token, fontStyle, foreground, background) {\r\n        if (token === '') {\r\n            // Merge into the main rule\r\n            this._mainRule.acceptOverwrite(fontStyle, foreground, background);\r\n            return;\r\n        }\r\n        let dotIndex = token.indexOf('.');\r\n        let head;\r\n        let tail;\r\n        if (dotIndex === -1) {\r\n            head = token;\r\n            tail = '';\r\n        }\r\n        else {\r\n            head = token.substring(0, dotIndex);\r\n            tail = token.substring(dotIndex + 1);\r\n        }\r\n        let child = this._children.get(head);\r\n        if (typeof child === 'undefined') {\r\n            child = new ThemeTrieElement(this._mainRule.clone());\r\n            this._children.set(head, child);\r\n        }\r\n        child.insert(tail, fontStyle, foreground, background);\r\n    }\r\n}\r\nexport function generateTokensCSSForColorMap(colorMap) {\r\n    let rules = [];\r\n    for (let i = 1, len = colorMap.length; i < len; i++) {\r\n        let color = colorMap[i];\r\n        rules[i] = `.mtk${i} { color: ${color}; }`;\r\n    }\r\n    rules.push('.mtki { font-style: italic; }');\r\n    rules.push('.mtkb { font-weight: bold; }');\r\n    rules.push('.mtku { text-decoration: underline; text-underline-position: under; }');\r\n    return rules.join('\\n');\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { editorActiveIndentGuides, editorIndentGuides } from '../../common/view/editorColorRegistry.js';\r\nimport { editorBackground, editorForeground, editorInactiveSelection, editorSelectionHighlight } from '../../../platform/theme/common/colorRegistry.js';\r\n/* -------------------------------- Begin vs theme -------------------------------- */\r\nexport const vs = {\r\n    base: 'vs',\r\n    inherit: false,\r\n    rules: [\r\n        { token: '', foreground: '000000', background: 'fffffe' },\r\n        { token: 'invalid', foreground: 'cd3131' },\r\n        { token: 'emphasis', fontStyle: 'italic' },\r\n        { token: 'strong', fontStyle: 'bold' },\r\n        { token: 'variable', foreground: '001188' },\r\n        { token: 'variable.predefined', foreground: '4864AA' },\r\n        { token: 'constant', foreground: 'dd0000' },\r\n        { token: 'comment', foreground: '008000' },\r\n        { token: 'number', foreground: '098658' },\r\n        { token: 'number.hex', foreground: '3030c0' },\r\n        { token: 'regexp', foreground: '800000' },\r\n        { token: 'annotation', foreground: '808080' },\r\n        { token: 'type', foreground: '008080' },\r\n        { token: 'delimiter', foreground: '000000' },\r\n        { token: 'delimiter.html', foreground: '383838' },\r\n        { token: 'delimiter.xml', foreground: '0000FF' },\r\n        { token: 'tag', foreground: '800000' },\r\n        { token: 'tag.id.pug', foreground: '4F76AC' },\r\n        { token: 'tag.class.pug', foreground: '4F76AC' },\r\n        { token: 'meta.scss', foreground: '800000' },\r\n        { token: 'metatag', foreground: 'e00000' },\r\n        { token: 'metatag.content.html', foreground: 'FF0000' },\r\n        { token: 'metatag.html', foreground: '808080' },\r\n        { token: 'metatag.xml', foreground: '808080' },\r\n        { token: 'metatag.php', fontStyle: 'bold' },\r\n        { token: 'key', foreground: '863B00' },\r\n        { token: 'string.key.json', foreground: 'A31515' },\r\n        { token: 'string.value.json', foreground: '0451A5' },\r\n        { token: 'attribute.name', foreground: 'FF0000' },\r\n        { token: 'attribute.value', foreground: '0451A5' },\r\n        { token: 'attribute.value.number', foreground: '098658' },\r\n        { token: 'attribute.value.unit', foreground: '098658' },\r\n        { token: 'attribute.value.html', foreground: '0000FF' },\r\n        { token: 'attribute.value.xml', foreground: '0000FF' },\r\n        { token: 'string', foreground: 'A31515' },\r\n        { token: 'string.html', foreground: '0000FF' },\r\n        { token: 'string.sql', foreground: 'FF0000' },\r\n        { token: 'string.yaml', foreground: '0451A5' },\r\n        { token: 'keyword', foreground: '0000FF' },\r\n        { token: 'keyword.json', foreground: '0451A5' },\r\n        { token: 'keyword.flow', foreground: 'AF00DB' },\r\n        { token: 'keyword.flow.scss', foreground: '0000FF' },\r\n        { token: 'operator.scss', foreground: '666666' },\r\n        { token: 'operator.sql', foreground: '778899' },\r\n        { token: 'operator.swift', foreground: '666666' },\r\n        { token: 'predefined.sql', foreground: 'C700C7' },\r\n    ],\r\n    colors: {\r\n        [editorBackground]: '#FFFFFE',\r\n        [editorForeground]: '#000000',\r\n        [editorInactiveSelection]: '#E5EBF1',\r\n        [editorIndentGuides]: '#D3D3D3',\r\n        [editorActiveIndentGuides]: '#939393',\r\n        [editorSelectionHighlight]: '#ADD6FF4D'\r\n    }\r\n};\r\n/* -------------------------------- End vs theme -------------------------------- */\r\n/* -------------------------------- Begin vs-dark theme -------------------------------- */\r\nexport const vs_dark = {\r\n    base: 'vs-dark',\r\n    inherit: false,\r\n    rules: [\r\n        { token: '', foreground: 'D4D4D4', background: '1E1E1E' },\r\n        { token: 'invalid', foreground: 'f44747' },\r\n        { token: 'emphasis', fontStyle: 'italic' },\r\n        { token: 'strong', fontStyle: 'bold' },\r\n        { token: 'variable', foreground: '74B0DF' },\r\n        { token: 'variable.predefined', foreground: '4864AA' },\r\n        { token: 'variable.parameter', foreground: '9CDCFE' },\r\n        { token: 'constant', foreground: '569CD6' },\r\n        { token: 'comment', foreground: '608B4E' },\r\n        { token: 'number', foreground: 'B5CEA8' },\r\n        { token: 'number.hex', foreground: '5BB498' },\r\n        { token: 'regexp', foreground: 'B46695' },\r\n        { token: 'annotation', foreground: 'cc6666' },\r\n        { token: 'type', foreground: '3DC9B0' },\r\n        { token: 'delimiter', foreground: 'DCDCDC' },\r\n        { token: 'delimiter.html', foreground: '808080' },\r\n        { token: 'delimiter.xml', foreground: '808080' },\r\n        { token: 'tag', foreground: '569CD6' },\r\n        { token: 'tag.id.pug', foreground: '4F76AC' },\r\n        { token: 'tag.class.pug', foreground: '4F76AC' },\r\n        { token: 'meta.scss', foreground: 'A79873' },\r\n        { token: 'meta.tag', foreground: 'CE9178' },\r\n        { token: 'metatag', foreground: 'DD6A6F' },\r\n        { token: 'metatag.content.html', foreground: '9CDCFE' },\r\n        { token: 'metatag.html', foreground: '569CD6' },\r\n        { token: 'metatag.xml', foreground: '569CD6' },\r\n        { token: 'metatag.php', fontStyle: 'bold' },\r\n        { token: 'key', foreground: '9CDCFE' },\r\n        { token: 'string.key.json', foreground: '9CDCFE' },\r\n        { token: 'string.value.json', foreground: 'CE9178' },\r\n        { token: 'attribute.name', foreground: '9CDCFE' },\r\n        { token: 'attribute.value', foreground: 'CE9178' },\r\n        { token: 'attribute.value.number.css', foreground: 'B5CEA8' },\r\n        { token: 'attribute.value.unit.css', foreground: 'B5CEA8' },\r\n        { token: 'attribute.value.hex.css', foreground: 'D4D4D4' },\r\n        { token: 'string', foreground: 'CE9178' },\r\n        { token: 'string.sql', foreground: 'FF0000' },\r\n        { token: 'keyword', foreground: '569CD6' },\r\n        { token: 'keyword.flow', foreground: 'C586C0' },\r\n        { token: 'keyword.json', foreground: 'CE9178' },\r\n        { token: 'keyword.flow.scss', foreground: '569CD6' },\r\n        { token: 'operator.scss', foreground: '909090' },\r\n        { token: 'operator.sql', foreground: '778899' },\r\n        { token: 'operator.swift', foreground: '909090' },\r\n        { token: 'predefined.sql', foreground: 'FF00FF' },\r\n    ],\r\n    colors: {\r\n        [editorBackground]: '#1E1E1E',\r\n        [editorForeground]: '#D4D4D4',\r\n        [editorInactiveSelection]: '#3A3D41',\r\n        [editorIndentGuides]: '#404040',\r\n        [editorActiveIndentGuides]: '#707070',\r\n        [editorSelectionHighlight]: '#ADD6FF26'\r\n    }\r\n};\r\n/* -------------------------------- End vs-dark theme -------------------------------- */\r\n/* -------------------------------- Begin hc-black theme -------------------------------- */\r\nexport const hc_black = {\r\n    base: 'hc-black',\r\n    inherit: false,\r\n    rules: [\r\n        { token: '', foreground: 'FFFFFF', background: '000000' },\r\n        { token: 'invalid', foreground: 'f44747' },\r\n        { token: 'emphasis', fontStyle: 'italic' },\r\n        { token: 'strong', fontStyle: 'bold' },\r\n        { token: 'variable', foreground: '1AEBFF' },\r\n        { token: 'variable.parameter', foreground: '9CDCFE' },\r\n        { token: 'constant', foreground: '569CD6' },\r\n        { token: 'comment', foreground: '608B4E' },\r\n        { token: 'number', foreground: 'FFFFFF' },\r\n        { token: 'regexp', foreground: 'C0C0C0' },\r\n        { token: 'annotation', foreground: '569CD6' },\r\n        { token: 'type', foreground: '3DC9B0' },\r\n        { token: 'delimiter', foreground: 'FFFF00' },\r\n        { token: 'delimiter.html', foreground: 'FFFF00' },\r\n        { token: 'tag', foreground: '569CD6' },\r\n        { token: 'tag.id.pug', foreground: '4F76AC' },\r\n        { token: 'tag.class.pug', foreground: '4F76AC' },\r\n        { token: 'meta', foreground: 'D4D4D4' },\r\n        { token: 'meta.tag', foreground: 'CE9178' },\r\n        { token: 'metatag', foreground: '569CD6' },\r\n        { token: 'metatag.content.html', foreground: '1AEBFF' },\r\n        { token: 'metatag.html', foreground: '569CD6' },\r\n        { token: 'metatag.xml', foreground: '569CD6' },\r\n        { token: 'metatag.php', fontStyle: 'bold' },\r\n        { token: 'key', foreground: '9CDCFE' },\r\n        { token: 'string.key', foreground: '9CDCFE' },\r\n        { token: 'string.value', foreground: 'CE9178' },\r\n        { token: 'attribute.name', foreground: '569CD6' },\r\n        { token: 'attribute.value', foreground: '3FF23F' },\r\n        { token: 'string', foreground: 'CE9178' },\r\n        { token: 'string.sql', foreground: 'FF0000' },\r\n        { token: 'keyword', foreground: '569CD6' },\r\n        { token: 'keyword.flow', foreground: 'C586C0' },\r\n        { token: 'operator.sql', foreground: '778899' },\r\n        { token: 'operator.swift', foreground: '909090' },\r\n        { token: 'predefined.sql', foreground: 'FF00FF' },\r\n    ],\r\n    colors: {\r\n        [editorBackground]: '#000000',\r\n        [editorForeground]: '#FFFFFF',\r\n        [editorIndentGuides]: '#FFFFFF',\r\n        [editorActiveIndentGuides]: '#FFFFFF',\r\n    }\r\n};\r\n/* -------------------------------- End hc-black theme -------------------------------- */\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { ThemeIcon } from '../common/themeService.js';\r\nimport { getIconRegistry } from '../common/iconRegistry.js';\r\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nexport function getIconsStyleSheet() {\r\n    const onDidChangeEmmiter = new Emitter();\r\n    const iconRegistry = getIconRegistry();\r\n    iconRegistry.onDidChange(() => onDidChangeEmmiter.fire());\r\n    return {\r\n        onDidChange: onDidChangeEmmiter.event,\r\n        getCSS() {\r\n            const usedFontIds = {};\r\n            const formatIconRule = (contribution) => {\r\n                let definition = contribution.defaults;\r\n                while (ThemeIcon.isThemeIcon(definition)) {\r\n                    const c = iconRegistry.getIcon(definition.id);\r\n                    if (!c) {\r\n                        return undefined;\r\n                    }\r\n                    definition = c.defaults;\r\n                }\r\n                const fontId = definition.fontId;\r\n                if (fontId) {\r\n                    const fontContribution = iconRegistry.getIconFont(fontId);\r\n                    if (fontContribution) {\r\n                        usedFontIds[fontId] = fontContribution;\r\n                        return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontId)}; }`;\r\n                    }\r\n                }\r\n                return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\r\n            };\r\n            const rules = [];\r\n            for (let contribution of iconRegistry.getIcons()) {\r\n                const rule = formatIconRule(contribution);\r\n                if (rule) {\r\n                    rules.push(rule);\r\n                }\r\n            }\r\n            for (let id in usedFontIds) {\r\n                const fontContribution = usedFontIds[id];\r\n                const src = fontContribution.definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\r\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)}; }`);\r\n            }\r\n            return rules.join('\\n');\r\n        }\r\n    };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { TokenizationRegistry, TokenMetadata } from '../../common/modes.js';\r\nimport { TokenTheme, generateTokensCSSForColorMap } from '../../common/modes/supports/tokenization.js';\r\nimport { hc_black, vs, vs_dark } from '../common/themes.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Extensions as ThemingExtensions } from '../../../platform/theme/common/themeService.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { ColorScheme } from '../../../platform/theme/common/theme.js';\r\nimport { getIconsStyleSheet } from '../../../platform/theme/browser/iconsStyleSheet.js';\r\nconst VS_THEME_NAME = 'vs';\r\nconst VS_DARK_THEME_NAME = 'vs-dark';\r\nconst HC_BLACK_THEME_NAME = 'hc-black';\r\nconst colorRegistry = Registry.as(Extensions.ColorContribution);\r\nconst themingRegistry = Registry.as(ThemingExtensions.ThemingContribution);\r\nclass StandaloneTheme {\r\n    constructor(name, standaloneThemeData) {\r\n        this.semanticHighlighting = false;\r\n        this.themeData = standaloneThemeData;\r\n        let base = standaloneThemeData.base;\r\n        if (name.length > 0) {\r\n            if (isBuiltinTheme(name)) {\r\n                this.id = name;\r\n            }\r\n            else {\r\n                this.id = base + ' ' + name;\r\n            }\r\n            this.themeName = name;\r\n        }\r\n        else {\r\n            this.id = base;\r\n            this.themeName = base;\r\n        }\r\n        this.colors = null;\r\n        this.defaultColors = Object.create(null);\r\n        this._tokenTheme = null;\r\n    }\r\n    get base() {\r\n        return this.themeData.base;\r\n    }\r\n    notifyBaseUpdated() {\r\n        if (this.themeData.inherit) {\r\n            this.colors = null;\r\n            this._tokenTheme = null;\r\n        }\r\n    }\r\n    getColors() {\r\n        if (!this.colors) {\r\n            const colors = new Map();\r\n            for (let id in this.themeData.colors) {\r\n                colors.set(id, Color.fromHex(this.themeData.colors[id]));\r\n            }\r\n            if (this.themeData.inherit) {\r\n                let baseData = getBuiltinRules(this.themeData.base);\r\n                for (let id in baseData.colors) {\r\n                    if (!colors.has(id)) {\r\n                        colors.set(id, Color.fromHex(baseData.colors[id]));\r\n                    }\r\n                }\r\n            }\r\n            this.colors = colors;\r\n        }\r\n        return this.colors;\r\n    }\r\n    getColor(colorId, useDefault) {\r\n        const color = this.getColors().get(colorId);\r\n        if (color) {\r\n            return color;\r\n        }\r\n        if (useDefault !== false) {\r\n            return this.getDefault(colorId);\r\n        }\r\n        return undefined;\r\n    }\r\n    getDefault(colorId) {\r\n        let color = this.defaultColors[colorId];\r\n        if (color) {\r\n            return color;\r\n        }\r\n        color = colorRegistry.resolveDefaultColor(colorId, this);\r\n        this.defaultColors[colorId] = color;\r\n        return color;\r\n    }\r\n    defines(colorId) {\r\n        return Object.prototype.hasOwnProperty.call(this.getColors(), colorId);\r\n    }\r\n    get type() {\r\n        switch (this.base) {\r\n            case VS_THEME_NAME: return ColorScheme.LIGHT;\r\n            case HC_BLACK_THEME_NAME: return ColorScheme.HIGH_CONTRAST;\r\n            default: return ColorScheme.DARK;\r\n        }\r\n    }\r\n    get tokenTheme() {\r\n        if (!this._tokenTheme) {\r\n            let rules = [];\r\n            let encodedTokensColors = [];\r\n            if (this.themeData.inherit) {\r\n                let baseData = getBuiltinRules(this.themeData.base);\r\n                rules = baseData.rules;\r\n                if (baseData.encodedTokensColors) {\r\n                    encodedTokensColors = baseData.encodedTokensColors;\r\n                }\r\n            }\r\n            rules = rules.concat(this.themeData.rules);\r\n            if (this.themeData.encodedTokensColors) {\r\n                encodedTokensColors = this.themeData.encodedTokensColors;\r\n            }\r\n            this._tokenTheme = TokenTheme.createFromRawTokenTheme(rules, encodedTokensColors);\r\n        }\r\n        return this._tokenTheme;\r\n    }\r\n    getTokenStyleMetadata(type, modifiers, modelLanguage) {\r\n        // use theme rules match\r\n        const style = this.tokenTheme._match([type].concat(modifiers).join('.'));\r\n        const metadata = style.metadata;\r\n        const foreground = TokenMetadata.getForeground(metadata);\r\n        const fontStyle = TokenMetadata.getFontStyle(metadata);\r\n        return {\r\n            foreground: foreground,\r\n            italic: Boolean(fontStyle & 1 /* Italic */),\r\n            bold: Boolean(fontStyle & 2 /* Bold */),\r\n            underline: Boolean(fontStyle & 4 /* Underline */)\r\n        };\r\n    }\r\n}\r\nfunction isBuiltinTheme(themeName) {\r\n    return (themeName === VS_THEME_NAME\r\n        || themeName === VS_DARK_THEME_NAME\r\n        || themeName === HC_BLACK_THEME_NAME);\r\n}\r\nfunction getBuiltinRules(builtinTheme) {\r\n    switch (builtinTheme) {\r\n        case VS_THEME_NAME:\r\n            return vs;\r\n        case VS_DARK_THEME_NAME:\r\n            return vs_dark;\r\n        case HC_BLACK_THEME_NAME:\r\n            return hc_black;\r\n    }\r\n}\r\nfunction newBuiltInTheme(builtinTheme) {\r\n    let themeData = getBuiltinRules(builtinTheme);\r\n    return new StandaloneTheme(builtinTheme, themeData);\r\n}\r\nexport class StandaloneThemeServiceImpl extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this._onColorThemeChange = this._register(new Emitter());\r\n        this.onDidColorThemeChange = this._onColorThemeChange.event;\r\n        this._environment = Object.create(null);\r\n        this._autoDetectHighContrast = true;\r\n        this._knownThemes = new Map();\r\n        this._knownThemes.set(VS_THEME_NAME, newBuiltInTheme(VS_THEME_NAME));\r\n        this._knownThemes.set(VS_DARK_THEME_NAME, newBuiltInTheme(VS_DARK_THEME_NAME));\r\n        this._knownThemes.set(HC_BLACK_THEME_NAME, newBuiltInTheme(HC_BLACK_THEME_NAME));\r\n        const iconsStyleSheet = getIconsStyleSheet();\r\n        this._codiconCSS = iconsStyleSheet.getCSS();\r\n        this._themeCSS = '';\r\n        this._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\r\n        this._globalStyleElement = null;\r\n        this._styleElements = [];\r\n        this._colorMapOverride = null;\r\n        this.setTheme(VS_THEME_NAME);\r\n        iconsStyleSheet.onDidChange(() => {\r\n            this._codiconCSS = iconsStyleSheet.getCSS();\r\n            this._updateCSS();\r\n        });\r\n        dom.addMatchMediaChangeListener('(forced-colors: active)', () => {\r\n            this._updateActualTheme();\r\n        });\r\n    }\r\n    registerEditorContainer(domNode) {\r\n        if (dom.isInShadowDOM(domNode)) {\r\n            return this._registerShadowDomContainer(domNode);\r\n        }\r\n        return this._registerRegularEditorContainer();\r\n    }\r\n    _registerRegularEditorContainer() {\r\n        if (!this._globalStyleElement) {\r\n            this._globalStyleElement = dom.createStyleSheet();\r\n            this._globalStyleElement.className = 'monaco-colors';\r\n            this._globalStyleElement.textContent = this._allCSS;\r\n            this._styleElements.push(this._globalStyleElement);\r\n        }\r\n        return Disposable.None;\r\n    }\r\n    _registerShadowDomContainer(domNode) {\r\n        const styleElement = dom.createStyleSheet(domNode);\r\n        styleElement.className = 'monaco-colors';\r\n        styleElement.textContent = this._allCSS;\r\n        this._styleElements.push(styleElement);\r\n        return {\r\n            dispose: () => {\r\n                for (let i = 0; i < this._styleElements.length; i++) {\r\n                    if (this._styleElements[i] === styleElement) {\r\n                        this._styleElements.splice(i, 1);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    defineTheme(themeName, themeData) {\r\n        if (!/^[a-z0-9\\-]+$/i.test(themeName)) {\r\n            throw new Error('Illegal theme name!');\r\n        }\r\n        if (!isBuiltinTheme(themeData.base) && !isBuiltinTheme(themeName)) {\r\n            throw new Error('Illegal theme base!');\r\n        }\r\n        // set or replace theme\r\n        this._knownThemes.set(themeName, new StandaloneTheme(themeName, themeData));\r\n        if (isBuiltinTheme(themeName)) {\r\n            this._knownThemes.forEach(theme => {\r\n                if (theme.base === themeName) {\r\n                    theme.notifyBaseUpdated();\r\n                }\r\n            });\r\n        }\r\n        if (this._theme.themeName === themeName) {\r\n            this.setTheme(themeName); // refresh theme\r\n        }\r\n    }\r\n    getColorTheme() {\r\n        return this._theme;\r\n    }\r\n    setColorMapOverride(colorMapOverride) {\r\n        this._colorMapOverride = colorMapOverride;\r\n        this._updateThemeOrColorMap();\r\n    }\r\n    setTheme(themeName) {\r\n        let theme;\r\n        if (this._knownThemes.has(themeName)) {\r\n            theme = this._knownThemes.get(themeName);\r\n        }\r\n        else {\r\n            theme = this._knownThemes.get(VS_THEME_NAME);\r\n        }\r\n        this._desiredTheme = theme;\r\n        this._updateActualTheme();\r\n    }\r\n    _updateActualTheme() {\r\n        const theme = (this._autoDetectHighContrast && window.matchMedia(`(forced-colors: active)`).matches\r\n            ? this._knownThemes.get(HC_BLACK_THEME_NAME)\r\n            : this._desiredTheme);\r\n        if (this._theme === theme) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        this._theme = theme;\r\n        this._updateThemeOrColorMap();\r\n    }\r\n    setAutoDetectHighContrast(autoDetectHighContrast) {\r\n        this._autoDetectHighContrast = autoDetectHighContrast;\r\n        this._updateActualTheme();\r\n    }\r\n    _updateThemeOrColorMap() {\r\n        let cssRules = [];\r\n        let hasRule = {};\r\n        let ruleCollector = {\r\n            addRule: (rule) => {\r\n                if (!hasRule[rule]) {\r\n                    cssRules.push(rule);\r\n                    hasRule[rule] = true;\r\n                }\r\n            }\r\n        };\r\n        themingRegistry.getThemingParticipants().forEach(p => p(this._theme, ruleCollector, this._environment));\r\n        const colorMap = this._colorMapOverride || this._theme.tokenTheme.getColorMap();\r\n        ruleCollector.addRule(generateTokensCSSForColorMap(colorMap));\r\n        this._themeCSS = cssRules.join('\\n');\r\n        this._updateCSS();\r\n        TokenizationRegistry.setColorMap(colorMap);\r\n        this._onColorThemeChange.fire(this._theme);\r\n    }\r\n    _updateCSS() {\r\n        this._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\r\n        this._styleElements.forEach(styleElement => styleElement.textContent = this._allCSS);\r\n    }\r\n    getFileIconTheme() {\r\n        return {\r\n            hasFileIcons: false,\r\n            hasFolderIcons: false,\r\n            hidesExplorerArrows: false\r\n        };\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { PauseableEmitter } from '../../../base/common/event.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nimport { DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { TernarySearchTree } from '../../../base/common/map.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { CommandsRegistry } from '../../commands/common/commands.js';\r\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\r\nimport { IContextKeyService, SET_CONTEXT_COMMAND_ID, RawContextKey } from '../common/contextkey.js';\r\nimport { KeybindingResolver } from '../../keybinding/common/keybindingResolver.js';\r\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\r\nexport class Context {\r\n    constructor(id, parent) {\r\n        this._id = id;\r\n        this._parent = parent;\r\n        this._value = Object.create(null);\r\n        this._value['_contextId'] = id;\r\n    }\r\n    setValue(key, value) {\r\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\r\n        if (this._value[key] !== value) {\r\n            this._value[key] = value;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    removeValue(key) {\r\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\r\n        if (key in this._value) {\r\n            delete this._value[key];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getValue(key) {\r\n        const ret = this._value[key];\r\n        if (typeof ret === 'undefined' && this._parent) {\r\n            return this._parent.getValue(key);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nclass NullContext extends Context {\r\n    constructor() {\r\n        super(-1, null);\r\n    }\r\n    setValue(key, value) {\r\n        return false;\r\n    }\r\n    removeValue(key) {\r\n        return false;\r\n    }\r\n    getValue(key) {\r\n        return undefined;\r\n    }\r\n}\r\nNullContext.INSTANCE = new NullContext();\r\nclass ConfigAwareContextValuesContainer extends Context {\r\n    constructor(id, _configurationService, emitter) {\r\n        super(id, null);\r\n        this._configurationService = _configurationService;\r\n        this._values = TernarySearchTree.forConfigKeys();\r\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\r\n            if (event.source === 6 /* DEFAULT */) {\r\n                // new setting, reset everything\r\n                const allKeys = Array.from(Iterable.map(this._values, ([k]) => k));\r\n                this._values.clear();\r\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\r\n            }\r\n            else {\r\n                const changedKeys = [];\r\n                for (const configKey of event.affectedKeys) {\r\n                    const contextKey = `config.${configKey}`;\r\n                    const cachedItems = this._values.findSuperstr(contextKey);\r\n                    if (cachedItems !== undefined) {\r\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\r\n                        this._values.deleteSuperstr(contextKey);\r\n                    }\r\n                    if (this._values.has(contextKey)) {\r\n                        changedKeys.push(contextKey);\r\n                        this._values.delete(contextKey);\r\n                    }\r\n                }\r\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\r\n            }\r\n        });\r\n    }\r\n    dispose() {\r\n        this._listener.dispose();\r\n    }\r\n    getValue(key) {\r\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\r\n            return super.getValue(key);\r\n        }\r\n        if (this._values.has(key)) {\r\n            return this._values.get(key);\r\n        }\r\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\r\n        const configValue = this._configurationService.getValue(configKey);\r\n        let value = undefined;\r\n        switch (typeof configValue) {\r\n            case 'number':\r\n            case 'boolean':\r\n            case 'string':\r\n                value = configValue;\r\n                break;\r\n            default:\r\n                if (Array.isArray(configValue)) {\r\n                    value = JSON.stringify(configValue);\r\n                }\r\n                else {\r\n                    value = configValue;\r\n                }\r\n        }\r\n        this._values.set(key, value);\r\n        return value;\r\n    }\r\n    setValue(key, value) {\r\n        return super.setValue(key, value);\r\n    }\r\n    removeValue(key) {\r\n        return super.removeValue(key);\r\n    }\r\n}\r\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\r\nclass ContextKey {\r\n    constructor(service, key, defaultValue) {\r\n        this._service = service;\r\n        this._key = key;\r\n        this._defaultValue = defaultValue;\r\n        this.reset();\r\n    }\r\n    set(value) {\r\n        this._service.setContext(this._key, value);\r\n    }\r\n    reset() {\r\n        if (typeof this._defaultValue === 'undefined') {\r\n            this._service.removeContext(this._key);\r\n        }\r\n        else {\r\n            this._service.setContext(this._key, this._defaultValue);\r\n        }\r\n    }\r\n    get() {\r\n        return this._service.getContextKeyValue(this._key);\r\n    }\r\n}\r\nclass SimpleContextKeyChangeEvent {\r\n    constructor(key) {\r\n        this.key = key;\r\n    }\r\n    affectsSome(keys) {\r\n        return keys.has(this.key);\r\n    }\r\n}\r\nclass ArrayContextKeyChangeEvent {\r\n    constructor(keys) {\r\n        this.keys = keys;\r\n    }\r\n    affectsSome(keys) {\r\n        for (const key of this.keys) {\r\n            if (keys.has(key)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass CompositeContextKeyChangeEvent {\r\n    constructor(events) {\r\n        this.events = events;\r\n    }\r\n    affectsSome(keys) {\r\n        for (const e of this.events) {\r\n            if (e.affectsSome(keys)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class AbstractContextKeyService {\r\n    constructor(myContextId) {\r\n        this._onDidChangeContext = new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) });\r\n        this.onDidChangeContext = this._onDidChangeContext.event;\r\n        this._isDisposed = false;\r\n        this._myContextId = myContextId;\r\n    }\r\n    createKey(key, defaultValue) {\r\n        if (this._isDisposed) {\r\n            throw new Error(`AbstractContextKeyService has been disposed`);\r\n        }\r\n        return new ContextKey(this, key, defaultValue);\r\n    }\r\n    bufferChangeEvents(callback) {\r\n        this._onDidChangeContext.pause();\r\n        try {\r\n            callback();\r\n        }\r\n        finally {\r\n            this._onDidChangeContext.resume();\r\n        }\r\n    }\r\n    createScoped(domNode) {\r\n        if (this._isDisposed) {\r\n            throw new Error(`AbstractContextKeyService has been disposed`);\r\n        }\r\n        return new ScopedContextKeyService(this, domNode);\r\n    }\r\n    contextMatchesRules(rules) {\r\n        if (this._isDisposed) {\r\n            throw new Error(`AbstractContextKeyService has been disposed`);\r\n        }\r\n        const context = this.getContextValuesContainer(this._myContextId);\r\n        const result = KeybindingResolver.contextMatchesRules(context, rules);\r\n        // console.group(rules.serialize() + ' -> ' + result);\r\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\r\n        // console.groupEnd();\r\n        return result;\r\n    }\r\n    getContextKeyValue(key) {\r\n        if (this._isDisposed) {\r\n            return undefined;\r\n        }\r\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\r\n    }\r\n    setContext(key, value) {\r\n        if (this._isDisposed) {\r\n            return;\r\n        }\r\n        const myContext = this.getContextValuesContainer(this._myContextId);\r\n        if (!myContext) {\r\n            return;\r\n        }\r\n        if (myContext.setValue(key, value)) {\r\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\r\n        }\r\n    }\r\n    removeContext(key) {\r\n        if (this._isDisposed) {\r\n            return;\r\n        }\r\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\r\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\r\n        }\r\n    }\r\n    getContext(target) {\r\n        if (this._isDisposed) {\r\n            return NullContext.INSTANCE;\r\n        }\r\n        return this.getContextValuesContainer(findContextAttr(target));\r\n    }\r\n}\r\nlet ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\r\n    constructor(configurationService) {\r\n        super(0);\r\n        this._contexts = new Map();\r\n        this._toDispose = new DisposableStore();\r\n        this._lastContextId = 0;\r\n        const myContext = new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext);\r\n        this._contexts.set(this._myContextId, myContext);\r\n        this._toDispose.add(myContext);\r\n        // Uncomment this to see the contexts continuously logged\r\n        // let lastLoggedValue: string | null = null;\r\n        // setInterval(() => {\r\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\r\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\r\n        // \tif (lastLoggedValue !== logValue) {\r\n        // \t\tlastLoggedValue = logValue;\r\n        // \t\tconsole.log(lastLoggedValue);\r\n        // \t}\r\n        // }, 2000);\r\n    }\r\n    dispose() {\r\n        this._onDidChangeContext.dispose();\r\n        this._isDisposed = true;\r\n        this._toDispose.dispose();\r\n    }\r\n    getContextValuesContainer(contextId) {\r\n        if (this._isDisposed) {\r\n            return NullContext.INSTANCE;\r\n        }\r\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\r\n    }\r\n    createChildContext(parentContextId = this._myContextId) {\r\n        if (this._isDisposed) {\r\n            throw new Error(`ContextKeyService has been disposed`);\r\n        }\r\n        let id = (++this._lastContextId);\r\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\r\n        return id;\r\n    }\r\n    disposeContext(contextId) {\r\n        if (!this._isDisposed) {\r\n            this._contexts.delete(contextId);\r\n        }\r\n    }\r\n};\r\nContextKeyService = __decorate([\r\n    __param(0, IConfigurationService)\r\n], ContextKeyService);\r\nexport { ContextKeyService };\r\nclass ScopedContextKeyService extends AbstractContextKeyService {\r\n    constructor(parent, domNode) {\r\n        super(parent.createChildContext());\r\n        this._parentChangeListener = new MutableDisposable();\r\n        this._parent = parent;\r\n        this._updateParentChangeListener();\r\n        this._domNode = domNode;\r\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\r\n            let extraInfo = '';\r\n            if (this._domNode.classList) {\r\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\r\n            }\r\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\r\n        }\r\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\r\n    }\r\n    _updateParentChangeListener() {\r\n        // Forward parent events to this listener. Parent will change.\r\n        this._parentChangeListener.value = this._parent.onDidChangeContext(this._onDidChangeContext.fire, this._onDidChangeContext);\r\n    }\r\n    dispose() {\r\n        if (this._isDisposed) {\r\n            return;\r\n        }\r\n        this._onDidChangeContext.dispose();\r\n        this._parent.disposeContext(this._myContextId);\r\n        this._parentChangeListener.dispose();\r\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\r\n        this._isDisposed = true;\r\n    }\r\n    getContextValuesContainer(contextId) {\r\n        if (this._isDisposed) {\r\n            return NullContext.INSTANCE;\r\n        }\r\n        return this._parent.getContextValuesContainer(contextId);\r\n    }\r\n    createChildContext(parentContextId = this._myContextId) {\r\n        if (this._isDisposed) {\r\n            throw new Error(`ScopedContextKeyService has been disposed`);\r\n        }\r\n        return this._parent.createChildContext(parentContextId);\r\n    }\r\n    disposeContext(contextId) {\r\n        if (this._isDisposed) {\r\n            return;\r\n        }\r\n        this._parent.disposeContext(contextId);\r\n    }\r\n}\r\nfunction findContextAttr(domNode) {\r\n    while (domNode) {\r\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\r\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\r\n            if (attr) {\r\n                return parseInt(attr, 10);\r\n            }\r\n            return NaN;\r\n        }\r\n        domNode = domNode.parentElement;\r\n    }\r\n    return 0;\r\n}\r\nCommandsRegistry.registerCommand(SET_CONTEXT_COMMAND_ID, function (accessor, contextKey, contextValue) {\r\n    accessor.get(IContextKeyService).createKey(String(contextKey), contextValue);\r\n});\r\nCommandsRegistry.registerCommand({\r\n    id: 'getContextKeyInfo',\r\n    handler() {\r\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\r\n    },\r\n    description: {\r\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\r\n        args: []\r\n    }\r\n});\r\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\r\n    const result = [];\r\n    const seen = new Set();\r\n    for (let info of RawContextKey.all()) {\r\n        if (!seen.has(info.key)) {\r\n            seen.add(info.key);\r\n            result.push(info);\r\n        }\r\n    }\r\n    result.sort((a, b) => a.key.localeCompare(b.key));\r\n    console.log(JSON.stringify(result, undefined, 2));\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './contextMenuHandler.css';\r\nimport { ActionRunner } from '../../../base/common/actions.js';\r\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\r\nimport { EventType, $, isHTMLElement, addDisposableListener } from '../../../base/browser/dom.js';\r\nimport { attachMenuStyler } from '../../theme/common/styler.js';\r\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\r\nimport { isPromiseCanceledError } from '../../../base/common/errors.js';\r\nexport class ContextMenuHandler {\r\n    constructor(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\r\n        this.contextViewService = contextViewService;\r\n        this.telemetryService = telemetryService;\r\n        this.notificationService = notificationService;\r\n        this.keybindingService = keybindingService;\r\n        this.themeService = themeService;\r\n        this.focusToReturn = null;\r\n        this.block = null;\r\n        this.options = { blockMouse: true };\r\n    }\r\n    configure(options) {\r\n        this.options = options;\r\n    }\r\n    showContextMenu(delegate) {\r\n        const actions = delegate.getActions();\r\n        if (!actions.length) {\r\n            return; // Don't render an empty context menu\r\n        }\r\n        this.focusToReturn = document.activeElement;\r\n        let menu;\r\n        let shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\r\n        this.contextViewService.showContextView({\r\n            getAnchor: () => delegate.getAnchor(),\r\n            canRelayout: false,\r\n            anchorAlignment: delegate.anchorAlignment,\r\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\r\n            render: (container) => {\r\n                let className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\r\n                if (className) {\r\n                    container.className += ' ' + className;\r\n                }\r\n                // Render invisible div to block mouse interaction in the rest of the UI\r\n                if (this.options.blockMouse) {\r\n                    this.block = container.appendChild($('.context-view-block'));\r\n                    this.block.style.position = 'fixed';\r\n                    this.block.style.cursor = 'initial';\r\n                    this.block.style.left = '0';\r\n                    this.block.style.top = '0';\r\n                    this.block.style.width = '100%';\r\n                    this.block.style.height = '100%';\r\n                    this.block.style.zIndex = '-1';\r\n                    // TODO@Steven: this is never getting disposed\r\n                    addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\r\n                }\r\n                const menuDisposables = new DisposableStore();\r\n                const actionRunner = delegate.actionRunner || new ActionRunner();\r\n                actionRunner.onBeforeRun(this.onActionRun, this, menuDisposables);\r\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\r\n                menu = new Menu(container, actions, {\r\n                    actionViewItemProvider: delegate.getActionViewItem,\r\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\r\n                    actionRunner,\r\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\r\n                });\r\n                menuDisposables.add(attachMenuStyler(menu, this.themeService));\r\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\r\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\r\n                menuDisposables.add(addDisposableListener(window, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\r\n                menuDisposables.add(addDisposableListener(window, EventType.MOUSE_DOWN, (e) => {\r\n                    if (e.defaultPrevented) {\r\n                        return;\r\n                    }\r\n                    let event = new StandardMouseEvent(e);\r\n                    let element = event.target;\r\n                    // Don't do anything as we are likely creating a context menu\r\n                    if (event.rightButton) {\r\n                        return;\r\n                    }\r\n                    while (element) {\r\n                        if (element === container) {\r\n                            return;\r\n                        }\r\n                        element = element.parentElement;\r\n                    }\r\n                    this.contextViewService.hideContextView(true);\r\n                }));\r\n                return combinedDisposable(menuDisposables, menu);\r\n            },\r\n            focus: () => {\r\n                if (menu) {\r\n                    menu.focus(!!delegate.autoSelectFirstItem);\r\n                }\r\n            },\r\n            onHide: (didCancel) => {\r\n                if (delegate.onHide) {\r\n                    delegate.onHide(!!didCancel);\r\n                }\r\n                if (this.block) {\r\n                    this.block.remove();\r\n                    this.block = null;\r\n                }\r\n                if (this.focusToReturn) {\r\n                    this.focusToReturn.focus();\r\n                }\r\n            }\r\n        }, shadowRootElement, !!shadowRootElement);\r\n    }\r\n    onActionRun(e) {\r\n        this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\r\n        this.contextViewService.hideContextView(false);\r\n        // Restore focus here\r\n        if (this.focusToReturn) {\r\n            this.focusToReturn.focus();\r\n        }\r\n    }\r\n    onDidActionRun(e) {\r\n        if (e.error && !isPromiseCanceledError(e.error)) {\r\n            this.notificationService.error(e.error);\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './contextview.css';\r\nimport * as DOM from '../../dom.js';\r\nimport * as platform from '../../../common/platform.js';\r\nimport { toDisposable, Disposable, DisposableStore } from '../../../common/lifecycle.js';\r\nimport { Range } from '../../../common/range.js';\r\nimport { BrowserFeatures } from '../../canIUse.js';\r\nexport var LayoutAnchorMode;\r\n(function (LayoutAnchorMode) {\r\n    LayoutAnchorMode[LayoutAnchorMode[\"AVOID\"] = 0] = \"AVOID\";\r\n    LayoutAnchorMode[LayoutAnchorMode[\"ALIGN\"] = 1] = \"ALIGN\";\r\n})(LayoutAnchorMode || (LayoutAnchorMode = {}));\r\n/**\r\n * Lays out a one dimensional view next to an anchor in a viewport.\r\n *\r\n * @returns The view offset within the viewport.\r\n */\r\nexport function layout(viewportSize, viewSize, anchor) {\r\n    const layoutAfterAnchorBoundary = anchor.mode === LayoutAnchorMode.ALIGN ? anchor.offset : anchor.offset + anchor.size;\r\n    const layoutBeforeAnchorBoundary = anchor.mode === LayoutAnchorMode.ALIGN ? anchor.offset + anchor.size : anchor.offset;\r\n    if (anchor.position === 0 /* Before */) {\r\n        if (viewSize <= viewportSize - layoutAfterAnchorBoundary) {\r\n            return layoutAfterAnchorBoundary; // happy case, lay it out after the anchor\r\n        }\r\n        if (viewSize <= layoutBeforeAnchorBoundary) {\r\n            return layoutBeforeAnchorBoundary - viewSize; // ok case, lay it out before the anchor\r\n        }\r\n        return Math.max(viewportSize - viewSize, 0); // sad case, lay it over the anchor\r\n    }\r\n    else {\r\n        if (viewSize <= layoutBeforeAnchorBoundary) {\r\n            return layoutBeforeAnchorBoundary - viewSize; // happy case, lay it out before the anchor\r\n        }\r\n        if (viewSize <= viewportSize - layoutAfterAnchorBoundary) {\r\n            return layoutAfterAnchorBoundary; // ok case, lay it out after the anchor\r\n        }\r\n        return 0; // sad case, lay it over the anchor\r\n    }\r\n}\r\nexport class ContextView extends Disposable {\r\n    constructor(container, domPosition) {\r\n        super();\r\n        this.container = null;\r\n        this.delegate = null;\r\n        this.toDisposeOnClean = Disposable.None;\r\n        this.toDisposeOnSetContainer = Disposable.None;\r\n        this.shadowRoot = null;\r\n        this.shadowRootHostElement = null;\r\n        this.view = DOM.$('.context-view');\r\n        this.useFixedPosition = false;\r\n        this.useShadowDOM = false;\r\n        DOM.hide(this.view);\r\n        this.setContainer(container, domPosition);\r\n        this._register(toDisposable(() => this.setContainer(null, 1 /* ABSOLUTE */)));\r\n    }\r\n    setContainer(container, domPosition) {\r\n        var _a;\r\n        if (this.container) {\r\n            this.toDisposeOnSetContainer.dispose();\r\n            if (this.shadowRoot) {\r\n                this.shadowRoot.removeChild(this.view);\r\n                this.shadowRoot = null;\r\n                (_a = this.shadowRootHostElement) === null || _a === void 0 ? void 0 : _a.remove();\r\n                this.shadowRootHostElement = null;\r\n            }\r\n            else {\r\n                this.container.removeChild(this.view);\r\n            }\r\n            this.container = null;\r\n        }\r\n        if (container) {\r\n            this.container = container;\r\n            this.useFixedPosition = domPosition !== 1 /* ABSOLUTE */;\r\n            this.useShadowDOM = domPosition === 3 /* FIXED_SHADOW */;\r\n            if (this.useShadowDOM) {\r\n                this.shadowRootHostElement = DOM.$('.shadow-root-host');\r\n                this.container.appendChild(this.shadowRootHostElement);\r\n                this.shadowRoot = this.shadowRootHostElement.attachShadow({ mode: 'open' });\r\n                const style = document.createElement('style');\r\n                style.textContent = SHADOW_ROOT_CSS;\r\n                this.shadowRoot.appendChild(style);\r\n                this.shadowRoot.appendChild(this.view);\r\n                this.shadowRoot.appendChild(DOM.$('slot'));\r\n            }\r\n            else {\r\n                this.container.appendChild(this.view);\r\n            }\r\n            const toDisposeOnSetContainer = new DisposableStore();\r\n            ContextView.BUBBLE_UP_EVENTS.forEach(event => {\r\n                toDisposeOnSetContainer.add(DOM.addStandardDisposableListener(this.container, event, (e) => {\r\n                    this.onDOMEvent(e, false);\r\n                }));\r\n            });\r\n            ContextView.BUBBLE_DOWN_EVENTS.forEach(event => {\r\n                toDisposeOnSetContainer.add(DOM.addStandardDisposableListener(this.container, event, (e) => {\r\n                    this.onDOMEvent(e, true);\r\n                }, true));\r\n            });\r\n            this.toDisposeOnSetContainer = toDisposeOnSetContainer;\r\n        }\r\n    }\r\n    show(delegate) {\r\n        if (this.isVisible()) {\r\n            this.hide();\r\n        }\r\n        // Show static box\r\n        DOM.clearNode(this.view);\r\n        this.view.className = 'context-view';\r\n        this.view.style.top = '0px';\r\n        this.view.style.left = '0px';\r\n        this.view.style.zIndex = '2500';\r\n        this.view.style.position = this.useFixedPosition ? 'fixed' : 'absolute';\r\n        DOM.show(this.view);\r\n        // Render content\r\n        this.toDisposeOnClean = delegate.render(this.view) || Disposable.None;\r\n        // Set active delegate\r\n        this.delegate = delegate;\r\n        // Layout\r\n        this.doLayout();\r\n        // Focus\r\n        if (this.delegate.focus) {\r\n            this.delegate.focus();\r\n        }\r\n    }\r\n    getViewElement() {\r\n        return this.view;\r\n    }\r\n    layout() {\r\n        if (!this.isVisible()) {\r\n            return;\r\n        }\r\n        if (this.delegate.canRelayout === false && !(platform.isIOS && BrowserFeatures.pointerEvents)) {\r\n            this.hide();\r\n            return;\r\n        }\r\n        if (this.delegate.layout) {\r\n            this.delegate.layout();\r\n        }\r\n        this.doLayout();\r\n    }\r\n    doLayout() {\r\n        // Check that we still have a delegate - this.delegate.layout may have hidden\r\n        if (!this.isVisible()) {\r\n            return;\r\n        }\r\n        // Get anchor\r\n        let anchor = this.delegate.getAnchor();\r\n        // Compute around\r\n        let around;\r\n        // Get the element's position and size (to anchor the view)\r\n        if (DOM.isHTMLElement(anchor)) {\r\n            let elementPosition = DOM.getDomNodePagePosition(anchor);\r\n            around = {\r\n                top: elementPosition.top,\r\n                left: elementPosition.left,\r\n                width: elementPosition.width,\r\n                height: elementPosition.height\r\n            };\r\n        }\r\n        else {\r\n            around = {\r\n                top: anchor.y,\r\n                left: anchor.x,\r\n                width: anchor.width || 1,\r\n                height: anchor.height || 2\r\n            };\r\n        }\r\n        const viewSizeWidth = DOM.getTotalWidth(this.view);\r\n        const viewSizeHeight = DOM.getTotalHeight(this.view);\r\n        const anchorPosition = this.delegate.anchorPosition || 0 /* BELOW */;\r\n        const anchorAlignment = this.delegate.anchorAlignment || 0 /* LEFT */;\r\n        const anchorAxisAlignment = this.delegate.anchorAxisAlignment || 0 /* VERTICAL */;\r\n        let top;\r\n        let left;\r\n        if (anchorAxisAlignment === 0 /* VERTICAL */) {\r\n            const verticalAnchor = { offset: around.top - window.pageYOffset, size: around.height, position: anchorPosition === 0 /* BELOW */ ? 0 /* Before */ : 1 /* After */ };\r\n            const horizontalAnchor = { offset: around.left, size: around.width, position: anchorAlignment === 0 /* LEFT */ ? 0 /* Before */ : 1 /* After */, mode: LayoutAnchorMode.ALIGN };\r\n            top = layout(window.innerHeight, viewSizeHeight, verticalAnchor) + window.pageYOffset;\r\n            // if view intersects vertically with anchor,  we must avoid the anchor\r\n            if (Range.intersects({ start: top, end: top + viewSizeHeight }, { start: verticalAnchor.offset, end: verticalAnchor.offset + verticalAnchor.size })) {\r\n                horizontalAnchor.mode = LayoutAnchorMode.AVOID;\r\n            }\r\n            left = layout(window.innerWidth, viewSizeWidth, horizontalAnchor);\r\n        }\r\n        else {\r\n            const horizontalAnchor = { offset: around.left, size: around.width, position: anchorAlignment === 0 /* LEFT */ ? 0 /* Before */ : 1 /* After */ };\r\n            const verticalAnchor = { offset: around.top, size: around.height, position: anchorPosition === 0 /* BELOW */ ? 0 /* Before */ : 1 /* After */, mode: LayoutAnchorMode.ALIGN };\r\n            left = layout(window.innerWidth, viewSizeWidth, horizontalAnchor);\r\n            // if view intersects horizontally with anchor, we must avoid the anchor\r\n            if (Range.intersects({ start: left, end: left + viewSizeWidth }, { start: horizontalAnchor.offset, end: horizontalAnchor.offset + horizontalAnchor.size })) {\r\n                verticalAnchor.mode = LayoutAnchorMode.AVOID;\r\n            }\r\n            top = layout(window.innerHeight, viewSizeHeight, verticalAnchor) + window.pageYOffset;\r\n        }\r\n        this.view.classList.remove('top', 'bottom', 'left', 'right');\r\n        this.view.classList.add(anchorPosition === 0 /* BELOW */ ? 'bottom' : 'top');\r\n        this.view.classList.add(anchorAlignment === 0 /* LEFT */ ? 'left' : 'right');\r\n        this.view.classList.toggle('fixed', this.useFixedPosition);\r\n        const containerPosition = DOM.getDomNodePagePosition(this.container);\r\n        this.view.style.top = `${top - (this.useFixedPosition ? DOM.getDomNodePagePosition(this.view).top : containerPosition.top)}px`;\r\n        this.view.style.left = `${left - (this.useFixedPosition ? DOM.getDomNodePagePosition(this.view).left : containerPosition.left)}px`;\r\n        this.view.style.width = 'initial';\r\n    }\r\n    hide(data) {\r\n        const delegate = this.delegate;\r\n        this.delegate = null;\r\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.onHide) {\r\n            delegate.onHide(data);\r\n        }\r\n        this.toDisposeOnClean.dispose();\r\n        DOM.hide(this.view);\r\n    }\r\n    isVisible() {\r\n        return !!this.delegate;\r\n    }\r\n    onDOMEvent(e, onCapture) {\r\n        if (this.delegate) {\r\n            if (this.delegate.onDOMEvent) {\r\n                this.delegate.onDOMEvent(e, document.activeElement);\r\n            }\r\n            else if (onCapture && !DOM.isAncestor(e.target, this.container)) {\r\n                this.hide();\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        this.hide();\r\n        super.dispose();\r\n    }\r\n}\r\nContextView.BUBBLE_UP_EVENTS = ['click', 'keydown', 'focus', 'blur'];\r\nContextView.BUBBLE_DOWN_EVENTS = ['click'];\r\nlet SHADOW_ROOT_CSS = /* css */ `\n\t:host {\n\t\tall: initial; /* 1st rule so subsequent properties are reset. */\n\t}\n\n\t@font-face {\n\t\tfont-family: \"codicon\";\n\t\tsrc: url(\"./codicon.ttf?5d4d76ab2ce5108968ad644d591a16a6\") format(\"truetype\");\n\t}\n\n\t.codicon[class*='codicon-'] {\n\t\tfont: normal normal normal 16px/1 codicon;\n\t\tdisplay: inline-block;\n\t\ttext-decoration: none;\n\t\ttext-rendering: auto;\n\t\ttext-align: center;\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\tuser-select: none;\n\t\t-webkit-user-select: none;\n\t\t-ms-user-select: none;\n\t}\n\n\t:host {\n\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe WPC\", \"Segoe UI\", \"HelveticaNeue-Light\", system-ui, \"Ubuntu\", \"Droid Sans\", sans-serif;\n\t}\n\n\t:host-context(.mac) { font-family: -apple-system, BlinkMacSystemFont, sans-serif; }\n\t:host-context(.mac:lang(zh-Hans)) { font-family: -apple-system, BlinkMacSystemFont, \"PingFang SC\", \"Hiragino Sans GB\", sans-serif; }\n\t:host-context(.mac:lang(zh-Hant)) { font-family: -apple-system, BlinkMacSystemFont, \"PingFang TC\", sans-serif; }\n\t:host-context(.mac:lang(ja)) { font-family: -apple-system, BlinkMacSystemFont, \"Hiragino Kaku Gothic Pro\", sans-serif; }\n\t:host-context(.mac:lang(ko)) { font-family: -apple-system, BlinkMacSystemFont, \"Nanum Gothic\", \"Apple SD Gothic Neo\", \"AppleGothic\", sans-serif; }\n\n\t:host-context(.windows) { font-family: \"Segoe WPC\", \"Segoe UI\", sans-serif; }\n\t:host-context(.windows:lang(zh-Hans)) { font-family: \"Segoe WPC\", \"Segoe UI\", \"Microsoft YaHei\", sans-serif; }\n\t:host-context(.windows:lang(zh-Hant)) { font-family: \"Segoe WPC\", \"Segoe UI\", \"Microsoft Jhenghei\", sans-serif; }\n\t:host-context(.windows:lang(ja)) { font-family: \"Segoe WPC\", \"Segoe UI\", \"Yu Gothic UI\", \"Meiryo UI\", sans-serif; }\n\t:host-context(.windows:lang(ko)) { font-family: \"Segoe WPC\", \"Segoe UI\", \"Malgun Gothic\", \"Dotom\", sans-serif; }\n\n\t:host-context(.linux) { font-family: system-ui, \"Ubuntu\", \"Droid Sans\", sans-serif; }\n\t:host-context(.linux:lang(zh-Hans)) { font-family: system-ui, \"Ubuntu\", \"Droid Sans\", \"Source Han Sans SC\", \"Source Han Sans CN\", \"Source Han Sans\", sans-serif; }\n\t:host-context(.linux:lang(zh-Hant)) { font-family: system-ui, \"Ubuntu\", \"Droid Sans\", \"Source Han Sans TC\", \"Source Han Sans TW\", \"Source Han Sans\", sans-serif; }\n\t:host-context(.linux:lang(ja)) { font-family: system-ui, \"Ubuntu\", \"Droid Sans\", \"Source Han Sans J\", \"Source Han Sans JP\", \"Source Han Sans\", sans-serif; }\n\t:host-context(.linux:lang(ko)) { font-family: system-ui, \"Ubuntu\", \"Droid Sans\", \"Source Han Sans K\", \"Source Han Sans JR\", \"Source Han Sans\", \"UnDotum\", \"FBaekmuk Gulim\", sans-serif; }\n`;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../../nls.js';\r\nimport * as strings from '../../../common/strings.js';\r\nimport { SubmenuAction, Separator, EmptySubmenuAction } from '../../../common/actions.js';\r\nimport { ActionBar } from '../actionbar/actionbar.js';\r\nimport { EventType, EventHelper, isAncestor, addDisposableListener, append, $, clearNode, createStyleSheet, isInShadowDOM, getActiveElement, Dimension } from '../../dom.js';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { RunOnceScheduler } from '../../../common/async.js';\r\nimport { DisposableStore } from '../../../common/lifecycle.js';\r\nimport { DomScrollableElement } from '../scrollbar/scrollableElement.js';\r\nimport { layout } from '../contextview/contextview.js';\r\nimport { isLinux, isMacintosh } from '../../../common/platform.js';\r\nimport { Codicon, registerCodicon } from '../../../common/codicons.js';\r\nimport { BaseActionViewItem, ActionViewItem } from '../actionbar/actionViewItems.js';\r\nimport { formatRule } from '../codicons/codiconStyles.js';\r\nimport { isFirefox } from '../../browser.js';\r\nimport { StandardMouseEvent } from '../../mouseEvent.js';\r\nimport { stripIcons } from '../../../common/iconLabels.js';\r\nexport const MENU_MNEMONIC_REGEX = /\\(&([^\\s&])\\)|(^|[^&])&([^\\s&])/;\r\nexport const MENU_ESCAPED_MNEMONIC_REGEX = /(&amp;)?(&amp;)([^\\s&])/g;\r\nconst menuSelectionIcon = registerCodicon('menu-selection', Codicon.check);\r\nconst menuSubmenuIcon = registerCodicon('menu-submenu', Codicon.chevronRight);\r\nexport var Direction;\r\n(function (Direction) {\r\n    Direction[Direction[\"Right\"] = 0] = \"Right\";\r\n    Direction[Direction[\"Left\"] = 1] = \"Left\";\r\n})(Direction || (Direction = {}));\r\nexport class Menu extends ActionBar {\r\n    constructor(container, actions, options = {}) {\r\n        container.classList.add('monaco-menu-container');\r\n        container.setAttribute('role', 'presentation');\r\n        const menuElement = document.createElement('div');\r\n        menuElement.classList.add('monaco-menu');\r\n        menuElement.setAttribute('role', 'presentation');\r\n        super(menuElement, {\r\n            orientation: 1 /* VERTICAL */,\r\n            actionViewItemProvider: action => this.doGetActionViewItem(action, options, parentData),\r\n            context: options.context,\r\n            actionRunner: options.actionRunner,\r\n            ariaLabel: options.ariaLabel,\r\n            focusOnlyEnabledItems: true,\r\n            triggerKeys: { keys: [3 /* Enter */, ...(isMacintosh || isLinux ? [10 /* Space */] : [])], keyDown: true }\r\n        });\r\n        this.menuElement = menuElement;\r\n        this.actionsList.setAttribute('role', 'menu');\r\n        this.actionsList.tabIndex = 0;\r\n        this.menuDisposables = this._register(new DisposableStore());\r\n        this.initializeStyleSheet(container);\r\n        addDisposableListener(menuElement, EventType.KEY_DOWN, (e) => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            // Stop tab navigation of menus\r\n            if (event.equals(2 /* Tab */)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n        if (options.enableMnemonics) {\r\n            this.menuDisposables.add(addDisposableListener(menuElement, EventType.KEY_DOWN, (e) => {\r\n                const key = e.key.toLocaleLowerCase();\r\n                if (this.mnemonics.has(key)) {\r\n                    EventHelper.stop(e, true);\r\n                    const actions = this.mnemonics.get(key);\r\n                    if (actions.length === 1) {\r\n                        if (actions[0] instanceof SubmenuMenuActionViewItem && actions[0].container) {\r\n                            this.focusItemByElement(actions[0].container);\r\n                        }\r\n                        actions[0].onClick(e);\r\n                    }\r\n                    if (actions.length > 1) {\r\n                        const action = actions.shift();\r\n                        if (action && action.container) {\r\n                            this.focusItemByElement(action.container);\r\n                            actions.push(action);\r\n                        }\r\n                        this.mnemonics.set(key, actions);\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n        if (isLinux) {\r\n            this._register(addDisposableListener(menuElement, EventType.KEY_DOWN, e => {\r\n                const event = new StandardKeyboardEvent(e);\r\n                if (event.equals(14 /* Home */) || event.equals(11 /* PageUp */)) {\r\n                    this.focusedItem = this.viewItems.length - 1;\r\n                    this.focusNext();\r\n                    EventHelper.stop(e, true);\r\n                }\r\n                else if (event.equals(13 /* End */) || event.equals(12 /* PageDown */)) {\r\n                    this.focusedItem = 0;\r\n                    this.focusPrevious();\r\n                    EventHelper.stop(e, true);\r\n                }\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(this.domNode, EventType.MOUSE_OUT, e => {\r\n            let relatedTarget = e.relatedTarget;\r\n            if (!isAncestor(relatedTarget, this.domNode)) {\r\n                this.focusedItem = undefined;\r\n                this.updateFocus();\r\n                e.stopPropagation();\r\n            }\r\n        }));\r\n        this._register(addDisposableListener(this.actionsList, EventType.MOUSE_OVER, e => {\r\n            let target = e.target;\r\n            if (!target || !isAncestor(target, this.actionsList) || target === this.actionsList) {\r\n                return;\r\n            }\r\n            while (target.parentElement !== this.actionsList && target.parentElement !== null) {\r\n                target = target.parentElement;\r\n            }\r\n            if (target.classList.contains('action-item')) {\r\n                const lastFocusedItem = this.focusedItem;\r\n                this.setFocusedItem(target);\r\n                if (lastFocusedItem !== this.focusedItem) {\r\n                    this.updateFocus();\r\n                }\r\n            }\r\n        }));\r\n        let parentData = {\r\n            parent: this\r\n        };\r\n        this.mnemonics = new Map();\r\n        // Scroll Logic\r\n        this.scrollableElement = this._register(new DomScrollableElement(menuElement, {\r\n            alwaysConsumeMouseWheel: true,\r\n            horizontal: 2 /* Hidden */,\r\n            vertical: 3 /* Visible */,\r\n            verticalScrollbarSize: 7,\r\n            handleMouseWheel: true,\r\n            useShadows: true\r\n        }));\r\n        const scrollElement = this.scrollableElement.getDomNode();\r\n        scrollElement.style.position = '';\r\n        this._register(addDisposableListener(scrollElement, EventType.MOUSE_UP, e => {\r\n            // Absorb clicks in menu dead space https://github.com/microsoft/vscode/issues/63575\r\n            // We do this on the scroll element so the scroll bar doesn't dismiss the menu either\r\n            e.preventDefault();\r\n        }));\r\n        menuElement.style.maxHeight = `${Math.max(10, window.innerHeight - container.getBoundingClientRect().top - 35)}px`;\r\n        actions = actions.filter(a => {\r\n            var _a;\r\n            if ((_a = options.submenuIds) === null || _a === void 0 ? void 0 : _a.has(a.id)) {\r\n                console.warn(`Found submenu cycle: ${a.id}`);\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        this.push(actions, { icon: true, label: true, isMenu: true });\r\n        container.appendChild(this.scrollableElement.getDomNode());\r\n        this.scrollableElement.scanDomNode();\r\n        this.viewItems.filter(item => !(item instanceof MenuSeparatorActionViewItem)).forEach((item, index, array) => {\r\n            item.updatePositionInSet(index + 1, array.length);\r\n        });\r\n    }\r\n    initializeStyleSheet(container) {\r\n        if (isInShadowDOM(container)) {\r\n            this.styleSheet = createStyleSheet(container);\r\n            this.styleSheet.textContent = MENU_WIDGET_CSS;\r\n        }\r\n        else {\r\n            if (!Menu.globalStyleSheet) {\r\n                Menu.globalStyleSheet = createStyleSheet();\r\n                Menu.globalStyleSheet.textContent = MENU_WIDGET_CSS;\r\n            }\r\n            this.styleSheet = Menu.globalStyleSheet;\r\n        }\r\n    }\r\n    style(style) {\r\n        const container = this.getContainer();\r\n        const fgColor = style.foregroundColor ? `${style.foregroundColor}` : '';\r\n        const bgColor = style.backgroundColor ? `${style.backgroundColor}` : '';\r\n        const border = style.borderColor ? `1px solid ${style.borderColor}` : '';\r\n        const shadow = style.shadowColor ? `0 2px 4px ${style.shadowColor}` : '';\r\n        container.style.border = border;\r\n        this.domNode.style.color = fgColor;\r\n        this.domNode.style.backgroundColor = bgColor;\r\n        container.style.boxShadow = shadow;\r\n        if (this.viewItems) {\r\n            this.viewItems.forEach(item => {\r\n                if (item instanceof BaseMenuActionViewItem || item instanceof MenuSeparatorActionViewItem) {\r\n                    item.style(style);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getContainer() {\r\n        return this.scrollableElement.getDomNode();\r\n    }\r\n    get onScroll() {\r\n        return this.scrollableElement.onScroll;\r\n    }\r\n    focusItemByElement(element) {\r\n        const lastFocusedItem = this.focusedItem;\r\n        this.setFocusedItem(element);\r\n        if (lastFocusedItem !== this.focusedItem) {\r\n            this.updateFocus();\r\n        }\r\n    }\r\n    setFocusedItem(element) {\r\n        for (let i = 0; i < this.actionsList.children.length; i++) {\r\n            let elem = this.actionsList.children[i];\r\n            if (element === elem) {\r\n                this.focusedItem = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    updateFocus(fromRight) {\r\n        super.updateFocus(fromRight, true);\r\n        if (typeof this.focusedItem !== 'undefined') {\r\n            // Workaround for #80047 caused by an issue in chromium\r\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=414283\r\n            // When that's fixed, just call this.scrollableElement.scanDomNode()\r\n            this.scrollableElement.setScrollPosition({\r\n                scrollTop: Math.round(this.menuElement.scrollTop)\r\n            });\r\n        }\r\n    }\r\n    doGetActionViewItem(action, options, parentData) {\r\n        if (action instanceof Separator) {\r\n            return new MenuSeparatorActionViewItem(options.context, action, { icon: true });\r\n        }\r\n        else if (action instanceof SubmenuAction) {\r\n            const menuActionViewItem = new SubmenuMenuActionViewItem(action, action.actions, parentData, Object.assign(Object.assign({}, options), { submenuIds: new Set([...(options.submenuIds || []), action.id]) }));\r\n            if (options.enableMnemonics) {\r\n                const mnemonic = menuActionViewItem.getMnemonic();\r\n                if (mnemonic && menuActionViewItem.isEnabled()) {\r\n                    let actionViewItems = [];\r\n                    if (this.mnemonics.has(mnemonic)) {\r\n                        actionViewItems = this.mnemonics.get(mnemonic);\r\n                    }\r\n                    actionViewItems.push(menuActionViewItem);\r\n                    this.mnemonics.set(mnemonic, actionViewItems);\r\n                }\r\n            }\r\n            return menuActionViewItem;\r\n        }\r\n        else {\r\n            const menuItemOptions = { enableMnemonics: options.enableMnemonics, useEventAsContext: options.useEventAsContext };\r\n            if (options.getKeyBinding) {\r\n                const keybinding = options.getKeyBinding(action);\r\n                if (keybinding) {\r\n                    const keybindingLabel = keybinding.getLabel();\r\n                    if (keybindingLabel) {\r\n                        menuItemOptions.keybinding = keybindingLabel;\r\n                    }\r\n                }\r\n            }\r\n            const menuActionViewItem = new BaseMenuActionViewItem(options.context, action, menuItemOptions);\r\n            if (options.enableMnemonics) {\r\n                const mnemonic = menuActionViewItem.getMnemonic();\r\n                if (mnemonic && menuActionViewItem.isEnabled()) {\r\n                    let actionViewItems = [];\r\n                    if (this.mnemonics.has(mnemonic)) {\r\n                        actionViewItems = this.mnemonics.get(mnemonic);\r\n                    }\r\n                    actionViewItems.push(menuActionViewItem);\r\n                    this.mnemonics.set(mnemonic, actionViewItems);\r\n                }\r\n            }\r\n            return menuActionViewItem;\r\n        }\r\n    }\r\n}\r\nclass BaseMenuActionViewItem extends BaseActionViewItem {\r\n    constructor(ctx, action, options = {}) {\r\n        options.isMenu = true;\r\n        super(action, action, options);\r\n        this.options = options;\r\n        this.options.icon = options.icon !== undefined ? options.icon : false;\r\n        this.options.label = options.label !== undefined ? options.label : true;\r\n        this.cssClass = '';\r\n        // Set mnemonic\r\n        if (this.options.label && options.enableMnemonics) {\r\n            let label = this.getAction().label;\r\n            if (label) {\r\n                let matches = MENU_MNEMONIC_REGEX.exec(label);\r\n                if (matches) {\r\n                    this.mnemonic = (!!matches[1] ? matches[1] : matches[3]).toLocaleLowerCase();\r\n                }\r\n            }\r\n        }\r\n        // Add mouse up listener later to avoid accidental clicks\r\n        this.runOnceToEnableMouseUp = new RunOnceScheduler(() => {\r\n            if (!this.element) {\r\n                return;\r\n            }\r\n            this._register(addDisposableListener(this.element, EventType.MOUSE_UP, e => {\r\n                // removed default prevention as it conflicts\r\n                // with BaseActionViewItem #101537\r\n                // add back if issues arise and link new issue\r\n                EventHelper.stop(e, true);\r\n                // See https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Interact_with_the_clipboard\r\n                // > Writing to the clipboard\r\n                // > You can use the \"cut\" and \"copy\" commands without any special\r\n                // permission if you are using them in a short-lived event handler\r\n                // for a user action (for example, a click handler).\r\n                // => to get the Copy and Paste context menu actions working on Firefox,\r\n                // there should be no timeout here\r\n                if (isFirefox) {\r\n                    const mouseEvent = new StandardMouseEvent(e);\r\n                    // Allowing right click to trigger the event causes the issue described below,\r\n                    // but since the solution below does not work in FF, we must disable right click\r\n                    if (mouseEvent.rightButton) {\r\n                        return;\r\n                    }\r\n                    this.onClick(e);\r\n                }\r\n                // In all other cases, set timout to allow context menu cancellation to trigger\r\n                // otherwise the action will destroy the menu and a second context menu\r\n                // will still trigger for right click.\r\n                else {\r\n                    setTimeout(() => {\r\n                        this.onClick(e);\r\n                    }, 0);\r\n                }\r\n            }));\r\n            this._register(addDisposableListener(this.element, EventType.CONTEXT_MENU, e => {\r\n                EventHelper.stop(e, true);\r\n            }));\r\n        }, 100);\r\n        this._register(this.runOnceToEnableMouseUp);\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        this.container = container;\r\n        this.item = append(this.element, $('a.action-menu-item'));\r\n        if (this._action.id === Separator.ID) {\r\n            // A separator is a presentation item\r\n            this.item.setAttribute('role', 'presentation');\r\n        }\r\n        else {\r\n            this.item.setAttribute('role', 'menuitem');\r\n            if (this.mnemonic) {\r\n                this.item.setAttribute('aria-keyshortcuts', `${this.mnemonic}`);\r\n            }\r\n        }\r\n        this.check = append(this.item, $('span.menu-item-check' + menuSelectionIcon.cssSelector));\r\n        this.check.setAttribute('role', 'none');\r\n        this.label = append(this.item, $('span.action-label'));\r\n        if (this.options.label && this.options.keybinding) {\r\n            append(this.item, $('span.keybinding')).textContent = this.options.keybinding;\r\n        }\r\n        // Adds mouse up listener to actually run the action\r\n        this.runOnceToEnableMouseUp.schedule();\r\n        this.updateClass();\r\n        this.updateLabel();\r\n        this.updateTooltip();\r\n        this.updateEnabled();\r\n        this.updateChecked();\r\n    }\r\n    blur() {\r\n        super.blur();\r\n        this.applyStyle();\r\n    }\r\n    focus() {\r\n        super.focus();\r\n        if (this.item) {\r\n            this.item.focus();\r\n        }\r\n        this.applyStyle();\r\n    }\r\n    updatePositionInSet(pos, setSize) {\r\n        if (this.item) {\r\n            this.item.setAttribute('aria-posinset', `${pos}`);\r\n            this.item.setAttribute('aria-setsize', `${setSize}`);\r\n        }\r\n    }\r\n    updateLabel() {\r\n        if (!this.label) {\r\n            return;\r\n        }\r\n        if (this.options.label) {\r\n            clearNode(this.label);\r\n            let label = stripIcons(this.getAction().label);\r\n            if (label) {\r\n                const cleanLabel = cleanMnemonic(label);\r\n                if (!this.options.enableMnemonics) {\r\n                    label = cleanLabel;\r\n                }\r\n                this.label.setAttribute('aria-label', cleanLabel.replace(/&&/g, '&'));\r\n                const matches = MENU_MNEMONIC_REGEX.exec(label);\r\n                if (matches) {\r\n                    label = strings.escape(label);\r\n                    // This is global, reset it\r\n                    MENU_ESCAPED_MNEMONIC_REGEX.lastIndex = 0;\r\n                    let escMatch = MENU_ESCAPED_MNEMONIC_REGEX.exec(label);\r\n                    // We can't use negative lookbehind so if we match our negative and skip\r\n                    while (escMatch && escMatch[1]) {\r\n                        escMatch = MENU_ESCAPED_MNEMONIC_REGEX.exec(label);\r\n                    }\r\n                    const replaceDoubleEscapes = (str) => str.replace(/&amp;&amp;/g, '&amp;');\r\n                    if (escMatch) {\r\n                        this.label.append(strings.ltrim(replaceDoubleEscapes(label.substr(0, escMatch.index)), ' '), $('u', { 'aria-hidden': 'true' }, escMatch[3]), strings.rtrim(replaceDoubleEscapes(label.substr(escMatch.index + escMatch[0].length)), ' '));\r\n                    }\r\n                    else {\r\n                        this.label.innerText = replaceDoubleEscapes(label).trim();\r\n                    }\r\n                    if (this.item) {\r\n                        this.item.setAttribute('aria-keyshortcuts', (!!matches[1] ? matches[1] : matches[3]).toLocaleLowerCase());\r\n                    }\r\n                }\r\n                else {\r\n                    this.label.innerText = label.replace(/&&/g, '&').trim();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    updateTooltip() {\r\n        let title = null;\r\n        if (this.getAction().tooltip) {\r\n            title = this.getAction().tooltip;\r\n        }\r\n        else if (!this.options.label && this.getAction().label && this.options.icon) {\r\n            title = this.getAction().label;\r\n            if (this.options.keybinding) {\r\n                title = nls.localize({ key: 'titleLabel', comment: ['action title', 'action keybinding'] }, \"{0} ({1})\", title, this.options.keybinding);\r\n            }\r\n        }\r\n        if (title && this.item) {\r\n            this.item.title = title;\r\n        }\r\n    }\r\n    updateClass() {\r\n        if (this.cssClass && this.item) {\r\n            this.item.classList.remove(...this.cssClass.split(' '));\r\n        }\r\n        if (this.options.icon && this.label) {\r\n            this.cssClass = this.getAction().class || '';\r\n            this.label.classList.add('icon');\r\n            if (this.cssClass) {\r\n                this.label.classList.add(...this.cssClass.split(' '));\r\n            }\r\n            this.updateEnabled();\r\n        }\r\n        else if (this.label) {\r\n            this.label.classList.remove('icon');\r\n        }\r\n    }\r\n    updateEnabled() {\r\n        if (this.getAction().enabled) {\r\n            if (this.element) {\r\n                this.element.classList.remove('disabled');\r\n                this.element.removeAttribute('aria-disabled');\r\n            }\r\n            if (this.item) {\r\n                this.item.classList.remove('disabled');\r\n                this.item.removeAttribute('aria-disabled');\r\n                this.item.tabIndex = 0;\r\n            }\r\n        }\r\n        else {\r\n            if (this.element) {\r\n                this.element.classList.add('disabled');\r\n                this.element.setAttribute('aria-disabled', 'true');\r\n            }\r\n            if (this.item) {\r\n                this.item.classList.add('disabled');\r\n                this.item.setAttribute('aria-disabled', 'true');\r\n            }\r\n        }\r\n    }\r\n    updateChecked() {\r\n        if (!this.item) {\r\n            return;\r\n        }\r\n        if (this.getAction().checked) {\r\n            this.item.classList.add('checked');\r\n            this.item.setAttribute('role', 'menuitemcheckbox');\r\n            this.item.setAttribute('aria-checked', 'true');\r\n        }\r\n        else {\r\n            this.item.classList.remove('checked');\r\n            this.item.setAttribute('role', 'menuitem');\r\n            this.item.setAttribute('aria-checked', 'false');\r\n        }\r\n    }\r\n    getMnemonic() {\r\n        return this.mnemonic;\r\n    }\r\n    applyStyle() {\r\n        if (!this.menuStyle) {\r\n            return;\r\n        }\r\n        const isSelected = this.element && this.element.classList.contains('focused');\r\n        const fgColor = isSelected && this.menuStyle.selectionForegroundColor ? this.menuStyle.selectionForegroundColor : this.menuStyle.foregroundColor;\r\n        const bgColor = isSelected && this.menuStyle.selectionBackgroundColor ? this.menuStyle.selectionBackgroundColor : undefined;\r\n        const border = isSelected && this.menuStyle.selectionBorderColor ? `thin solid ${this.menuStyle.selectionBorderColor}` : '';\r\n        if (this.item) {\r\n            this.item.style.color = fgColor ? fgColor.toString() : '';\r\n            this.item.style.backgroundColor = bgColor ? bgColor.toString() : '';\r\n        }\r\n        if (this.check) {\r\n            this.check.style.color = fgColor ? fgColor.toString() : '';\r\n        }\r\n        if (this.container) {\r\n            this.container.style.border = border;\r\n        }\r\n    }\r\n    style(style) {\r\n        this.menuStyle = style;\r\n        this.applyStyle();\r\n    }\r\n}\r\nclass SubmenuMenuActionViewItem extends BaseMenuActionViewItem {\r\n    constructor(action, submenuActions, parentData, submenuOptions) {\r\n        super(action, action, submenuOptions);\r\n        this.submenuActions = submenuActions;\r\n        this.parentData = parentData;\r\n        this.submenuOptions = submenuOptions;\r\n        this.mysubmenu = null;\r\n        this.submenuDisposables = this._register(new DisposableStore());\r\n        this.mouseOver = false;\r\n        this.expandDirection = submenuOptions && submenuOptions.expandDirection !== undefined ? submenuOptions.expandDirection : Direction.Right;\r\n        this.showScheduler = new RunOnceScheduler(() => {\r\n            if (this.mouseOver) {\r\n                this.cleanupExistingSubmenu(false);\r\n                this.createSubmenu(false);\r\n            }\r\n        }, 250);\r\n        this.hideScheduler = new RunOnceScheduler(() => {\r\n            if (this.element && (!isAncestor(getActiveElement(), this.element) && this.parentData.submenu === this.mysubmenu)) {\r\n                this.parentData.parent.focus(false);\r\n                this.cleanupExistingSubmenu(true);\r\n            }\r\n        }, 750);\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        if (this.item) {\r\n            this.item.classList.add('monaco-submenu-item');\r\n            this.item.tabIndex = 0;\r\n            this.item.setAttribute('aria-haspopup', 'true');\r\n            this.updateAriaExpanded('false');\r\n            this.submenuIndicator = append(this.item, $('span.submenu-indicator' + menuSubmenuIcon.cssSelector));\r\n            this.submenuIndicator.setAttribute('aria-hidden', 'true');\r\n        }\r\n        this._register(addDisposableListener(this.element, EventType.KEY_UP, e => {\r\n            let event = new StandardKeyboardEvent(e);\r\n            if (event.equals(17 /* RightArrow */) || event.equals(3 /* Enter */)) {\r\n                EventHelper.stop(e, true);\r\n                this.createSubmenu(true);\r\n            }\r\n        }));\r\n        this._register(addDisposableListener(this.element, EventType.KEY_DOWN, e => {\r\n            let event = new StandardKeyboardEvent(e);\r\n            if (getActiveElement() === this.item) {\r\n                if (event.equals(17 /* RightArrow */) || event.equals(3 /* Enter */)) {\r\n                    EventHelper.stop(e, true);\r\n                }\r\n            }\r\n        }));\r\n        this._register(addDisposableListener(this.element, EventType.MOUSE_OVER, e => {\r\n            if (!this.mouseOver) {\r\n                this.mouseOver = true;\r\n                this.showScheduler.schedule();\r\n            }\r\n        }));\r\n        this._register(addDisposableListener(this.element, EventType.MOUSE_LEAVE, e => {\r\n            this.mouseOver = false;\r\n        }));\r\n        this._register(addDisposableListener(this.element, EventType.FOCUS_OUT, e => {\r\n            if (this.element && !isAncestor(getActiveElement(), this.element)) {\r\n                this.hideScheduler.schedule();\r\n            }\r\n        }));\r\n        this._register(this.parentData.parent.onScroll(() => {\r\n            this.parentData.parent.focus(false);\r\n            this.cleanupExistingSubmenu(false);\r\n        }));\r\n    }\r\n    updateEnabled() {\r\n        // override on submenu entry\r\n        // native menus do not observe enablement on sumbenus\r\n        // we mimic that behavior\r\n    }\r\n    onClick(e) {\r\n        // stop clicking from trying to run an action\r\n        EventHelper.stop(e, true);\r\n        this.cleanupExistingSubmenu(false);\r\n        this.createSubmenu(true);\r\n    }\r\n    cleanupExistingSubmenu(force) {\r\n        if (this.parentData.submenu && (force || (this.parentData.submenu !== this.mysubmenu))) {\r\n            // disposal may throw if the submenu has already been removed\r\n            try {\r\n                this.parentData.submenu.dispose();\r\n            }\r\n            catch (_a) { }\r\n            this.parentData.submenu = undefined;\r\n            this.updateAriaExpanded('false');\r\n            if (this.submenuContainer) {\r\n                this.submenuDisposables.clear();\r\n                this.submenuContainer = undefined;\r\n            }\r\n        }\r\n    }\r\n    calculateSubmenuMenuLayout(windowDimensions, submenu, entry, expandDirection) {\r\n        const ret = { top: 0, left: 0 };\r\n        // Start with horizontal\r\n        ret.left = layout(windowDimensions.width, submenu.width, { position: expandDirection === Direction.Right ? 0 /* Before */ : 1 /* After */, offset: entry.left, size: entry.width });\r\n        // We don't have enough room to layout the menu fully, so we are overlapping the menu\r\n        if (ret.left >= entry.left && ret.left < entry.left + entry.width) {\r\n            if (entry.left + 10 + submenu.width <= windowDimensions.width) {\r\n                ret.left = entry.left + 10;\r\n            }\r\n            entry.top += 10;\r\n            entry.height = 0;\r\n        }\r\n        // Now that we have a horizontal position, try layout vertically\r\n        ret.top = layout(windowDimensions.height, submenu.height, { position: 0 /* Before */, offset: entry.top, size: 0 });\r\n        // We didn't have enough room below, but we did above, so we shift down to align the menu\r\n        if (ret.top + submenu.height === entry.top && ret.top + entry.height + submenu.height <= windowDimensions.height) {\r\n            ret.top += entry.height;\r\n        }\r\n        return ret;\r\n    }\r\n    createSubmenu(selectFirstItem = true) {\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        if (!this.parentData.submenu) {\r\n            this.updateAriaExpanded('true');\r\n            this.submenuContainer = append(this.element, $('div.monaco-submenu'));\r\n            this.submenuContainer.classList.add('menubar-menu-items-holder', 'context-view');\r\n            // Set the top value of the menu container before construction\r\n            // This allows the menu constructor to calculate the proper max height\r\n            const computedStyles = getComputedStyle(this.parentData.parent.domNode);\r\n            const paddingTop = parseFloat(computedStyles.paddingTop || '0') || 0;\r\n            // this.submenuContainer.style.top = `${this.element.offsetTop - this.parentData.parent.scrollOffset - paddingTop}px`;\r\n            this.submenuContainer.style.zIndex = '1';\r\n            this.submenuContainer.style.position = 'fixed';\r\n            this.submenuContainer.style.top = '0';\r\n            this.submenuContainer.style.left = '0';\r\n            this.parentData.submenu = new Menu(this.submenuContainer, this.submenuActions.length ? this.submenuActions : [new EmptySubmenuAction()], this.submenuOptions);\r\n            if (this.menuStyle) {\r\n                this.parentData.submenu.style(this.menuStyle);\r\n            }\r\n            // layout submenu\r\n            const entryBox = this.element.getBoundingClientRect();\r\n            const entryBoxUpdated = {\r\n                top: entryBox.top - paddingTop,\r\n                left: entryBox.left,\r\n                height: entryBox.height + 2 * paddingTop,\r\n                width: entryBox.width\r\n            };\r\n            const viewBox = this.submenuContainer.getBoundingClientRect();\r\n            const { top, left } = this.calculateSubmenuMenuLayout(new Dimension(window.innerWidth, window.innerHeight), Dimension.lift(viewBox), entryBoxUpdated, this.expandDirection);\r\n            this.submenuContainer.style.left = `${left}px`;\r\n            this.submenuContainer.style.top = `${top}px`;\r\n            this.submenuDisposables.add(addDisposableListener(this.submenuContainer, EventType.KEY_UP, e => {\r\n                let event = new StandardKeyboardEvent(e);\r\n                if (event.equals(15 /* LeftArrow */)) {\r\n                    EventHelper.stop(e, true);\r\n                    this.parentData.parent.focus();\r\n                    this.cleanupExistingSubmenu(true);\r\n                }\r\n            }));\r\n            this.submenuDisposables.add(addDisposableListener(this.submenuContainer, EventType.KEY_DOWN, e => {\r\n                let event = new StandardKeyboardEvent(e);\r\n                if (event.equals(15 /* LeftArrow */)) {\r\n                    EventHelper.stop(e, true);\r\n                }\r\n            }));\r\n            this.submenuDisposables.add(this.parentData.submenu.onDidCancel(() => {\r\n                this.parentData.parent.focus();\r\n                this.cleanupExistingSubmenu(true);\r\n            }));\r\n            this.parentData.submenu.focus(selectFirstItem);\r\n            this.mysubmenu = this.parentData.submenu;\r\n        }\r\n        else {\r\n            this.parentData.submenu.focus(false);\r\n        }\r\n    }\r\n    updateAriaExpanded(value) {\r\n        var _a;\r\n        if (this.item) {\r\n            (_a = this.item) === null || _a === void 0 ? void 0 : _a.setAttribute('aria-expanded', value);\r\n        }\r\n    }\r\n    applyStyle() {\r\n        super.applyStyle();\r\n        if (!this.menuStyle) {\r\n            return;\r\n        }\r\n        const isSelected = this.element && this.element.classList.contains('focused');\r\n        const fgColor = isSelected && this.menuStyle.selectionForegroundColor ? this.menuStyle.selectionForegroundColor : this.menuStyle.foregroundColor;\r\n        if (this.submenuIndicator) {\r\n            this.submenuIndicator.style.color = fgColor ? `${fgColor}` : '';\r\n        }\r\n        if (this.parentData.submenu) {\r\n            this.parentData.submenu.style(this.menuStyle);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.hideScheduler.dispose();\r\n        if (this.mysubmenu) {\r\n            this.mysubmenu.dispose();\r\n            this.mysubmenu = null;\r\n        }\r\n        if (this.submenuContainer) {\r\n            this.submenuContainer = undefined;\r\n        }\r\n    }\r\n}\r\nclass MenuSeparatorActionViewItem extends ActionViewItem {\r\n    style(style) {\r\n        if (this.label) {\r\n            this.label.style.borderBottomColor = style.separatorColor ? `${style.separatorColor}` : '';\r\n        }\r\n    }\r\n}\r\nexport function cleanMnemonic(label) {\r\n    const regex = MENU_MNEMONIC_REGEX;\r\n    const matches = regex.exec(label);\r\n    if (!matches) {\r\n        return label;\r\n    }\r\n    const mnemonicInText = !matches[1];\r\n    return label.replace(regex, mnemonicInText ? '$2$3' : '').trim();\r\n}\r\nlet MENU_WIDGET_CSS = `\n.monaco-menu {\n\tfont-size: 13px;\n\n}\n\n${formatRule(menuSelectionIcon)}\n${formatRule(menuSubmenuIcon)}\n\n.monaco-menu .monaco-action-bar {\n\ttext-align: right;\n\toverflow: hidden;\n\twhite-space: nowrap;\n}\n\n.monaco-menu .monaco-action-bar .actions-container {\n\tdisplay: flex;\n\tmargin: 0 auto;\n\tpadding: 0;\n\twidth: 100%;\n\tjustify-content: flex-end;\n}\n\n.monaco-menu .monaco-action-bar.vertical .actions-container {\n\tdisplay: inline-block;\n}\n\n.monaco-menu .monaco-action-bar.reverse .actions-container {\n\tflex-direction: row-reverse;\n}\n\n.monaco-menu .monaco-action-bar .action-item {\n\tcursor: pointer;\n\tdisplay: inline-block;\n\ttransition: transform 50ms ease;\n\tposition: relative;  /* DO NOT REMOVE - this is the key to preventing the ghosting icon bug in Chrome 42 */\n}\n\n.monaco-menu .monaco-action-bar .action-item.disabled {\n\tcursor: default;\n}\n\n.monaco-menu .monaco-action-bar.animated .action-item.active {\n\ttransform: scale(1.272019649, 1.272019649); /* 1.272019649 = \u221A\u03C6 */\n}\n\n.monaco-menu .monaco-action-bar .action-item .icon,\n.monaco-menu .monaco-action-bar .action-item .codicon {\n\tdisplay: inline-block;\n}\n\n.monaco-menu .monaco-action-bar .action-item .codicon {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.monaco-menu .monaco-action-bar .action-label {\n\tfont-size: 11px;\n\tmargin-right: 4px;\n}\n\n.monaco-menu .monaco-action-bar .action-item.disabled .action-label,\n.monaco-menu .monaco-action-bar .action-item.disabled .action-label:hover {\n\topacity: 0.4;\n}\n\n/* Vertical actions */\n\n.monaco-menu .monaco-action-bar.vertical {\n\ttext-align: left;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-item {\n\tdisplay: block;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-label.separator {\n\tdisplay: block;\n\tborder-bottom: 1px solid #bbb;\n\tpadding-top: 1px;\n\tmargin-left: .8em;\n\tmargin-right: .8em;\n}\n\n.monaco-menu .secondary-actions .monaco-action-bar .action-label {\n\tmargin-left: 6px;\n}\n\n/* Action Items */\n.monaco-menu .monaco-action-bar .action-item.select-container {\n\toverflow: hidden; /* somehow the dropdown overflows its container, we prevent it here to not push */\n\tflex: 1;\n\tmax-width: 170px;\n\tmin-width: 60px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin-right: 10px;\n}\n\n.monaco-menu .monaco-action-bar.vertical {\n\tmargin-left: 0;\n\toverflow: visible;\n}\n\n.monaco-menu .monaco-action-bar.vertical .actions-container {\n\tdisplay: block;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-item {\n\tpadding: 0;\n\ttransform: none;\n\tdisplay: flex;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-item.active {\n\ttransform: none;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-menu-item {\n\tflex: 1 1 auto;\n\tdisplay: flex;\n\theight: 2em;\n\talign-items: center;\n\tposition: relative;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-label {\n\tflex: 1 1 auto;\n\ttext-decoration: none;\n\tpadding: 0 1em;\n\tbackground: none;\n\tfont-size: 12px;\n\tline-height: 1;\n}\n\n.monaco-menu .monaco-action-bar.vertical .keybinding,\n.monaco-menu .monaco-action-bar.vertical .submenu-indicator {\n\tdisplay: inline-block;\n\tflex: 2 1 auto;\n\tpadding: 0 1em;\n\ttext-align: right;\n\tfont-size: 12px;\n\tline-height: 1;\n}\n\n.monaco-menu .monaco-action-bar.vertical .submenu-indicator {\n\theight: 100%;\n}\n\n.monaco-menu .monaco-action-bar.vertical .submenu-indicator.codicon {\n\tfont-size: 16px !important;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.monaco-menu .monaco-action-bar.vertical .submenu-indicator.codicon::before {\n\tmargin-left: auto;\n\tmargin-right: -20px;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-item.disabled .keybinding,\n.monaco-menu .monaco-action-bar.vertical .action-item.disabled .submenu-indicator {\n\topacity: 0.4;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-label:not(.separator) {\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tmargin: 0;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-item {\n\tposition: static;\n\toverflow: visible;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-item .monaco-submenu {\n\tposition: absolute;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-label.separator {\n\tpadding: 0.5em 0 0 0;\n\tmargin-bottom: 0.5em;\n\twidth: 100%;\n\theight: 0px !important;\n\tmargin-left: .8em !important;\n\tmargin-right: .8em !important;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-label.separator.text {\n\tpadding: 0.7em 1em 0.1em 1em;\n\tfont-weight: bold;\n\topacity: 1;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-label:hover {\n\tcolor: inherit;\n}\n\n.monaco-menu .monaco-action-bar.vertical .menu-item-check {\n\tposition: absolute;\n\tvisibility: hidden;\n\twidth: 1em;\n\theight: 100%;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-menu-item.checked .menu-item-check {\n\tvisibility: visible;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n/* Context Menu */\n\n.context-view.monaco-menu-container {\n\toutline: 0;\n\tborder: none;\n\tanimation: fadeIn 0.083s linear;\n\t-webkit-app-region: no-drag;\n}\n\n.context-view.monaco-menu-container :focus,\n.context-view.monaco-menu-container .monaco-action-bar.vertical:focus,\n.context-view.monaco-menu-container .monaco-action-bar.vertical :focus {\n\toutline: 0;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-item {\n\tborder: thin solid transparent; /* prevents jumping behaviour on hover or focus */\n}\n\n\n/* High Contrast Theming */\n:host-context(.hc-black) .context-view.monaco-menu-container {\n\tbox-shadow: none;\n}\n\n:host-context(.hc-black) .monaco-menu .monaco-action-bar.vertical .action-item.focused {\n\tbackground: none;\n}\n\n/* Vertical Action Bar Styles */\n\n.monaco-menu .monaco-action-bar.vertical {\n\tpadding: .5em 0;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-menu-item {\n\theight: 1.8em;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-label:not(.separator),\n.monaco-menu .monaco-action-bar.vertical .keybinding {\n\tfont-size: inherit;\n\tpadding: 0 2em;\n}\n\n.monaco-menu .monaco-action-bar.vertical .menu-item-check {\n\tfont-size: inherit;\n\twidth: 2em;\n}\n\n.monaco-menu .monaco-action-bar.vertical .action-label.separator {\n\tfont-size: inherit;\n\tpadding: 0.2em 0 0 0;\n\tmargin-bottom: 0.2em;\n}\n\n:host-context(.linux) .monaco-menu .monaco-action-bar.vertical .action-label.separator {\n\tmargin-left: 0;\n\tmargin-right: 0;\n}\n\n.monaco-menu .monaco-action-bar.vertical .submenu-indicator {\n\tfont-size: 60%;\n\tpadding: 0 1.8em;\n}\n\n:host-context(.linux) .monaco-menu .monaco-action-bar.vertical .submenu-indicator {\n\theight: 100%;\n\tmask-size: 10px 10px;\n\t-webkit-mask-size: 10px 10px;\n}\n\n.monaco-menu .action-item {\n\tcursor: default;\n}\n\n/* Arrows */\n.monaco-scrollable-element > .scrollbar > .scra {\n\tcursor: pointer;\n\tfont-size: 11px !important;\n}\n\n.monaco-scrollable-element > .visible {\n\topacity: 1;\n\n\t/* Background rule added for IE9 - to allow clicks on dom node */\n\tbackground:rgba(0,0,0,0);\n\n\ttransition: opacity 100ms linear;\n}\n.monaco-scrollable-element > .invisible {\n\topacity: 0;\n\tpointer-events: none;\n}\n.monaco-scrollable-element > .invisible.fade {\n\ttransition: opacity 800ms linear;\n}\n\n/* Scrollable Content Inset Shadow */\n.monaco-scrollable-element > .shadow {\n\tposition: absolute;\n\tdisplay: none;\n}\n.monaco-scrollable-element > .shadow.top {\n\tdisplay: block;\n\ttop: 0;\n\tleft: 3px;\n\theight: 3px;\n\twidth: 100%;\n\tbox-shadow: #DDD 0 6px 6px -6px inset;\n}\n.monaco-scrollable-element > .shadow.left {\n\tdisplay: block;\n\ttop: 3px;\n\tleft: 0;\n\theight: 100%;\n\twidth: 3px;\n\tbox-shadow: #DDD 6px 0 6px -6px inset;\n}\n.monaco-scrollable-element > .shadow.top-left-corner {\n\tdisplay: block;\n\ttop: 0;\n\tleft: 0;\n\theight: 3px;\n\twidth: 3px;\n}\n.monaco-scrollable-element > .shadow.top.left {\n\tbox-shadow: #DDD 6px 6px 6px -6px inset;\n}\n\n/* ---------- Default Style ---------- */\n\n:host-context(.vs) .monaco-scrollable-element > .scrollbar > .slider {\n\tbackground: rgba(100, 100, 100, .4);\n}\n:host-context(.vs-dark) .monaco-scrollable-element > .scrollbar > .slider {\n\tbackground: rgba(121, 121, 121, .4);\n}\n:host-context(.hc-black) .monaco-scrollable-element > .scrollbar > .slider {\n\tbackground: rgba(111, 195, 223, .6);\n}\n\n.monaco-scrollable-element > .scrollbar > .slider:hover {\n\tbackground: rgba(100, 100, 100, .7);\n}\n:host-context(.hc-black) .monaco-scrollable-element > .scrollbar > .slider:hover {\n\tbackground: rgba(111, 195, 223, .8);\n}\n\n.monaco-scrollable-element > .scrollbar > .slider.active {\n\tbackground: rgba(0, 0, 0, .6);\n}\n:host-context(.vs-dark) .monaco-scrollable-element > .scrollbar > .slider.active {\n\tbackground: rgba(191, 191, 191, .4);\n}\n:host-context(.hc-black) .monaco-scrollable-element > .scrollbar > .slider.active {\n\tbackground: rgba(111, 195, 223, 1);\n}\n\n:host-context(.vs-dark) .monaco-scrollable-element .shadow.top {\n\tbox-shadow: none;\n}\n\n:host-context(.vs-dark) .monaco-scrollable-element .shadow.left {\n\tbox-shadow: #000 6px 0 6px -6px inset;\n}\n\n:host-context(.vs-dark) .monaco-scrollable-element .shadow.top.left {\n\tbox-shadow: #000 6px 6px 6px -6px inset;\n}\n\n:host-context(.hc-black) .monaco-scrollable-element .shadow.top {\n\tbox-shadow: none;\n}\n\n:host-context(.hc-black) .monaco-scrollable-element .shadow.left {\n\tbox-shadow: none;\n}\n\n:host-context(.hc-black) .monaco-scrollable-element .shadow.top.left {\n\tbox-shadow: none;\n}\n`;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { ContextMenuHandler } from './contextMenuHandler.js';\r\nimport { IContextViewService } from './contextView.js';\r\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\r\nimport { INotificationService } from '../../notification/common/notification.js';\r\nimport { IThemeService } from '../../theme/common/themeService.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\r\nlet ContextMenuService = class ContextMenuService extends Disposable {\r\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, themeService) {\r\n        super();\r\n        this.contextMenuHandler = new ContextMenuHandler(contextViewService, telemetryService, notificationService, keybindingService, themeService);\r\n    }\r\n    configure(options) {\r\n        this.contextMenuHandler.configure(options);\r\n    }\r\n    // ContextMenu\r\n    showContextMenu(delegate) {\r\n        this.contextMenuHandler.showContextMenu(delegate);\r\n        ModifierKeyEmitter.getInstance().resetKeyStatus();\r\n    }\r\n};\r\nContextMenuService = __decorate([\r\n    __param(0, ITelemetryService),\r\n    __param(1, INotificationService),\r\n    __param(2, IContextViewService),\r\n    __param(3, IKeybindingService),\r\n    __param(4, IThemeService)\r\n], ContextMenuService);\r\nexport { ContextMenuService };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nexport const ILayoutService = createDecorator('layoutService');\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { ContextView } from '../../../base/browser/ui/contextview/contextview.js';\r\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\r\nlet ContextViewService = class ContextViewService extends Disposable {\r\n    constructor(layoutService) {\r\n        super();\r\n        this.layoutService = layoutService;\r\n        this.currentViewDisposable = Disposable.None;\r\n        this.container = layoutService.container;\r\n        this.contextView = this._register(new ContextView(this.container, 1 /* ABSOLUTE */));\r\n        this.layout();\r\n        this._register(layoutService.onDidLayout(() => this.layout()));\r\n    }\r\n    // ContextView\r\n    setContainer(container, domPosition) {\r\n        this.contextView.setContainer(container, domPosition || 1 /* ABSOLUTE */);\r\n    }\r\n    showContextView(delegate, container, shadowRoot) {\r\n        if (container) {\r\n            if (container !== this.container) {\r\n                this.container = container;\r\n                this.setContainer(container, shadowRoot ? 3 /* FIXED_SHADOW */ : 2 /* FIXED */);\r\n            }\r\n        }\r\n        else {\r\n            if (this.container !== this.layoutService.container) {\r\n                this.container = this.layoutService.container;\r\n                this.setContainer(this.container, 1 /* ABSOLUTE */);\r\n            }\r\n        }\r\n        this.contextView.show(delegate);\r\n        const disposable = toDisposable(() => {\r\n            if (this.currentViewDisposable === disposable) {\r\n                this.hideContextView();\r\n            }\r\n        });\r\n        this.currentViewDisposable = disposable;\r\n        return disposable;\r\n    }\r\n    getContextViewElement() {\r\n        return this.contextView.getViewElement();\r\n    }\r\n    layout() {\r\n        this.contextView.layout();\r\n    }\r\n    hideContextView(data) {\r\n        this.contextView.hide(data);\r\n    }\r\n};\r\nContextViewService = __decorate([\r\n    __param(0, ILayoutService)\r\n], ContextViewService);\r\nexport { ContextViewService };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nexport const IDialogService = createDecorator('dialogService');\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Node {\r\n    constructor(data) {\r\n        this.incoming = new Map();\r\n        this.outgoing = new Map();\r\n        this.data = data;\r\n    }\r\n}\r\nexport class Graph {\r\n    constructor(_hashFn) {\r\n        this._hashFn = _hashFn;\r\n        this._nodes = new Map();\r\n        // empty\r\n    }\r\n    roots() {\r\n        const ret = [];\r\n        for (let node of this._nodes.values()) {\r\n            if (node.outgoing.size === 0) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    insertEdge(from, to) {\r\n        const fromNode = this.lookupOrInsertNode(from);\r\n        const toNode = this.lookupOrInsertNode(to);\r\n        fromNode.outgoing.set(this._hashFn(to), toNode);\r\n        toNode.incoming.set(this._hashFn(from), fromNode);\r\n    }\r\n    removeNode(data) {\r\n        const key = this._hashFn(data);\r\n        this._nodes.delete(key);\r\n        for (let node of this._nodes.values()) {\r\n            node.outgoing.delete(key);\r\n            node.incoming.delete(key);\r\n        }\r\n    }\r\n    lookupOrInsertNode(data) {\r\n        const key = this._hashFn(data);\r\n        let node = this._nodes.get(key);\r\n        if (!node) {\r\n            node = new Node(data);\r\n            this._nodes.set(key, node);\r\n        }\r\n        return node;\r\n    }\r\n    isEmpty() {\r\n        return this._nodes.size === 0;\r\n    }\r\n    toString() {\r\n        let data = [];\r\n        for (let [key, value] of this._nodes) {\r\n            data.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\r\n        }\r\n        return data.join('\\n');\r\n    }\r\n    /**\r\n     * This is brute force and slow and **only** be used\r\n     * to trouble shoot.\r\n     */\r\n    findCycleSlow() {\r\n        for (let [id, node] of this._nodes) {\r\n            const seen = new Set([id]);\r\n            const res = this._findCycle(node, seen);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    _findCycle(node, seen) {\r\n        for (let [id, outgoing] of node.outgoing) {\r\n            if (seen.has(id)) {\r\n                return [...seen, id].join(' -> ');\r\n            }\r\n            seen.add(id);\r\n            const value = this._findCycle(outgoing, seen);\r\n            if (value) {\r\n                return value;\r\n            }\r\n            seen.delete(id);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalState } from '../../../base/common/errors.js';\r\nimport { Graph } from './graph.js';\r\nimport { SyncDescriptor } from './descriptors.js';\r\nimport { IInstantiationService, _util, optional } from './instantiation.js';\r\nimport { ServiceCollection } from './serviceCollection.js';\r\nimport { IdleValue } from '../../../base/common/async.js';\r\n// TRACING\r\nconst _enableTracing = false;\r\nclass CyclicDependencyError extends Error {\r\n    constructor(graph) {\r\n        var _a;\r\n        super('cyclic dependency between services');\r\n        this.message = (_a = graph.findCycleSlow()) !== null && _a !== void 0 ? _a : `UNABLE to detect cycle, dumping graph: \\n${graph.toString()}`;\r\n    }\r\n}\r\nexport class InstantiationService {\r\n    constructor(services = new ServiceCollection(), strict = false, parent) {\r\n        this._activeInstantiations = new Set();\r\n        this._services = services;\r\n        this._strict = strict;\r\n        this._parent = parent;\r\n        this._services.set(IInstantiationService, this);\r\n    }\r\n    createChild(services) {\r\n        return new InstantiationService(services, this._strict, this);\r\n    }\r\n    invokeFunction(fn, ...args) {\r\n        let _trace = Trace.traceInvocation(fn);\r\n        let _done = false;\r\n        try {\r\n            const accessor = {\r\n                get: (id, isOptional) => {\r\n                    if (_done) {\r\n                        throw illegalState('service accessor is only valid during the invocation of its target method');\r\n                    }\r\n                    const result = this._getOrCreateServiceInstance(id, _trace);\r\n                    if (!result && isOptional !== optional) {\r\n                        throw new Error(`[invokeFunction] unknown service '${id}'`);\r\n                    }\r\n                    return result;\r\n                }\r\n            };\r\n            return fn(accessor, ...args);\r\n        }\r\n        finally {\r\n            _done = true;\r\n            _trace.stop();\r\n        }\r\n    }\r\n    createInstance(ctorOrDescriptor, ...rest) {\r\n        let _trace;\r\n        let result;\r\n        if (ctorOrDescriptor instanceof SyncDescriptor) {\r\n            _trace = Trace.traceCreation(ctorOrDescriptor.ctor);\r\n            result = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\r\n        }\r\n        else {\r\n            _trace = Trace.traceCreation(ctorOrDescriptor);\r\n            result = this._createInstance(ctorOrDescriptor, rest, _trace);\r\n        }\r\n        _trace.stop();\r\n        return result;\r\n    }\r\n    _createInstance(ctor, args = [], _trace) {\r\n        // arguments defined by service decorators\r\n        let serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\r\n        let serviceArgs = [];\r\n        for (const dependency of serviceDependencies) {\r\n            let service = this._getOrCreateServiceInstance(dependency.id, _trace);\r\n            if (!service && this._strict && !dependency.optional) {\r\n                throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\r\n            }\r\n            serviceArgs.push(service);\r\n        }\r\n        let firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\r\n        // check for argument mismatches, adjust static args if needed\r\n        if (args.length !== firstServiceArgPos) {\r\n            console.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\r\n            let delta = firstServiceArgPos - args.length;\r\n            if (delta > 0) {\r\n                args = args.concat(new Array(delta));\r\n            }\r\n            else {\r\n                args = args.slice(0, firstServiceArgPos);\r\n            }\r\n        }\r\n        // now create the instance\r\n        return new ctor(...[...args, ...serviceArgs]);\r\n    }\r\n    _setServiceInstance(id, instance) {\r\n        if (this._services.get(id) instanceof SyncDescriptor) {\r\n            this._services.set(id, instance);\r\n        }\r\n        else if (this._parent) {\r\n            this._parent._setServiceInstance(id, instance);\r\n        }\r\n        else {\r\n            throw new Error('illegalState - setting UNKNOWN service instance');\r\n        }\r\n    }\r\n    _getServiceInstanceOrDescriptor(id) {\r\n        let instanceOrDesc = this._services.get(id);\r\n        if (!instanceOrDesc && this._parent) {\r\n            return this._parent._getServiceInstanceOrDescriptor(id);\r\n        }\r\n        else {\r\n            return instanceOrDesc;\r\n        }\r\n    }\r\n    _getOrCreateServiceInstance(id, _trace) {\r\n        let thing = this._getServiceInstanceOrDescriptor(id);\r\n        if (thing instanceof SyncDescriptor) {\r\n            return this._safeCreateAndCacheServiceInstance(id, thing, _trace.branch(id, true));\r\n        }\r\n        else {\r\n            _trace.branch(id, false);\r\n            return thing;\r\n        }\r\n    }\r\n    _safeCreateAndCacheServiceInstance(id, desc, _trace) {\r\n        if (this._activeInstantiations.has(id)) {\r\n            throw new Error(`illegal state - RECURSIVELY instantiating service '${id}'`);\r\n        }\r\n        this._activeInstantiations.add(id);\r\n        try {\r\n            return this._createAndCacheServiceInstance(id, desc, _trace);\r\n        }\r\n        finally {\r\n            this._activeInstantiations.delete(id);\r\n        }\r\n    }\r\n    _createAndCacheServiceInstance(id, desc, _trace) {\r\n        const graph = new Graph(data => data.id.toString());\r\n        let cycleCount = 0;\r\n        const stack = [{ id, desc, _trace }];\r\n        while (stack.length) {\r\n            const item = stack.pop();\r\n            graph.lookupOrInsertNode(item);\r\n            // a weak but working heuristic for cycle checks\r\n            if (cycleCount++ > 1000) {\r\n                throw new CyclicDependencyError(graph);\r\n            }\r\n            // check all dependencies for existence and if they need to be created first\r\n            for (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\r\n                let instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\r\n                if (!instanceOrDesc && !dependency.optional) {\r\n                    console.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\r\n                }\r\n                if (instanceOrDesc instanceof SyncDescriptor) {\r\n                    const d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\r\n                    graph.insertEdge(item, d);\r\n                    stack.push(d);\r\n                }\r\n            }\r\n        }\r\n        while (true) {\r\n            const roots = graph.roots();\r\n            // if there is no more roots but still\r\n            // nodes in the graph we have a cycle\r\n            if (roots.length === 0) {\r\n                if (!graph.isEmpty()) {\r\n                    throw new CyclicDependencyError(graph);\r\n                }\r\n                break;\r\n            }\r\n            for (const { data } of roots) {\r\n                // Repeat the check for this still being a service sync descriptor. That's because\r\n                // instantiating a dependency might have side-effect and recursively trigger instantiation\r\n                // so that some dependencies are now fullfilled already.\r\n                const instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\r\n                if (instanceOrDesc instanceof SyncDescriptor) {\r\n                    // create instance and overwrite the service collections\r\n                    const instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\r\n                    this._setServiceInstance(data.id, instance);\r\n                }\r\n                graph.removeNode(data);\r\n            }\r\n        }\r\n        return this._getServiceInstanceOrDescriptor(id);\r\n    }\r\n    _createServiceInstanceWithOwner(id, ctor, args = [], supportsDelayedInstantiation, _trace) {\r\n        if (this._services.get(id) instanceof SyncDescriptor) {\r\n            return this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\r\n        }\r\n        else {\r\n            throw new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\r\n        }\r\n    }\r\n    _createServiceInstance(ctor, args = [], _supportsDelayedInstantiation, _trace) {\r\n        if (!_supportsDelayedInstantiation) {\r\n            // eager instantiation\r\n            return this._createInstance(ctor, args, _trace);\r\n        }\r\n        else {\r\n            // Return a proxy object that's backed by an idle value. That\r\n            // strategy is to instantiate services in our idle time or when actually\r\n            // needed but not when injected into a consumer\r\n            const idle = new IdleValue(() => this._createInstance(ctor, args, _trace));\r\n            return new Proxy(Object.create(null), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    let obj = idle.value;\r\n                    let prop = obj[key];\r\n                    if (typeof prop !== 'function') {\r\n                        return prop;\r\n                    }\r\n                    prop = prop.bind(obj);\r\n                    target[key] = prop;\r\n                    return prop;\r\n                },\r\n                set(_target, p, value) {\r\n                    idle.value[p] = value;\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass Trace {\r\n    constructor(type, name) {\r\n        this.type = type;\r\n        this.name = name;\r\n        this._start = Date.now();\r\n        this._dep = [];\r\n    }\r\n    static traceInvocation(ctor) {\r\n        return !_enableTracing ? Trace._None : new Trace(1 /* Invocation */, ctor.name || ctor.toString().substring(0, 42).replace(/\\n/g, ''));\r\n    }\r\n    static traceCreation(ctor) {\r\n        return !_enableTracing ? Trace._None : new Trace(0 /* Creation */, ctor.name);\r\n    }\r\n    branch(id, first) {\r\n        let child = new Trace(2 /* Branch */, id.toString());\r\n        this._dep.push([id, first, child]);\r\n        return child;\r\n    }\r\n    stop() {\r\n        let dur = Date.now() - this._start;\r\n        Trace._totals += dur;\r\n        let causedCreation = false;\r\n        function printChild(n, trace) {\r\n            let res = [];\r\n            let prefix = new Array(n + 1).join('\\t');\r\n            for (const [id, first, child] of trace._dep) {\r\n                if (first && child) {\r\n                    causedCreation = true;\r\n                    res.push(`${prefix}CREATES -> ${id}`);\r\n                    let nested = printChild(n + 1, child);\r\n                    if (nested) {\r\n                        res.push(nested);\r\n                    }\r\n                }\r\n                else {\r\n                    res.push(`${prefix}uses -> ${id}`);\r\n                }\r\n            }\r\n            return res.join('\\n');\r\n        }\r\n        let lines = [\r\n            `${this.type === 0 /* Creation */ ? 'CREATE' : 'CALL'} ${this.name}`,\r\n            `${printChild(1, this)}`,\r\n            `DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\r\n        ];\r\n        if (dur > 2 || causedCreation) {\r\n            console.log(lines.join('\\n'));\r\n        }\r\n    }\r\n}\r\nTrace._None = new class extends Trace {\r\n    constructor() { super(-1, null); }\r\n    stop() { }\r\n    branch() { return this; }\r\n};\r\nTrace._totals = 0;\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './list.css';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { range } from '../../../common/arrays.js';\r\nimport { List } from './listWidget.js';\r\nimport { Event } from '../../../common/event.js';\r\nimport { CancellationTokenSource } from '../../../common/cancellation.js';\r\nclass PagedRenderer {\r\n    constructor(renderer, modelProvider) {\r\n        this.renderer = renderer;\r\n        this.modelProvider = modelProvider;\r\n    }\r\n    get templateId() { return this.renderer.templateId; }\r\n    renderTemplate(container) {\r\n        const data = this.renderer.renderTemplate(container);\r\n        return { data, disposable: Disposable.None };\r\n    }\r\n    renderElement(index, _, data, height) {\r\n        if (data.disposable) {\r\n            data.disposable.dispose();\r\n        }\r\n        if (!data.data) {\r\n            return;\r\n        }\r\n        const model = this.modelProvider();\r\n        if (model.isResolved(index)) {\r\n            return this.renderer.renderElement(model.get(index), index, data.data, height);\r\n        }\r\n        const cts = new CancellationTokenSource();\r\n        const promise = model.resolve(index, cts.token);\r\n        data.disposable = { dispose: () => cts.cancel() };\r\n        this.renderer.renderPlaceholder(index, data.data);\r\n        promise.then(entry => this.renderer.renderElement(entry, index, data.data, height));\r\n    }\r\n    disposeTemplate(data) {\r\n        if (data.disposable) {\r\n            data.disposable.dispose();\r\n            data.disposable = undefined;\r\n        }\r\n        if (data.data) {\r\n            this.renderer.disposeTemplate(data.data);\r\n            data.data = undefined;\r\n        }\r\n    }\r\n}\r\nclass PagedAccessibilityProvider {\r\n    constructor(modelProvider, accessibilityProvider) {\r\n        this.modelProvider = modelProvider;\r\n        this.accessibilityProvider = accessibilityProvider;\r\n    }\r\n    getWidgetAriaLabel() {\r\n        return this.accessibilityProvider.getWidgetAriaLabel();\r\n    }\r\n    getAriaLabel(index) {\r\n        const model = this.modelProvider();\r\n        if (!model.isResolved(index)) {\r\n            return null;\r\n        }\r\n        return this.accessibilityProvider.getAriaLabel(model.get(index));\r\n    }\r\n}\r\nfunction fromPagedListOptions(modelProvider, options) {\r\n    return Object.assign(Object.assign({}, options), { accessibilityProvider: options.accessibilityProvider && new PagedAccessibilityProvider(modelProvider, options.accessibilityProvider) });\r\n}\r\nexport class PagedList {\r\n    constructor(user, container, virtualDelegate, renderers, options = {}) {\r\n        const modelProvider = () => this.model;\r\n        const pagedRenderers = renderers.map(r => new PagedRenderer(r, modelProvider));\r\n        this.list = new List(user, container, virtualDelegate, pagedRenderers, fromPagedListOptions(modelProvider, options));\r\n    }\r\n    updateOptions(options) {\r\n        this.list.updateOptions(options);\r\n    }\r\n    getHTMLElement() {\r\n        return this.list.getHTMLElement();\r\n    }\r\n    get onDidFocus() {\r\n        return this.list.onDidFocus;\r\n    }\r\n    get onDidDispose() {\r\n        return this.list.onDidDispose;\r\n    }\r\n    get onMouseDblClick() {\r\n        return Event.map(this.list.onMouseDblClick, ({ element, index, browserEvent }) => ({ element: element === undefined ? undefined : this._model.get(element), index, browserEvent }));\r\n    }\r\n    get onPointer() {\r\n        return Event.map(this.list.onPointer, ({ element, index, browserEvent }) => ({ element: element === undefined ? undefined : this._model.get(element), index, browserEvent }));\r\n    }\r\n    get onDidChangeSelection() {\r\n        return Event.map(this.list.onDidChangeSelection, ({ elements, indexes, browserEvent }) => ({ elements: elements.map(e => this._model.get(e)), indexes, browserEvent }));\r\n    }\r\n    get model() {\r\n        return this._model;\r\n    }\r\n    set model(model) {\r\n        this._model = model;\r\n        this.list.splice(0, this.list.length, range(model.length));\r\n    }\r\n    getFocus() {\r\n        return this.list.getFocus();\r\n    }\r\n    getSelection() {\r\n        return this.list.getSelection();\r\n    }\r\n    getSelectedElements() {\r\n        return this.getSelection().map(i => this.model.get(i));\r\n    }\r\n    style(styles) {\r\n        this.list.style(styles);\r\n    }\r\n    dispose() {\r\n        this.list.dispose();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { localize } from '../../../nls.js';\r\nimport { RawContextKey } from './contextkey.js';\r\nimport { isWindows } from '../../../base/common/platform.js';\r\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\r\nexport const InputFocusedContextKey = 'inputFocus';\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './media/tree.css';\r\nimport { dispose, Disposable, toDisposable, DisposableStore } from '../../../common/lifecycle.js';\r\nimport { List, MouseController, DefaultKeyboardNavigationDelegate, isInputElement, isMonacoEditor } from '../list/listWidget.js';\r\nimport { append, $, getDomNodePagePosition, hasParentWithClass, createStyleSheet, clearNode, addDisposableListener } from '../../dom.js';\r\nimport { Event, Relay, Emitter, EventBufferer } from '../../../common/event.js';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { TreeMouseEventTarget } from './tree.js';\r\nimport { StaticDND, DragAndDropData } from '../../dnd.js';\r\nimport { range, equals, distinctES6 } from '../../../common/arrays.js';\r\nimport { ElementsDragAndDropData } from '../list/listView.js';\r\nimport { DomEmitter } from '../../event.js';\r\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\r\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { disposableTimeout } from '../../../common/async.js';\r\nimport { isMacintosh } from '../../../common/platform.js';\r\nimport { clamp } from '../../../common/numbers.js';\r\nimport { SetMap } from '../../../common/collections.js';\r\nimport { treeItemExpandedIcon, treeFilterOnTypeOnIcon, treeFilterOnTypeOffIcon, treeFilterClearIcon } from './treeIcons.js';\r\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\r\n    constructor(data) {\r\n        super(data.elements.map(node => node.element));\r\n        this.data = data;\r\n    }\r\n}\r\nfunction asTreeDragAndDropData(data) {\r\n    if (data instanceof ElementsDragAndDropData) {\r\n        return new TreeElementsDragAndDropData(data);\r\n    }\r\n    return data;\r\n}\r\nclass TreeNodeListDragAndDrop {\r\n    constructor(modelProvider, dnd) {\r\n        this.modelProvider = modelProvider;\r\n        this.dnd = dnd;\r\n        this.autoExpandDisposable = Disposable.None;\r\n    }\r\n    getDragURI(node) {\r\n        return this.dnd.getDragURI(node.element);\r\n    }\r\n    getDragLabel(nodes, originalEvent) {\r\n        if (this.dnd.getDragLabel) {\r\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\r\n        }\r\n        return undefined;\r\n    }\r\n    onDragStart(data, originalEvent) {\r\n        if (this.dnd.onDragStart) {\r\n            this.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);\r\n        }\r\n    }\r\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\r\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\r\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\r\n        if (didChangeAutoExpandNode) {\r\n            this.autoExpandDisposable.dispose();\r\n            this.autoExpandNode = targetNode;\r\n        }\r\n        if (typeof targetNode === 'undefined') {\r\n            return result;\r\n        }\r\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\r\n            this.autoExpandDisposable = disposableTimeout(() => {\r\n                const model = this.modelProvider();\r\n                const ref = model.getNodeLocation(targetNode);\r\n                if (model.isCollapsed(ref)) {\r\n                    model.setCollapsed(ref, false);\r\n                }\r\n                this.autoExpandNode = undefined;\r\n            }, 500);\r\n        }\r\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\r\n            if (!raw) {\r\n                const accept = typeof result === 'boolean' ? result : result.accept;\r\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\r\n                return { accept, effect, feedback: [targetIndex] };\r\n            }\r\n            return result;\r\n        }\r\n        if (result.bubble === 1 /* Up */) {\r\n            const model = this.modelProvider();\r\n            const ref = model.getNodeLocation(targetNode);\r\n            const parentRef = model.getParentNodeLocation(ref);\r\n            const parentNode = model.getNode(parentRef);\r\n            const parentIndex = parentRef && model.getListIndex(parentRef);\r\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\r\n        }\r\n        const model = this.modelProvider();\r\n        const ref = model.getNodeLocation(targetNode);\r\n        const start = model.getListIndex(ref);\r\n        const length = model.getListRenderCount(ref);\r\n        return Object.assign(Object.assign({}, result), { feedback: range(start, start + length) });\r\n    }\r\n    drop(data, targetNode, targetIndex, originalEvent) {\r\n        this.autoExpandDisposable.dispose();\r\n        this.autoExpandNode = undefined;\r\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\r\n    }\r\n    onDragEnd(originalEvent) {\r\n        if (this.dnd.onDragEnd) {\r\n            this.dnd.onDragEnd(originalEvent);\r\n        }\r\n    }\r\n}\r\nfunction asListOptions(modelProvider, options) {\r\n    return options && Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\r\n            getId(el) {\r\n                return options.identityProvider.getId(el.element);\r\n            }\r\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\r\n            isSelectionSingleChangeEvent(e) {\r\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\r\n            },\r\n            isSelectionRangeChangeEvent(e) {\r\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\r\n            }\r\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getSetSize(node) {\r\n                const model = modelProvider();\r\n                const ref = model.getNodeLocation(node);\r\n                const parentRef = model.getParentNodeLocation(ref);\r\n                const parentNode = model.getNode(parentRef);\r\n                return parentNode.visibleChildrenCount;\r\n            },\r\n            getPosInSet(node) {\r\n                return node.visibleChildIndex + 1;\r\n            }, isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\r\n                return options.accessibilityProvider.isChecked(node.element);\r\n            } : undefined, getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\r\n                return options.accessibilityProvider.getRole(node.element);\r\n            } : () => 'treeitem', getAriaLabel(e) {\r\n                return options.accessibilityProvider.getAriaLabel(e.element);\r\n            },\r\n            getWidgetAriaLabel() {\r\n                return options.accessibilityProvider.getWidgetAriaLabel();\r\n            }, getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\r\n                return node.depth;\r\n            }, getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\r\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\r\n            }) }), keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(node) {\r\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\r\n            } }), enableKeyboardNavigation: options.simpleKeyboardNavigation });\r\n}\r\nexport class ComposedTreeDelegate {\r\n    constructor(delegate) {\r\n        this.delegate = delegate;\r\n    }\r\n    getHeight(element) {\r\n        return this.delegate.getHeight(element.element);\r\n    }\r\n    getTemplateId(element) {\r\n        return this.delegate.getTemplateId(element.element);\r\n    }\r\n    hasDynamicHeight(element) {\r\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\r\n    }\r\n    setDynamicHeight(element, height) {\r\n        if (this.delegate.setDynamicHeight) {\r\n            this.delegate.setDynamicHeight(element.element, height);\r\n        }\r\n    }\r\n}\r\nexport var RenderIndentGuides;\r\n(function (RenderIndentGuides) {\r\n    RenderIndentGuides[\"None\"] = \"none\";\r\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\r\n    RenderIndentGuides[\"Always\"] = \"always\";\r\n})(RenderIndentGuides || (RenderIndentGuides = {}));\r\nclass EventCollection {\r\n    constructor(onDidChange, _elements = []) {\r\n        this._elements = _elements;\r\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements);\r\n    }\r\n    get elements() {\r\n        return this._elements;\r\n    }\r\n}\r\nclass TreeRenderer {\r\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, options = {}) {\r\n        this.renderer = renderer;\r\n        this.modelProvider = modelProvider;\r\n        this.activeNodes = activeNodes;\r\n        this.renderedElements = new Map();\r\n        this.renderedNodes = new Map();\r\n        this.indent = TreeRenderer.DefaultIndent;\r\n        this.hideTwistiesOfChildlessElements = false;\r\n        this.shouldRenderIndentGuides = false;\r\n        this.renderedIndentGuides = new SetMap();\r\n        this.activeIndentNodes = new Set();\r\n        this.indentGuidesDisposable = Disposable.None;\r\n        this.disposables = new DisposableStore();\r\n        this.templateId = renderer.templateId;\r\n        this.updateOptions(options);\r\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\r\n        if (renderer.onDidChangeTwistieState) {\r\n            renderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);\r\n        }\r\n    }\r\n    updateOptions(options = {}) {\r\n        if (typeof options.indent !== 'undefined') {\r\n            this.indent = clamp(options.indent, 0, 40);\r\n        }\r\n        if (typeof options.renderIndentGuides !== 'undefined') {\r\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\r\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\r\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\r\n                this.indentGuidesDisposable.dispose();\r\n                if (shouldRenderIndentGuides) {\r\n                    const disposables = new DisposableStore();\r\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\r\n                    this.indentGuidesDisposable = disposables;\r\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\r\n                }\r\n            }\r\n        }\r\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\r\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\r\n        }\r\n    }\r\n    renderTemplate(container) {\r\n        const el = append(container, $('.monaco-tl-row'));\r\n        const indent = append(el, $('.monaco-tl-indent'));\r\n        const twistie = append(el, $('.monaco-tl-twistie'));\r\n        const contents = append(el, $('.monaco-tl-contents'));\r\n        const templateData = this.renderer.renderTemplate(contents);\r\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\r\n    }\r\n    renderElement(node, index, templateData, height) {\r\n        if (typeof height === 'number') {\r\n            this.renderedNodes.set(node, { templateData, height });\r\n            this.renderedElements.set(node.element, node);\r\n        }\r\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\r\n        templateData.twistie.style.paddingLeft = `${indent}px`;\r\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\r\n        this.renderTwistie(node, templateData);\r\n        if (typeof height === 'number') {\r\n            this.renderIndentGuides(node, templateData);\r\n        }\r\n        this.renderer.renderElement(node, index, templateData.templateData, height);\r\n    }\r\n    disposeElement(node, index, templateData, height) {\r\n        templateData.indentGuidesDisposable.dispose();\r\n        if (this.renderer.disposeElement) {\r\n            this.renderer.disposeElement(node, index, templateData.templateData, height);\r\n        }\r\n        if (typeof height === 'number') {\r\n            this.renderedNodes.delete(node);\r\n            this.renderedElements.delete(node.element);\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        this.renderer.disposeTemplate(templateData.templateData);\r\n    }\r\n    onDidChangeTwistieState(element) {\r\n        const node = this.renderedElements.get(element);\r\n        if (!node) {\r\n            return;\r\n        }\r\n        this.onDidChangeNodeTwistieState(node);\r\n    }\r\n    onDidChangeNodeTwistieState(node) {\r\n        const data = this.renderedNodes.get(node);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.renderTwistie(node, data.templateData);\r\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\r\n        this.renderIndentGuides(node, data.templateData);\r\n    }\r\n    renderTwistie(node, templateData) {\r\n        templateData.twistie.classList.remove(...treeItemExpandedIcon.classNamesArray);\r\n        let twistieRendered = false;\r\n        if (this.renderer.renderTwistie) {\r\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\r\n        }\r\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\r\n            if (!twistieRendered) {\r\n                templateData.twistie.classList.add(...treeItemExpandedIcon.classNamesArray);\r\n            }\r\n            templateData.twistie.classList.add('collapsible');\r\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\r\n        }\r\n        else {\r\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\r\n        }\r\n        if (node.collapsible) {\r\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\r\n        }\r\n        else {\r\n            templateData.container.removeAttribute('aria-expanded');\r\n        }\r\n    }\r\n    renderIndentGuides(target, templateData) {\r\n        clearNode(templateData.indent);\r\n        templateData.indentGuidesDisposable.dispose();\r\n        if (!this.shouldRenderIndentGuides) {\r\n            return;\r\n        }\r\n        const disposableStore = new DisposableStore();\r\n        const model = this.modelProvider();\r\n        let node = target;\r\n        while (true) {\r\n            const ref = model.getNodeLocation(node);\r\n            const parentRef = model.getParentNodeLocation(ref);\r\n            if (!parentRef) {\r\n                break;\r\n            }\r\n            const parent = model.getNode(parentRef);\r\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\r\n            if (this.activeIndentNodes.has(parent)) {\r\n                guide.classList.add('active');\r\n            }\r\n            if (templateData.indent.childElementCount === 0) {\r\n                templateData.indent.appendChild(guide);\r\n            }\r\n            else {\r\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\r\n            }\r\n            this.renderedIndentGuides.add(parent, guide);\r\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\r\n            node = parent;\r\n        }\r\n        templateData.indentGuidesDisposable = disposableStore;\r\n    }\r\n    _onDidChangeActiveNodes(nodes) {\r\n        if (!this.shouldRenderIndentGuides) {\r\n            return;\r\n        }\r\n        const set = new Set();\r\n        const model = this.modelProvider();\r\n        nodes.forEach(node => {\r\n            const ref = model.getNodeLocation(node);\r\n            try {\r\n                const parentRef = model.getParentNodeLocation(ref);\r\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\r\n                    set.add(node);\r\n                }\r\n                else if (parentRef) {\r\n                    set.add(model.getNode(parentRef));\r\n                }\r\n            }\r\n            catch (_a) {\r\n                // noop\r\n            }\r\n        });\r\n        this.activeIndentNodes.forEach(node => {\r\n            if (!set.has(node)) {\r\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\r\n            }\r\n        });\r\n        set.forEach(node => {\r\n            if (!this.activeIndentNodes.has(node)) {\r\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\r\n            }\r\n        });\r\n        this.activeIndentNodes = set;\r\n    }\r\n    dispose() {\r\n        this.renderedNodes.clear();\r\n        this.renderedElements.clear();\r\n        this.indentGuidesDisposable.dispose();\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nTreeRenderer.DefaultIndent = 8;\r\nclass TypeFilter {\r\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\r\n        this.tree = tree;\r\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\r\n        this._filter = _filter;\r\n        this._totalCount = 0;\r\n        this._matchCount = 0;\r\n        this._pattern = '';\r\n        this._lowercasePattern = '';\r\n        this.disposables = new DisposableStore();\r\n        tree.onWillRefilter(this.reset, this, this.disposables);\r\n    }\r\n    get totalCount() { return this._totalCount; }\r\n    get matchCount() { return this._matchCount; }\r\n    set pattern(pattern) {\r\n        this._pattern = pattern;\r\n        this._lowercasePattern = pattern.toLowerCase();\r\n    }\r\n    filter(element, parentVisibility) {\r\n        if (this._filter) {\r\n            const result = this._filter.filter(element, parentVisibility);\r\n            if (this.tree.options.simpleKeyboardNavigation) {\r\n                return result;\r\n            }\r\n            let visibility;\r\n            if (typeof result === 'boolean') {\r\n                visibility = result ? 1 /* Visible */ : 0 /* Hidden */;\r\n            }\r\n            else if (isFilterResult(result)) {\r\n                visibility = getVisibleState(result.visibility);\r\n            }\r\n            else {\r\n                visibility = result;\r\n            }\r\n            if (visibility === 0 /* Hidden */) {\r\n                return false;\r\n            }\r\n        }\r\n        this._totalCount++;\r\n        if (this.tree.options.simpleKeyboardNavigation || !this._pattern) {\r\n            this._matchCount++;\r\n            return { data: FuzzyScore.Default, visibility: true };\r\n        }\r\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\r\n        const labels = Array.isArray(label) ? label : [label];\r\n        for (const l of labels) {\r\n            const labelStr = l && l.toString();\r\n            if (typeof labelStr === 'undefined') {\r\n                return { data: FuzzyScore.Default, visibility: true };\r\n            }\r\n            const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);\r\n            if (score) {\r\n                this._matchCount++;\r\n                return labels.length === 1 ?\r\n                    { data: score, visibility: true } :\r\n                    { data: { label: labelStr, score: score }, visibility: true };\r\n            }\r\n        }\r\n        if (this.tree.options.filterOnType) {\r\n            return 2 /* Recurse */;\r\n        }\r\n        else {\r\n            return { data: FuzzyScore.Default, visibility: true };\r\n        }\r\n    }\r\n    reset() {\r\n        this._totalCount = 0;\r\n        this._matchCount = 0;\r\n    }\r\n    dispose() {\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nclass TypeFilterController {\r\n    constructor(tree, model, view, filter, keyboardNavigationDelegate) {\r\n        this.tree = tree;\r\n        this.view = view;\r\n        this.filter = filter;\r\n        this.keyboardNavigationDelegate = keyboardNavigationDelegate;\r\n        this._enabled = false;\r\n        this._pattern = '';\r\n        this._empty = false;\r\n        this._onDidChangeEmptyState = new Emitter();\r\n        this.positionClassName = 'ne';\r\n        this.automaticKeyboardNavigation = true;\r\n        this.triggered = false;\r\n        this._onDidChangePattern = new Emitter();\r\n        this.enabledDisposables = new DisposableStore();\r\n        this.disposables = new DisposableStore();\r\n        this.domNode = $(`.monaco-list-type-filter.${this.positionClassName}`);\r\n        this.domNode.draggable = true;\r\n        this.disposables.add(addDisposableListener(this.domNode, 'dragstart', () => this.onDragStart()));\r\n        this.messageDomNode = append(view.getHTMLElement(), $(`.monaco-list-type-filter-message`));\r\n        this.labelDomNode = append(this.domNode, $('span.label'));\r\n        const controls = append(this.domNode, $('.controls'));\r\n        this._filterOnType = !!tree.options.filterOnType;\r\n        this.filterOnTypeDomNode = append(controls, $('input.filter'));\r\n        this.filterOnTypeDomNode.type = 'checkbox';\r\n        this.filterOnTypeDomNode.checked = this._filterOnType;\r\n        this.filterOnTypeDomNode.tabIndex = -1;\r\n        this.updateFilterOnTypeTitleAndIcon();\r\n        this.disposables.add(addDisposableListener(this.filterOnTypeDomNode, 'input', () => this.onDidChangeFilterOnType()));\r\n        this.clearDomNode = append(controls, $('button.clear' + treeFilterClearIcon.cssSelector));\r\n        this.clearDomNode.tabIndex = -1;\r\n        this.clearDomNode.title = localize('clear', \"Clear\");\r\n        this.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;\r\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\r\n        this.updateOptions(tree.options);\r\n    }\r\n    get enabled() { return this._enabled; }\r\n    get pattern() { return this._pattern; }\r\n    get filterOnType() { return this._filterOnType; }\r\n    updateOptions(options) {\r\n        if (options.simpleKeyboardNavigation) {\r\n            this.disable();\r\n        }\r\n        else {\r\n            this.enable();\r\n        }\r\n        if (typeof options.filterOnType !== 'undefined') {\r\n            this._filterOnType = !!options.filterOnType;\r\n            this.filterOnTypeDomNode.checked = this._filterOnType;\r\n            this.updateFilterOnTypeTitleAndIcon();\r\n        }\r\n        if (typeof options.automaticKeyboardNavigation !== 'undefined') {\r\n            this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;\r\n        }\r\n        this.tree.refilter();\r\n        this.render();\r\n        if (!this.automaticKeyboardNavigation) {\r\n            this.onEventOrInput('');\r\n        }\r\n    }\r\n    enable() {\r\n        if (this._enabled) {\r\n            return;\r\n        }\r\n        const onRawKeyDown = this.enabledDisposables.add(new DomEmitter(this.view.getHTMLElement(), 'keydown'));\r\n        const onKeyDown = Event.chain(onRawKeyDown.event)\r\n            .filter(e => !isInputElement(e.target) || e.target === this.filterOnTypeDomNode)\r\n            .filter(e => e.key !== 'Dead' && !/^Media/.test(e.key))\r\n            .map(e => new StandardKeyboardEvent(e))\r\n            .filter(this.keyboardNavigationEventFilter || (() => true))\r\n            .filter(() => this.automaticKeyboardNavigation || this.triggered)\r\n            .filter(e => (this.keyboardNavigationDelegate.mightProducePrintableCharacter(e) && !(e.keyCode === 18 /* DownArrow */ || e.keyCode === 16 /* UpArrow */ || e.keyCode === 15 /* LeftArrow */ || e.keyCode === 17 /* RightArrow */)) || ((this.pattern.length > 0 || this.triggered) && ((e.keyCode === 9 /* Escape */ || e.keyCode === 1 /* Backspace */) && !e.altKey && !e.ctrlKey && !e.metaKey) || (e.keyCode === 1 /* Backspace */ && (isMacintosh ? (e.altKey && !e.metaKey) : e.ctrlKey) && !e.shiftKey)))\r\n            .forEach(e => { e.stopPropagation(); e.preventDefault(); })\r\n            .event;\r\n        const onClearClick = this.enabledDisposables.add(new DomEmitter(this.clearDomNode, 'click'));\r\n        Event.chain(Event.any(onKeyDown, onClearClick.event))\r\n            .event(this.onEventOrInput, this, this.enabledDisposables);\r\n        this.filter.pattern = '';\r\n        this.tree.refilter();\r\n        this.render();\r\n        this._enabled = true;\r\n        this.triggered = false;\r\n    }\r\n    disable() {\r\n        if (!this._enabled) {\r\n            return;\r\n        }\r\n        this.domNode.remove();\r\n        this.enabledDisposables.clear();\r\n        this.tree.refilter();\r\n        this.render();\r\n        this._enabled = false;\r\n        this.triggered = false;\r\n    }\r\n    onEventOrInput(e) {\r\n        if (typeof e === 'string') {\r\n            this.onInput(e);\r\n        }\r\n        else if (e instanceof MouseEvent || e.keyCode === 9 /* Escape */ || (e.keyCode === 1 /* Backspace */ && (isMacintosh ? e.altKey : e.ctrlKey))) {\r\n            this.onInput('');\r\n        }\r\n        else if (e.keyCode === 1 /* Backspace */) {\r\n            this.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));\r\n        }\r\n        else {\r\n            this.onInput(this.pattern + e.browserEvent.key);\r\n        }\r\n    }\r\n    onInput(pattern) {\r\n        const container = this.view.getHTMLElement();\r\n        if (pattern && !this.domNode.parentElement) {\r\n            container.append(this.domNode);\r\n        }\r\n        else if (!pattern && this.domNode.parentElement) {\r\n            this.domNode.remove();\r\n            this.tree.domFocus();\r\n        }\r\n        this._pattern = pattern;\r\n        this._onDidChangePattern.fire(pattern);\r\n        this.filter.pattern = pattern;\r\n        this.tree.refilter();\r\n        if (pattern) {\r\n            this.tree.focusNext(0, true, undefined, node => !FuzzyScore.isDefault(node.filterData));\r\n        }\r\n        const focus = this.tree.getFocus();\r\n        if (focus.length > 0) {\r\n            const element = focus[0];\r\n            if (this.tree.getRelativeTop(element) === null) {\r\n                this.tree.reveal(element, 0.5);\r\n            }\r\n        }\r\n        this.render();\r\n        if (!pattern) {\r\n            this.triggered = false;\r\n        }\r\n    }\r\n    onDragStart() {\r\n        const container = this.view.getHTMLElement();\r\n        const { left } = getDomNodePagePosition(container);\r\n        const containerWidth = container.clientWidth;\r\n        const midContainerWidth = containerWidth / 2;\r\n        const width = this.domNode.clientWidth;\r\n        const disposables = new DisposableStore();\r\n        let positionClassName = this.positionClassName;\r\n        const updatePosition = () => {\r\n            switch (positionClassName) {\r\n                case 'nw':\r\n                    this.domNode.style.top = `4px`;\r\n                    this.domNode.style.left = `4px`;\r\n                    break;\r\n                case 'ne':\r\n                    this.domNode.style.top = `4px`;\r\n                    this.domNode.style.left = `${containerWidth - width - 6}px`;\r\n                    break;\r\n            }\r\n        };\r\n        const onDragOver = (event) => {\r\n            event.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\r\n            const x = event.clientX - left;\r\n            if (event.dataTransfer) {\r\n                event.dataTransfer.dropEffect = 'none';\r\n            }\r\n            if (x < midContainerWidth) {\r\n                positionClassName = 'nw';\r\n            }\r\n            else {\r\n                positionClassName = 'ne';\r\n            }\r\n            updatePosition();\r\n        };\r\n        const onDragEnd = () => {\r\n            this.positionClassName = positionClassName;\r\n            this.domNode.className = `monaco-list-type-filter ${this.positionClassName}`;\r\n            this.domNode.style.top = '';\r\n            this.domNode.style.left = '';\r\n            dispose(disposables);\r\n        };\r\n        updatePosition();\r\n        this.domNode.classList.remove(positionClassName);\r\n        this.domNode.classList.add('dragging');\r\n        disposables.add(toDisposable(() => this.domNode.classList.remove('dragging')));\r\n        disposables.add(addDisposableListener(document, 'dragover', e => onDragOver(e)));\r\n        disposables.add(addDisposableListener(this.domNode, 'dragend', () => onDragEnd()));\r\n        StaticDND.CurrentDragAndDropData = new DragAndDropData('vscode-ui');\r\n        disposables.add(toDisposable(() => StaticDND.CurrentDragAndDropData = undefined));\r\n    }\r\n    onDidSpliceModel() {\r\n        if (!this._enabled || this.pattern.length === 0) {\r\n            return;\r\n        }\r\n        this.tree.refilter();\r\n        this.render();\r\n    }\r\n    onDidChangeFilterOnType() {\r\n        this.tree.updateOptions({ filterOnType: this.filterOnTypeDomNode.checked });\r\n        this.tree.refilter();\r\n        this.tree.domFocus();\r\n        this.render();\r\n        this.updateFilterOnTypeTitleAndIcon();\r\n    }\r\n    updateFilterOnTypeTitleAndIcon() {\r\n        if (this.filterOnType) {\r\n            this.filterOnTypeDomNode.classList.remove(...treeFilterOnTypeOffIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.classList.add(...treeFilterOnTypeOnIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.title = localize('disable filter on type', \"Disable Filter on Type\");\r\n        }\r\n        else {\r\n            this.filterOnTypeDomNode.classList.remove(...treeFilterOnTypeOnIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.classList.add(...treeFilterOnTypeOffIcon.classNamesArray);\r\n            this.filterOnTypeDomNode.title = localize('enable filter on type', \"Enable Filter on Type\");\r\n        }\r\n    }\r\n    render() {\r\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\r\n        if (this.pattern && this.tree.options.filterOnType && noMatches) {\r\n            this.messageDomNode.textContent = localize('empty', \"No elements found\");\r\n            this._empty = true;\r\n        }\r\n        else {\r\n            this.messageDomNode.innerText = '';\r\n            this._empty = false;\r\n        }\r\n        this.domNode.classList.toggle('no-matches', noMatches);\r\n        this.domNode.title = localize('found', \"Matched {0} out of {1} elements\", this.filter.matchCount, this.filter.totalCount);\r\n        this.labelDomNode.textContent = this.pattern.length > 16 ? '\u2026' + this.pattern.substr(this.pattern.length - 16) : this.pattern;\r\n        this._onDidChangeEmptyState.fire(this._empty);\r\n    }\r\n    shouldAllowFocus(node) {\r\n        if (!this.enabled || !this.pattern || this.filterOnType) {\r\n            return true;\r\n        }\r\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\r\n            return true;\r\n        }\r\n        return !FuzzyScore.isDefault(node.filterData);\r\n    }\r\n    dispose() {\r\n        if (this._enabled) {\r\n            this.domNode.remove();\r\n            this.enabledDisposables.dispose();\r\n            this._enabled = false;\r\n            this.triggered = false;\r\n        }\r\n        this._onDidChangePattern.dispose();\r\n        dispose(this.disposables);\r\n    }\r\n}\r\nfunction asTreeMouseEvent(event) {\r\n    let target = TreeMouseEventTarget.Unknown;\r\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\r\n        target = TreeMouseEventTarget.Twistie;\r\n    }\r\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\r\n        target = TreeMouseEventTarget.Element;\r\n    }\r\n    return {\r\n        browserEvent: event.browserEvent,\r\n        element: event.element ? event.element.element : null,\r\n        target\r\n    };\r\n}\r\nfunction dfs(node, fn) {\r\n    fn(node);\r\n    node.children.forEach(child => dfs(child, fn));\r\n}\r\n/**\r\n * The trait concept needs to exist at the tree level, because collapsed\r\n * tree nodes will not be known by the list.\r\n */\r\nclass Trait {\r\n    constructor(getFirstViewElementWithTrait, identityProvider) {\r\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\r\n        this.identityProvider = identityProvider;\r\n        this.nodes = [];\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n    }\r\n    get nodeSet() {\r\n        if (!this._nodeSet) {\r\n            this._nodeSet = this.createNodeSet();\r\n        }\r\n        return this._nodeSet;\r\n    }\r\n    set(nodes, browserEvent) {\r\n        var _a;\r\n        if (!((_a = browserEvent) === null || _a === void 0 ? void 0 : _a.__forceEvent) && equals(this.nodes, nodes)) {\r\n            return;\r\n        }\r\n        this._set(nodes, false, browserEvent);\r\n    }\r\n    _set(nodes, silent, browserEvent) {\r\n        this.nodes = [...nodes];\r\n        this.elements = undefined;\r\n        this._nodeSet = undefined;\r\n        if (!silent) {\r\n            const that = this;\r\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\r\n        }\r\n    }\r\n    get() {\r\n        if (!this.elements) {\r\n            this.elements = this.nodes.map(node => node.element);\r\n        }\r\n        return [...this.elements];\r\n    }\r\n    getNodes() {\r\n        return this.nodes;\r\n    }\r\n    has(node) {\r\n        return this.nodeSet.has(node);\r\n    }\r\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\r\n        if (!this.identityProvider) {\r\n            const set = this.createNodeSet();\r\n            const visit = (node) => set.delete(node);\r\n            deletedNodes.forEach(node => dfs(node, visit));\r\n            this.set([...set.values()]);\r\n            return;\r\n        }\r\n        const deletedNodesIdSet = new Set();\r\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\r\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\r\n        const insertedNodesMap = new Map();\r\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\r\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\r\n        const nodes = [];\r\n        for (const node of this.nodes) {\r\n            const id = this.identityProvider.getId(node.element).toString();\r\n            const wasDeleted = deletedNodesIdSet.has(id);\r\n            if (!wasDeleted) {\r\n                nodes.push(node);\r\n            }\r\n            else {\r\n                const insertedNode = insertedNodesMap.get(id);\r\n                if (insertedNode) {\r\n                    nodes.push(insertedNode);\r\n                }\r\n            }\r\n        }\r\n        if (this.nodes.length > 0 && nodes.length === 0) {\r\n            const node = this.getFirstViewElementWithTrait();\r\n            if (node) {\r\n                nodes.push(node);\r\n            }\r\n        }\r\n        this._set(nodes, true);\r\n    }\r\n    createNodeSet() {\r\n        const set = new Set();\r\n        for (const node of this.nodes) {\r\n            set.add(node);\r\n        }\r\n        return set;\r\n    }\r\n}\r\nclass TreeNodeListMouseController extends MouseController {\r\n    constructor(list, tree) {\r\n        super(list);\r\n        this.tree = tree;\r\n    }\r\n    onViewPointer(e) {\r\n        if (isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\r\n            return;\r\n        }\r\n        const node = e.element;\r\n        if (!node) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        const target = e.browserEvent.target;\r\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\r\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\r\n        let expandOnlyOnTwistieClick = false;\r\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\r\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\r\n        }\r\n        else {\r\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\r\n        }\r\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\r\n            return super.onViewPointer(e);\r\n        }\r\n        if (node.collapsible) {\r\n            const model = this.tree.model; // internal\r\n            const location = model.getNodeLocation(node);\r\n            const recursive = e.browserEvent.altKey;\r\n            this.tree.setFocus([location]);\r\n            model.setCollapsed(location, undefined, recursive);\r\n            if (expandOnlyOnTwistieClick && onTwistie) {\r\n                return;\r\n            }\r\n        }\r\n        super.onViewPointer(e);\r\n    }\r\n    onDoubleClick(e) {\r\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\r\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\r\n            return;\r\n        }\r\n        super.onDoubleClick(e);\r\n    }\r\n}\r\n/**\r\n * We use this List subclass to restore selection and focus as nodes\r\n * get rendered in the list, possibly due to a node expand() call.\r\n */\r\nclass TreeNodeList extends List {\r\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\r\n        super(user, container, virtualDelegate, renderers, options);\r\n        this.focusTrait = focusTrait;\r\n        this.selectionTrait = selectionTrait;\r\n        this.anchorTrait = anchorTrait;\r\n    }\r\n    createMouseController(options) {\r\n        return new TreeNodeListMouseController(this, options.tree);\r\n    }\r\n    splice(start, deleteCount, elements = []) {\r\n        super.splice(start, deleteCount, elements);\r\n        if (elements.length === 0) {\r\n            return;\r\n        }\r\n        const additionalFocus = [];\r\n        const additionalSelection = [];\r\n        let anchor;\r\n        elements.forEach((node, index) => {\r\n            if (this.focusTrait.has(node)) {\r\n                additionalFocus.push(start + index);\r\n            }\r\n            if (this.selectionTrait.has(node)) {\r\n                additionalSelection.push(start + index);\r\n            }\r\n            if (this.anchorTrait.has(node)) {\r\n                anchor = start + index;\r\n            }\r\n        });\r\n        if (additionalFocus.length > 0) {\r\n            super.setFocus(distinctES6([...super.getFocus(), ...additionalFocus]));\r\n        }\r\n        if (additionalSelection.length > 0) {\r\n            super.setSelection(distinctES6([...super.getSelection(), ...additionalSelection]));\r\n        }\r\n        if (typeof anchor === 'number') {\r\n            super.setAnchor(anchor);\r\n        }\r\n    }\r\n    setFocus(indexes, browserEvent, fromAPI = false) {\r\n        super.setFocus(indexes, browserEvent);\r\n        if (!fromAPI) {\r\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\r\n        }\r\n    }\r\n    setSelection(indexes, browserEvent, fromAPI = false) {\r\n        super.setSelection(indexes, browserEvent);\r\n        if (!fromAPI) {\r\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\r\n        }\r\n    }\r\n    setAnchor(index, fromAPI = false) {\r\n        super.setAnchor(index);\r\n        if (!fromAPI) {\r\n            if (typeof index === 'undefined') {\r\n                this.anchorTrait.set([]);\r\n            }\r\n            else {\r\n                this.anchorTrait.set([this.element(index)]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class AbstractTree {\r\n    constructor(user, container, delegate, renderers, _options = {}) {\r\n        this._options = _options;\r\n        this.eventBufferer = new EventBufferer();\r\n        this.disposables = new DisposableStore();\r\n        this._onWillRefilter = new Emitter();\r\n        this.onWillRefilter = this._onWillRefilter.event;\r\n        this._onDidUpdateOptions = new Emitter();\r\n        const treeDelegate = new ComposedTreeDelegate(delegate);\r\n        const onDidChangeCollapseStateRelay = new Relay();\r\n        const onDidChangeActiveNodes = new Relay();\r\n        const activeNodes = new EventCollection(onDidChangeActiveNodes.event);\r\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\r\n        for (let r of this.renderers) {\r\n            this.disposables.add(r);\r\n        }\r\n        let filter;\r\n        if (_options.keyboardNavigationLabelProvider) {\r\n            filter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\r\n            _options = Object.assign(Object.assign({}, _options), { filter: filter }); // TODO need typescript help here\r\n            this.disposables.add(filter);\r\n        }\r\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\r\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\r\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\r\n        this.view = new TreeNodeList(user, container, treeDelegate, this.renderers, this.focus, this.selection, this.anchor, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), { tree: this }));\r\n        this.model = this.createModel(user, this.view, _options);\r\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\r\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\r\n            this.eventBufferer.bufferEvents(() => {\r\n                this.focus.onDidModelSplice(e);\r\n                this.selection.onDidModelSplice(e);\r\n            });\r\n        });\r\n        // Make sure the `forEach` always runs\r\n        onDidModelSplice(() => null, null, this.disposables);\r\n        // Active nodes can change when the model changes or when focus or selection change.\r\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\r\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\r\n        // a nice to have UI feature.\r\n        onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange))\r\n            .debounce(() => null, 0)\r\n            .map(() => {\r\n            const set = new Set();\r\n            for (const node of this.focus.getNodes()) {\r\n                set.add(node);\r\n            }\r\n            for (const node of this.selection.getNodes()) {\r\n                set.add(node);\r\n            }\r\n            return [...set.values()];\r\n        }).event;\r\n        if (_options.keyboardSupport !== false) {\r\n            const onKeyDown = Event.chain(this.view.onKeyDown)\r\n                .filter(e => !isInputElement(e.target))\r\n                .map(e => new StandardKeyboardEvent(e));\r\n            onKeyDown.filter(e => e.keyCode === 15 /* LeftArrow */).on(this.onLeftArrow, this, this.disposables);\r\n            onKeyDown.filter(e => e.keyCode === 17 /* RightArrow */).on(this.onRightArrow, this, this.disposables);\r\n            onKeyDown.filter(e => e.keyCode === 10 /* Space */).on(this.onSpace, this, this.disposables);\r\n        }\r\n        if (_options.keyboardNavigationLabelProvider) {\r\n            const delegate = _options.keyboardNavigationDelegate || DefaultKeyboardNavigationDelegate;\r\n            this.typeFilterController = new TypeFilterController(this, this.model, this.view, filter, delegate);\r\n            this.focusNavigationFilter = node => this.typeFilterController.shouldAllowFocus(node);\r\n            this.disposables.add(this.typeFilterController);\r\n        }\r\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\r\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\r\n    }\r\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\r\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\r\n    get onMouseDblClick() { return Event.map(this.view.onMouseDblClick, asTreeMouseEvent); }\r\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\r\n    get onDidFocus() { return this.view.onDidFocus; }\r\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\r\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\r\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\r\n    get onDidDispose() { return this.view.onDidDispose; }\r\n    updateOptions(optionsUpdate = {}) {\r\n        this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\r\n        for (const renderer of this.renderers) {\r\n            renderer.updateOptions(optionsUpdate);\r\n        }\r\n        this.view.updateOptions(Object.assign(Object.assign({}, this._options), { enableKeyboardNavigation: this._options.simpleKeyboardNavigation }));\r\n        if (this.typeFilterController) {\r\n            this.typeFilterController.updateOptions(this._options);\r\n        }\r\n        this._onDidUpdateOptions.fire(this._options);\r\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    // Widget\r\n    getHTMLElement() {\r\n        return this.view.getHTMLElement();\r\n    }\r\n    get scrollTop() {\r\n        return this.view.scrollTop;\r\n    }\r\n    set scrollTop(scrollTop) {\r\n        this.view.scrollTop = scrollTop;\r\n    }\r\n    domFocus() {\r\n        this.view.domFocus();\r\n    }\r\n    layout(height, width) {\r\n        this.view.layout(height, width);\r\n    }\r\n    style(styles) {\r\n        const suffix = `.${this.view.domId}`;\r\n        const content = [];\r\n        if (styles.treeIndentGuidesStroke) {\r\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(0.4)}; }`);\r\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\r\n        }\r\n        this.styleElement.textContent = content.join('\\n');\r\n        this.view.style(styles);\r\n    }\r\n    collapse(location, recursive = false) {\r\n        return this.model.setCollapsed(location, true, recursive);\r\n    }\r\n    expand(location, recursive = false) {\r\n        return this.model.setCollapsed(location, false, recursive);\r\n    }\r\n    isCollapsible(location) {\r\n        return this.model.isCollapsible(location);\r\n    }\r\n    setCollapsible(location, collapsible) {\r\n        return this.model.setCollapsible(location, collapsible);\r\n    }\r\n    isCollapsed(location) {\r\n        return this.model.isCollapsed(location);\r\n    }\r\n    refilter() {\r\n        this._onWillRefilter.fire(undefined);\r\n        this.model.refilter();\r\n    }\r\n    setSelection(elements, browserEvent) {\r\n        const nodes = elements.map(e => this.model.getNode(e));\r\n        this.selection.set(nodes, browserEvent);\r\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\r\n        this.view.setSelection(indexes, browserEvent, true);\r\n    }\r\n    getSelection() {\r\n        return this.selection.get();\r\n    }\r\n    setFocus(elements, browserEvent) {\r\n        const nodes = elements.map(e => this.model.getNode(e));\r\n        this.focus.set(nodes, browserEvent);\r\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\r\n        this.view.setFocus(indexes, browserEvent, true);\r\n    }\r\n    focusNext(n = 1, loop = false, browserEvent, filter = this.focusNavigationFilter) {\r\n        this.view.focusNext(n, loop, browserEvent, filter);\r\n    }\r\n    getFocus() {\r\n        return this.focus.get();\r\n    }\r\n    reveal(location, relativeTop) {\r\n        this.model.expandTo(location);\r\n        const index = this.model.getListIndex(location);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        this.view.reveal(index, relativeTop);\r\n    }\r\n    /**\r\n     * Returns the relative position of an element rendered in the list.\r\n     * Returns `null` if the element isn't *entirely* in the visible viewport.\r\n     */\r\n    getRelativeTop(location) {\r\n        const index = this.model.getListIndex(location);\r\n        if (index === -1) {\r\n            return null;\r\n        }\r\n        return this.view.getRelativeTop(index);\r\n    }\r\n    // List\r\n    onLeftArrow(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const didChange = this.model.setCollapsed(location, true);\r\n        if (!didChange) {\r\n            const parentLocation = this.model.getParentNodeLocation(location);\r\n            if (!parentLocation) {\r\n                return;\r\n            }\r\n            const parentListIndex = this.model.getListIndex(parentLocation);\r\n            this.view.reveal(parentListIndex);\r\n            this.view.setFocus([parentListIndex]);\r\n        }\r\n    }\r\n    onRightArrow(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const didChange = this.model.setCollapsed(location, false);\r\n        if (!didChange) {\r\n            if (!node.children.some(child => child.visible)) {\r\n                return;\r\n            }\r\n            const [focusedIndex] = this.view.getFocus();\r\n            const firstChildIndex = focusedIndex + 1;\r\n            this.view.reveal(firstChildIndex);\r\n            this.view.setFocus([firstChildIndex]);\r\n        }\r\n    }\r\n    onSpace(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const nodes = this.view.getFocusedElements();\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        const node = nodes[0];\r\n        const location = this.model.getNodeLocation(node);\r\n        const recursive = e.browserEvent.altKey;\r\n        this.model.setCollapsed(location, undefined, recursive);\r\n    }\r\n    dispose() {\r\n        dispose(this.disposables);\r\n        this.view.dispose();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var TreeMouseEventTarget;\r\n(function (TreeMouseEventTarget) {\r\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Unknown\"] = 0] = \"Unknown\";\r\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Twistie\"] = 1] = \"Twistie\";\r\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Element\"] = 2] = \"Element\";\r\n})(TreeMouseEventTarget || (TreeMouseEventTarget = {}));\r\nexport class TreeError extends Error {\r\n    constructor(user, message) {\r\n        super(`TreeError [${user}] ${message}`);\r\n    }\r\n}\r\nexport class WeakMapper {\r\n    constructor(fn) {\r\n        this.fn = fn;\r\n        this._map = new WeakMap();\r\n    }\r\n    map(key) {\r\n        let result = this._map.get(key);\r\n        if (!result) {\r\n            result = this.fn(key);\r\n            this._map.set(key, result);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { TreeError } from './tree.js';\r\nimport { splice, tail2 } from '../../../common/arrays.js';\r\nimport { LcsDiff } from '../../../common/diff/diff.js';\r\nimport { Emitter, EventBufferer } from '../../../common/event.js';\r\nimport { Iterable } from '../../../common/iterator.js';\r\nexport function isFilterResult(obj) {\r\n    return typeof obj === 'object' && 'visibility' in obj && 'data' in obj;\r\n}\r\nexport function getVisibleState(visibility) {\r\n    switch (visibility) {\r\n        case true: return 1 /* Visible */;\r\n        case false: return 0 /* Hidden */;\r\n        default: return visibility;\r\n    }\r\n}\r\nfunction isCollapsibleStateUpdate(update) {\r\n    return typeof update.collapsible === 'boolean';\r\n}\r\nexport class IndexTreeModel {\r\n    constructor(user, list, rootElement, options = {}) {\r\n        this.user = user;\r\n        this.list = list;\r\n        this.rootRef = [];\r\n        this.eventBufferer = new EventBufferer();\r\n        this._onDidChangeCollapseState = new Emitter();\r\n        this.onDidChangeCollapseState = this.eventBufferer.wrapEvent(this._onDidChangeCollapseState.event);\r\n        this._onDidChangeRenderNodeCount = new Emitter();\r\n        this.onDidChangeRenderNodeCount = this.eventBufferer.wrapEvent(this._onDidChangeRenderNodeCount.event);\r\n        this._onDidSplice = new Emitter();\r\n        this.onDidSplice = this._onDidSplice.event;\r\n        this.collapseByDefault = typeof options.collapseByDefault === 'undefined' ? false : options.collapseByDefault;\r\n        this.filter = options.filter;\r\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\r\n        this.root = {\r\n            parent: undefined,\r\n            element: rootElement,\r\n            children: [],\r\n            depth: 0,\r\n            visibleChildrenCount: 0,\r\n            visibleChildIndex: -1,\r\n            collapsible: false,\r\n            collapsed: false,\r\n            renderNodeCount: 0,\r\n            visibility: 1 /* Visible */,\r\n            visible: true,\r\n            filterData: undefined\r\n        };\r\n    }\r\n    splice(location, deleteCount, toInsert = Iterable.empty(), options = {}) {\r\n        if (location.length === 0) {\r\n            throw new TreeError(this.user, 'Invalid tree location');\r\n        }\r\n        if (options.diffIdentityProvider) {\r\n            this.spliceSmart(options.diffIdentityProvider, location, deleteCount, toInsert, options);\r\n        }\r\n        else {\r\n            this.spliceSimple(location, deleteCount, toInsert, options);\r\n        }\r\n    }\r\n    spliceSmart(identity, location, deleteCount, toInsertIterable, options, recurseLevels) {\r\n        var _a;\r\n        if (toInsertIterable === void 0) { toInsertIterable = Iterable.empty(); }\r\n        if (recurseLevels === void 0) { recurseLevels = (_a = options.diffDepth) !== null && _a !== void 0 ? _a : 0; }\r\n        const { parentNode } = this.getParentNodeWithListIndex(location);\r\n        const toInsert = [...toInsertIterable];\r\n        const index = location[location.length - 1];\r\n        const diff = new LcsDiff({ getElements: () => parentNode.children.map(e => identity.getId(e.element).toString()) }, {\r\n            getElements: () => [\r\n                ...parentNode.children.slice(0, index),\r\n                ...toInsert,\r\n                ...parentNode.children.slice(index + deleteCount),\r\n            ].map(e => identity.getId(e.element).toString())\r\n        }).ComputeDiff(false);\r\n        // if we were given a 'best effort' diff, use default behavior\r\n        if (diff.quitEarly) {\r\n            return this.spliceSimple(location, deleteCount, toInsert, options);\r\n        }\r\n        const locationPrefix = location.slice(0, -1);\r\n        const recurseSplice = (fromOriginal, fromModified, count) => {\r\n            if (recurseLevels > 0) {\r\n                for (let i = 0; i < count; i++) {\r\n                    fromOriginal--;\r\n                    fromModified--;\r\n                    this.spliceSmart(identity, [...locationPrefix, fromOriginal, 0], Number.MAX_SAFE_INTEGER, toInsert[fromModified].children, options, recurseLevels - 1);\r\n                }\r\n            }\r\n        };\r\n        let lastStartO = Math.min(parentNode.children.length, index + deleteCount);\r\n        let lastStartM = toInsert.length;\r\n        for (const change of diff.changes.sort((a, b) => b.originalStart - a.originalStart)) {\r\n            recurseSplice(lastStartO, lastStartM, lastStartO - (change.originalStart + change.originalLength));\r\n            lastStartO = change.originalStart;\r\n            lastStartM = change.modifiedStart - index;\r\n            this.spliceSimple([...locationPrefix, lastStartO], change.originalLength, Iterable.slice(toInsert, lastStartM, lastStartM + change.modifiedLength), options);\r\n        }\r\n        // at this point, startO === startM === count since any remaining prefix should match\r\n        recurseSplice(lastStartO, lastStartM, lastStartO);\r\n    }\r\n    spliceSimple(location, deleteCount, toInsert = Iterable.empty(), { onDidCreateNode, onDidDeleteNode }) {\r\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\r\n        const treeListElementsToInsert = [];\r\n        const nodesToInsertIterator = Iterable.map(toInsert, el => this.createTreeNode(el, parentNode, parentNode.visible ? 1 /* Visible */ : 0 /* Hidden */, revealed, treeListElementsToInsert, onDidCreateNode));\r\n        const lastIndex = location[location.length - 1];\r\n        const lastHadChildren = parentNode.children.length > 0;\r\n        // figure out what's the visible child start index right before the\r\n        // splice point\r\n        let visibleChildStartIndex = 0;\r\n        for (let i = lastIndex; i >= 0 && i < parentNode.children.length; i--) {\r\n            const child = parentNode.children[i];\r\n            if (child.visible) {\r\n                visibleChildStartIndex = child.visibleChildIndex;\r\n                break;\r\n            }\r\n        }\r\n        const nodesToInsert = [];\r\n        let insertedVisibleChildrenCount = 0;\r\n        let renderNodeCount = 0;\r\n        for (const child of nodesToInsertIterator) {\r\n            nodesToInsert.push(child);\r\n            renderNodeCount += child.renderNodeCount;\r\n            if (child.visible) {\r\n                child.visibleChildIndex = visibleChildStartIndex + insertedVisibleChildrenCount++;\r\n            }\r\n        }\r\n        const deletedNodes = splice(parentNode.children, lastIndex, deleteCount, nodesToInsert);\r\n        // figure out what is the count of deleted visible children\r\n        let deletedVisibleChildrenCount = 0;\r\n        for (const child of deletedNodes) {\r\n            if (child.visible) {\r\n                deletedVisibleChildrenCount++;\r\n            }\r\n        }\r\n        // and adjust for all visible children after the splice point\r\n        if (deletedVisibleChildrenCount !== 0) {\r\n            for (let i = lastIndex + nodesToInsert.length; i < parentNode.children.length; i++) {\r\n                const child = parentNode.children[i];\r\n                if (child.visible) {\r\n                    child.visibleChildIndex -= deletedVisibleChildrenCount;\r\n                }\r\n            }\r\n        }\r\n        // update parent's visible children count\r\n        parentNode.visibleChildrenCount += insertedVisibleChildrenCount - deletedVisibleChildrenCount;\r\n        if (revealed && visible) {\r\n            const visibleDeleteCount = deletedNodes.reduce((r, node) => r + (node.visible ? node.renderNodeCount : 0), 0);\r\n            this._updateAncestorsRenderNodeCount(parentNode, renderNodeCount - visibleDeleteCount);\r\n            this.list.splice(listIndex, visibleDeleteCount, treeListElementsToInsert);\r\n        }\r\n        if (deletedNodes.length > 0 && onDidDeleteNode) {\r\n            const visit = (node) => {\r\n                onDidDeleteNode(node);\r\n                node.children.forEach(visit);\r\n            };\r\n            deletedNodes.forEach(visit);\r\n        }\r\n        const currentlyHasChildren = parentNode.children.length > 0;\r\n        if (lastHadChildren !== currentlyHasChildren) {\r\n            this.setCollapsible(location.slice(0, -1), currentlyHasChildren);\r\n        }\r\n        this._onDidSplice.fire({ insertedNodes: nodesToInsert, deletedNodes });\r\n        let node = parentNode;\r\n        while (node) {\r\n            if (node.visibility === 2 /* Recurse */) {\r\n                this.refilter();\r\n                break;\r\n            }\r\n            node = node.parent;\r\n        }\r\n    }\r\n    rerender(location) {\r\n        if (location.length === 0) {\r\n            throw new TreeError(this.user, 'Invalid tree location');\r\n        }\r\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\r\n        if (node.visible && revealed) {\r\n            this.list.splice(listIndex, 1, [node]);\r\n        }\r\n    }\r\n    has(location) {\r\n        return this.hasTreeNode(location);\r\n    }\r\n    getListIndex(location) {\r\n        const { listIndex, visible, revealed } = this.getTreeNodeWithListIndex(location);\r\n        return visible && revealed ? listIndex : -1;\r\n    }\r\n    getListRenderCount(location) {\r\n        return this.getTreeNode(location).renderNodeCount;\r\n    }\r\n    isCollapsible(location) {\r\n        return this.getTreeNode(location).collapsible;\r\n    }\r\n    setCollapsible(location, collapsible) {\r\n        const node = this.getTreeNode(location);\r\n        if (typeof collapsible === 'undefined') {\r\n            collapsible = !node.collapsible;\r\n        }\r\n        const update = { collapsible };\r\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\r\n    }\r\n    isCollapsed(location) {\r\n        return this.getTreeNode(location).collapsed;\r\n    }\r\n    setCollapsed(location, collapsed, recursive) {\r\n        const node = this.getTreeNode(location);\r\n        if (typeof collapsed === 'undefined') {\r\n            collapsed = !node.collapsed;\r\n        }\r\n        const update = { collapsed, recursive: recursive || false };\r\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\r\n    }\r\n    _setCollapseState(location, update) {\r\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\r\n        const result = this._setListNodeCollapseState(node, listIndex, revealed, update);\r\n        if (node !== this.root && this.autoExpandSingleChildren && result && !isCollapsibleStateUpdate(update) && node.collapsible && !node.collapsed && !update.recursive) {\r\n            let onlyVisibleChildIndex = -1;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (child.visible) {\r\n                    if (onlyVisibleChildIndex > -1) {\r\n                        onlyVisibleChildIndex = -1;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        onlyVisibleChildIndex = i;\r\n                    }\r\n                }\r\n            }\r\n            if (onlyVisibleChildIndex > -1) {\r\n                this._setCollapseState([...location, onlyVisibleChildIndex], update);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _setListNodeCollapseState(node, listIndex, revealed, update) {\r\n        const result = this._setNodeCollapseState(node, update, false);\r\n        if (!revealed || !node.visible || !result) {\r\n            return result;\r\n        }\r\n        const previousRenderNodeCount = node.renderNodeCount;\r\n        const toInsert = this.updateNodeAfterCollapseChange(node);\r\n        const deleteCount = previousRenderNodeCount - (listIndex === -1 ? 0 : 1);\r\n        this.list.splice(listIndex + 1, deleteCount, toInsert.slice(1));\r\n        return result;\r\n    }\r\n    _setNodeCollapseState(node, update, deep) {\r\n        let result;\r\n        if (node === this.root) {\r\n            result = false;\r\n        }\r\n        else {\r\n            if (isCollapsibleStateUpdate(update)) {\r\n                result = node.collapsible !== update.collapsible;\r\n                node.collapsible = update.collapsible;\r\n            }\r\n            else if (!node.collapsible) {\r\n                result = false;\r\n            }\r\n            else {\r\n                result = node.collapsed !== update.collapsed;\r\n                node.collapsed = update.collapsed;\r\n            }\r\n            if (result) {\r\n                this._onDidChangeCollapseState.fire({ node, deep });\r\n            }\r\n        }\r\n        if (!isCollapsibleStateUpdate(update) && update.recursive) {\r\n            for (const child of node.children) {\r\n                result = this._setNodeCollapseState(child, update, true) || result;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    expandTo(location) {\r\n        this.eventBufferer.bufferEvents(() => {\r\n            let node = this.getTreeNode(location);\r\n            while (node.parent) {\r\n                node = node.parent;\r\n                location = location.slice(0, location.length - 1);\r\n                if (node.collapsed) {\r\n                    this._setCollapseState(location, { collapsed: false, recursive: false });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    refilter() {\r\n        const previousRenderNodeCount = this.root.renderNodeCount;\r\n        const toInsert = this.updateNodeAfterFilterChange(this.root);\r\n        this.list.splice(0, previousRenderNodeCount, toInsert);\r\n    }\r\n    createTreeNode(treeElement, parent, parentVisibility, revealed, treeListElements, onDidCreateNode) {\r\n        const node = {\r\n            parent,\r\n            element: treeElement.element,\r\n            children: [],\r\n            depth: parent.depth + 1,\r\n            visibleChildrenCount: 0,\r\n            visibleChildIndex: -1,\r\n            collapsible: typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : (typeof treeElement.collapsed !== 'undefined'),\r\n            collapsed: typeof treeElement.collapsed === 'undefined' ? this.collapseByDefault : treeElement.collapsed,\r\n            renderNodeCount: 1,\r\n            visibility: 1 /* Visible */,\r\n            visible: true,\r\n            filterData: undefined\r\n        };\r\n        const visibility = this._filterNode(node, parentVisibility);\r\n        node.visibility = visibility;\r\n        if (revealed) {\r\n            treeListElements.push(node);\r\n        }\r\n        const childElements = treeElement.children || Iterable.empty();\r\n        const childRevealed = revealed && visibility !== 0 /* Hidden */ && !node.collapsed;\r\n        const childNodes = Iterable.map(childElements, el => this.createTreeNode(el, node, visibility, childRevealed, treeListElements, onDidCreateNode));\r\n        let visibleChildrenCount = 0;\r\n        let renderNodeCount = 1;\r\n        for (const child of childNodes) {\r\n            node.children.push(child);\r\n            renderNodeCount += child.renderNodeCount;\r\n            if (child.visible) {\r\n                child.visibleChildIndex = visibleChildrenCount++;\r\n            }\r\n        }\r\n        node.collapsible = node.collapsible || node.children.length > 0;\r\n        node.visibleChildrenCount = visibleChildrenCount;\r\n        node.visible = visibility === 2 /* Recurse */ ? visibleChildrenCount > 0 : (visibility === 1 /* Visible */);\r\n        if (!node.visible) {\r\n            node.renderNodeCount = 0;\r\n            if (revealed) {\r\n                treeListElements.pop();\r\n            }\r\n        }\r\n        else if (!node.collapsed) {\r\n            node.renderNodeCount = renderNodeCount;\r\n        }\r\n        if (onDidCreateNode) {\r\n            onDidCreateNode(node);\r\n        }\r\n        return node;\r\n    }\r\n    updateNodeAfterCollapseChange(node) {\r\n        const previousRenderNodeCount = node.renderNodeCount;\r\n        const result = [];\r\n        this._updateNodeAfterCollapseChange(node, result);\r\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\r\n        return result;\r\n    }\r\n    _updateNodeAfterCollapseChange(node, result) {\r\n        if (node.visible === false) {\r\n            return 0;\r\n        }\r\n        result.push(node);\r\n        node.renderNodeCount = 1;\r\n        if (!node.collapsed) {\r\n            for (const child of node.children) {\r\n                node.renderNodeCount += this._updateNodeAfterCollapseChange(child, result);\r\n            }\r\n        }\r\n        this._onDidChangeRenderNodeCount.fire(node);\r\n        return node.renderNodeCount;\r\n    }\r\n    updateNodeAfterFilterChange(node) {\r\n        const previousRenderNodeCount = node.renderNodeCount;\r\n        const result = [];\r\n        this._updateNodeAfterFilterChange(node, node.visible ? 1 /* Visible */ : 0 /* Hidden */, result);\r\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\r\n        return result;\r\n    }\r\n    _updateNodeAfterFilterChange(node, parentVisibility, result, revealed = true) {\r\n        let visibility;\r\n        if (node !== this.root) {\r\n            visibility = this._filterNode(node, parentVisibility);\r\n            if (visibility === 0 /* Hidden */) {\r\n                node.visible = false;\r\n                node.renderNodeCount = 0;\r\n                return false;\r\n            }\r\n            if (revealed) {\r\n                result.push(node);\r\n            }\r\n        }\r\n        const resultStartLength = result.length;\r\n        node.renderNodeCount = node === this.root ? 0 : 1;\r\n        let hasVisibleDescendants = false;\r\n        if (!node.collapsed || visibility !== 0 /* Hidden */) {\r\n            let visibleChildIndex = 0;\r\n            for (const child of node.children) {\r\n                hasVisibleDescendants = this._updateNodeAfterFilterChange(child, visibility, result, revealed && !node.collapsed) || hasVisibleDescendants;\r\n                if (child.visible) {\r\n                    child.visibleChildIndex = visibleChildIndex++;\r\n                }\r\n            }\r\n            node.visibleChildrenCount = visibleChildIndex;\r\n        }\r\n        else {\r\n            node.visibleChildrenCount = 0;\r\n        }\r\n        if (node !== this.root) {\r\n            node.visible = visibility === 2 /* Recurse */ ? hasVisibleDescendants : (visibility === 1 /* Visible */);\r\n        }\r\n        if (!node.visible) {\r\n            node.renderNodeCount = 0;\r\n            if (revealed) {\r\n                result.pop();\r\n            }\r\n        }\r\n        else if (!node.collapsed) {\r\n            node.renderNodeCount += result.length - resultStartLength;\r\n        }\r\n        this._onDidChangeRenderNodeCount.fire(node);\r\n        return node.visible;\r\n    }\r\n    _updateAncestorsRenderNodeCount(node, diff) {\r\n        if (diff === 0) {\r\n            return;\r\n        }\r\n        while (node) {\r\n            node.renderNodeCount += diff;\r\n            this._onDidChangeRenderNodeCount.fire(node);\r\n            node = node.parent;\r\n        }\r\n    }\r\n    _filterNode(node, parentVisibility) {\r\n        const result = this.filter ? this.filter.filter(node.element, parentVisibility) : 1 /* Visible */;\r\n        if (typeof result === 'boolean') {\r\n            node.filterData = undefined;\r\n            return result ? 1 /* Visible */ : 0 /* Hidden */;\r\n        }\r\n        else if (isFilterResult(result)) {\r\n            node.filterData = result.data;\r\n            return getVisibleState(result.visibility);\r\n        }\r\n        else {\r\n            node.filterData = undefined;\r\n            return getVisibleState(result);\r\n        }\r\n    }\r\n    // cheap\r\n    hasTreeNode(location, node = this.root) {\r\n        if (!location || location.length === 0) {\r\n            return true;\r\n        }\r\n        const [index, ...rest] = location;\r\n        if (index < 0 || index > node.children.length) {\r\n            return false;\r\n        }\r\n        return this.hasTreeNode(rest, node.children[index]);\r\n    }\r\n    // cheap\r\n    getTreeNode(location, node = this.root) {\r\n        if (!location || location.length === 0) {\r\n            return node;\r\n        }\r\n        const [index, ...rest] = location;\r\n        if (index < 0 || index > node.children.length) {\r\n            throw new TreeError(this.user, 'Invalid tree location');\r\n        }\r\n        return this.getTreeNode(rest, node.children[index]);\r\n    }\r\n    // expensive\r\n    getTreeNodeWithListIndex(location) {\r\n        if (location.length === 0) {\r\n            return { node: this.root, listIndex: -1, revealed: true, visible: false };\r\n        }\r\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\r\n        const index = location[location.length - 1];\r\n        if (index < 0 || index > parentNode.children.length) {\r\n            throw new TreeError(this.user, 'Invalid tree location');\r\n        }\r\n        const node = parentNode.children[index];\r\n        return { node, listIndex, revealed, visible: visible && node.visible };\r\n    }\r\n    getParentNodeWithListIndex(location, node = this.root, listIndex = 0, revealed = true, visible = true) {\r\n        const [index, ...rest] = location;\r\n        if (index < 0 || index > node.children.length) {\r\n            throw new TreeError(this.user, 'Invalid tree location');\r\n        }\r\n        // TODO@joao perf!\r\n        for (let i = 0; i < index; i++) {\r\n            listIndex += node.children[i].renderNodeCount;\r\n        }\r\n        revealed = revealed && !node.collapsed;\r\n        visible = visible && node.visible;\r\n        if (rest.length === 0) {\r\n            return { parentNode: node, listIndex, revealed, visible };\r\n        }\r\n        return this.getParentNodeWithListIndex(rest, node.children[index], listIndex + 1, revealed, visible);\r\n    }\r\n    getNode(location = []) {\r\n        return this.getTreeNode(location);\r\n    }\r\n    // TODO@joao perf!\r\n    getNodeLocation(node) {\r\n        const location = [];\r\n        let indexTreeNode = node; // typing woes\r\n        while (indexTreeNode.parent) {\r\n            location.push(indexTreeNode.parent.children.indexOf(indexTreeNode));\r\n            indexTreeNode = indexTreeNode.parent;\r\n        }\r\n        return location.reverse();\r\n    }\r\n    getParentNodeLocation(location) {\r\n        if (location.length === 0) {\r\n            return undefined;\r\n        }\r\n        else if (location.length === 1) {\r\n            return [];\r\n        }\r\n        else {\r\n            return tail2(location)[0];\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Codicon, registerCodicon } from '../../../common/codicons.js';\r\nexport const treeItemExpandedIcon = registerCodicon('tree-item-expanded', Codicon.chevronDown); // collapsed is done with rotation\r\nexport const treeFilterOnTypeOnIcon = registerCodicon('tree-filter-on-type-on', Codicon.listFilter);\r\nexport const treeFilterOnTypeOffIcon = registerCodicon('tree-filter-on-type-off', Codicon.listSelection);\r\nexport const treeFilterClearIcon = registerCodicon('tree-filter-clear', Codicon.close);\r\nexport const treeItemLoadingIcon = registerCodicon('tree-item-loading', Codicon.loading);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Iterable } from '../../../common/iterator.js';\r\nimport { IndexTreeModel } from './indexTreeModel.js';\r\nimport { TreeError } from './tree.js';\r\nexport class ObjectTreeModel {\r\n    constructor(user, list, options = {}) {\r\n        this.user = user;\r\n        this.rootRef = null;\r\n        this.nodes = new Map();\r\n        this.nodesByIdentity = new Map();\r\n        this.model = new IndexTreeModel(user, list, null, options);\r\n        this.onDidSplice = this.model.onDidSplice;\r\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\r\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\r\n        if (options.sorter) {\r\n            this.sorter = {\r\n                compare(a, b) {\r\n                    return options.sorter.compare(a.element, b.element);\r\n                }\r\n            };\r\n        }\r\n        this.identityProvider = options.identityProvider;\r\n    }\r\n    setChildren(element, children = Iterable.empty(), options = {}) {\r\n        const location = this.getElementLocation(element);\r\n        this._setChildren(location, this.preserveCollapseState(children), options);\r\n    }\r\n    _setChildren(location, children = Iterable.empty(), options) {\r\n        const insertedElements = new Set();\r\n        const insertedElementIds = new Set();\r\n        const onDidCreateNode = (node) => {\r\n            var _a;\r\n            if (node.element === null) {\r\n                return;\r\n            }\r\n            const tnode = node;\r\n            insertedElements.add(tnode.element);\r\n            this.nodes.set(tnode.element, tnode);\r\n            if (this.identityProvider) {\r\n                const id = this.identityProvider.getId(tnode.element).toString();\r\n                insertedElementIds.add(id);\r\n                this.nodesByIdentity.set(id, tnode);\r\n            }\r\n            (_a = options.onDidCreateNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\r\n        };\r\n        const onDidDeleteNode = (node) => {\r\n            var _a;\r\n            if (node.element === null) {\r\n                return;\r\n            }\r\n            const tnode = node;\r\n            if (!insertedElements.has(tnode.element)) {\r\n                this.nodes.delete(tnode.element);\r\n            }\r\n            if (this.identityProvider) {\r\n                const id = this.identityProvider.getId(tnode.element).toString();\r\n                if (!insertedElementIds.has(id)) {\r\n                    this.nodesByIdentity.delete(id);\r\n                }\r\n            }\r\n            (_a = options.onDidDeleteNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\r\n        };\r\n        this.model.splice([...location, 0], Number.MAX_VALUE, children, Object.assign(Object.assign({}, options), { onDidCreateNode, onDidDeleteNode }));\r\n    }\r\n    preserveCollapseState(elements = Iterable.empty()) {\r\n        if (this.sorter) {\r\n            elements = [...elements].sort(this.sorter.compare.bind(this.sorter));\r\n        }\r\n        return Iterable.map(elements, treeElement => {\r\n            let node = this.nodes.get(treeElement.element);\r\n            if (!node && this.identityProvider) {\r\n                const id = this.identityProvider.getId(treeElement.element).toString();\r\n                node = this.nodesByIdentity.get(id);\r\n            }\r\n            if (!node) {\r\n                return Object.assign(Object.assign({}, treeElement), { children: this.preserveCollapseState(treeElement.children) });\r\n            }\r\n            const collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\r\n            const collapsed = typeof treeElement.collapsed !== 'undefined' ? treeElement.collapsed : node.collapsed;\r\n            return Object.assign(Object.assign({}, treeElement), { collapsible,\r\n                collapsed, children: this.preserveCollapseState(treeElement.children) });\r\n        });\r\n    }\r\n    rerender(element) {\r\n        const location = this.getElementLocation(element);\r\n        this.model.rerender(location);\r\n    }\r\n    has(element) {\r\n        return this.nodes.has(element);\r\n    }\r\n    getListIndex(element) {\r\n        const location = this.getElementLocation(element);\r\n        return this.model.getListIndex(location);\r\n    }\r\n    getListRenderCount(element) {\r\n        const location = this.getElementLocation(element);\r\n        return this.model.getListRenderCount(location);\r\n    }\r\n    isCollapsible(element) {\r\n        const location = this.getElementLocation(element);\r\n        return this.model.isCollapsible(location);\r\n    }\r\n    setCollapsible(element, collapsible) {\r\n        const location = this.getElementLocation(element);\r\n        return this.model.setCollapsible(location, collapsible);\r\n    }\r\n    isCollapsed(element) {\r\n        const location = this.getElementLocation(element);\r\n        return this.model.isCollapsed(location);\r\n    }\r\n    setCollapsed(element, collapsed, recursive) {\r\n        const location = this.getElementLocation(element);\r\n        return this.model.setCollapsed(location, collapsed, recursive);\r\n    }\r\n    expandTo(element) {\r\n        const location = this.getElementLocation(element);\r\n        this.model.expandTo(location);\r\n    }\r\n    refilter() {\r\n        this.model.refilter();\r\n    }\r\n    getNode(element = null) {\r\n        if (element === null) {\r\n            return this.model.getNode(this.model.rootRef);\r\n        }\r\n        const node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\r\n        }\r\n        return node;\r\n    }\r\n    getNodeLocation(node) {\r\n        return node.element;\r\n    }\r\n    getParentNodeLocation(element) {\r\n        if (element === null) {\r\n            throw new TreeError(this.user, `Invalid getParentNodeLocation call`);\r\n        }\r\n        const node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\r\n        }\r\n        const location = this.model.getNodeLocation(node);\r\n        const parentLocation = this.model.getParentNodeLocation(location);\r\n        const parent = this.model.getNode(parentLocation);\r\n        return parent.element;\r\n    }\r\n    getElementLocation(element) {\r\n        if (element === null) {\r\n            return [];\r\n        }\r\n        const node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\r\n        }\r\n        return this.model.getNodeLocation(node);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Iterable } from '../../../common/iterator.js';\r\nimport { Event } from '../../../common/event.js';\r\nimport { TreeError, WeakMapper } from './tree.js';\r\nimport { ObjectTreeModel } from './objectTreeModel.js';\r\nfunction noCompress(element) {\r\n    const elements = [element.element];\r\n    const incompressible = element.incompressible || false;\r\n    return {\r\n        element: { elements, incompressible },\r\n        children: Iterable.map(Iterable.from(element.children), noCompress),\r\n        collapsible: element.collapsible,\r\n        collapsed: element.collapsed\r\n    };\r\n}\r\n// Exported only for test reasons, do not use directly\r\nexport function compress(element) {\r\n    const elements = [element.element];\r\n    const incompressible = element.incompressible || false;\r\n    let childrenIterator;\r\n    let children;\r\n    while (true) {\r\n        [children, childrenIterator] = Iterable.consume(Iterable.from(element.children), 2);\r\n        if (children.length !== 1) {\r\n            break;\r\n        }\r\n        if (children[0].incompressible) {\r\n            break;\r\n        }\r\n        element = children[0];\r\n        elements.push(element.element);\r\n    }\r\n    return {\r\n        element: { elements, incompressible },\r\n        children: Iterable.map(Iterable.concat(children, childrenIterator), compress),\r\n        collapsible: element.collapsible,\r\n        collapsed: element.collapsed\r\n    };\r\n}\r\nfunction _decompress(element, index = 0) {\r\n    let children;\r\n    if (index < element.element.elements.length - 1) {\r\n        children = [_decompress(element, index + 1)];\r\n    }\r\n    else {\r\n        children = Iterable.map(Iterable.from(element.children), el => _decompress(el, 0));\r\n    }\r\n    if (index === 0 && element.element.incompressible) {\r\n        return {\r\n            element: element.element.elements[index],\r\n            children,\r\n            incompressible: true,\r\n            collapsible: element.collapsible,\r\n            collapsed: element.collapsed\r\n        };\r\n    }\r\n    return {\r\n        element: element.element.elements[index],\r\n        children,\r\n        collapsible: element.collapsible,\r\n        collapsed: element.collapsed\r\n    };\r\n}\r\n// Exported only for test reasons, do not use directly\r\nexport function decompress(element) {\r\n    return _decompress(element, 0);\r\n}\r\nfunction splice(treeElement, element, children) {\r\n    if (treeElement.element === element) {\r\n        return Object.assign(Object.assign({}, treeElement), { children });\r\n    }\r\n    return Object.assign(Object.assign({}, treeElement), { children: Iterable.map(Iterable.from(treeElement.children), e => splice(e, element, children)) });\r\n}\r\nconst wrapIdentityProvider = (base) => ({\r\n    getId(node) {\r\n        return node.elements.map(e => base.getId(e).toString()).join('\\0');\r\n    }\r\n});\r\n// Exported only for test reasons, do not use directly\r\nexport class CompressedObjectTreeModel {\r\n    constructor(user, list, options = {}) {\r\n        this.user = user;\r\n        this.rootRef = null;\r\n        this.nodes = new Map();\r\n        this.model = new ObjectTreeModel(user, list, options);\r\n        this.enabled = typeof options.compressionEnabled === 'undefined' ? true : options.compressionEnabled;\r\n        this.identityProvider = options.identityProvider;\r\n    }\r\n    get onDidSplice() { return this.model.onDidSplice; }\r\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\r\n    get onDidChangeRenderNodeCount() { return this.model.onDidChangeRenderNodeCount; }\r\n    setChildren(element, children = Iterable.empty(), options) {\r\n        // Diffs must be deem, since the compression can affect nested elements.\r\n        // @see https://github.com/microsoft/vscode/pull/114237#issuecomment-759425034\r\n        const diffIdentityProvider = options.diffIdentityProvider && wrapIdentityProvider(options.diffIdentityProvider);\r\n        if (element === null) {\r\n            const compressedChildren = Iterable.map(children, this.enabled ? compress : noCompress);\r\n            this._setChildren(null, compressedChildren, { diffIdentityProvider, diffDepth: Infinity });\r\n            return;\r\n        }\r\n        const compressedNode = this.nodes.get(element);\r\n        if (!compressedNode) {\r\n            throw new Error('Unknown compressed tree node');\r\n        }\r\n        const node = this.model.getNode(compressedNode);\r\n        const compressedParentNode = this.model.getParentNodeLocation(compressedNode);\r\n        const parent = this.model.getNode(compressedParentNode);\r\n        const decompressedElement = decompress(node);\r\n        const splicedElement = splice(decompressedElement, element, children);\r\n        const recompressedElement = (this.enabled ? compress : noCompress)(splicedElement);\r\n        const parentChildren = parent.children\r\n            .map(child => child === node ? recompressedElement : child);\r\n        this._setChildren(parent.element, parentChildren, {\r\n            diffIdentityProvider,\r\n            diffDepth: node.depth - parent.depth,\r\n        });\r\n    }\r\n    setCompressionEnabled(enabled) {\r\n        if (enabled === this.enabled) {\r\n            return;\r\n        }\r\n        this.enabled = enabled;\r\n        const root = this.model.getNode();\r\n        const rootChildren = root.children;\r\n        const decompressedRootChildren = Iterable.map(rootChildren, decompress);\r\n        const recompressedRootChildren = Iterable.map(decompressedRootChildren, enabled ? compress : noCompress);\r\n        // it should be safe to always use deep diff mode here if an identity\r\n        // provider is available, since we know the raw nodes are unchanged.\r\n        this._setChildren(null, recompressedRootChildren, {\r\n            diffIdentityProvider: this.identityProvider,\r\n            diffDepth: Infinity,\r\n        });\r\n    }\r\n    _setChildren(node, children, options) {\r\n        const insertedElements = new Set();\r\n        const onDidCreateNode = (node) => {\r\n            for (const element of node.element.elements) {\r\n                insertedElements.add(element);\r\n                this.nodes.set(element, node.element);\r\n            }\r\n        };\r\n        const onDidDeleteNode = (node) => {\r\n            for (const element of node.element.elements) {\r\n                if (!insertedElements.has(element)) {\r\n                    this.nodes.delete(element);\r\n                }\r\n            }\r\n        };\r\n        this.model.setChildren(node, children, Object.assign(Object.assign({}, options), { onDidCreateNode, onDidDeleteNode }));\r\n    }\r\n    has(element) {\r\n        return this.nodes.has(element);\r\n    }\r\n    getListIndex(location) {\r\n        const node = this.getCompressedNode(location);\r\n        return this.model.getListIndex(node);\r\n    }\r\n    getListRenderCount(location) {\r\n        const node = this.getCompressedNode(location);\r\n        return this.model.getListRenderCount(node);\r\n    }\r\n    getNode(location) {\r\n        if (typeof location === 'undefined') {\r\n            return this.model.getNode();\r\n        }\r\n        const node = this.getCompressedNode(location);\r\n        return this.model.getNode(node);\r\n    }\r\n    // TODO: review this\r\n    getNodeLocation(node) {\r\n        const compressedNode = this.model.getNodeLocation(node);\r\n        if (compressedNode === null) {\r\n            return null;\r\n        }\r\n        return compressedNode.elements[compressedNode.elements.length - 1];\r\n    }\r\n    // TODO: review this\r\n    getParentNodeLocation(location) {\r\n        const compressedNode = this.getCompressedNode(location);\r\n        const parentNode = this.model.getParentNodeLocation(compressedNode);\r\n        if (parentNode === null) {\r\n            return null;\r\n        }\r\n        return parentNode.elements[parentNode.elements.length - 1];\r\n    }\r\n    isCollapsible(location) {\r\n        const compressedNode = this.getCompressedNode(location);\r\n        return this.model.isCollapsible(compressedNode);\r\n    }\r\n    setCollapsible(location, collapsible) {\r\n        const compressedNode = this.getCompressedNode(location);\r\n        return this.model.setCollapsible(compressedNode, collapsible);\r\n    }\r\n    isCollapsed(location) {\r\n        const compressedNode = this.getCompressedNode(location);\r\n        return this.model.isCollapsed(compressedNode);\r\n    }\r\n    setCollapsed(location, collapsed, recursive) {\r\n        const compressedNode = this.getCompressedNode(location);\r\n        return this.model.setCollapsed(compressedNode, collapsed, recursive);\r\n    }\r\n    expandTo(location) {\r\n        const compressedNode = this.getCompressedNode(location);\r\n        this.model.expandTo(compressedNode);\r\n    }\r\n    rerender(location) {\r\n        const compressedNode = this.getCompressedNode(location);\r\n        this.model.rerender(compressedNode);\r\n    }\r\n    refilter() {\r\n        this.model.refilter();\r\n    }\r\n    getCompressedNode(element) {\r\n        if (element === null) {\r\n            return null;\r\n        }\r\n        const node = this.nodes.get(element);\r\n        if (!node) {\r\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\r\n        }\r\n        return node;\r\n    }\r\n}\r\nexport const DefaultElementMapper = elements => elements[elements.length - 1];\r\nclass CompressedTreeNodeWrapper {\r\n    constructor(unwrapper, node) {\r\n        this.unwrapper = unwrapper;\r\n        this.node = node;\r\n    }\r\n    get element() { return this.node.element === null ? null : this.unwrapper(this.node.element); }\r\n    get children() { return this.node.children.map(node => new CompressedTreeNodeWrapper(this.unwrapper, node)); }\r\n    get depth() { return this.node.depth; }\r\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\r\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\r\n    get collapsible() { return this.node.collapsible; }\r\n    get collapsed() { return this.node.collapsed; }\r\n    get visible() { return this.node.visible; }\r\n    get filterData() { return this.node.filterData; }\r\n}\r\nfunction mapList(nodeMapper, list) {\r\n    return {\r\n        splice(start, deleteCount, toInsert) {\r\n            list.splice(start, deleteCount, toInsert.map(node => nodeMapper.map(node)));\r\n        },\r\n        updateElementHeight(index, height) {\r\n            list.updateElementHeight(index, height);\r\n        }\r\n    };\r\n}\r\nfunction mapOptions(compressedNodeUnwrapper, options) {\r\n    return Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\r\n            getId(node) {\r\n                return options.identityProvider.getId(compressedNodeUnwrapper(node));\r\n            }\r\n        }, sorter: options.sorter && {\r\n            compare(node, otherNode) {\r\n                return options.sorter.compare(node.elements[0], otherNode.elements[0]);\r\n            }\r\n        }, filter: options.filter && {\r\n            filter(node, parentVisibility) {\r\n                return options.filter.filter(compressedNodeUnwrapper(node), parentVisibility);\r\n            }\r\n        } });\r\n}\r\nexport class CompressibleObjectTreeModel {\r\n    constructor(user, list, options = {}) {\r\n        this.rootRef = null;\r\n        this.elementMapper = options.elementMapper || DefaultElementMapper;\r\n        const compressedNodeUnwrapper = node => this.elementMapper(node.elements);\r\n        this.nodeMapper = new WeakMapper(node => new CompressedTreeNodeWrapper(compressedNodeUnwrapper, node));\r\n        this.model = new CompressedObjectTreeModel(user, mapList(this.nodeMapper, list), mapOptions(compressedNodeUnwrapper, options));\r\n    }\r\n    get onDidSplice() {\r\n        return Event.map(this.model.onDidSplice, ({ insertedNodes, deletedNodes }) => ({\r\n            insertedNodes: insertedNodes.map(node => this.nodeMapper.map(node)),\r\n            deletedNodes: deletedNodes.map(node => this.nodeMapper.map(node)),\r\n        }));\r\n    }\r\n    get onDidChangeCollapseState() {\r\n        return Event.map(this.model.onDidChangeCollapseState, ({ node, deep }) => ({\r\n            node: this.nodeMapper.map(node),\r\n            deep\r\n        }));\r\n    }\r\n    get onDidChangeRenderNodeCount() {\r\n        return Event.map(this.model.onDidChangeRenderNodeCount, node => this.nodeMapper.map(node));\r\n    }\r\n    setChildren(element, children = Iterable.empty(), options = {}) {\r\n        this.model.setChildren(element, children, options);\r\n    }\r\n    setCompressionEnabled(enabled) {\r\n        this.model.setCompressionEnabled(enabled);\r\n    }\r\n    has(location) {\r\n        return this.model.has(location);\r\n    }\r\n    getListIndex(location) {\r\n        return this.model.getListIndex(location);\r\n    }\r\n    getListRenderCount(location) {\r\n        return this.model.getListRenderCount(location);\r\n    }\r\n    getNode(location) {\r\n        return this.nodeMapper.map(this.model.getNode(location));\r\n    }\r\n    getNodeLocation(node) {\r\n        return node.element;\r\n    }\r\n    getParentNodeLocation(location) {\r\n        return this.model.getParentNodeLocation(location);\r\n    }\r\n    isCollapsible(location) {\r\n        return this.model.isCollapsible(location);\r\n    }\r\n    setCollapsible(location, collapsed) {\r\n        return this.model.setCollapsible(location, collapsed);\r\n    }\r\n    isCollapsed(location) {\r\n        return this.model.isCollapsed(location);\r\n    }\r\n    setCollapsed(location, collapsed, recursive) {\r\n        return this.model.setCollapsed(location, collapsed, recursive);\r\n    }\r\n    expandTo(location) {\r\n        return this.model.expandTo(location);\r\n    }\r\n    rerender(location) {\r\n        return this.model.rerender(location);\r\n    }\r\n    refilter() {\r\n        return this.model.refilter();\r\n    }\r\n    getCompressedTreeNode(location = null) {\r\n        return this.model.getNode(location);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Iterable } from '../../../common/iterator.js';\r\nimport { AbstractTree } from './abstractTree.js';\r\nimport { ObjectTreeModel } from './objectTreeModel.js';\r\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\r\nimport { memoize } from '../../../common/decorators.js';\r\nexport class ObjectTree extends AbstractTree {\r\n    constructor(user, container, delegate, renderers, options = {}) {\r\n        super(user, container, delegate, renderers, options);\r\n    }\r\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\r\n    setChildren(element, children = Iterable.empty(), options) {\r\n        this.model.setChildren(element, children, options);\r\n    }\r\n    rerender(element) {\r\n        if (element === undefined) {\r\n            this.view.rerender();\r\n            return;\r\n        }\r\n        this.model.rerender(element);\r\n    }\r\n    hasElement(element) {\r\n        return this.model.has(element);\r\n    }\r\n    createModel(user, view, options) {\r\n        return new ObjectTreeModel(user, view, options);\r\n    }\r\n}\r\nclass CompressibleRenderer {\r\n    constructor(_compressedTreeNodeProvider, renderer) {\r\n        this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\r\n        this.renderer = renderer;\r\n        this.templateId = renderer.templateId;\r\n        if (renderer.onDidChangeTwistieState) {\r\n            this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\r\n        }\r\n    }\r\n    get compressedTreeNodeProvider() {\r\n        return this._compressedTreeNodeProvider();\r\n    }\r\n    renderTemplate(container) {\r\n        const data = this.renderer.renderTemplate(container);\r\n        return { compressedTreeNode: undefined, data };\r\n    }\r\n    renderElement(node, index, templateData, height) {\r\n        const compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\r\n        if (compressedTreeNode.element.elements.length === 1) {\r\n            templateData.compressedTreeNode = undefined;\r\n            this.renderer.renderElement(node, index, templateData.data, height);\r\n        }\r\n        else {\r\n            templateData.compressedTreeNode = compressedTreeNode;\r\n            this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\r\n        }\r\n    }\r\n    disposeElement(node, index, templateData, height) {\r\n        if (templateData.compressedTreeNode) {\r\n            if (this.renderer.disposeCompressedElements) {\r\n                this.renderer.disposeCompressedElements(templateData.compressedTreeNode, index, templateData.data, height);\r\n            }\r\n        }\r\n        else {\r\n            if (this.renderer.disposeElement) {\r\n                this.renderer.disposeElement(node, index, templateData.data, height);\r\n            }\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        this.renderer.disposeTemplate(templateData.data);\r\n    }\r\n    renderTwistie(element, twistieElement) {\r\n        if (this.renderer.renderTwistie) {\r\n            return this.renderer.renderTwistie(element, twistieElement);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n__decorate([\r\n    memoize\r\n], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\r\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\r\n    return options && Object.assign(Object.assign({}, options), { keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\r\n            getKeyboardNavigationLabel(e) {\r\n                let compressedTreeNode;\r\n                try {\r\n                    compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\r\n                }\r\n                catch (_a) {\r\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\r\n                }\r\n                if (compressedTreeNode.element.elements.length === 1) {\r\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\r\n                }\r\n                else {\r\n                    return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\r\n                }\r\n            }\r\n        } });\r\n}\r\nexport class CompressibleObjectTree extends ObjectTree {\r\n    constructor(user, container, delegate, renderers, options = {}) {\r\n        const compressedTreeNodeProvider = () => this;\r\n        const compressibleRenderers = renderers.map(r => new CompressibleRenderer(compressedTreeNodeProvider, r));\r\n        super(user, container, delegate, compressibleRenderers, asObjectTreeOptions(compressedTreeNodeProvider, options));\r\n    }\r\n    setChildren(element, children = Iterable.empty(), options) {\r\n        this.model.setChildren(element, children, options);\r\n    }\r\n    createModel(user, view, options) {\r\n        return new CompressibleObjectTreeModel(user, view, options);\r\n    }\r\n    updateOptions(optionsUpdate = {}) {\r\n        super.updateOptions(optionsUpdate);\r\n        if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\r\n            this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\r\n        }\r\n    }\r\n    getCompressedTreeNode(element = null) {\r\n        return this.model.getCompressedTreeNode(element);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { ComposedTreeDelegate } from './abstractTree.js';\r\nimport { ObjectTree, CompressibleObjectTree } from './objectTree.js';\r\nimport { TreeError, WeakMapper } from './tree.js';\r\nimport { dispose, DisposableStore } from '../../../common/lifecycle.js';\r\nimport { Emitter, Event } from '../../../common/event.js';\r\nimport { timeout, createCancelablePromise, Promises } from '../../../common/async.js';\r\nimport { Iterable } from '../../../common/iterator.js';\r\nimport { ElementsDragAndDropData } from '../list/listView.js';\r\nimport { isPromiseCanceledError, onUnexpectedError } from '../../../common/errors.js';\r\nimport { isFilterResult, getVisibleState } from './indexTreeModel.js';\r\nimport { treeItemLoadingIcon } from './treeIcons.js';\r\nfunction createAsyncDataTreeNode(props) {\r\n    return Object.assign(Object.assign({}, props), { children: [], refreshPromise: undefined, stale: true, slow: false, collapsedByDefault: undefined });\r\n}\r\nfunction isAncestor(ancestor, descendant) {\r\n    if (!descendant.parent) {\r\n        return false;\r\n    }\r\n    else if (descendant.parent === ancestor) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isAncestor(ancestor, descendant.parent);\r\n    }\r\n}\r\nfunction intersects(node, other) {\r\n    return node === other || isAncestor(node, other) || isAncestor(other, node);\r\n}\r\nclass AsyncDataTreeNodeWrapper {\r\n    constructor(node) {\r\n        this.node = node;\r\n    }\r\n    get element() { return this.node.element.element; }\r\n    get children() { return this.node.children.map(node => new AsyncDataTreeNodeWrapper(node)); }\r\n    get depth() { return this.node.depth; }\r\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\r\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\r\n    get collapsible() { return this.node.collapsible; }\r\n    get collapsed() { return this.node.collapsed; }\r\n    get visible() { return this.node.visible; }\r\n    get filterData() { return this.node.filterData; }\r\n}\r\nclass AsyncDataTreeRenderer {\r\n    constructor(renderer, nodeMapper, onDidChangeTwistieState) {\r\n        this.renderer = renderer;\r\n        this.nodeMapper = nodeMapper;\r\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\r\n        this.renderedNodes = new Map();\r\n        this.templateId = renderer.templateId;\r\n    }\r\n    renderTemplate(container) {\r\n        const templateData = this.renderer.renderTemplate(container);\r\n        return { templateData };\r\n    }\r\n    renderElement(node, index, templateData, height) {\r\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\r\n    }\r\n    renderTwistie(element, twistieElement) {\r\n        if (element.slow) {\r\n            twistieElement.classList.add(...treeItemLoadingIcon.classNamesArray);\r\n            return true;\r\n        }\r\n        else {\r\n            twistieElement.classList.remove(...treeItemLoadingIcon.classNamesArray);\r\n            return false;\r\n        }\r\n    }\r\n    disposeElement(node, index, templateData, height) {\r\n        if (this.renderer.disposeElement) {\r\n            this.renderer.disposeElement(this.nodeMapper.map(node), index, templateData.templateData, height);\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        this.renderer.disposeTemplate(templateData.templateData);\r\n    }\r\n    dispose() {\r\n        this.renderedNodes.clear();\r\n    }\r\n}\r\nfunction asTreeEvent(e) {\r\n    return {\r\n        browserEvent: e.browserEvent,\r\n        elements: e.elements.map(e => e.element)\r\n    };\r\n}\r\nfunction asTreeMouseEvent(e) {\r\n    return {\r\n        browserEvent: e.browserEvent,\r\n        element: e.element && e.element.element,\r\n        target: e.target\r\n    };\r\n}\r\nclass AsyncDataTreeElementsDragAndDropData extends ElementsDragAndDropData {\r\n    constructor(data) {\r\n        super(data.elements.map(node => node.element));\r\n        this.data = data;\r\n    }\r\n}\r\nfunction asAsyncDataTreeDragAndDropData(data) {\r\n    if (data instanceof ElementsDragAndDropData) {\r\n        return new AsyncDataTreeElementsDragAndDropData(data);\r\n    }\r\n    return data;\r\n}\r\nclass AsyncDataTreeNodeListDragAndDrop {\r\n    constructor(dnd) {\r\n        this.dnd = dnd;\r\n    }\r\n    getDragURI(node) {\r\n        return this.dnd.getDragURI(node.element);\r\n    }\r\n    getDragLabel(nodes, originalEvent) {\r\n        if (this.dnd.getDragLabel) {\r\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\r\n        }\r\n        return undefined;\r\n    }\r\n    onDragStart(data, originalEvent) {\r\n        if (this.dnd.onDragStart) {\r\n            this.dnd.onDragStart(asAsyncDataTreeDragAndDropData(data), originalEvent);\r\n        }\r\n    }\r\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\r\n        return this.dnd.onDragOver(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\r\n    }\r\n    drop(data, targetNode, targetIndex, originalEvent) {\r\n        this.dnd.drop(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\r\n    }\r\n    onDragEnd(originalEvent) {\r\n        if (this.dnd.onDragEnd) {\r\n            this.dnd.onDragEnd(originalEvent);\r\n        }\r\n    }\r\n}\r\nfunction asObjectTreeOptions(options) {\r\n    return options && Object.assign(Object.assign({}, options), { collapseByDefault: true, identityProvider: options.identityProvider && {\r\n            getId(el) {\r\n                return options.identityProvider.getId(el.element);\r\n            }\r\n        }, dnd: options.dnd && new AsyncDataTreeNodeListDragAndDrop(options.dnd), multipleSelectionController: options.multipleSelectionController && {\r\n            isSelectionSingleChangeEvent(e) {\r\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\r\n            },\r\n            isSelectionRangeChangeEvent(e) {\r\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\r\n            }\r\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getPosInSet: undefined, getSetSize: undefined, getRole: options.accessibilityProvider.getRole ? (el) => {\r\n                return options.accessibilityProvider.getRole(el.element);\r\n            } : () => 'treeitem', isChecked: options.accessibilityProvider.isChecked ? (e) => {\r\n                var _a;\r\n                return !!((_a = options.accessibilityProvider) === null || _a === void 0 ? void 0 : _a.isChecked(e.element));\r\n            } : undefined, getAriaLabel(e) {\r\n                return options.accessibilityProvider.getAriaLabel(e.element);\r\n            },\r\n            getWidgetAriaLabel() {\r\n                return options.accessibilityProvider.getWidgetAriaLabel();\r\n            }, getWidgetRole: options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider.getAriaLevel && (node => {\r\n                return options.accessibilityProvider.getAriaLevel(node.element);\r\n            }), getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\r\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\r\n            }) }), filter: options.filter && {\r\n            filter(e, parentVisibility) {\r\n                return options.filter.filter(e.element, parentVisibility);\r\n            }\r\n        }, keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(e) {\r\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element);\r\n            } }), sorter: undefined, expandOnlyOnTwistieClick: typeof options.expandOnlyOnTwistieClick === 'undefined' ? undefined : (typeof options.expandOnlyOnTwistieClick !== 'function' ? options.expandOnlyOnTwistieClick : (e => options.expandOnlyOnTwistieClick(e.element))), additionalScrollHeight: options.additionalScrollHeight });\r\n}\r\nfunction dfs(node, fn) {\r\n    fn(node);\r\n    node.children.forEach(child => dfs(child, fn));\r\n}\r\nexport class AsyncDataTree {\r\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\r\n        this.user = user;\r\n        this.dataSource = dataSource;\r\n        this.nodes = new Map();\r\n        this.subTreeRefreshPromises = new Map();\r\n        this.refreshPromises = new Map();\r\n        this._onDidRender = new Emitter();\r\n        this._onDidChangeNodeSlowState = new Emitter();\r\n        this.nodeMapper = new WeakMapper(node => new AsyncDataTreeNodeWrapper(node));\r\n        this.disposables = new DisposableStore();\r\n        this.identityProvider = options.identityProvider;\r\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\r\n        this.sorter = options.sorter;\r\n        this.collapseByDefault = options.collapseByDefault;\r\n        this.tree = this.createTree(user, container, delegate, renderers, options);\r\n        this.root = createAsyncDataTreeNode({\r\n            element: undefined,\r\n            parent: null,\r\n            hasChildren: true\r\n        });\r\n        if (this.identityProvider) {\r\n            this.root = Object.assign(Object.assign({}, this.root), { id: null });\r\n        }\r\n        this.nodes.set(null, this.root);\r\n        this.tree.onDidChangeCollapseState(this._onDidChangeCollapseState, this, this.disposables);\r\n    }\r\n    get onDidChangeFocus() { return Event.map(this.tree.onDidChangeFocus, asTreeEvent); }\r\n    get onDidChangeSelection() { return Event.map(this.tree.onDidChangeSelection, asTreeEvent); }\r\n    get onMouseDblClick() { return Event.map(this.tree.onMouseDblClick, asTreeMouseEvent); }\r\n    get onPointer() { return Event.map(this.tree.onPointer, asTreeMouseEvent); }\r\n    get onDidFocus() { return this.tree.onDidFocus; }\r\n    get onDidDispose() { return this.tree.onDidDispose; }\r\n    createTree(user, container, delegate, renderers, options) {\r\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\r\n        const objectTreeRenderers = renderers.map(r => new AsyncDataTreeRenderer(r, this.nodeMapper, this._onDidChangeNodeSlowState.event));\r\n        const objectTreeOptions = asObjectTreeOptions(options) || {};\r\n        return new ObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\r\n    }\r\n    updateOptions(options = {}) {\r\n        this.tree.updateOptions(options);\r\n    }\r\n    // Widget\r\n    getHTMLElement() {\r\n        return this.tree.getHTMLElement();\r\n    }\r\n    get scrollTop() {\r\n        return this.tree.scrollTop;\r\n    }\r\n    set scrollTop(scrollTop) {\r\n        this.tree.scrollTop = scrollTop;\r\n    }\r\n    domFocus() {\r\n        this.tree.domFocus();\r\n    }\r\n    layout(height, width) {\r\n        this.tree.layout(height, width);\r\n    }\r\n    style(styles) {\r\n        this.tree.style(styles);\r\n    }\r\n    // Model\r\n    getInput() {\r\n        return this.root.element;\r\n    }\r\n    setInput(input, viewState) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.refreshPromises.forEach(promise => promise.cancel());\r\n            this.refreshPromises.clear();\r\n            this.root.element = input;\r\n            const viewStateContext = viewState && { viewState, focus: [], selection: [] };\r\n            yield this._updateChildren(input, true, false, viewStateContext);\r\n            if (viewStateContext) {\r\n                this.tree.setFocus(viewStateContext.focus);\r\n                this.tree.setSelection(viewStateContext.selection);\r\n            }\r\n            if (viewState && typeof viewState.scrollTop === 'number') {\r\n                this.scrollTop = viewState.scrollTop;\r\n            }\r\n        });\r\n    }\r\n    _updateChildren(element = this.root.element, recursive = true, rerender = false, viewStateContext, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof this.root.element === 'undefined') {\r\n                throw new TreeError(this.user, 'Tree input not set');\r\n            }\r\n            if (this.root.refreshPromise) {\r\n                yield this.root.refreshPromise;\r\n                yield Event.toPromise(this._onDidRender.event);\r\n            }\r\n            const node = this.getDataNode(element);\r\n            yield this.refreshAndRenderNode(node, recursive, viewStateContext, options);\r\n            if (rerender) {\r\n                try {\r\n                    this.tree.rerender(node);\r\n                }\r\n                catch (_a) {\r\n                    // missing nodes are fine, this could've resulted from\r\n                    // parallel refresh calls, removing `node` altogether\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // View\r\n    rerender(element) {\r\n        if (element === undefined || element === this.root.element) {\r\n            this.tree.rerender();\r\n            return;\r\n        }\r\n        const node = this.getDataNode(element);\r\n        this.tree.rerender(node);\r\n    }\r\n    collapse(element, recursive = false) {\r\n        const node = this.getDataNode(element);\r\n        return this.tree.collapse(node === this.root ? null : node, recursive);\r\n    }\r\n    expand(element, recursive = false) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof this.root.element === 'undefined') {\r\n                throw new TreeError(this.user, 'Tree input not set');\r\n            }\r\n            if (this.root.refreshPromise) {\r\n                yield this.root.refreshPromise;\r\n                yield Event.toPromise(this._onDidRender.event);\r\n            }\r\n            const node = this.getDataNode(element);\r\n            if (this.tree.hasElement(node) && !this.tree.isCollapsible(node)) {\r\n                return false;\r\n            }\r\n            if (node.refreshPromise) {\r\n                yield this.root.refreshPromise;\r\n                yield Event.toPromise(this._onDidRender.event);\r\n            }\r\n            if (node !== this.root && !node.refreshPromise && !this.tree.isCollapsed(node)) {\r\n                return false;\r\n            }\r\n            const result = this.tree.expand(node === this.root ? null : node, recursive);\r\n            if (node.refreshPromise) {\r\n                yield this.root.refreshPromise;\r\n                yield Event.toPromise(this._onDidRender.event);\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    setSelection(elements, browserEvent) {\r\n        const nodes = elements.map(e => this.getDataNode(e));\r\n        this.tree.setSelection(nodes, browserEvent);\r\n    }\r\n    getSelection() {\r\n        const nodes = this.tree.getSelection();\r\n        return nodes.map(n => n.element);\r\n    }\r\n    setFocus(elements, browserEvent) {\r\n        const nodes = elements.map(e => this.getDataNode(e));\r\n        this.tree.setFocus(nodes, browserEvent);\r\n    }\r\n    getFocus() {\r\n        const nodes = this.tree.getFocus();\r\n        return nodes.map(n => n.element);\r\n    }\r\n    reveal(element, relativeTop) {\r\n        this.tree.reveal(this.getDataNode(element), relativeTop);\r\n    }\r\n    // Implementation\r\n    getDataNode(element) {\r\n        const node = this.nodes.get((element === this.root.element ? null : element));\r\n        if (!node) {\r\n            throw new TreeError(this.user, `Data tree node not found: ${element}`);\r\n        }\r\n        return node;\r\n    }\r\n    refreshAndRenderNode(node, recursive, viewStateContext, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.refreshNode(node, recursive, viewStateContext);\r\n            this.render(node, viewStateContext, options);\r\n        });\r\n    }\r\n    refreshNode(node, recursive, viewStateContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let result;\r\n            this.subTreeRefreshPromises.forEach((refreshPromise, refreshNode) => {\r\n                if (!result && intersects(refreshNode, node)) {\r\n                    result = refreshPromise.then(() => this.refreshNode(node, recursive, viewStateContext));\r\n                }\r\n            });\r\n            if (result) {\r\n                return result;\r\n            }\r\n            return this.doRefreshSubTree(node, recursive, viewStateContext);\r\n        });\r\n    }\r\n    doRefreshSubTree(node, recursive, viewStateContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let done;\r\n            node.refreshPromise = new Promise(c => done = c);\r\n            this.subTreeRefreshPromises.set(node, node.refreshPromise);\r\n            node.refreshPromise.finally(() => {\r\n                node.refreshPromise = undefined;\r\n                this.subTreeRefreshPromises.delete(node);\r\n            });\r\n            try {\r\n                const childrenToRefresh = yield this.doRefreshNode(node, recursive, viewStateContext);\r\n                node.stale = false;\r\n                yield Promises.settled(childrenToRefresh.map(child => this.doRefreshSubTree(child, recursive, viewStateContext)));\r\n            }\r\n            finally {\r\n                done();\r\n            }\r\n        });\r\n    }\r\n    doRefreshNode(node, recursive, viewStateContext) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            node.hasChildren = !!this.dataSource.hasChildren(node.element);\r\n            let childrenPromise;\r\n            if (!node.hasChildren) {\r\n                childrenPromise = Promise.resolve(Iterable.empty());\r\n            }\r\n            else {\r\n                const slowTimeout = timeout(800);\r\n                slowTimeout.then(() => {\r\n                    node.slow = true;\r\n                    this._onDidChangeNodeSlowState.fire(node);\r\n                }, _ => null);\r\n                childrenPromise = this.doGetChildren(node)\r\n                    .finally(() => slowTimeout.cancel());\r\n            }\r\n            try {\r\n                const children = yield childrenPromise;\r\n                return this.setChildren(node, children, recursive, viewStateContext);\r\n            }\r\n            catch (err) {\r\n                if (node !== this.root && this.tree.hasElement(node)) {\r\n                    this.tree.collapse(node);\r\n                }\r\n                if (isPromiseCanceledError(err)) {\r\n                    return [];\r\n                }\r\n                throw err;\r\n            }\r\n            finally {\r\n                if (node.slow) {\r\n                    node.slow = false;\r\n                    this._onDidChangeNodeSlowState.fire(node);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    doGetChildren(node) {\r\n        let result = this.refreshPromises.get(node);\r\n        if (result) {\r\n            return result;\r\n        }\r\n        result = createCancelablePromise(() => __awaiter(this, void 0, void 0, function* () {\r\n            const children = yield this.dataSource.getChildren(node.element);\r\n            return this.processChildren(children);\r\n        }));\r\n        this.refreshPromises.set(node, result);\r\n        return result.finally(() => { this.refreshPromises.delete(node); });\r\n    }\r\n    _onDidChangeCollapseState({ node, deep }) {\r\n        if (node.element === null) {\r\n            return;\r\n        }\r\n        if (!node.collapsed && node.element.stale) {\r\n            if (deep) {\r\n                this.collapse(node.element.element);\r\n            }\r\n            else {\r\n                this.refreshAndRenderNode(node.element, false)\r\n                    .catch(onUnexpectedError);\r\n            }\r\n        }\r\n    }\r\n    setChildren(node, childrenElementsIterable, recursive, viewStateContext) {\r\n        const childrenElements = [...childrenElementsIterable];\r\n        // perf: if the node was and still is a leaf, avoid all this hassle\r\n        if (node.children.length === 0 && childrenElements.length === 0) {\r\n            return [];\r\n        }\r\n        const nodesToForget = new Map();\r\n        const childrenTreeNodesById = new Map();\r\n        for (const child of node.children) {\r\n            nodesToForget.set(child.element, child);\r\n            if (this.identityProvider) {\r\n                const collapsed = this.tree.isCollapsed(child);\r\n                childrenTreeNodesById.set(child.id, { node: child, collapsed });\r\n            }\r\n        }\r\n        const childrenToRefresh = [];\r\n        const children = childrenElements.map(element => {\r\n            const hasChildren = !!this.dataSource.hasChildren(element);\r\n            if (!this.identityProvider) {\r\n                const asyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, hasChildren });\r\n                if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\r\n                    asyncDataTreeNode.collapsedByDefault = false;\r\n                    childrenToRefresh.push(asyncDataTreeNode);\r\n                }\r\n                return asyncDataTreeNode;\r\n            }\r\n            const id = this.identityProvider.getId(element).toString();\r\n            const result = childrenTreeNodesById.get(id);\r\n            if (result) {\r\n                const asyncDataTreeNode = result.node;\r\n                nodesToForget.delete(asyncDataTreeNode.element);\r\n                this.nodes.delete(asyncDataTreeNode.element);\r\n                this.nodes.set(element, asyncDataTreeNode);\r\n                asyncDataTreeNode.element = element;\r\n                asyncDataTreeNode.hasChildren = hasChildren;\r\n                if (recursive) {\r\n                    if (result.collapsed) {\r\n                        asyncDataTreeNode.children.forEach(node => dfs(node, node => this.nodes.delete(node.element)));\r\n                        asyncDataTreeNode.children.splice(0, asyncDataTreeNode.children.length);\r\n                        asyncDataTreeNode.stale = true;\r\n                    }\r\n                    else {\r\n                        childrenToRefresh.push(asyncDataTreeNode);\r\n                    }\r\n                }\r\n                else if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\r\n                    asyncDataTreeNode.collapsedByDefault = false;\r\n                    childrenToRefresh.push(asyncDataTreeNode);\r\n                }\r\n                return asyncDataTreeNode;\r\n            }\r\n            const childAsyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, id, hasChildren });\r\n            if (viewStateContext && viewStateContext.viewState.focus && viewStateContext.viewState.focus.indexOf(id) > -1) {\r\n                viewStateContext.focus.push(childAsyncDataTreeNode);\r\n            }\r\n            if (viewStateContext && viewStateContext.viewState.selection && viewStateContext.viewState.selection.indexOf(id) > -1) {\r\n                viewStateContext.selection.push(childAsyncDataTreeNode);\r\n            }\r\n            if (viewStateContext && viewStateContext.viewState.expanded && viewStateContext.viewState.expanded.indexOf(id) > -1) {\r\n                childrenToRefresh.push(childAsyncDataTreeNode);\r\n            }\r\n            else if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\r\n                childAsyncDataTreeNode.collapsedByDefault = false;\r\n                childrenToRefresh.push(childAsyncDataTreeNode);\r\n            }\r\n            return childAsyncDataTreeNode;\r\n        });\r\n        for (const node of nodesToForget.values()) {\r\n            dfs(node, node => this.nodes.delete(node.element));\r\n        }\r\n        for (const child of children) {\r\n            this.nodes.set(child.element, child);\r\n        }\r\n        node.children.splice(0, node.children.length, ...children);\r\n        // TODO@joao this doesn't take filter into account\r\n        if (node !== this.root && this.autoExpandSingleChildren && children.length === 1 && childrenToRefresh.length === 0) {\r\n            children[0].collapsedByDefault = false;\r\n            childrenToRefresh.push(children[0]);\r\n        }\r\n        return childrenToRefresh;\r\n    }\r\n    render(node, viewStateContext, options) {\r\n        const children = node.children.map(node => this.asTreeElement(node, viewStateContext));\r\n        const objectTreeOptions = options && Object.assign(Object.assign({}, options), { diffIdentityProvider: options.diffIdentityProvider && {\r\n                getId(node) {\r\n                    return options.diffIdentityProvider.getId(node.element);\r\n                }\r\n            } });\r\n        this.tree.setChildren(node === this.root ? null : node, children, objectTreeOptions);\r\n        if (node !== this.root) {\r\n            this.tree.setCollapsible(node, node.hasChildren);\r\n        }\r\n        this._onDidRender.fire();\r\n    }\r\n    asTreeElement(node, viewStateContext) {\r\n        if (node.stale) {\r\n            return {\r\n                element: node,\r\n                collapsible: node.hasChildren,\r\n                collapsed: true\r\n            };\r\n        }\r\n        let collapsed;\r\n        if (viewStateContext && viewStateContext.viewState.expanded && node.id && viewStateContext.viewState.expanded.indexOf(node.id) > -1) {\r\n            collapsed = false;\r\n        }\r\n        else {\r\n            collapsed = node.collapsedByDefault;\r\n        }\r\n        node.collapsedByDefault = undefined;\r\n        return {\r\n            element: node,\r\n            children: node.hasChildren ? Iterable.map(node.children, child => this.asTreeElement(child, viewStateContext)) : [],\r\n            collapsible: node.hasChildren,\r\n            collapsed\r\n        };\r\n    }\r\n    processChildren(children) {\r\n        if (this.sorter) {\r\n            children = [...children].sort(this.sorter.compare.bind(this.sorter));\r\n        }\r\n        return children;\r\n    }\r\n    dispose() {\r\n        this.disposables.dispose();\r\n    }\r\n}\r\nclass CompressibleAsyncDataTreeNodeWrapper {\r\n    constructor(node) {\r\n        this.node = node;\r\n    }\r\n    get element() {\r\n        return {\r\n            elements: this.node.element.elements.map(e => e.element),\r\n            incompressible: this.node.element.incompressible\r\n        };\r\n    }\r\n    get children() { return this.node.children.map(node => new CompressibleAsyncDataTreeNodeWrapper(node)); }\r\n    get depth() { return this.node.depth; }\r\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\r\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\r\n    get collapsible() { return this.node.collapsible; }\r\n    get collapsed() { return this.node.collapsed; }\r\n    get visible() { return this.node.visible; }\r\n    get filterData() { return this.node.filterData; }\r\n}\r\nclass CompressibleAsyncDataTreeRenderer {\r\n    constructor(renderer, nodeMapper, compressibleNodeMapperProvider, onDidChangeTwistieState) {\r\n        this.renderer = renderer;\r\n        this.nodeMapper = nodeMapper;\r\n        this.compressibleNodeMapperProvider = compressibleNodeMapperProvider;\r\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\r\n        this.renderedNodes = new Map();\r\n        this.disposables = [];\r\n        this.templateId = renderer.templateId;\r\n    }\r\n    renderTemplate(container) {\r\n        const templateData = this.renderer.renderTemplate(container);\r\n        return { templateData };\r\n    }\r\n    renderElement(node, index, templateData, height) {\r\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\r\n    }\r\n    renderCompressedElements(node, index, templateData, height) {\r\n        this.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\r\n    }\r\n    renderTwistie(element, twistieElement) {\r\n        if (element.slow) {\r\n            twistieElement.classList.add(...treeItemLoadingIcon.classNamesArray);\r\n            return true;\r\n        }\r\n        else {\r\n            twistieElement.classList.remove(...treeItemLoadingIcon.classNamesArray);\r\n            return false;\r\n        }\r\n    }\r\n    disposeElement(node, index, templateData, height) {\r\n        if (this.renderer.disposeElement) {\r\n            this.renderer.disposeElement(this.nodeMapper.map(node), index, templateData.templateData, height);\r\n        }\r\n    }\r\n    disposeCompressedElements(node, index, templateData, height) {\r\n        if (this.renderer.disposeCompressedElements) {\r\n            this.renderer.disposeCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        this.renderer.disposeTemplate(templateData.templateData);\r\n    }\r\n    dispose() {\r\n        this.renderedNodes.clear();\r\n        this.disposables = dispose(this.disposables);\r\n    }\r\n}\r\nfunction asCompressibleObjectTreeOptions(options) {\r\n    const objectTreeOptions = options && asObjectTreeOptions(options);\r\n    return objectTreeOptions && Object.assign(Object.assign({}, objectTreeOptions), { keyboardNavigationLabelProvider: objectTreeOptions.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, objectTreeOptions.keyboardNavigationLabelProvider), { getCompressedNodeKeyboardNavigationLabel(els) {\r\n                return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(els.map(e => e.element));\r\n            } }) });\r\n}\r\nexport class CompressibleAsyncDataTree extends AsyncDataTree {\r\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options = {}) {\r\n        super(user, container, virtualDelegate, renderers, dataSource, options);\r\n        this.compressionDelegate = compressionDelegate;\r\n        this.compressibleNodeMapper = new WeakMapper(node => new CompressibleAsyncDataTreeNodeWrapper(node));\r\n        this.filter = options.filter;\r\n    }\r\n    createTree(user, container, delegate, renderers, options) {\r\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\r\n        const objectTreeRenderers = renderers.map(r => new CompressibleAsyncDataTreeRenderer(r, this.nodeMapper, () => this.compressibleNodeMapper, this._onDidChangeNodeSlowState.event));\r\n        const objectTreeOptions = asCompressibleObjectTreeOptions(options) || {};\r\n        return new CompressibleObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\r\n    }\r\n    asTreeElement(node, viewStateContext) {\r\n        return Object.assign({ incompressible: this.compressionDelegate.isIncompressible(node.element) }, super.asTreeElement(node, viewStateContext));\r\n    }\r\n    updateOptions(options = {}) {\r\n        this.tree.updateOptions(options);\r\n    }\r\n    render(node, viewStateContext) {\r\n        if (!this.identityProvider) {\r\n            return super.render(node, viewStateContext);\r\n        }\r\n        // Preserve traits across compressions. Hacky but does the trick.\r\n        // This is hard to fix properly since it requires rewriting the traits\r\n        // across trees and lists. Let's just keep it this way for now.\r\n        const getId = (element) => this.identityProvider.getId(element).toString();\r\n        const getUncompressedIds = (nodes) => {\r\n            const result = new Set();\r\n            for (const node of nodes) {\r\n                const compressedNode = this.tree.getCompressedTreeNode(node === this.root ? null : node);\r\n                if (!compressedNode.element) {\r\n                    continue;\r\n                }\r\n                for (const node of compressedNode.element.elements) {\r\n                    result.add(getId(node.element));\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        const oldSelection = getUncompressedIds(this.tree.getSelection());\r\n        const oldFocus = getUncompressedIds(this.tree.getFocus());\r\n        super.render(node, viewStateContext);\r\n        const selection = this.getSelection();\r\n        let didChangeSelection = false;\r\n        const focus = this.getFocus();\r\n        let didChangeFocus = false;\r\n        const visit = (node) => {\r\n            const compressedNode = node.element;\r\n            if (compressedNode) {\r\n                for (let i = 0; i < compressedNode.elements.length; i++) {\r\n                    const id = getId(compressedNode.elements[i].element);\r\n                    const element = compressedNode.elements[compressedNode.elements.length - 1].element;\r\n                    // github.com/microsoft/vscode/issues/85938\r\n                    if (oldSelection.has(id) && selection.indexOf(element) === -1) {\r\n                        selection.push(element);\r\n                        didChangeSelection = true;\r\n                    }\r\n                    if (oldFocus.has(id) && focus.indexOf(element) === -1) {\r\n                        focus.push(element);\r\n                        didChangeFocus = true;\r\n                    }\r\n                }\r\n            }\r\n            node.children.forEach(visit);\r\n        };\r\n        visit(this.tree.getCompressedTreeNode(node === this.root ? null : node));\r\n        if (didChangeSelection) {\r\n            this.setSelection(selection);\r\n        }\r\n        if (didChangeFocus) {\r\n            this.setFocus(focus);\r\n        }\r\n    }\r\n    // For compressed async data trees, `TreeVisibility.Recurse` doesn't currently work\r\n    // and we have to filter everything beforehand\r\n    // Related to #85193 and #85835\r\n    processChildren(children) {\r\n        if (this.filter) {\r\n            children = Iterable.filter(children, e => {\r\n                const result = this.filter.filter(e, 1 /* Visible */);\r\n                const visibility = getVisibility(result);\r\n                if (visibility === 2 /* Recurse */) {\r\n                    throw new Error('Recursive tree visibility not supported in async data compressed trees');\r\n                }\r\n                return visibility === 1 /* Visible */;\r\n            });\r\n        }\r\n        return super.processChildren(children);\r\n    }\r\n}\r\nfunction getVisibility(filterResult) {\r\n    if (typeof filterResult === 'boolean') {\r\n        return filterResult ? 1 /* Visible */ : 0 /* Hidden */;\r\n    }\r\n    else if (isFilterResult(filterResult)) {\r\n        return getVisibleState(filterResult.visibility);\r\n    }\r\n    else {\r\n        return getVisibleState(filterResult);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { AbstractTree } from './abstractTree.js';\r\nimport { ObjectTreeModel } from './objectTreeModel.js';\r\nexport class DataTree extends AbstractTree {\r\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\r\n        super(user, container, delegate, renderers, options);\r\n        this.user = user;\r\n        this.dataSource = dataSource;\r\n        this.identityProvider = options.identityProvider;\r\n    }\r\n    createModel(user, view, options) {\r\n        return new ObjectTreeModel(user, view, options);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './table.css';\r\nimport { List } from '../list/listWidget.js';\r\nimport { $, append, clearNode, createStyleSheet } from '../../dom.js';\r\nimport { SplitView } from '../splitview/splitview.js';\r\nimport { Emitter, Event } from '../../../common/event.js';\r\nclass TableListRenderer {\r\n    constructor(columns, renderers, getColumnSize) {\r\n        this.columns = columns;\r\n        this.getColumnSize = getColumnSize;\r\n        this.templateId = TableListRenderer.TemplateId;\r\n        this.renderedTemplates = new Set();\r\n        const rendererMap = new Map(renderers.map(r => [r.templateId, r]));\r\n        this.renderers = [];\r\n        for (const column of columns) {\r\n            const renderer = rendererMap.get(column.templateId);\r\n            if (!renderer) {\r\n                throw new Error(`Table cell renderer for template id ${column.templateId} not found.`);\r\n            }\r\n            this.renderers.push(renderer);\r\n        }\r\n    }\r\n    renderTemplate(container) {\r\n        const rowContainer = append(container, $('.monaco-table-tr'));\r\n        const cellContainers = [];\r\n        const cellTemplateData = [];\r\n        for (let i = 0; i < this.columns.length; i++) {\r\n            const renderer = this.renderers[i];\r\n            const cellContainer = append(rowContainer, $('.monaco-table-td', { 'data-col-index': i }));\r\n            cellContainer.style.width = `${this.getColumnSize(i)}px`;\r\n            cellContainers.push(cellContainer);\r\n            cellTemplateData.push(renderer.renderTemplate(cellContainer));\r\n        }\r\n        const result = { container, cellContainers, cellTemplateData };\r\n        this.renderedTemplates.add(result);\r\n        return result;\r\n    }\r\n    renderElement(element, index, templateData, height) {\r\n        for (let i = 0; i < this.columns.length; i++) {\r\n            const column = this.columns[i];\r\n            const cell = column.project(element);\r\n            const renderer = this.renderers[i];\r\n            renderer.renderElement(cell, index, templateData.cellTemplateData[i], height);\r\n        }\r\n    }\r\n    disposeElement(element, index, templateData, height) {\r\n        for (let i = 0; i < this.columns.length; i++) {\r\n            const renderer = this.renderers[i];\r\n            if (renderer.disposeElement) {\r\n                const column = this.columns[i];\r\n                const cell = column.project(element);\r\n                renderer.disposeElement(cell, index, templateData.cellTemplateData[i], height);\r\n            }\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        for (let i = 0; i < this.columns.length; i++) {\r\n            const renderer = this.renderers[i];\r\n            renderer.disposeTemplate(templateData.cellTemplateData[i]);\r\n        }\r\n        clearNode(templateData.container);\r\n        this.renderedTemplates.delete(templateData);\r\n    }\r\n    layoutColumn(index, size) {\r\n        for (const { cellContainers } of this.renderedTemplates) {\r\n            cellContainers[index].style.width = `${size}px`;\r\n        }\r\n    }\r\n}\r\nTableListRenderer.TemplateId = 'row';\r\nfunction asListVirtualDelegate(delegate) {\r\n    return {\r\n        getHeight(row) { return delegate.getHeight(row); },\r\n        getTemplateId() { return TableListRenderer.TemplateId; },\r\n    };\r\n}\r\nclass ColumnHeader {\r\n    constructor(column, index) {\r\n        this.column = column;\r\n        this.index = index;\r\n        this._onDidLayout = new Emitter();\r\n        this.onDidLayout = this._onDidLayout.event;\r\n        this.element = $('.monaco-table-th', { 'data-col-index': index, title: column.tooltip }, column.label);\r\n    }\r\n    get minimumSize() { var _a; return (_a = this.column.minimumWidth) !== null && _a !== void 0 ? _a : 120; }\r\n    get maximumSize() { var _a; return (_a = this.column.maximumWidth) !== null && _a !== void 0 ? _a : Number.POSITIVE_INFINITY; }\r\n    get onDidChange() { var _a; return (_a = this.column.onDidChangeWidthConstraints) !== null && _a !== void 0 ? _a : Event.None; }\r\n    layout(size) {\r\n        this._onDidLayout.fire([this.index, size]);\r\n    }\r\n}\r\nexport class Table {\r\n    constructor(user, container, virtualDelegate, columns, renderers, _options) {\r\n        this.virtualDelegate = virtualDelegate;\r\n        this.domId = `table_id_${++Table.InstanceCount}`;\r\n        this.cachedHeight = 0;\r\n        this.domNode = append(container, $(`.monaco-table.${this.domId}`));\r\n        const headers = columns.map((c, i) => new ColumnHeader(c, i));\r\n        const descriptor = {\r\n            size: headers.reduce((a, b) => a + b.column.weight, 0),\r\n            views: headers.map(view => ({ size: view.column.weight, view }))\r\n        };\r\n        this.splitview = new SplitView(this.domNode, {\r\n            orientation: 1 /* HORIZONTAL */,\r\n            scrollbarVisibility: 2 /* Hidden */,\r\n            getSashOrthogonalSize: () => this.cachedHeight,\r\n            descriptor\r\n        });\r\n        this.splitview.el.style.height = `${virtualDelegate.headerRowHeight}px`;\r\n        this.splitview.el.style.lineHeight = `${virtualDelegate.headerRowHeight}px`;\r\n        const renderer = new TableListRenderer(columns, renderers, i => this.splitview.getViewSize(i));\r\n        this.list = new List(user, this.domNode, asListVirtualDelegate(virtualDelegate), [renderer], _options);\r\n        this.columnLayoutDisposable = Event.any(...headers.map(h => h.onDidLayout))(([index, size]) => renderer.layoutColumn(index, size));\r\n        this.styleElement = createStyleSheet(this.domNode);\r\n        this.style({});\r\n    }\r\n    get onDidChangeFocus() { return this.list.onDidChangeFocus; }\r\n    get onDidChangeSelection() { return this.list.onDidChangeSelection; }\r\n    get onMouseDblClick() { return this.list.onMouseDblClick; }\r\n    get onPointer() { return this.list.onPointer; }\r\n    get onDidFocus() { return this.list.onDidFocus; }\r\n    get onDidDispose() { return this.list.onDidDispose; }\r\n    updateOptions(options) {\r\n        this.list.updateOptions(options);\r\n    }\r\n    splice(start, deleteCount, elements = []) {\r\n        this.list.splice(start, deleteCount, elements);\r\n    }\r\n    getHTMLElement() {\r\n        return this.domNode;\r\n    }\r\n    style(styles) {\r\n        const content = [];\r\n        content.push(`.monaco-table.${this.domId} > .monaco-split-view2 .monaco-sash.vertical::before {\n\t\t\ttop: ${this.virtualDelegate.headerRowHeight + 1}px;\n\t\t\theight: calc(100% - ${this.virtualDelegate.headerRowHeight}px);\n\t\t}`);\r\n        this.styleElement.textContent = content.join('\\n');\r\n        this.list.style(styles);\r\n    }\r\n    getSelectedElements() {\r\n        return this.list.getSelectedElements();\r\n    }\r\n    getSelection() {\r\n        return this.list.getSelection();\r\n    }\r\n    getFocus() {\r\n        return this.list.getFocus();\r\n    }\r\n    dispose() {\r\n        this.splitview.dispose();\r\n        this.list.dispose();\r\n        this.columnLayoutDisposable.dispose();\r\n    }\r\n}\r\nTable.InstanceCount = 0;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './splitview.css';\r\nimport { toDisposable, Disposable, combinedDisposable } from '../../../common/lifecycle.js';\r\nimport { Event, Emitter } from '../../../common/event.js';\r\nimport * as types from '../../../common/types.js';\r\nimport { clamp } from '../../../common/numbers.js';\r\nimport { range, pushToStart, pushToEnd } from '../../../common/arrays.js';\r\nimport { Sash } from '../sash/sash.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { $, addDisposableListener, append, scheduleAtNextAnimationFrame } from '../../dom.js';\r\nimport { SmoothScrollableElement } from '../scrollbar/scrollableElement.js';\r\nimport { Scrollable } from '../../../common/scrollable.js';\r\nconst defaultStyles = {\r\n    separatorBorder: Color.transparent\r\n};\r\nclass ViewItem {\r\n    constructor(container, view, size, disposable) {\r\n        this.container = container;\r\n        this.view = view;\r\n        this.disposable = disposable;\r\n        this._cachedVisibleSize = undefined;\r\n        if (typeof size === 'number') {\r\n            this._size = size;\r\n            this._cachedVisibleSize = undefined;\r\n            container.classList.add('visible');\r\n        }\r\n        else {\r\n            this._size = 0;\r\n            this._cachedVisibleSize = size.cachedVisibleSize;\r\n        }\r\n    }\r\n    set size(size) {\r\n        this._size = size;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    get visible() {\r\n        return typeof this._cachedVisibleSize === 'undefined';\r\n    }\r\n    setVisible(visible, size) {\r\n        if (visible === this.visible) {\r\n            return;\r\n        }\r\n        if (visible) {\r\n            this.size = clamp(this._cachedVisibleSize, this.viewMinimumSize, this.viewMaximumSize);\r\n            this._cachedVisibleSize = undefined;\r\n        }\r\n        else {\r\n            this._cachedVisibleSize = typeof size === 'number' ? size : this.size;\r\n            this.size = 0;\r\n        }\r\n        this.container.classList.toggle('visible', visible);\r\n        if (this.view.setVisible) {\r\n            this.view.setVisible(visible);\r\n        }\r\n    }\r\n    get minimumSize() { return this.visible ? this.view.minimumSize : 0; }\r\n    get viewMinimumSize() { return this.view.minimumSize; }\r\n    get maximumSize() { return this.visible ? this.view.maximumSize : 0; }\r\n    get viewMaximumSize() { return this.view.maximumSize; }\r\n    get priority() { return this.view.priority; }\r\n    get snap() { return !!this.view.snap; }\r\n    set enabled(enabled) {\r\n        this.container.style.pointerEvents = enabled ? '' : 'none';\r\n    }\r\n    layout(offset, layoutContext) {\r\n        this.layoutContainer(offset);\r\n        this.view.layout(this.size, offset, layoutContext);\r\n    }\r\n    dispose() {\r\n        this.disposable.dispose();\r\n        return this.view;\r\n    }\r\n}\r\nclass VerticalViewItem extends ViewItem {\r\n    layoutContainer(offset) {\r\n        this.container.style.top = `${offset}px`;\r\n        this.container.style.height = `${this.size}px`;\r\n    }\r\n}\r\nclass HorizontalViewItem extends ViewItem {\r\n    layoutContainer(offset) {\r\n        this.container.style.left = `${offset}px`;\r\n        this.container.style.width = `${this.size}px`;\r\n    }\r\n}\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Idle\"] = 0] = \"Idle\";\r\n    State[State[\"Busy\"] = 1] = \"Busy\";\r\n})(State || (State = {}));\r\nexport var Sizing;\r\n(function (Sizing) {\r\n    Sizing.Distribute = { type: 'distribute' };\r\n    function Split(index) { return { type: 'split', index }; }\r\n    Sizing.Split = Split;\r\n    function Invisible(cachedVisibleSize) { return { type: 'invisible', cachedVisibleSize }; }\r\n    Sizing.Invisible = Invisible;\r\n})(Sizing || (Sizing = {}));\r\nexport class SplitView extends Disposable {\r\n    constructor(container, options = {}) {\r\n        var _a, _b;\r\n        super();\r\n        this.size = 0;\r\n        this.contentSize = 0;\r\n        this.proportions = undefined;\r\n        this.viewItems = [];\r\n        this.sashItems = [];\r\n        this.state = State.Idle;\r\n        this._onDidSashChange = this._register(new Emitter());\r\n        this.onDidSashChange = this._onDidSashChange.event;\r\n        this._onDidSashReset = this._register(new Emitter());\r\n        this._startSnappingEnabled = true;\r\n        this._endSnappingEnabled = true;\r\n        this.orientation = types.isUndefined(options.orientation) ? 0 /* VERTICAL */ : options.orientation;\r\n        this.inverseAltBehavior = !!options.inverseAltBehavior;\r\n        this.proportionalLayout = types.isUndefined(options.proportionalLayout) ? true : !!options.proportionalLayout;\r\n        this.getSashOrthogonalSize = options.getSashOrthogonalSize;\r\n        this.el = document.createElement('div');\r\n        this.el.classList.add('monaco-split-view2');\r\n        this.el.classList.add(this.orientation === 0 /* VERTICAL */ ? 'vertical' : 'horizontal');\r\n        container.appendChild(this.el);\r\n        this.sashContainer = append(this.el, $('.sash-container'));\r\n        this.viewContainer = $('.split-view-container');\r\n        this.scrollable = new Scrollable(125, scheduleAtNextAnimationFrame);\r\n        this.scrollableElement = this._register(new SmoothScrollableElement(this.viewContainer, {\r\n            vertical: this.orientation === 0 /* VERTICAL */ ? ((_a = options.scrollbarVisibility) !== null && _a !== void 0 ? _a : 1 /* Auto */) : 2 /* Hidden */,\r\n            horizontal: this.orientation === 1 /* HORIZONTAL */ ? ((_b = options.scrollbarVisibility) !== null && _b !== void 0 ? _b : 1 /* Auto */) : 2 /* Hidden */\r\n        }, this.scrollable));\r\n        this.onDidScroll = this.scrollableElement.onScroll;\r\n        this._register(this.onDidScroll(e => {\r\n            this.viewContainer.scrollTop = e.scrollTop;\r\n            this.viewContainer.scrollLeft = e.scrollLeft;\r\n        }));\r\n        append(this.el, this.scrollableElement.getDomNode());\r\n        this.style(options.styles || defaultStyles);\r\n        // We have an existing set of view, add them now\r\n        if (options.descriptor) {\r\n            this.size = options.descriptor.size;\r\n            options.descriptor.views.forEach((viewDescriptor, index) => {\r\n                const sizing = types.isUndefined(viewDescriptor.visible) || viewDescriptor.visible ? viewDescriptor.size : { type: 'invisible', cachedVisibleSize: viewDescriptor.size };\r\n                const view = viewDescriptor.view;\r\n                this.doAddView(view, sizing, index, true);\r\n            });\r\n            // Initialize content size and proportions for first layout\r\n            this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\r\n            this.saveProportions();\r\n        }\r\n    }\r\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\r\n    set orthogonalStartSash(sash) {\r\n        for (const sashItem of this.sashItems) {\r\n            sashItem.sash.orthogonalStartSash = sash;\r\n        }\r\n        this._orthogonalStartSash = sash;\r\n    }\r\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\r\n    set orthogonalEndSash(sash) {\r\n        for (const sashItem of this.sashItems) {\r\n            sashItem.sash.orthogonalEndSash = sash;\r\n        }\r\n        this._orthogonalEndSash = sash;\r\n    }\r\n    get startSnappingEnabled() { return this._startSnappingEnabled; }\r\n    set startSnappingEnabled(startSnappingEnabled) {\r\n        if (this._startSnappingEnabled === startSnappingEnabled) {\r\n            return;\r\n        }\r\n        this._startSnappingEnabled = startSnappingEnabled;\r\n        this.updateSashEnablement();\r\n    }\r\n    get endSnappingEnabled() { return this._endSnappingEnabled; }\r\n    set endSnappingEnabled(endSnappingEnabled) {\r\n        if (this._endSnappingEnabled === endSnappingEnabled) {\r\n            return;\r\n        }\r\n        this._endSnappingEnabled = endSnappingEnabled;\r\n        this.updateSashEnablement();\r\n    }\r\n    style(styles) {\r\n        if (styles.separatorBorder.isTransparent()) {\r\n            this.el.classList.remove('separator-border');\r\n            this.el.style.removeProperty('--separator-border');\r\n        }\r\n        else {\r\n            this.el.classList.add('separator-border');\r\n            this.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\r\n        }\r\n    }\r\n    addView(view, size, index = this.viewItems.length, skipLayout) {\r\n        this.doAddView(view, size, index, skipLayout);\r\n    }\r\n    layout(size, layoutContext) {\r\n        const previousSize = Math.max(this.size, this.contentSize);\r\n        this.size = size;\r\n        this.layoutContext = layoutContext;\r\n        if (!this.proportions) {\r\n            const indexes = range(this.viewItems.length);\r\n            const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* Low */);\r\n            const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* High */);\r\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\r\n        }\r\n        else {\r\n            for (let i = 0; i < this.viewItems.length; i++) {\r\n                const item = this.viewItems[i];\r\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\r\n            }\r\n        }\r\n        this.distributeEmptySpace();\r\n        this.layoutViews();\r\n    }\r\n    saveProportions() {\r\n        if (this.proportionalLayout && this.contentSize > 0) {\r\n            this.proportions = this.viewItems.map(i => i.size / this.contentSize);\r\n        }\r\n    }\r\n    onSashStart({ sash, start, alt }) {\r\n        for (const item of this.viewItems) {\r\n            item.enabled = false;\r\n        }\r\n        const index = this.sashItems.findIndex(item => item.sash === sash);\r\n        // This way, we can press Alt while we resize a sash, macOS style!\r\n        const disposable = combinedDisposable(addDisposableListener(document.body, 'keydown', e => resetSashDragState(this.sashDragState.current, e.altKey)), addDisposableListener(document.body, 'keyup', () => resetSashDragState(this.sashDragState.current, false)));\r\n        const resetSashDragState = (start, alt) => {\r\n            const sizes = this.viewItems.map(i => i.size);\r\n            let minDelta = Number.NEGATIVE_INFINITY;\r\n            let maxDelta = Number.POSITIVE_INFINITY;\r\n            if (this.inverseAltBehavior) {\r\n                alt = !alt;\r\n            }\r\n            if (alt) {\r\n                // When we're using the last sash with Alt, we're resizing\r\n                // the view to the left/up, instead of right/down as usual\r\n                // Thus, we must do the inverse of the usual\r\n                const isLastSash = index === this.sashItems.length - 1;\r\n                if (isLastSash) {\r\n                    const viewItem = this.viewItems[index];\r\n                    minDelta = (viewItem.minimumSize - viewItem.size) / 2;\r\n                    maxDelta = (viewItem.maximumSize - viewItem.size) / 2;\r\n                }\r\n                else {\r\n                    const viewItem = this.viewItems[index + 1];\r\n                    minDelta = (viewItem.size - viewItem.maximumSize) / 2;\r\n                    maxDelta = (viewItem.size - viewItem.minimumSize) / 2;\r\n                }\r\n            }\r\n            let snapBefore;\r\n            let snapAfter;\r\n            if (!alt) {\r\n                const upIndexes = range(index, -1);\r\n                const downIndexes = range(index + 1, this.viewItems.length);\r\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\r\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\r\n                const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\r\n                const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].viewMaximumSize), 0);\r\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\r\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\r\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\r\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\r\n                if (typeof snapBeforeIndex === 'number') {\r\n                    const viewItem = this.viewItems[snapBeforeIndex];\r\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\r\n                    snapBefore = {\r\n                        index: snapBeforeIndex,\r\n                        limitDelta: viewItem.visible ? minDelta - halfSize : minDelta + halfSize,\r\n                        size: viewItem.size\r\n                    };\r\n                }\r\n                if (typeof snapAfterIndex === 'number') {\r\n                    const viewItem = this.viewItems[snapAfterIndex];\r\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\r\n                    snapAfter = {\r\n                        index: snapAfterIndex,\r\n                        limitDelta: viewItem.visible ? maxDelta + halfSize : maxDelta - halfSize,\r\n                        size: viewItem.size\r\n                    };\r\n                }\r\n            }\r\n            this.sashDragState = { start, current: start, index, sizes, minDelta, maxDelta, alt, snapBefore, snapAfter, disposable };\r\n        };\r\n        resetSashDragState(start, alt);\r\n    }\r\n    onSashChange({ current }) {\r\n        const { index, start, sizes, alt, minDelta, maxDelta, snapBefore, snapAfter } = this.sashDragState;\r\n        this.sashDragState.current = current;\r\n        const delta = current - start;\r\n        const newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\r\n        if (alt) {\r\n            const isLastSash = index === this.sashItems.length - 1;\r\n            const newSizes = this.viewItems.map(i => i.size);\r\n            const viewItemIndex = isLastSash ? index : index + 1;\r\n            const viewItem = this.viewItems[viewItemIndex];\r\n            const newMinDelta = viewItem.size - viewItem.maximumSize;\r\n            const newMaxDelta = viewItem.size - viewItem.minimumSize;\r\n            const resizeIndex = isLastSash ? index - 1 : index + 1;\r\n            this.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\r\n        }\r\n        this.distributeEmptySpace();\r\n        this.layoutViews();\r\n    }\r\n    onSashEnd(index) {\r\n        this._onDidSashChange.fire(index);\r\n        this.sashDragState.disposable.dispose();\r\n        this.saveProportions();\r\n        for (const item of this.viewItems) {\r\n            item.enabled = true;\r\n        }\r\n    }\r\n    onViewChange(item, size) {\r\n        const index = this.viewItems.indexOf(item);\r\n        if (index < 0 || index >= this.viewItems.length) {\r\n            return;\r\n        }\r\n        size = typeof size === 'number' ? size : item.size;\r\n        size = clamp(size, item.minimumSize, item.maximumSize);\r\n        if (this.inverseAltBehavior && index > 0) {\r\n            // In this case, we want the view to grow or shrink both sides equally\r\n            // so we just resize the \"left\" side by half and let `resize` do the clamping magic\r\n            this.resize(index - 1, Math.floor((item.size - size) / 2));\r\n            this.distributeEmptySpace();\r\n            this.layoutViews();\r\n        }\r\n        else {\r\n            item.size = size;\r\n            this.relayout([index], undefined);\r\n        }\r\n    }\r\n    resizeView(index, size) {\r\n        if (this.state !== State.Idle) {\r\n            throw new Error('Cant modify splitview');\r\n        }\r\n        this.state = State.Busy;\r\n        if (index < 0 || index >= this.viewItems.length) {\r\n            return;\r\n        }\r\n        const indexes = range(this.viewItems.length).filter(i => i !== index);\r\n        const lowPriorityIndexes = [...indexes.filter(i => this.viewItems[i].priority === 1 /* Low */), index];\r\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* High */);\r\n        const item = this.viewItems[index];\r\n        size = Math.round(size);\r\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this.size));\r\n        item.size = size;\r\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\r\n        this.state = State.Idle;\r\n    }\r\n    distributeViewSizes() {\r\n        const flexibleViewItems = [];\r\n        let flexibleSize = 0;\r\n        for (const item of this.viewItems) {\r\n            if (item.maximumSize - item.minimumSize > 0) {\r\n                flexibleViewItems.push(item);\r\n                flexibleSize += item.size;\r\n            }\r\n        }\r\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\r\n        for (const item of flexibleViewItems) {\r\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\r\n        }\r\n        const indexes = range(this.viewItems.length);\r\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* Low */);\r\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* High */);\r\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\r\n    }\r\n    getViewSize(index) {\r\n        if (index < 0 || index >= this.viewItems.length) {\r\n            return -1;\r\n        }\r\n        return this.viewItems[index].size;\r\n    }\r\n    doAddView(view, size, index = this.viewItems.length, skipLayout) {\r\n        if (this.state !== State.Idle) {\r\n            throw new Error('Cant modify splitview');\r\n        }\r\n        this.state = State.Busy;\r\n        // Add view\r\n        const container = $('.split-view-view');\r\n        if (index === this.viewItems.length) {\r\n            this.viewContainer.appendChild(container);\r\n        }\r\n        else {\r\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\r\n        }\r\n        const onChangeDisposable = view.onDidChange(size => this.onViewChange(item, size));\r\n        const containerDisposable = toDisposable(() => this.viewContainer.removeChild(container));\r\n        const disposable = combinedDisposable(onChangeDisposable, containerDisposable);\r\n        let viewSize;\r\n        if (typeof size === 'number') {\r\n            viewSize = size;\r\n        }\r\n        else if (size.type === 'split') {\r\n            viewSize = this.getViewSize(size.index) / 2;\r\n        }\r\n        else if (size.type === 'invisible') {\r\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\r\n        }\r\n        else {\r\n            viewSize = view.minimumSize;\r\n        }\r\n        const item = this.orientation === 0 /* VERTICAL */\r\n            ? new VerticalViewItem(container, view, viewSize, disposable)\r\n            : new HorizontalViewItem(container, view, viewSize, disposable);\r\n        this.viewItems.splice(index, 0, item);\r\n        // Add sash\r\n        if (this.viewItems.length > 1) {\r\n            let opts = { orthogonalStartSash: this.orthogonalStartSash, orthogonalEndSash: this.orthogonalEndSash };\r\n            const sash = this.orientation === 0 /* VERTICAL */\r\n                ? new Sash(this.sashContainer, { getHorizontalSashTop: s => this.getSashPosition(s), getHorizontalSashWidth: this.getSashOrthogonalSize }, Object.assign(Object.assign({}, opts), { orientation: 1 /* HORIZONTAL */ }))\r\n                : new Sash(this.sashContainer, { getVerticalSashLeft: s => this.getSashPosition(s), getVerticalSashHeight: this.getSashOrthogonalSize }, Object.assign(Object.assign({}, opts), { orientation: 0 /* VERTICAL */ }));\r\n            const sashEventMapper = this.orientation === 0 /* VERTICAL */\r\n                ? (e) => ({ sash, start: e.startY, current: e.currentY, alt: e.altKey })\r\n                : (e) => ({ sash, start: e.startX, current: e.currentX, alt: e.altKey });\r\n            const onStart = Event.map(sash.onDidStart, sashEventMapper);\r\n            const onStartDisposable = onStart(this.onSashStart, this);\r\n            const onChange = Event.map(sash.onDidChange, sashEventMapper);\r\n            const onChangeDisposable = onChange(this.onSashChange, this);\r\n            const onEnd = Event.map(sash.onDidEnd, () => this.sashItems.findIndex(item => item.sash === sash));\r\n            const onEndDisposable = onEnd(this.onSashEnd, this);\r\n            const onDidResetDisposable = sash.onDidReset(() => {\r\n                const index = this.sashItems.findIndex(item => item.sash === sash);\r\n                const upIndexes = range(index, -1);\r\n                const downIndexes = range(index + 1, this.viewItems.length);\r\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\r\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\r\n                if (typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible) {\r\n                    return;\r\n                }\r\n                if (typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible) {\r\n                    return;\r\n                }\r\n                this._onDidSashReset.fire(index);\r\n            });\r\n            const disposable = combinedDisposable(onStartDisposable, onChangeDisposable, onEndDisposable, onDidResetDisposable, sash);\r\n            const sashItem = { sash, disposable };\r\n            this.sashItems.splice(index - 1, 0, sashItem);\r\n        }\r\n        container.appendChild(view.element);\r\n        let highPriorityIndexes;\r\n        if (typeof size !== 'number' && size.type === 'split') {\r\n            highPriorityIndexes = [size.index];\r\n        }\r\n        if (!skipLayout) {\r\n            this.relayout([index], highPriorityIndexes);\r\n        }\r\n        this.state = State.Idle;\r\n        if (!skipLayout && typeof size !== 'number' && size.type === 'distribute') {\r\n            this.distributeViewSizes();\r\n        }\r\n    }\r\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\r\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\r\n        this.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\r\n        this.distributeEmptySpace();\r\n        this.layoutViews();\r\n        this.saveProportions();\r\n    }\r\n    resize(index, delta, sizes = this.viewItems.map(i => i.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) {\r\n        if (index < 0 || index >= this.viewItems.length) {\r\n            return 0;\r\n        }\r\n        const upIndexes = range(index, -1);\r\n        const downIndexes = range(index + 1, this.viewItems.length);\r\n        if (highPriorityIndexes) {\r\n            for (const index of highPriorityIndexes) {\r\n                pushToStart(upIndexes, index);\r\n                pushToStart(downIndexes, index);\r\n            }\r\n        }\r\n        if (lowPriorityIndexes) {\r\n            for (const index of lowPriorityIndexes) {\r\n                pushToEnd(upIndexes, index);\r\n                pushToEnd(downIndexes, index);\r\n            }\r\n        }\r\n        const upItems = upIndexes.map(i => this.viewItems[i]);\r\n        const upSizes = upIndexes.map(i => sizes[i]);\r\n        const downItems = downIndexes.map(i => this.viewItems[i]);\r\n        const downSizes = downIndexes.map(i => sizes[i]);\r\n        const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\r\n        const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].maximumSize - sizes[i]), 0);\r\n        const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\r\n        const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].maximumSize), 0);\r\n        const minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\r\n        const maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\r\n        let snapped = false;\r\n        if (snapBefore) {\r\n            const snapView = this.viewItems[snapBefore.index];\r\n            const visible = delta >= snapBefore.limitDelta;\r\n            snapped = visible !== snapView.visible;\r\n            snapView.setVisible(visible, snapBefore.size);\r\n        }\r\n        if (!snapped && snapAfter) {\r\n            const snapView = this.viewItems[snapAfter.index];\r\n            const visible = delta < snapAfter.limitDelta;\r\n            snapped = visible !== snapView.visible;\r\n            snapView.setVisible(visible, snapAfter.size);\r\n        }\r\n        if (snapped) {\r\n            return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\r\n        }\r\n        delta = clamp(delta, minDelta, maxDelta);\r\n        for (let i = 0, deltaUp = delta; i < upItems.length; i++) {\r\n            const item = upItems[i];\r\n            const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\r\n            const viewDelta = size - upSizes[i];\r\n            deltaUp -= viewDelta;\r\n            item.size = size;\r\n        }\r\n        for (let i = 0, deltaDown = delta; i < downItems.length; i++) {\r\n            const item = downItems[i];\r\n            const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\r\n            const viewDelta = size - downSizes[i];\r\n            deltaDown += viewDelta;\r\n            item.size = size;\r\n        }\r\n        return delta;\r\n    }\r\n    distributeEmptySpace(lowPriorityIndex) {\r\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\r\n        let emptyDelta = this.size - contentSize;\r\n        const indexes = range(this.viewItems.length - 1, -1);\r\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* Low */);\r\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* High */);\r\n        for (const index of highPriorityIndexes) {\r\n            pushToStart(indexes, index);\r\n        }\r\n        for (const index of lowPriorityIndexes) {\r\n            pushToEnd(indexes, index);\r\n        }\r\n        if (typeof lowPriorityIndex === 'number') {\r\n            pushToEnd(indexes, lowPriorityIndex);\r\n        }\r\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\r\n            const item = this.viewItems[indexes[i]];\r\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\r\n            const viewDelta = size - item.size;\r\n            emptyDelta -= viewDelta;\r\n            item.size = size;\r\n        }\r\n    }\r\n    layoutViews() {\r\n        // Save new content size\r\n        this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\r\n        // Layout views\r\n        let offset = 0;\r\n        for (const viewItem of this.viewItems) {\r\n            viewItem.layout(offset, this.layoutContext);\r\n            offset += viewItem.size;\r\n        }\r\n        // Layout sashes\r\n        this.sashItems.forEach(item => item.sash.layout());\r\n        this.updateSashEnablement();\r\n        this.updateScrollableElement();\r\n    }\r\n    updateScrollableElement() {\r\n        if (this.orientation === 0 /* VERTICAL */) {\r\n            this.scrollableElement.setScrollDimensions({\r\n                height: this.size,\r\n                scrollHeight: this.contentSize\r\n            });\r\n        }\r\n        else {\r\n            this.scrollableElement.setScrollDimensions({\r\n                width: this.size,\r\n                scrollWidth: this.contentSize\r\n            });\r\n        }\r\n    }\r\n    updateSashEnablement() {\r\n        let previous = false;\r\n        const collapsesDown = this.viewItems.map(i => previous = (i.size - i.minimumSize > 0) || previous);\r\n        previous = false;\r\n        const expandsDown = this.viewItems.map(i => previous = (i.maximumSize - i.size > 0) || previous);\r\n        const reverseViews = [...this.viewItems].reverse();\r\n        previous = false;\r\n        const collapsesUp = reverseViews.map(i => previous = (i.size - i.minimumSize > 0) || previous).reverse();\r\n        previous = false;\r\n        const expandsUp = reverseViews.map(i => previous = (i.maximumSize - i.size > 0) || previous).reverse();\r\n        let position = 0;\r\n        for (let index = 0; index < this.sashItems.length; index++) {\r\n            const { sash } = this.sashItems[index];\r\n            const viewItem = this.viewItems[index];\r\n            position += viewItem.size;\r\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\r\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\r\n            if (min && max) {\r\n                const upIndexes = range(index, -1);\r\n                const downIndexes = range(index + 1, this.viewItems.length);\r\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\r\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\r\n                const snappedBefore = typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible;\r\n                const snappedAfter = typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible;\r\n                if (snappedBefore && collapsesUp[index] && (position > 0 || this.startSnappingEnabled)) {\r\n                    sash.state = 1 /* Minimum */;\r\n                }\r\n                else if (snappedAfter && collapsesDown[index] && (position < this.contentSize || this.endSnappingEnabled)) {\r\n                    sash.state = 2 /* Maximum */;\r\n                }\r\n                else {\r\n                    sash.state = 0 /* Disabled */;\r\n                }\r\n            }\r\n            else if (min && !max) {\r\n                sash.state = 1 /* Minimum */;\r\n            }\r\n            else if (!min && max) {\r\n                sash.state = 2 /* Maximum */;\r\n            }\r\n            else {\r\n                sash.state = 3 /* Enabled */;\r\n            }\r\n        }\r\n    }\r\n    getSashPosition(sash) {\r\n        let position = 0;\r\n        for (let i = 0; i < this.sashItems.length; i++) {\r\n            position += this.viewItems[i].size;\r\n            if (this.sashItems[i].sash === sash) {\r\n                return position;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    findFirstSnapIndex(indexes) {\r\n        // visible views first\r\n        for (const index of indexes) {\r\n            const viewItem = this.viewItems[index];\r\n            if (!viewItem.visible) {\r\n                continue;\r\n            }\r\n            if (viewItem.snap) {\r\n                return index;\r\n            }\r\n        }\r\n        // then, hidden views\r\n        for (const index of indexes) {\r\n            const viewItem = this.viewItems[index];\r\n            if (viewItem.visible && viewItem.maximumSize - viewItem.minimumSize > 0) {\r\n                return undefined;\r\n            }\r\n            if (!viewItem.visible && viewItem.snap) {\r\n                return index;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.viewItems.forEach(i => i.dispose());\r\n        this.viewItems = [];\r\n        this.sashItems.forEach(i => i.disposable.dispose());\r\n        this.sashItems = [];\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { createStyleSheet } from '../../../base/browser/dom.js';\r\nimport { PagedList } from '../../../base/browser/ui/list/listPaging.js';\r\nimport { DefaultStyleController, isSelectionRangeChangeEvent, isSelectionSingleChangeEvent, List } from '../../../base/browser/ui/list/listWidget.js';\r\nimport { Emitter, Event } from '../../../base/common/event.js';\r\nimport { Disposable, dispose, toDisposable, DisposableStore, combinedDisposable } from '../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\r\nimport { Extensions as ConfigurationExtensions } from '../../configuration/common/configurationRegistry.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { Registry } from '../../registry/common/platform.js';\r\nimport { attachListStyler, computeStyles, defaultListStyles } from '../../theme/common/styler.js';\r\nimport { IThemeService } from '../../theme/common/themeService.js';\r\nimport { InputFocusedContextKey } from '../../contextkey/common/contextkeys.js';\r\nimport { ObjectTree, CompressibleObjectTree } from '../../../base/browser/ui/tree/objectTree.js';\r\nimport { AsyncDataTree, CompressibleAsyncDataTree } from '../../../base/browser/ui/tree/asyncDataTree.js';\r\nimport { DataTree } from '../../../base/browser/ui/tree/dataTree.js';\r\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\r\nimport { Table } from '../../../base/browser/ui/table/tableWidget.js';\r\nexport const IListService = createDecorator('listService');\r\nlet ListService = class ListService {\r\n    constructor(_themeService) {\r\n        this._themeService = _themeService;\r\n        this.disposables = new DisposableStore();\r\n        this.lists = [];\r\n        this._lastFocusedWidget = undefined;\r\n        this._hasCreatedStyleController = false;\r\n    }\r\n    get lastFocusedList() {\r\n        return this._lastFocusedWidget;\r\n    }\r\n    register(widget, extraContextKeys) {\r\n        if (!this._hasCreatedStyleController) {\r\n            this._hasCreatedStyleController = true;\r\n            // create a shared default tree style sheet for performance reasons\r\n            const styleController = new DefaultStyleController(createStyleSheet(), '');\r\n            this.disposables.add(attachListStyler(styleController, this._themeService));\r\n        }\r\n        if (this.lists.some(l => l.widget === widget)) {\r\n            throw new Error('Cannot register the same widget multiple times');\r\n        }\r\n        // Keep in our lists list\r\n        const registeredList = { widget, extraContextKeys };\r\n        this.lists.push(registeredList);\r\n        // Check for currently being focused\r\n        if (widget.getHTMLElement() === document.activeElement) {\r\n            this._lastFocusedWidget = widget;\r\n        }\r\n        return combinedDisposable(widget.onDidFocus(() => this._lastFocusedWidget = widget), toDisposable(() => this.lists.splice(this.lists.indexOf(registeredList), 1)), widget.onDidDispose(() => {\r\n            this.lists = this.lists.filter(l => l !== registeredList);\r\n            if (this._lastFocusedWidget === widget) {\r\n                this._lastFocusedWidget = undefined;\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this.disposables.dispose();\r\n    }\r\n};\r\nListService = __decorate([\r\n    __param(0, IThemeService)\r\n], ListService);\r\nexport { ListService };\r\nconst RawWorkbenchListFocusContextKey = new RawContextKey('listFocus', true);\r\nexport const WorkbenchListSupportsMultiSelectContextKey = new RawContextKey('listSupportsMultiselect', true);\r\nexport const WorkbenchListFocusContextKey = ContextKeyExpr.and(RawWorkbenchListFocusContextKey, ContextKeyExpr.not(InputFocusedContextKey));\r\nexport const WorkbenchListHasSelectionOrFocus = new RawContextKey('listHasSelectionOrFocus', false);\r\nexport const WorkbenchListDoubleSelection = new RawContextKey('listDoubleSelection', false);\r\nexport const WorkbenchListMultiSelection = new RawContextKey('listMultiSelection', false);\r\nexport const WorkbenchListSelectionNavigation = new RawContextKey('listSelectionNavigation', false);\r\nexport const WorkbenchListAutomaticKeyboardNavigationKey = 'listAutomaticKeyboardNavigation';\r\nfunction createScopedContextKeyService(contextKeyService, widget) {\r\n    const result = contextKeyService.createScoped(widget.getHTMLElement());\r\n    RawWorkbenchListFocusContextKey.bindTo(result);\r\n    return result;\r\n}\r\nconst multiSelectModifierSettingKey = 'workbench.list.multiSelectModifier';\r\nconst openModeSettingKey = 'workbench.list.openMode';\r\nconst horizontalScrollingKey = 'workbench.list.horizontalScrolling';\r\nconst keyboardNavigationSettingKey = 'workbench.list.keyboardNavigation';\r\nconst automaticKeyboardNavigationSettingKey = 'workbench.list.automaticKeyboardNavigation';\r\nconst treeIndentKey = 'workbench.tree.indent';\r\nconst treeRenderIndentGuidesKey = 'workbench.tree.renderIndentGuides';\r\nconst listSmoothScrolling = 'workbench.list.smoothScrolling';\r\nconst mouseWheelScrollSensitivityKey = 'workbench.list.mouseWheelScrollSensitivity';\r\nconst fastScrollSensitivityKey = 'workbench.list.fastScrollSensitivity';\r\nconst treeExpandMode = 'workbench.tree.expandMode';\r\nfunction useAltAsMultipleSelectionModifier(configurationService) {\r\n    return configurationService.getValue(multiSelectModifierSettingKey) === 'alt';\r\n}\r\nclass MultipleSelectionController extends Disposable {\r\n    constructor(configurationService) {\r\n        super();\r\n        this.configurationService = configurationService;\r\n        this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        this.registerListeners();\r\n    }\r\n    registerListeners() {\r\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(this.configurationService);\r\n            }\r\n        }));\r\n    }\r\n    isSelectionSingleChangeEvent(event) {\r\n        if (this.useAltAsMultipleSelectionModifier) {\r\n            return event.browserEvent.altKey;\r\n        }\r\n        return isSelectionSingleChangeEvent(event);\r\n    }\r\n    isSelectionRangeChangeEvent(event) {\r\n        return isSelectionRangeChangeEvent(event);\r\n    }\r\n}\r\nfunction toWorkbenchListOptions(options, configurationService, keybindingService) {\r\n    var _a;\r\n    const disposables = new DisposableStore();\r\n    const result = Object.assign(Object.assign({}, options), { keyboardNavigationDelegate: { mightProducePrintableCharacter(e) { return keybindingService.mightProducePrintableCharacter(e); } }, smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)), mouseWheelScrollSensitivity: configurationService.getValue(mouseWheelScrollSensitivityKey), fastScrollSensitivity: configurationService.getValue(fastScrollSensitivityKey), multipleSelectionController: (_a = options.multipleSelectionController) !== null && _a !== void 0 ? _a : disposables.add(new MultipleSelectionController(configurationService)) });\r\n    return [result, disposables];\r\n}\r\nlet WorkbenchList = class WorkbenchList extends List {\r\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService) {\r\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\r\n        const [workbenchListOptions, workbenchListOptionsDisposable] = toWorkbenchListOptions(options, configurationService, keybindingService);\r\n        super(user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\r\n        this.disposables.add(workbenchListOptionsDisposable);\r\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\r\n        this.themeService = themeService;\r\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\r\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\r\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\r\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\r\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\r\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\r\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\r\n        this.horizontalScrolling = options.horizontalScrolling;\r\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        this.disposables.add(this.contextKeyService);\r\n        this.disposables.add(listService.register(this));\r\n        if (options.overrideStyles) {\r\n            this.updateStyles(options.overrideStyles);\r\n        }\r\n        this.disposables.add(this.onDidChangeSelection(() => {\r\n            const selection = this.getSelection();\r\n            const focus = this.getFocus();\r\n            this.contextKeyService.bufferChangeEvents(() => {\r\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n                this.listMultiSelection.set(selection.length > 1);\r\n                this.listDoubleSelection.set(selection.length === 2);\r\n            });\r\n        }));\r\n        this.disposables.add(this.onDidChangeFocus(() => {\r\n            const selection = this.getSelection();\r\n            const focus = this.getFocus();\r\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n        }));\r\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n            }\r\n            let options = {};\r\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\r\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\r\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\r\n            }\r\n            if (e.affectsConfiguration(listSmoothScrolling)) {\r\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\r\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\r\n            }\r\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\r\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\r\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\r\n            }\r\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\r\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\r\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\r\n            }\r\n            if (Object.keys(options).length > 0) {\r\n                this.updateOptions(options);\r\n            }\r\n        }));\r\n        this.navigator = new ListResourceNavigator(this, Object.assign({ configurationService }, options));\r\n        this.disposables.add(this.navigator);\r\n    }\r\n    updateOptions(options) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.updateStyles(options.overrideStyles);\r\n        }\r\n        if (options.multipleSelectionSupport !== undefined) {\r\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\r\n        }\r\n    }\r\n    updateStyles(styles) {\r\n        var _a;\r\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._styler = attachListStyler(this, this.themeService, styles);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        super.dispose();\r\n    }\r\n};\r\nWorkbenchList = __decorate([\r\n    __param(5, IContextKeyService),\r\n    __param(6, IListService),\r\n    __param(7, IThemeService),\r\n    __param(8, IConfigurationService),\r\n    __param(9, IKeybindingService)\r\n], WorkbenchList);\r\nexport { WorkbenchList };\r\nlet WorkbenchPagedList = class WorkbenchPagedList extends PagedList {\r\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService) {\r\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\r\n        const [workbenchListOptions, workbenchListOptionsDisposable] = toWorkbenchListOptions(options, configurationService, keybindingService);\r\n        super(user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\r\n        this.disposables = new DisposableStore();\r\n        this.disposables.add(workbenchListOptionsDisposable);\r\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\r\n        this.themeService = themeService;\r\n        this.horizontalScrolling = options.horizontalScrolling;\r\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\r\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\r\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\r\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\r\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        this.disposables.add(this.contextKeyService);\r\n        this.disposables.add(listService.register(this));\r\n        if (options.overrideStyles) {\r\n            this.updateStyles(options.overrideStyles);\r\n        }\r\n        if (options.overrideStyles) {\r\n            this.disposables.add(attachListStyler(this, themeService, options.overrideStyles));\r\n        }\r\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n            }\r\n            let options = {};\r\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\r\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\r\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\r\n            }\r\n            if (e.affectsConfiguration(listSmoothScrolling)) {\r\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\r\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\r\n            }\r\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\r\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\r\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\r\n            }\r\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\r\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\r\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\r\n            }\r\n            if (Object.keys(options).length > 0) {\r\n                this.updateOptions(options);\r\n            }\r\n        }));\r\n        this.navigator = new ListResourceNavigator(this, Object.assign({ configurationService }, options));\r\n        this.disposables.add(this.navigator);\r\n    }\r\n    updateOptions(options) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.updateStyles(options.overrideStyles);\r\n        }\r\n        if (options.multipleSelectionSupport !== undefined) {\r\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\r\n        }\r\n    }\r\n    updateStyles(styles) {\r\n        var _a;\r\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._styler = attachListStyler(this, this.themeService, styles);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this.disposables.dispose();\r\n        super.dispose();\r\n    }\r\n};\r\nWorkbenchPagedList = __decorate([\r\n    __param(5, IContextKeyService),\r\n    __param(6, IListService),\r\n    __param(7, IThemeService),\r\n    __param(8, IConfigurationService),\r\n    __param(9, IKeybindingService)\r\n], WorkbenchPagedList);\r\nexport { WorkbenchPagedList };\r\nlet WorkbenchTable = class WorkbenchTable extends Table {\r\n    constructor(user, container, delegate, columns, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService) {\r\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\r\n        const [workbenchListOptions, workbenchListOptionsDisposable] = toWorkbenchListOptions(options, configurationService, keybindingService);\r\n        super(user, container, delegate, columns, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\r\n        this.disposables = new DisposableStore();\r\n        this.disposables.add(workbenchListOptionsDisposable);\r\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\r\n        this.themeService = themeService;\r\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\r\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\r\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\r\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\r\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\r\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\r\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\r\n        this.horizontalScrolling = options.horizontalScrolling;\r\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        this.disposables.add(this.contextKeyService);\r\n        this.disposables.add(listService.register(this));\r\n        if (options.overrideStyles) {\r\n            this.updateStyles(options.overrideStyles);\r\n        }\r\n        this.disposables.add(this.onDidChangeSelection(() => {\r\n            const selection = this.getSelection();\r\n            const focus = this.getFocus();\r\n            this.contextKeyService.bufferChangeEvents(() => {\r\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n                this.listMultiSelection.set(selection.length > 1);\r\n                this.listDoubleSelection.set(selection.length === 2);\r\n            });\r\n        }));\r\n        this.disposables.add(this.onDidChangeFocus(() => {\r\n            const selection = this.getSelection();\r\n            const focus = this.getFocus();\r\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n        }));\r\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n            }\r\n            let options = {};\r\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\r\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\r\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\r\n            }\r\n            if (e.affectsConfiguration(listSmoothScrolling)) {\r\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\r\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\r\n            }\r\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\r\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\r\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\r\n            }\r\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\r\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\r\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\r\n            }\r\n            if (Object.keys(options).length > 0) {\r\n                this.updateOptions(options);\r\n            }\r\n        }));\r\n        this.navigator = new TableResourceNavigator(this, Object.assign({ configurationService }, options));\r\n        this.disposables.add(this.navigator);\r\n    }\r\n    updateOptions(options) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.updateStyles(options.overrideStyles);\r\n        }\r\n        if (options.multipleSelectionSupport !== undefined) {\r\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\r\n        }\r\n    }\r\n    updateStyles(styles) {\r\n        var _a;\r\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._styler = attachListStyler(this, this.themeService, styles);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this.disposables.dispose();\r\n        super.dispose();\r\n    }\r\n};\r\nWorkbenchTable = __decorate([\r\n    __param(6, IContextKeyService),\r\n    __param(7, IListService),\r\n    __param(8, IThemeService),\r\n    __param(9, IConfigurationService),\r\n    __param(10, IKeybindingService)\r\n], WorkbenchTable);\r\nexport { WorkbenchTable };\r\nclass ResourceNavigator extends Disposable {\r\n    constructor(widget, options) {\r\n        var _a;\r\n        super();\r\n        this.widget = widget;\r\n        this._onDidOpen = this._register(new Emitter());\r\n        this.onDidOpen = this._onDidOpen.event;\r\n        this._register(Event.filter(this.widget.onDidChangeSelection, e => e.browserEvent instanceof KeyboardEvent)(e => this.onSelectionFromKeyboard(e)));\r\n        this._register(this.widget.onPointer((e) => this.onPointer(e.element, e.browserEvent)));\r\n        this._register(this.widget.onMouseDblClick((e) => this.onMouseDblClick(e.element, e.browserEvent)));\r\n        if (typeof (options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== 'boolean' && (options === null || options === void 0 ? void 0 : options.configurationService)) {\r\n            this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\r\n            this._register(options === null || options === void 0 ? void 0 : options.configurationService.onDidChangeConfiguration(() => {\r\n                this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\r\n            }));\r\n        }\r\n        else {\r\n            this.openOnSingleClick = (_a = options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== null && _a !== void 0 ? _a : true;\r\n        }\r\n    }\r\n    onSelectionFromKeyboard(event) {\r\n        if (event.elements.length !== 1) {\r\n            return;\r\n        }\r\n        const selectionKeyboardEvent = event.browserEvent;\r\n        const preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\r\n        const pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\r\n        const sideBySide = false;\r\n        this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\r\n    }\r\n    onPointer(element, browserEvent) {\r\n        if (!this.openOnSingleClick) {\r\n            return;\r\n        }\r\n        const isDoubleClick = browserEvent.detail === 2;\r\n        if (isDoubleClick) {\r\n            return;\r\n        }\r\n        const isMiddleClick = browserEvent.button === 1;\r\n        const preserveFocus = true;\r\n        const pinned = isMiddleClick;\r\n        const sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\r\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\r\n    }\r\n    onMouseDblClick(element, browserEvent) {\r\n        if (!browserEvent) {\r\n            return;\r\n        }\r\n        // copied from AbstractTree\r\n        const target = browserEvent.target;\r\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\r\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && browserEvent.offsetX < 16);\r\n        if (onTwistie) {\r\n            return;\r\n        }\r\n        const preserveFocus = false;\r\n        const pinned = true;\r\n        const sideBySide = (browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey);\r\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\r\n    }\r\n    _open(element, preserveFocus, pinned, sideBySide, browserEvent) {\r\n        if (!element) {\r\n            return;\r\n        }\r\n        this._onDidOpen.fire({\r\n            editorOptions: {\r\n                preserveFocus,\r\n                pinned,\r\n                revealIfVisible: true\r\n            },\r\n            sideBySide,\r\n            element,\r\n            browserEvent\r\n        });\r\n    }\r\n}\r\nclass ListResourceNavigator extends ResourceNavigator {\r\n    constructor(widget, options) {\r\n        super(widget, options);\r\n        this.widget = widget;\r\n    }\r\n    getSelectedElement() {\r\n        return this.widget.getSelectedElements()[0];\r\n    }\r\n}\r\nclass TableResourceNavigator extends ResourceNavigator {\r\n    constructor(widget, options) {\r\n        super(widget, options);\r\n    }\r\n    getSelectedElement() {\r\n        return this.widget.getSelectedElements()[0];\r\n    }\r\n}\r\nclass TreeResourceNavigator extends ResourceNavigator {\r\n    constructor(widget, options) {\r\n        super(widget, options);\r\n    }\r\n    getSelectedElement() {\r\n        var _a;\r\n        return (_a = this.widget.getSelection()[0]) !== null && _a !== void 0 ? _a : undefined;\r\n    }\r\n}\r\nfunction createKeyboardNavigationEventFilter(container, keybindingService) {\r\n    let inChord = false;\r\n    return event => {\r\n        if (inChord) {\r\n            inChord = false;\r\n            return false;\r\n        }\r\n        const result = keybindingService.softDispatch(event, container);\r\n        if (result && result.enterChord) {\r\n            inChord = true;\r\n            return false;\r\n        }\r\n        inChord = false;\r\n        return true;\r\n    };\r\n}\r\nlet WorkbenchObjectTree = class WorkbenchObjectTree extends ObjectTree {\r\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, delegate, renderers, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n    updateOptions(options) {\r\n        super.updateOptions(options);\r\n        this.internals.updateOptions(options);\r\n    }\r\n};\r\nWorkbenchObjectTree = __decorate([\r\n    __param(5, IContextKeyService),\r\n    __param(6, IListService),\r\n    __param(7, IThemeService),\r\n    __param(8, IConfigurationService),\r\n    __param(9, IKeybindingService),\r\n    __param(10, IAccessibilityService)\r\n], WorkbenchObjectTree);\r\nexport { WorkbenchObjectTree };\r\nlet WorkbenchCompressibleObjectTree = class WorkbenchCompressibleObjectTree extends CompressibleObjectTree {\r\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, delegate, renderers, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n    updateOptions(options = {}) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.internals.updateStyleOverrides(options.overrideStyles);\r\n        }\r\n        this.internals.updateOptions(options);\r\n    }\r\n};\r\nWorkbenchCompressibleObjectTree = __decorate([\r\n    __param(5, IContextKeyService),\r\n    __param(6, IListService),\r\n    __param(7, IThemeService),\r\n    __param(8, IConfigurationService),\r\n    __param(9, IKeybindingService),\r\n    __param(10, IAccessibilityService)\r\n], WorkbenchCompressibleObjectTree);\r\nexport { WorkbenchCompressibleObjectTree };\r\nlet WorkbenchDataTree = class WorkbenchDataTree extends DataTree {\r\n    constructor(user, container, delegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, delegate, renderers, dataSource, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n    updateOptions(options = {}) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.internals.updateStyleOverrides(options.overrideStyles);\r\n        }\r\n        this.internals.updateOptions(options);\r\n    }\r\n};\r\nWorkbenchDataTree = __decorate([\r\n    __param(6, IContextKeyService),\r\n    __param(7, IListService),\r\n    __param(8, IThemeService),\r\n    __param(9, IConfigurationService),\r\n    __param(10, IKeybindingService),\r\n    __param(11, IAccessibilityService)\r\n], WorkbenchDataTree);\r\nexport { WorkbenchDataTree };\r\nlet WorkbenchAsyncDataTree = class WorkbenchAsyncDataTree extends AsyncDataTree {\r\n    constructor(user, container, delegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, delegate, renderers, dataSource, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n    get onDidOpen() { return this.internals.onDidOpen; }\r\n    updateOptions(options = {}) {\r\n        super.updateOptions(options);\r\n        if (options.overrideStyles) {\r\n            this.internals.updateStyleOverrides(options.overrideStyles);\r\n        }\r\n        this.internals.updateOptions(options);\r\n    }\r\n};\r\nWorkbenchAsyncDataTree = __decorate([\r\n    __param(6, IContextKeyService),\r\n    __param(7, IListService),\r\n    __param(8, IThemeService),\r\n    __param(9, IConfigurationService),\r\n    __param(10, IKeybindingService),\r\n    __param(11, IAccessibilityService)\r\n], WorkbenchAsyncDataTree);\r\nexport { WorkbenchAsyncDataTree };\r\nlet WorkbenchCompressibleAsyncDataTree = class WorkbenchCompressibleAsyncDataTree extends CompressibleAsyncDataTree {\r\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options, contextKeyService, listService, themeService, configurationService, keybindingService, accessibilityService) {\r\n        const { options: treeOptions, getAutomaticKeyboardNavigation, disposable } = workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService);\r\n        super(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, treeOptions);\r\n        this.disposables.add(disposable);\r\n        this.internals = new WorkbenchTreeInternals(this, options, getAutomaticKeyboardNavigation, options.overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService);\r\n        this.disposables.add(this.internals);\r\n    }\r\n    updateOptions(options) {\r\n        super.updateOptions(options);\r\n        this.internals.updateOptions(options);\r\n    }\r\n};\r\nWorkbenchCompressibleAsyncDataTree = __decorate([\r\n    __param(7, IContextKeyService),\r\n    __param(8, IListService),\r\n    __param(9, IThemeService),\r\n    __param(10, IConfigurationService),\r\n    __param(11, IKeybindingService),\r\n    __param(12, IAccessibilityService)\r\n], WorkbenchCompressibleAsyncDataTree);\r\nexport { WorkbenchCompressibleAsyncDataTree };\r\nfunction workbenchTreeDataPreamble(container, options, contextKeyService, configurationService, keybindingService, accessibilityService) {\r\n    var _a;\r\n    const getAutomaticKeyboardNavigation = () => {\r\n        // give priority to the context key value to disable this completely\r\n        let automaticKeyboardNavigation = Boolean(contextKeyService.getContextKeyValue(WorkbenchListAutomaticKeyboardNavigationKey));\r\n        if (automaticKeyboardNavigation) {\r\n            automaticKeyboardNavigation = Boolean(configurationService.getValue(automaticKeyboardNavigationSettingKey));\r\n        }\r\n        return automaticKeyboardNavigation;\r\n    };\r\n    const accessibilityOn = accessibilityService.isScreenReaderOptimized();\r\n    const keyboardNavigation = options.simpleKeyboardNavigation || accessibilityOn ? 'simple' : configurationService.getValue(keyboardNavigationSettingKey);\r\n    const horizontalScrolling = options.horizontalScrolling !== undefined ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\r\n    const [workbenchListOptions, disposable] = toWorkbenchListOptions(options, configurationService, keybindingService);\r\n    const additionalScrollHeight = options.additionalScrollHeight;\r\n    return {\r\n        getAutomaticKeyboardNavigation,\r\n        disposable,\r\n        options: Object.assign(Object.assign({ \r\n            // ...options, // TODO@Joao why is this not splatted here?\r\n            keyboardSupport: false }, workbenchListOptions), { indent: typeof configurationService.getValue(treeIndentKey) === 'number' ? configurationService.getValue(treeIndentKey) : undefined, renderIndentGuides: configurationService.getValue(treeRenderIndentGuidesKey), smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)), automaticKeyboardNavigation: getAutomaticKeyboardNavigation(), simpleKeyboardNavigation: keyboardNavigation === 'simple', filterOnType: keyboardNavigation === 'filter', horizontalScrolling, keyboardNavigationEventFilter: createKeyboardNavigationEventFilter(container, keybindingService), additionalScrollHeight, hideTwistiesOfChildlessElements: options.hideTwistiesOfChildlessElements, expandOnlyOnTwistieClick: (_a = options.expandOnlyOnTwistieClick) !== null && _a !== void 0 ? _a : (configurationService.getValue(treeExpandMode) === 'doubleClick') })\r\n    };\r\n}\r\nlet WorkbenchTreeInternals = class WorkbenchTreeInternals {\r\n    constructor(tree, options, getAutomaticKeyboardNavigation, overrideStyles, contextKeyService, listService, themeService, configurationService, accessibilityService) {\r\n        this.tree = tree;\r\n        this.themeService = themeService;\r\n        this.disposables = [];\r\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, tree);\r\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\r\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\r\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\r\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\r\n        this.hasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\r\n        this.hasDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\r\n        this.hasMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\r\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n        const interestingContextKeys = new Set();\r\n        interestingContextKeys.add(WorkbenchListAutomaticKeyboardNavigationKey);\r\n        const updateKeyboardNavigation = () => {\r\n            const accessibilityOn = accessibilityService.isScreenReaderOptimized();\r\n            const keyboardNavigation = accessibilityOn ? 'simple' : configurationService.getValue(keyboardNavigationSettingKey);\r\n            tree.updateOptions({\r\n                simpleKeyboardNavigation: keyboardNavigation === 'simple',\r\n                filterOnType: keyboardNavigation === 'filter'\r\n            });\r\n        };\r\n        this.updateStyleOverrides(overrideStyles);\r\n        this.disposables.push(this.contextKeyService, listService.register(tree), tree.onDidChangeSelection(() => {\r\n            const selection = tree.getSelection();\r\n            const focus = tree.getFocus();\r\n            this.contextKeyService.bufferChangeEvents(() => {\r\n                this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n                this.hasMultiSelection.set(selection.length > 1);\r\n                this.hasDoubleSelection.set(selection.length === 2);\r\n            });\r\n        }), tree.onDidChangeFocus(() => {\r\n            const selection = tree.getSelection();\r\n            const focus = tree.getFocus();\r\n            this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\r\n        }), configurationService.onDidChangeConfiguration(e => {\r\n            let newOptions = {};\r\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\r\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\r\n            }\r\n            if (e.affectsConfiguration(treeIndentKey)) {\r\n                const indent = configurationService.getValue(treeIndentKey);\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { indent });\r\n            }\r\n            if (e.affectsConfiguration(treeRenderIndentGuidesKey)) {\r\n                const renderIndentGuides = configurationService.getValue(treeRenderIndentGuidesKey);\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { renderIndentGuides });\r\n            }\r\n            if (e.affectsConfiguration(listSmoothScrolling)) {\r\n                const smoothScrolling = Boolean(!!configurationService.getValue(listSmoothScrolling));\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { smoothScrolling });\r\n            }\r\n            if (e.affectsConfiguration(keyboardNavigationSettingKey)) {\r\n                updateKeyboardNavigation();\r\n            }\r\n            if (e.affectsConfiguration(automaticKeyboardNavigationSettingKey)) {\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { automaticKeyboardNavigation: getAutomaticKeyboardNavigation() });\r\n            }\r\n            if (e.affectsConfiguration(horizontalScrollingKey) && options.horizontalScrolling === undefined) {\r\n                const horizontalScrolling = Boolean(!!configurationService.getValue(horizontalScrollingKey));\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { horizontalScrolling });\r\n            }\r\n            if (e.affectsConfiguration(treeExpandMode) && options.expandOnlyOnTwistieClick === undefined) {\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { expandOnlyOnTwistieClick: configurationService.getValue(treeExpandMode) === 'doubleClick' });\r\n            }\r\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\r\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { mouseWheelScrollSensitivity });\r\n            }\r\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\r\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\r\n                newOptions = Object.assign(Object.assign({}, newOptions), { fastScrollSensitivity });\r\n            }\r\n            if (Object.keys(newOptions).length > 0) {\r\n                tree.updateOptions(newOptions);\r\n            }\r\n        }), this.contextKeyService.onDidChangeContext(e => {\r\n            if (e.affectsSome(interestingContextKeys)) {\r\n                tree.updateOptions({ automaticKeyboardNavigation: getAutomaticKeyboardNavigation() });\r\n            }\r\n        }), accessibilityService.onDidChangeScreenReaderOptimized(() => updateKeyboardNavigation()));\r\n        this.navigator = new TreeResourceNavigator(tree, Object.assign({ configurationService }, options));\r\n        this.disposables.push(this.navigator);\r\n    }\r\n    get onDidOpen() { return this.navigator.onDidOpen; }\r\n    updateOptions(options) {\r\n        if (options.multipleSelectionSupport !== undefined) {\r\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\r\n        }\r\n    }\r\n    updateStyleOverrides(overrideStyles) {\r\n        dispose(this.styler);\r\n        this.styler = overrideStyles ? attachListStyler(this.tree, this.themeService, overrideStyles) : Disposable.None;\r\n    }\r\n    dispose() {\r\n        this.disposables = dispose(this.disposables);\r\n        dispose(this.styler);\r\n        this.styler = undefined;\r\n    }\r\n};\r\nWorkbenchTreeInternals = __decorate([\r\n    __param(4, IContextKeyService),\r\n    __param(5, IListService),\r\n    __param(6, IThemeService),\r\n    __param(7, IConfigurationService),\r\n    __param(8, IAccessibilityService)\r\n], WorkbenchTreeInternals);\r\nconst configurationRegistry = Registry.as(ConfigurationExtensions.Configuration);\r\nconfigurationRegistry.registerConfiguration({\r\n    id: 'workbench',\r\n    order: 7,\r\n    title: localize('workbenchConfigurationTitle', \"Workbench\"),\r\n    type: 'object',\r\n    properties: {\r\n        [multiSelectModifierSettingKey]: {\r\n            type: 'string',\r\n            enum: ['ctrlCmd', 'alt'],\r\n            enumDescriptions: [\r\n                localize('multiSelectModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\r\n                localize('multiSelectModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\r\n            ],\r\n            default: 'ctrlCmd',\r\n            description: localize({\r\n                key: 'multiSelectModifier',\r\n                comment: [\r\n                    '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\r\n                    '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\r\n                ]\r\n            }, \"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.\")\r\n        },\r\n        [openModeSettingKey]: {\r\n            type: 'string',\r\n            enum: ['singleClick', 'doubleClick'],\r\n            default: 'singleClick',\r\n            description: localize({\r\n                key: 'openModeModifier',\r\n                comment: ['`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.']\r\n            }, \"Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.\")\r\n        },\r\n        [horizontalScrollingKey]: {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: localize('horizontalScrolling setting', \"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.\")\r\n        },\r\n        [treeIndentKey]: {\r\n            type: 'number',\r\n            default: 8,\r\n            minimum: 0,\r\n            maximum: 40,\r\n            description: localize('tree indent setting', \"Controls tree indentation in pixels.\")\r\n        },\r\n        [treeRenderIndentGuidesKey]: {\r\n            type: 'string',\r\n            enum: ['none', 'onHover', 'always'],\r\n            default: 'onHover',\r\n            description: localize('render tree indent guides', \"Controls whether the tree should render indent guides.\")\r\n        },\r\n        [listSmoothScrolling]: {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: localize('list smoothScrolling setting', \"Controls whether lists and trees have smooth scrolling.\"),\r\n        },\r\n        [mouseWheelScrollSensitivityKey]: {\r\n            type: 'number',\r\n            default: 1,\r\n            description: localize('Mouse Wheel Scroll Sensitivity', \"A multiplier to be used on the deltaX and deltaY of mouse wheel scroll events.\")\r\n        },\r\n        [fastScrollSensitivityKey]: {\r\n            type: 'number',\r\n            default: 5,\r\n            description: localize('Fast Scroll Sensitivity', \"Scrolling speed multiplier when pressing Alt.\")\r\n        },\r\n        [keyboardNavigationSettingKey]: {\r\n            type: 'string',\r\n            enum: ['simple', 'highlight', 'filter'],\r\n            enumDescriptions: [\r\n                localize('keyboardNavigationSettingKey.simple', \"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.\"),\r\n                localize('keyboardNavigationSettingKey.highlight', \"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.\"),\r\n                localize('keyboardNavigationSettingKey.filter', \"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.\")\r\n            ],\r\n            default: 'highlight',\r\n            description: localize('keyboardNavigationSettingKey', \"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.\")\r\n        },\r\n        [automaticKeyboardNavigationSettingKey]: {\r\n            type: 'boolean',\r\n            default: true,\r\n            markdownDescription: localize('automatic keyboard navigation setting', \"Controls whether keyboard navigation in lists and trees is automatically triggered simply by typing. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut.\")\r\n        },\r\n        [treeExpandMode]: {\r\n            type: 'string',\r\n            enum: ['singleClick', 'doubleClick'],\r\n            default: 'singleClick',\r\n            description: localize('expand mode', \"Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.\"),\r\n        }\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\r\nimport { localize } from '../../../nls.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nexport var MarkerSeverity;\r\n(function (MarkerSeverity) {\r\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\r\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\r\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\r\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\r\n})(MarkerSeverity || (MarkerSeverity = {}));\r\n(function (MarkerSeverity) {\r\n    function compare(a, b) {\r\n        return b - a;\r\n    }\r\n    MarkerSeverity.compare = compare;\r\n    const _displayStrings = Object.create(null);\r\n    _displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\r\n    _displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\r\n    _displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\r\n    function toString(a) {\r\n        return _displayStrings[a] || '';\r\n    }\r\n    MarkerSeverity.toString = toString;\r\n    function fromSeverity(severity) {\r\n        switch (severity) {\r\n            case Severity.Error: return MarkerSeverity.Error;\r\n            case Severity.Warning: return MarkerSeverity.Warning;\r\n            case Severity.Info: return MarkerSeverity.Info;\r\n            case Severity.Ignore: return MarkerSeverity.Hint;\r\n        }\r\n    }\r\n    MarkerSeverity.fromSeverity = fromSeverity;\r\n    function toSeverity(severity) {\r\n        switch (severity) {\r\n            case MarkerSeverity.Error: return Severity.Error;\r\n            case MarkerSeverity.Warning: return Severity.Warning;\r\n            case MarkerSeverity.Info: return Severity.Info;\r\n            case MarkerSeverity.Hint: return Severity.Ignore;\r\n        }\r\n    }\r\n    MarkerSeverity.toSeverity = toSeverity;\r\n})(MarkerSeverity || (MarkerSeverity = {}));\r\nexport var IMarkerData;\r\n(function (IMarkerData) {\r\n    const emptyString = '';\r\n    function makeKey(markerData) {\r\n        return makeKeyOptionalMessage(markerData, true);\r\n    }\r\n    IMarkerData.makeKey = makeKey;\r\n    function makeKeyOptionalMessage(markerData, useMessage) {\r\n        let result = [emptyString];\r\n        if (markerData.source) {\r\n            result.push(markerData.source.replace('\u00A6', '\\\\\u00A6'));\r\n        }\r\n        else {\r\n            result.push(emptyString);\r\n        }\r\n        if (markerData.code) {\r\n            if (typeof markerData.code === 'string') {\r\n                result.push(markerData.code.replace('\u00A6', '\\\\\u00A6'));\r\n            }\r\n            else {\r\n                result.push(markerData.code.value.replace('\u00A6', '\\\\\u00A6'));\r\n            }\r\n        }\r\n        else {\r\n            result.push(emptyString);\r\n        }\r\n        if (markerData.severity !== undefined && markerData.severity !== null) {\r\n            result.push(MarkerSeverity.toString(markerData.severity));\r\n        }\r\n        else {\r\n            result.push(emptyString);\r\n        }\r\n        // Modifed to not include the message as part of the marker key to work around\r\n        // https://github.com/microsoft/vscode/issues/77475\r\n        if (markerData.message && useMessage) {\r\n            result.push(markerData.message.replace('\u00A6', '\\\\\u00A6'));\r\n        }\r\n        else {\r\n            result.push(emptyString);\r\n        }\r\n        if (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\r\n            result.push(markerData.startLineNumber.toString());\r\n        }\r\n        else {\r\n            result.push(emptyString);\r\n        }\r\n        if (markerData.startColumn !== undefined && markerData.startColumn !== null) {\r\n            result.push(markerData.startColumn.toString());\r\n        }\r\n        else {\r\n            result.push(emptyString);\r\n        }\r\n        if (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\r\n            result.push(markerData.endLineNumber.toString());\r\n        }\r\n        else {\r\n            result.push(emptyString);\r\n        }\r\n        if (markerData.endColumn !== undefined && markerData.endColumn !== null) {\r\n            result.push(markerData.endColumn.toString());\r\n        }\r\n        else {\r\n            result.push(emptyString);\r\n        }\r\n        result.push(emptyString);\r\n        return result.join('\u00A6');\r\n    }\r\n    IMarkerData.makeKeyOptionalMessage = makeKeyOptionalMessage;\r\n})(IMarkerData || (IMarkerData = {}));\r\nexport const IMarkerService = createDecorator('markerService');\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isFalsyOrEmpty } from '../../../base/common/arrays.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { DebounceEmitter } from '../../../base/common/event.js';\r\nimport { MarkerSeverity } from './markers.js';\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nclass DoubleResourceMap {\r\n    constructor() {\r\n        this._byResource = new ResourceMap();\r\n        this._byOwner = new Map();\r\n    }\r\n    set(resource, owner, value) {\r\n        let ownerMap = this._byResource.get(resource);\r\n        if (!ownerMap) {\r\n            ownerMap = new Map();\r\n            this._byResource.set(resource, ownerMap);\r\n        }\r\n        ownerMap.set(owner, value);\r\n        let resourceMap = this._byOwner.get(owner);\r\n        if (!resourceMap) {\r\n            resourceMap = new ResourceMap();\r\n            this._byOwner.set(owner, resourceMap);\r\n        }\r\n        resourceMap.set(resource, value);\r\n    }\r\n    get(resource, owner) {\r\n        let ownerMap = this._byResource.get(resource);\r\n        return ownerMap === null || ownerMap === void 0 ? void 0 : ownerMap.get(owner);\r\n    }\r\n    delete(resource, owner) {\r\n        let removedA = false;\r\n        let removedB = false;\r\n        let ownerMap = this._byResource.get(resource);\r\n        if (ownerMap) {\r\n            removedA = ownerMap.delete(owner);\r\n        }\r\n        let resourceMap = this._byOwner.get(owner);\r\n        if (resourceMap) {\r\n            removedB = resourceMap.delete(resource);\r\n        }\r\n        if (removedA !== removedB) {\r\n            throw new Error('illegal state');\r\n        }\r\n        return removedA && removedB;\r\n    }\r\n    values(key) {\r\n        var _a, _b, _c, _d;\r\n        if (typeof key === 'string') {\r\n            return (_b = (_a = this._byOwner.get(key)) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : Iterable.empty();\r\n        }\r\n        if (URI.isUri(key)) {\r\n            return (_d = (_c = this._byResource.get(key)) === null || _c === void 0 ? void 0 : _c.values()) !== null && _d !== void 0 ? _d : Iterable.empty();\r\n        }\r\n        return Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\r\n    }\r\n}\r\nclass MarkerStats {\r\n    constructor(service) {\r\n        this.errors = 0;\r\n        this.infos = 0;\r\n        this.warnings = 0;\r\n        this.unknowns = 0;\r\n        this._data = new ResourceMap();\r\n        this._service = service;\r\n        this._subscription = service.onMarkerChanged(this._update, this);\r\n    }\r\n    dispose() {\r\n        this._subscription.dispose();\r\n    }\r\n    _update(resources) {\r\n        for (const resource of resources) {\r\n            const oldStats = this._data.get(resource);\r\n            if (oldStats) {\r\n                this._substract(oldStats);\r\n            }\r\n            const newStats = this._resourceStats(resource);\r\n            this._add(newStats);\r\n            this._data.set(resource, newStats);\r\n        }\r\n    }\r\n    _resourceStats(resource) {\r\n        const result = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\r\n        // TODO this is a hack\r\n        if (resource.scheme === Schemas.inMemory || resource.scheme === Schemas.walkThrough || resource.scheme === Schemas.walkThroughSnippet) {\r\n            return result;\r\n        }\r\n        for (const { severity } of this._service.read({ resource })) {\r\n            if (severity === MarkerSeverity.Error) {\r\n                result.errors += 1;\r\n            }\r\n            else if (severity === MarkerSeverity.Warning) {\r\n                result.warnings += 1;\r\n            }\r\n            else if (severity === MarkerSeverity.Info) {\r\n                result.infos += 1;\r\n            }\r\n            else {\r\n                result.unknowns += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    _substract(op) {\r\n        this.errors -= op.errors;\r\n        this.warnings -= op.warnings;\r\n        this.infos -= op.infos;\r\n        this.unknowns -= op.unknowns;\r\n    }\r\n    _add(op) {\r\n        this.errors += op.errors;\r\n        this.warnings += op.warnings;\r\n        this.infos += op.infos;\r\n        this.unknowns += op.unknowns;\r\n    }\r\n}\r\nexport class MarkerService {\r\n    constructor() {\r\n        this._onMarkerChanged = new DebounceEmitter({\r\n            delay: 0,\r\n            merge: MarkerService._merge\r\n        });\r\n        this.onMarkerChanged = this._onMarkerChanged.event;\r\n        this._data = new DoubleResourceMap();\r\n        this._stats = new MarkerStats(this);\r\n    }\r\n    dispose() {\r\n        this._stats.dispose();\r\n        this._onMarkerChanged.dispose();\r\n    }\r\n    remove(owner, resources) {\r\n        for (const resource of resources || []) {\r\n            this.changeOne(owner, resource, []);\r\n        }\r\n    }\r\n    changeOne(owner, resource, markerData) {\r\n        if (isFalsyOrEmpty(markerData)) {\r\n            // remove marker for this (owner,resource)-tuple\r\n            const removed = this._data.delete(resource, owner);\r\n            if (removed) {\r\n                this._onMarkerChanged.fire([resource]);\r\n            }\r\n        }\r\n        else {\r\n            // insert marker for this (owner,resource)-tuple\r\n            const markers = [];\r\n            for (const data of markerData) {\r\n                const marker = MarkerService._toMarker(owner, resource, data);\r\n                if (marker) {\r\n                    markers.push(marker);\r\n                }\r\n            }\r\n            this._data.set(resource, owner, markers);\r\n            this._onMarkerChanged.fire([resource]);\r\n        }\r\n    }\r\n    static _toMarker(owner, resource, data) {\r\n        let { code, severity, message, source, startLineNumber, startColumn, endLineNumber, endColumn, relatedInformation, tags, } = data;\r\n        if (!message) {\r\n            return undefined;\r\n        }\r\n        // santize data\r\n        startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\r\n        startColumn = startColumn > 0 ? startColumn : 1;\r\n        endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\r\n        endColumn = endColumn > 0 ? endColumn : startColumn;\r\n        return {\r\n            resource,\r\n            owner,\r\n            code,\r\n            severity,\r\n            message,\r\n            source,\r\n            startLineNumber,\r\n            startColumn,\r\n            endLineNumber,\r\n            endColumn,\r\n            relatedInformation,\r\n            tags,\r\n        };\r\n    }\r\n    read(filter = Object.create(null)) {\r\n        let { owner, resource, severities, take } = filter;\r\n        if (!take || take < 0) {\r\n            take = -1;\r\n        }\r\n        if (owner && resource) {\r\n            // exactly one owner AND resource\r\n            const data = this._data.get(resource, owner);\r\n            if (!data) {\r\n                return [];\r\n            }\r\n            else {\r\n                const result = [];\r\n                for (const marker of data) {\r\n                    if (MarkerService._accept(marker, severities)) {\r\n                        const newLen = result.push(marker);\r\n                        if (take > 0 && newLen === take) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        else if (!owner && !resource) {\r\n            // all\r\n            const result = [];\r\n            for (let markers of this._data.values()) {\r\n                for (let data of markers) {\r\n                    if (MarkerService._accept(data, severities)) {\r\n                        const newLen = result.push(data);\r\n                        if (take > 0 && newLen === take) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            // of one resource OR owner\r\n            const iterable = this._data.values(resource !== null && resource !== void 0 ? resource : owner);\r\n            const result = [];\r\n            for (const markers of iterable) {\r\n                for (const data of markers) {\r\n                    if (MarkerService._accept(data, severities)) {\r\n                        const newLen = result.push(data);\r\n                        if (take > 0 && newLen === take) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    static _accept(marker, severities) {\r\n        return severities === undefined || (severities & marker.severity) === marker.severity;\r\n    }\r\n    // --- event debounce logic\r\n    static _merge(all) {\r\n        const set = new ResourceMap();\r\n        for (let array of all) {\r\n            for (let item of array) {\r\n                set.set(item, true);\r\n            }\r\n        }\r\n        return Array.from(set.keys());\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { IMenuService, isIMenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\r\nimport { ICommandService } from '../../commands/common/commands.js';\r\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\r\nlet MenuService = class MenuService {\r\n    constructor(_commandService) {\r\n        this._commandService = _commandService;\r\n        //\r\n    }\r\n    /**\r\n     * Create a new menu for the given menu identifier. A menu sends events when it's entries\r\n     * have changed (placement, enablement, checked-state). By default it does send events for\r\n     * sub menu entries. That is more expensive and must be explicitly enabled with the\r\n     * `emitEventsForSubmenuChanges` flag.\r\n     */\r\n    createMenu(id, contextKeyService, emitEventsForSubmenuChanges = false) {\r\n        return new Menu(id, emitEventsForSubmenuChanges, this._commandService, contextKeyService, this);\r\n    }\r\n};\r\nMenuService = __decorate([\r\n    __param(0, ICommandService)\r\n], MenuService);\r\nexport { MenuService };\r\nlet Menu = class Menu {\r\n    constructor(_id, _fireEventsForSubmenuChanges, _commandService, _contextKeyService, _menuService) {\r\n        this._id = _id;\r\n        this._fireEventsForSubmenuChanges = _fireEventsForSubmenuChanges;\r\n        this._commandService = _commandService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._menuService = _menuService;\r\n        this._disposables = new DisposableStore();\r\n        this._menuGroups = [];\r\n        this._contextKeys = new Set();\r\n        this._build();\r\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\r\n        // This usually happen while code and extensions are loaded and affects the over\r\n        // structure of the menu\r\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\r\n            this._build();\r\n            this._onDidChange.fire(this);\r\n        }, 50);\r\n        this._disposables.add(rebuildMenuSoon);\r\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\r\n            if (e.has(_id)) {\r\n                rebuildMenuSoon.schedule();\r\n            }\r\n        }));\r\n        // When context keys change we need to check if the menu also has changed. However,\r\n        // we only do that when someone listens on this menu because (1) context key events are\r\n        // firing often and (2) menu are often leaked\r\n        const contextKeyListener = this._disposables.add(new DisposableStore());\r\n        const startContextKeyListener = () => {\r\n            const fireChangeSoon = new RunOnceScheduler(() => this._onDidChange.fire(this), 50);\r\n            contextKeyListener.add(fireChangeSoon);\r\n            contextKeyListener.add(_contextKeyService.onDidChangeContext(e => {\r\n                if (e.affectsSome(this._contextKeys)) {\r\n                    fireChangeSoon.schedule();\r\n                }\r\n            }));\r\n        };\r\n        this._onDidChange = new Emitter({\r\n            // start/stop context key listener\r\n            onFirstListenerAdd: startContextKeyListener,\r\n            onLastListenerRemove: contextKeyListener.clear.bind(contextKeyListener)\r\n        });\r\n        this.onDidChange = this._onDidChange.event;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._onDidChange.dispose();\r\n    }\r\n    _build() {\r\n        // reset\r\n        this._menuGroups.length = 0;\r\n        this._contextKeys.clear();\r\n        const menuItems = MenuRegistry.getMenuItems(this._id);\r\n        let group;\r\n        menuItems.sort(Menu._compareMenuItems);\r\n        for (const item of menuItems) {\r\n            // group by groupId\r\n            const groupName = item.group || '';\r\n            if (!group || group[0] !== groupName) {\r\n                group = [groupName, []];\r\n                this._menuGroups.push(group);\r\n            }\r\n            group[1].push(item);\r\n            // keep keys for eventing\r\n            this._collectContextKeys(item);\r\n        }\r\n    }\r\n    _collectContextKeys(item) {\r\n        Menu._fillInKbExprKeys(item.when, this._contextKeys);\r\n        if (isIMenuItem(item)) {\r\n            // keep precondition keys for event if applicable\r\n            if (item.command.precondition) {\r\n                Menu._fillInKbExprKeys(item.command.precondition, this._contextKeys);\r\n            }\r\n            // keep toggled keys for event if applicable\r\n            if (item.command.toggled) {\r\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\r\n                Menu._fillInKbExprKeys(toggledExpression, this._contextKeys);\r\n            }\r\n        }\r\n        else if (this._fireEventsForSubmenuChanges) {\r\n            // recursively collect context keys from submenus so that this\r\n            // menu fires events when context key changes affect submenus\r\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\r\n        }\r\n    }\r\n    getActions(options) {\r\n        const result = [];\r\n        for (let group of this._menuGroups) {\r\n            const [id, items] = group;\r\n            const activeActions = [];\r\n            for (const item of items) {\r\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\r\n                    const action = isIMenuItem(item)\r\n                        ? new MenuItemAction(item.command, item.alt, options, this._contextKeyService, this._commandService)\r\n                        : new SubmenuItemAction(item, this._menuService, this._contextKeyService, options);\r\n                    activeActions.push(action);\r\n                }\r\n            }\r\n            if (activeActions.length > 0) {\r\n                result.push([id, activeActions]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    static _fillInKbExprKeys(exp, set) {\r\n        if (exp) {\r\n            for (let key of exp.keys()) {\r\n                set.add(key);\r\n            }\r\n        }\r\n    }\r\n    static _compareMenuItems(a, b) {\r\n        let aGroup = a.group;\r\n        let bGroup = b.group;\r\n        if (aGroup !== bGroup) {\r\n            // Falsy groups come last\r\n            if (!aGroup) {\r\n                return 1;\r\n            }\r\n            else if (!bGroup) {\r\n                return -1;\r\n            }\r\n            // 'navigation' group comes first\r\n            if (aGroup === 'navigation') {\r\n                return -1;\r\n            }\r\n            else if (bGroup === 'navigation') {\r\n                return 1;\r\n            }\r\n            // lexical sort for groups\r\n            let value = aGroup.localeCompare(bGroup);\r\n            if (value !== 0) {\r\n                return value;\r\n            }\r\n        }\r\n        // sort on priority - default is 0\r\n        let aPrio = a.order || 0;\r\n        let bPrio = b.order || 0;\r\n        if (aPrio < bPrio) {\r\n            return -1;\r\n        }\r\n        else if (aPrio > bPrio) {\r\n            return 1;\r\n        }\r\n        // sort on titles\r\n        return Menu._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\r\n    }\r\n    static _compareTitles(a, b) {\r\n        const aStr = typeof a === 'string' ? a : a.original;\r\n        const bStr = typeof b === 'string' ? b : b.original;\r\n        return aStr.localeCompare(bStr);\r\n    }\r\n};\r\nMenu = __decorate([\r\n    __param(2, ICommandService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IMenuService)\r\n], Menu);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { OverviewRulerLane, MinimapPosition } from '../model.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../view/editorColorRegistry.js';\r\nimport { IModelService } from './modelService.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nclass MarkerDecorations extends Disposable {\r\n    constructor(model) {\r\n        super();\r\n        this.model = model;\r\n        this._markersData = new Map();\r\n        this._register(toDisposable(() => {\r\n            this.model.deltaDecorations([...this._markersData.keys()], []);\r\n            this._markersData.clear();\r\n        }));\r\n    }\r\n    update(markers, newDecorations) {\r\n        const oldIds = [...this._markersData.keys()];\r\n        this._markersData.clear();\r\n        const ids = this.model.deltaDecorations(oldIds, newDecorations);\r\n        for (let index = 0; index < ids.length; index++) {\r\n            this._markersData.set(ids[index], markers[index]);\r\n        }\r\n        return oldIds.length !== 0 || ids.length !== 0;\r\n    }\r\n    getMarker(decoration) {\r\n        return this._markersData.get(decoration.id);\r\n    }\r\n}\r\nlet MarkerDecorationsService = class MarkerDecorationsService extends Disposable {\r\n    constructor(modelService, _markerService) {\r\n        super();\r\n        this._markerService = _markerService;\r\n        this._onDidChangeMarker = this._register(new Emitter());\r\n        this._markerDecorations = new ResourceMap();\r\n        modelService.getModels().forEach(model => this._onModelAdded(model));\r\n        this._register(modelService.onModelAdded(this._onModelAdded, this));\r\n        this._register(modelService.onModelRemoved(this._onModelRemoved, this));\r\n        this._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._markerDecorations.forEach(value => value.dispose());\r\n        this._markerDecorations.clear();\r\n    }\r\n    getMarker(uri, decoration) {\r\n        const markerDecorations = this._markerDecorations.get(uri);\r\n        return markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\r\n    }\r\n    _handleMarkerChange(changedResources) {\r\n        changedResources.forEach((resource) => {\r\n            const markerDecorations = this._markerDecorations.get(resource);\r\n            if (markerDecorations) {\r\n                this._updateDecorations(markerDecorations);\r\n            }\r\n        });\r\n    }\r\n    _onModelAdded(model) {\r\n        const markerDecorations = new MarkerDecorations(model);\r\n        this._markerDecorations.set(model.uri, markerDecorations);\r\n        this._updateDecorations(markerDecorations);\r\n    }\r\n    _onModelRemoved(model) {\r\n        const markerDecorations = this._markerDecorations.get(model.uri);\r\n        if (markerDecorations) {\r\n            markerDecorations.dispose();\r\n            this._markerDecorations.delete(model.uri);\r\n        }\r\n        // clean up markers for internal, transient models\r\n        if (model.uri.scheme === Schemas.inMemory\r\n            || model.uri.scheme === Schemas.internal\r\n            || model.uri.scheme === Schemas.vscode) {\r\n            if (this._markerService) {\r\n                this._markerService.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\r\n            }\r\n        }\r\n    }\r\n    _updateDecorations(markerDecorations) {\r\n        // Limit to the first 500 errors/warnings\r\n        const markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\r\n        let newModelDecorations = markers.map((marker) => {\r\n            return {\r\n                range: this._createDecorationRange(markerDecorations.model, marker),\r\n                options: this._createDecorationOption(marker)\r\n            };\r\n        });\r\n        if (markerDecorations.update(markers, newModelDecorations)) {\r\n            this._onDidChangeMarker.fire(markerDecorations.model);\r\n        }\r\n    }\r\n    _createDecorationRange(model, rawMarker) {\r\n        let ret = Range.lift(rawMarker);\r\n        if (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, 1 /* Unnecessary */) && !this._hasMarkerTag(rawMarker, 2 /* Deprecated */)) {\r\n            // * never render hints on multiple lines\r\n            // * make enough space for three dots\r\n            ret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\r\n        }\r\n        ret = model.validateRange(ret);\r\n        if (ret.isEmpty()) {\r\n            let word = model.getWordAtPosition(ret.getStartPosition());\r\n            if (word) {\r\n                ret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\r\n            }\r\n            else {\r\n                let maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\r\n                    model.getLineMaxColumn(ret.startLineNumber);\r\n                if (maxColumn === 1) {\r\n                    // empty line\r\n                    // console.warn('marker on empty line:', marker);\r\n                }\r\n                else if (ret.endColumn >= maxColumn) {\r\n                    // behind eol\r\n                    ret = new Range(ret.startLineNumber, maxColumn - 1, ret.endLineNumber, maxColumn);\r\n                }\r\n                else {\r\n                    // extend marker to width = 1\r\n                    ret = new Range(ret.startLineNumber, ret.startColumn, ret.endLineNumber, ret.endColumn + 1);\r\n                }\r\n            }\r\n        }\r\n        else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\r\n            let minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\r\n            if (minColumn < ret.endColumn) {\r\n                ret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\r\n                rawMarker.startColumn = minColumn;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    _createDecorationOption(marker) {\r\n        let className;\r\n        let color = undefined;\r\n        let zIndex;\r\n        let inlineClassName = undefined;\r\n        let minimap;\r\n        switch (marker.severity) {\r\n            case MarkerSeverity.Hint:\r\n                if (this._hasMarkerTag(marker, 2 /* Deprecated */)) {\r\n                    className = undefined;\r\n                }\r\n                else if (this._hasMarkerTag(marker, 1 /* Unnecessary */)) {\r\n                    className = \"squiggly-unnecessary\" /* EditorUnnecessaryDecoration */;\r\n                }\r\n                else {\r\n                    className = \"squiggly-hint\" /* EditorHintDecoration */;\r\n                }\r\n                zIndex = 0;\r\n                break;\r\n            case MarkerSeverity.Warning:\r\n                className = \"squiggly-warning\" /* EditorWarningDecoration */;\r\n                color = themeColorFromId(overviewRulerWarning);\r\n                zIndex = 20;\r\n                minimap = {\r\n                    color: themeColorFromId(minimapWarning),\r\n                    position: MinimapPosition.Inline\r\n                };\r\n                break;\r\n            case MarkerSeverity.Info:\r\n                className = \"squiggly-info\" /* EditorInfoDecoration */;\r\n                color = themeColorFromId(overviewRulerInfo);\r\n                zIndex = 10;\r\n                break;\r\n            case MarkerSeverity.Error:\r\n            default:\r\n                className = \"squiggly-error\" /* EditorErrorDecoration */;\r\n                color = themeColorFromId(overviewRulerError);\r\n                zIndex = 30;\r\n                minimap = {\r\n                    color: themeColorFromId(minimapError),\r\n                    position: MinimapPosition.Inline\r\n                };\r\n                break;\r\n        }\r\n        if (marker.tags) {\r\n            if (marker.tags.indexOf(1 /* Unnecessary */) !== -1) {\r\n                inlineClassName = \"squiggly-inline-unnecessary\" /* EditorUnnecessaryInlineDecoration */;\r\n            }\r\n            if (marker.tags.indexOf(2 /* Deprecated */) !== -1) {\r\n                inlineClassName = \"squiggly-inline-deprecated\" /* EditorDeprecatedInlineDecoration */;\r\n            }\r\n        }\r\n        return {\r\n            description: 'marker-decoration',\r\n            stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n            className,\r\n            showIfCollapsed: true,\r\n            overviewRuler: {\r\n                color,\r\n                position: OverviewRulerLane.Right\r\n            },\r\n            minimap,\r\n            zIndex,\r\n            inlineClassName,\r\n        };\r\n    }\r\n    _hasMarkerTag(marker, tag) {\r\n        if (marker.tags) {\r\n            return marker.tags.indexOf(tag) >= 0;\r\n        }\r\n        return false;\r\n    }\r\n};\r\nMarkerDecorationsService = __decorate([\r\n    __param(0, IModelService),\r\n    __param(1, IMarkerService)\r\n], MarkerDecorationsService);\r\nexport { MarkerDecorationsService };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from './accessibility.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\r\nlet AccessibilityService = class AccessibilityService extends Disposable {\r\n    constructor(_contextKeyService, _configurationService) {\r\n        super();\r\n        this._contextKeyService = _contextKeyService;\r\n        this._configurationService = _configurationService;\r\n        this._accessibilitySupport = 0 /* Unknown */;\r\n        this._onDidChangeScreenReaderOptimized = new Emitter();\r\n        this._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\r\n        const updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\r\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\r\n                updateContextKey();\r\n                this._onDidChangeScreenReaderOptimized.fire();\r\n            }\r\n        }));\r\n        updateContextKey();\r\n        this.onDidChangeScreenReaderOptimized(() => updateContextKey());\r\n    }\r\n    get onDidChangeScreenReaderOptimized() {\r\n        return this._onDidChangeScreenReaderOptimized.event;\r\n    }\r\n    isScreenReaderOptimized() {\r\n        const config = this._configurationService.getValue('editor.accessibilitySupport');\r\n        return config === 'on' || (config === 'auto' && this._accessibilitySupport === 2 /* Enabled */);\r\n    }\r\n    getAccessibilitySupport() {\r\n        return this._accessibilitySupport;\r\n    }\r\n};\r\nAccessibilityService = __decorate([\r\n    __param(0, IContextKeyService),\r\n    __param(1, IConfigurationService)\r\n], AccessibilityService);\r\nexport { AccessibilityService };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { $ } from '../../../base/browser/dom.js';\r\nexport class BrowserClipboardService {\r\n    constructor() {\r\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\r\n        this.findText = ''; // unsupported in web (only in-memory)\r\n    }\r\n    writeText(text, type) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // With type: only in-memory is supported\r\n            if (type) {\r\n                this.mapTextToType.set(type, text);\r\n                return;\r\n            }\r\n            // Guard access to navigator.clipboard with try/catch\r\n            // as we have seen DOMExceptions in certain browsers\r\n            // due to security policies.\r\n            try {\r\n                return yield navigator.clipboard.writeText(text);\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n            }\r\n            // Fallback to textarea and execCommand solution\r\n            const activeElement = document.activeElement;\r\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\r\n            textArea.style.height = '1px';\r\n            textArea.style.width = '1px';\r\n            textArea.style.position = 'absolute';\r\n            textArea.value = text;\r\n            textArea.focus();\r\n            textArea.select();\r\n            document.execCommand('copy');\r\n            if (activeElement instanceof HTMLElement) {\r\n                activeElement.focus();\r\n            }\r\n            document.body.removeChild(textArea);\r\n            return;\r\n        });\r\n    }\r\n    readText(type) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // With type: only in-memory is supported\r\n            if (type) {\r\n                return this.mapTextToType.get(type) || '';\r\n            }\r\n            // Guard access to navigator.clipboard with try/catch\r\n            // as we have seen DOMExceptions in certain browsers\r\n            // due to security policies.\r\n            try {\r\n                return yield navigator.clipboard.readText();\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n                return '';\r\n            }\r\n        });\r\n    }\r\n    readFindText() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.findText;\r\n        });\r\n    }\r\n    writeFindText(text) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.findText = text;\r\n        });\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { IUndoRedoService, ResourceEditStackSnapshot, UndoRedoGroup, UndoRedoSource } from './undoRedo.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\r\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { INotificationService } from '../../notification/common/notification.js';\r\nimport { Disposable, isDisposable } from '../../../base/common/lifecycle.js';\r\nconst DEBUG = false;\r\nfunction getResourceLabel(resource) {\r\n    return resource.scheme === Schemas.file ? resource.fsPath : resource.path;\r\n}\r\nlet stackElementCounter = 0;\r\nclass ResourceStackElement {\r\n    constructor(actual, resourceLabel, strResource, groupId, groupOrder, sourceId, sourceOrder) {\r\n        this.id = (++stackElementCounter);\r\n        this.type = 0 /* Resource */;\r\n        this.actual = actual;\r\n        this.label = actual.label;\r\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\r\n        this.resourceLabel = resourceLabel;\r\n        this.strResource = strResource;\r\n        this.resourceLabels = [this.resourceLabel];\r\n        this.strResources = [this.strResource];\r\n        this.groupId = groupId;\r\n        this.groupOrder = groupOrder;\r\n        this.sourceId = sourceId;\r\n        this.sourceOrder = sourceOrder;\r\n        this.isValid = true;\r\n    }\r\n    setValid(isValid) {\r\n        this.isValid = isValid;\r\n    }\r\n    toString() {\r\n        return `[id:${this.id}] [group:${this.groupId}] [${this.isValid ? '  VALID' : 'INVALID'}] ${this.actual.constructor.name} - ${this.actual}`;\r\n    }\r\n}\r\nclass ResourceReasonPair {\r\n    constructor(resourceLabel, reason) {\r\n        this.resourceLabel = resourceLabel;\r\n        this.reason = reason;\r\n    }\r\n}\r\nclass RemovedResources {\r\n    constructor() {\r\n        this.elements = new Map();\r\n    }\r\n    createMessage() {\r\n        const externalRemoval = [];\r\n        const noParallelUniverses = [];\r\n        for (const [, element] of this.elements) {\r\n            const dest = (element.reason === 0 /* ExternalRemoval */\r\n                ? externalRemoval\r\n                : noParallelUniverses);\r\n            dest.push(element.resourceLabel);\r\n        }\r\n        let messages = [];\r\n        if (externalRemoval.length > 0) {\r\n            messages.push(nls.localize({ key: 'externalRemoval', comment: ['{0} is a list of filenames'] }, \"The following files have been closed and modified on disk: {0}.\", externalRemoval.join(', ')));\r\n        }\r\n        if (noParallelUniverses.length > 0) {\r\n            messages.push(nls.localize({ key: 'noParallelUniverses', comment: ['{0} is a list of filenames'] }, \"The following files have been modified in an incompatible way: {0}.\", noParallelUniverses.join(', ')));\r\n        }\r\n        return messages.join('\\n');\r\n    }\r\n    get size() {\r\n        return this.elements.size;\r\n    }\r\n    has(strResource) {\r\n        return this.elements.has(strResource);\r\n    }\r\n    set(strResource, value) {\r\n        this.elements.set(strResource, value);\r\n    }\r\n    delete(strResource) {\r\n        return this.elements.delete(strResource);\r\n    }\r\n}\r\nclass WorkspaceStackElement {\r\n    constructor(actual, resourceLabels, strResources, groupId, groupOrder, sourceId, sourceOrder) {\r\n        this.id = (++stackElementCounter);\r\n        this.type = 1 /* Workspace */;\r\n        this.actual = actual;\r\n        this.label = actual.label;\r\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\r\n        this.resourceLabels = resourceLabels;\r\n        this.strResources = strResources;\r\n        this.groupId = groupId;\r\n        this.groupOrder = groupOrder;\r\n        this.sourceId = sourceId;\r\n        this.sourceOrder = sourceOrder;\r\n        this.removedResources = null;\r\n        this.invalidatedResources = null;\r\n    }\r\n    canSplit() {\r\n        return (typeof this.actual.split === 'function');\r\n    }\r\n    removeResource(resourceLabel, strResource, reason) {\r\n        if (!this.removedResources) {\r\n            this.removedResources = new RemovedResources();\r\n        }\r\n        if (!this.removedResources.has(strResource)) {\r\n            this.removedResources.set(strResource, new ResourceReasonPair(resourceLabel, reason));\r\n        }\r\n    }\r\n    setValid(resourceLabel, strResource, isValid) {\r\n        if (isValid) {\r\n            if (this.invalidatedResources) {\r\n                this.invalidatedResources.delete(strResource);\r\n                if (this.invalidatedResources.size === 0) {\r\n                    this.invalidatedResources = null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (!this.invalidatedResources) {\r\n                this.invalidatedResources = new RemovedResources();\r\n            }\r\n            if (!this.invalidatedResources.has(strResource)) {\r\n                this.invalidatedResources.set(strResource, new ResourceReasonPair(resourceLabel, 0 /* ExternalRemoval */));\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        return `[id:${this.id}] [group:${this.groupId}] [${this.invalidatedResources ? 'INVALID' : '  VALID'}] ${this.actual.constructor.name} - ${this.actual}`;\r\n    }\r\n}\r\nclass ResourceEditStack {\r\n    constructor(resourceLabel, strResource) {\r\n        this.resourceLabel = resourceLabel;\r\n        this.strResource = strResource;\r\n        this._past = [];\r\n        this._future = [];\r\n        this.locked = false;\r\n        this.versionId = 1;\r\n    }\r\n    dispose() {\r\n        for (const element of this._past) {\r\n            if (element.type === 1 /* Workspace */) {\r\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* ExternalRemoval */);\r\n            }\r\n        }\r\n        for (const element of this._future) {\r\n            if (element.type === 1 /* Workspace */) {\r\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* ExternalRemoval */);\r\n            }\r\n        }\r\n        this.versionId++;\r\n    }\r\n    toString() {\r\n        let result = [];\r\n        result.push(`* ${this.strResource}:`);\r\n        for (let i = 0; i < this._past.length; i++) {\r\n            result.push(`   * [UNDO] ${this._past[i]}`);\r\n        }\r\n        for (let i = this._future.length - 1; i >= 0; i--) {\r\n            result.push(`   * [REDO] ${this._future[i]}`);\r\n        }\r\n        return result.join('\\n');\r\n    }\r\n    flushAllElements() {\r\n        this._past = [];\r\n        this._future = [];\r\n        this.versionId++;\r\n    }\r\n    _setElementValidFlag(element, isValid) {\r\n        if (element.type === 1 /* Workspace */) {\r\n            element.setValid(this.resourceLabel, this.strResource, isValid);\r\n        }\r\n        else {\r\n            element.setValid(isValid);\r\n        }\r\n    }\r\n    setElementsValidFlag(isValid, filter) {\r\n        for (const element of this._past) {\r\n            if (filter(element.actual)) {\r\n                this._setElementValidFlag(element, isValid);\r\n            }\r\n        }\r\n        for (const element of this._future) {\r\n            if (filter(element.actual)) {\r\n                this._setElementValidFlag(element, isValid);\r\n            }\r\n        }\r\n    }\r\n    pushElement(element) {\r\n        // remove the future\r\n        for (const futureElement of this._future) {\r\n            if (futureElement.type === 1 /* Workspace */) {\r\n                futureElement.removeResource(this.resourceLabel, this.strResource, 1 /* NoParallelUniverses */);\r\n            }\r\n        }\r\n        this._future = [];\r\n        this._past.push(element);\r\n        this.versionId++;\r\n    }\r\n    createSnapshot(resource) {\r\n        const elements = [];\r\n        for (let i = 0, len = this._past.length; i < len; i++) {\r\n            elements.push(this._past[i].id);\r\n        }\r\n        for (let i = this._future.length - 1; i >= 0; i--) {\r\n            elements.push(this._future[i].id);\r\n        }\r\n        return new ResourceEditStackSnapshot(resource, elements);\r\n    }\r\n    restoreSnapshot(snapshot) {\r\n        const snapshotLength = snapshot.elements.length;\r\n        let isOK = true;\r\n        let snapshotIndex = 0;\r\n        let removePastAfter = -1;\r\n        for (let i = 0, len = this._past.length; i < len; i++, snapshotIndex++) {\r\n            const element = this._past[i];\r\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\r\n                isOK = false;\r\n                removePastAfter = 0;\r\n            }\r\n            if (!isOK && element.type === 1 /* Workspace */) {\r\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* ExternalRemoval */);\r\n            }\r\n        }\r\n        let removeFutureBefore = -1;\r\n        for (let i = this._future.length - 1; i >= 0; i--, snapshotIndex++) {\r\n            const element = this._future[i];\r\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\r\n                isOK = false;\r\n                removeFutureBefore = i;\r\n            }\r\n            if (!isOK && element.type === 1 /* Workspace */) {\r\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* ExternalRemoval */);\r\n            }\r\n        }\r\n        if (removePastAfter !== -1) {\r\n            this._past = this._past.slice(0, removePastAfter);\r\n        }\r\n        if (removeFutureBefore !== -1) {\r\n            this._future = this._future.slice(removeFutureBefore + 1);\r\n        }\r\n        this.versionId++;\r\n    }\r\n    getElements() {\r\n        const past = [];\r\n        const future = [];\r\n        for (const element of this._past) {\r\n            past.push(element.actual);\r\n        }\r\n        for (const element of this._future) {\r\n            future.push(element.actual);\r\n        }\r\n        return { past, future };\r\n    }\r\n    getClosestPastElement() {\r\n        if (this._past.length === 0) {\r\n            return null;\r\n        }\r\n        return this._past[this._past.length - 1];\r\n    }\r\n    getSecondClosestPastElement() {\r\n        if (this._past.length < 2) {\r\n            return null;\r\n        }\r\n        return this._past[this._past.length - 2];\r\n    }\r\n    getClosestFutureElement() {\r\n        if (this._future.length === 0) {\r\n            return null;\r\n        }\r\n        return this._future[this._future.length - 1];\r\n    }\r\n    hasPastElements() {\r\n        return (this._past.length > 0);\r\n    }\r\n    hasFutureElements() {\r\n        return (this._future.length > 0);\r\n    }\r\n    splitPastWorkspaceElement(toRemove, individualMap) {\r\n        for (let j = this._past.length - 1; j >= 0; j--) {\r\n            if (this._past[j] === toRemove) {\r\n                if (individualMap.has(this.strResource)) {\r\n                    // gets replaced\r\n                    this._past[j] = individualMap.get(this.strResource);\r\n                }\r\n                else {\r\n                    // gets deleted\r\n                    this._past.splice(j, 1);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.versionId++;\r\n    }\r\n    splitFutureWorkspaceElement(toRemove, individualMap) {\r\n        for (let j = this._future.length - 1; j >= 0; j--) {\r\n            if (this._future[j] === toRemove) {\r\n                if (individualMap.has(this.strResource)) {\r\n                    // gets replaced\r\n                    this._future[j] = individualMap.get(this.strResource);\r\n                }\r\n                else {\r\n                    // gets deleted\r\n                    this._future.splice(j, 1);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.versionId++;\r\n    }\r\n    moveBackward(element) {\r\n        this._past.pop();\r\n        this._future.push(element);\r\n        this.versionId++;\r\n    }\r\n    moveForward(element) {\r\n        this._future.pop();\r\n        this._past.push(element);\r\n        this.versionId++;\r\n    }\r\n}\r\nclass EditStackSnapshot {\r\n    constructor(editStacks) {\r\n        this.editStacks = editStacks;\r\n        this._versionIds = [];\r\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\r\n            this._versionIds[i] = this.editStacks[i].versionId;\r\n        }\r\n    }\r\n    isValid() {\r\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\r\n            if (this._versionIds[i] !== this.editStacks[i].versionId) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nconst missingEditStack = new ResourceEditStack('', '');\r\nmissingEditStack.locked = true;\r\nlet UndoRedoService = class UndoRedoService {\r\n    constructor(_dialogService, _notificationService) {\r\n        this._dialogService = _dialogService;\r\n        this._notificationService = _notificationService;\r\n        this._editStacks = new Map();\r\n        this._uriComparisonKeyComputers = [];\r\n    }\r\n    getUriComparisonKey(resource) {\r\n        for (const uriComparisonKeyComputer of this._uriComparisonKeyComputers) {\r\n            if (uriComparisonKeyComputer[0] === resource.scheme) {\r\n                return uriComparisonKeyComputer[1].getComparisonKey(resource);\r\n            }\r\n        }\r\n        return resource.toString();\r\n    }\r\n    _print(label) {\r\n        console.log(`------------------------------------`);\r\n        console.log(`AFTER ${label}: `);\r\n        let str = [];\r\n        for (const element of this._editStacks) {\r\n            str.push(element[1].toString());\r\n        }\r\n        console.log(str.join('\\n'));\r\n    }\r\n    pushElement(element, group = UndoRedoGroup.None, source = UndoRedoSource.None) {\r\n        if (element.type === 0 /* Resource */) {\r\n            const resourceLabel = getResourceLabel(element.resource);\r\n            const strResource = this.getUriComparisonKey(element.resource);\r\n            this._pushElement(new ResourceStackElement(element, resourceLabel, strResource, group.id, group.nextOrder(), source.id, source.nextOrder()));\r\n        }\r\n        else {\r\n            const seen = new Set();\r\n            const resourceLabels = [];\r\n            const strResources = [];\r\n            for (const resource of element.resources) {\r\n                const resourceLabel = getResourceLabel(resource);\r\n                const strResource = this.getUriComparisonKey(resource);\r\n                if (seen.has(strResource)) {\r\n                    continue;\r\n                }\r\n                seen.add(strResource);\r\n                resourceLabels.push(resourceLabel);\r\n                strResources.push(strResource);\r\n            }\r\n            if (resourceLabels.length === 1) {\r\n                this._pushElement(new ResourceStackElement(element, resourceLabels[0], strResources[0], group.id, group.nextOrder(), source.id, source.nextOrder()));\r\n            }\r\n            else {\r\n                this._pushElement(new WorkspaceStackElement(element, resourceLabels, strResources, group.id, group.nextOrder(), source.id, source.nextOrder()));\r\n            }\r\n        }\r\n        if (DEBUG) {\r\n            this._print('pushElement');\r\n        }\r\n    }\r\n    _pushElement(element) {\r\n        for (let i = 0, len = element.strResources.length; i < len; i++) {\r\n            const resourceLabel = element.resourceLabels[i];\r\n            const strResource = element.strResources[i];\r\n            let editStack;\r\n            if (this._editStacks.has(strResource)) {\r\n                editStack = this._editStacks.get(strResource);\r\n            }\r\n            else {\r\n                editStack = new ResourceEditStack(resourceLabel, strResource);\r\n                this._editStacks.set(strResource, editStack);\r\n            }\r\n            editStack.pushElement(element);\r\n        }\r\n    }\r\n    getLastElement(resource) {\r\n        const strResource = this.getUriComparisonKey(resource);\r\n        if (this._editStacks.has(strResource)) {\r\n            const editStack = this._editStacks.get(strResource);\r\n            if (editStack.hasFutureElements()) {\r\n                return null;\r\n            }\r\n            const closestPastElement = editStack.getClosestPastElement();\r\n            return closestPastElement ? closestPastElement.actual : null;\r\n        }\r\n        return null;\r\n    }\r\n    _splitPastWorkspaceElement(toRemove, ignoreResources) {\r\n        const individualArr = toRemove.actual.split();\r\n        const individualMap = new Map();\r\n        for (const _element of individualArr) {\r\n            const resourceLabel = getResourceLabel(_element.resource);\r\n            const strResource = this.getUriComparisonKey(_element.resource);\r\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\r\n            individualMap.set(element.strResource, element);\r\n        }\r\n        for (const strResource of toRemove.strResources) {\r\n            if (ignoreResources && ignoreResources.has(strResource)) {\r\n                continue;\r\n            }\r\n            const editStack = this._editStacks.get(strResource);\r\n            editStack.splitPastWorkspaceElement(toRemove, individualMap);\r\n        }\r\n    }\r\n    _splitFutureWorkspaceElement(toRemove, ignoreResources) {\r\n        const individualArr = toRemove.actual.split();\r\n        const individualMap = new Map();\r\n        for (const _element of individualArr) {\r\n            const resourceLabel = getResourceLabel(_element.resource);\r\n            const strResource = this.getUriComparisonKey(_element.resource);\r\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\r\n            individualMap.set(element.strResource, element);\r\n        }\r\n        for (const strResource of toRemove.strResources) {\r\n            if (ignoreResources && ignoreResources.has(strResource)) {\r\n                continue;\r\n            }\r\n            const editStack = this._editStacks.get(strResource);\r\n            editStack.splitFutureWorkspaceElement(toRemove, individualMap);\r\n        }\r\n    }\r\n    removeElements(resource) {\r\n        const strResource = typeof resource === 'string' ? resource : this.getUriComparisonKey(resource);\r\n        if (this._editStacks.has(strResource)) {\r\n            const editStack = this._editStacks.get(strResource);\r\n            editStack.dispose();\r\n            this._editStacks.delete(strResource);\r\n        }\r\n        if (DEBUG) {\r\n            this._print('removeElements');\r\n        }\r\n    }\r\n    setElementsValidFlag(resource, isValid, filter) {\r\n        const strResource = this.getUriComparisonKey(resource);\r\n        if (this._editStacks.has(strResource)) {\r\n            const editStack = this._editStacks.get(strResource);\r\n            editStack.setElementsValidFlag(isValid, filter);\r\n        }\r\n        if (DEBUG) {\r\n            this._print('setElementsValidFlag');\r\n        }\r\n    }\r\n    createSnapshot(resource) {\r\n        const strResource = this.getUriComparisonKey(resource);\r\n        if (this._editStacks.has(strResource)) {\r\n            const editStack = this._editStacks.get(strResource);\r\n            return editStack.createSnapshot(resource);\r\n        }\r\n        return new ResourceEditStackSnapshot(resource, []);\r\n    }\r\n    restoreSnapshot(snapshot) {\r\n        const strResource = this.getUriComparisonKey(snapshot.resource);\r\n        if (this._editStacks.has(strResource)) {\r\n            const editStack = this._editStacks.get(strResource);\r\n            editStack.restoreSnapshot(snapshot);\r\n            if (!editStack.hasPastElements() && !editStack.hasFutureElements()) {\r\n                // the edit stack is now empty, just remove it entirely\r\n                editStack.dispose();\r\n                this._editStacks.delete(strResource);\r\n            }\r\n        }\r\n        if (DEBUG) {\r\n            this._print('restoreSnapshot');\r\n        }\r\n    }\r\n    getElements(resource) {\r\n        const strResource = this.getUriComparisonKey(resource);\r\n        if (this._editStacks.has(strResource)) {\r\n            const editStack = this._editStacks.get(strResource);\r\n            return editStack.getElements();\r\n        }\r\n        return { past: [], future: [] };\r\n    }\r\n    _findClosestUndoElementWithSource(sourceId) {\r\n        if (!sourceId) {\r\n            return [null, null];\r\n        }\r\n        // find an element with the sourceId and with the highest sourceOrder ready to be undone\r\n        let matchedElement = null;\r\n        let matchedStrResource = null;\r\n        for (const [strResource, editStack] of this._editStacks) {\r\n            const candidate = editStack.getClosestPastElement();\r\n            if (!candidate) {\r\n                continue;\r\n            }\r\n            if (candidate.sourceId === sourceId) {\r\n                if (!matchedElement || candidate.sourceOrder > matchedElement.sourceOrder) {\r\n                    matchedElement = candidate;\r\n                    matchedStrResource = strResource;\r\n                }\r\n            }\r\n        }\r\n        return [matchedElement, matchedStrResource];\r\n    }\r\n    canUndo(resourceOrSource) {\r\n        if (resourceOrSource instanceof UndoRedoSource) {\r\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\r\n            return matchedStrResource ? true : false;\r\n        }\r\n        const strResource = this.getUriComparisonKey(resourceOrSource);\r\n        if (this._editStacks.has(strResource)) {\r\n            const editStack = this._editStacks.get(strResource);\r\n            return editStack.hasPastElements();\r\n        }\r\n        return false;\r\n    }\r\n    _onError(err, element) {\r\n        onUnexpectedError(err);\r\n        // An error occurred while undoing or redoing => drop the undo/redo stack for all affected resources\r\n        for (const strResource of element.strResources) {\r\n            this.removeElements(strResource);\r\n        }\r\n        this._notificationService.error(err);\r\n    }\r\n    _acquireLocks(editStackSnapshot) {\r\n        // first, check if all locks can be acquired\r\n        for (const editStack of editStackSnapshot.editStacks) {\r\n            if (editStack.locked) {\r\n                throw new Error('Cannot acquire edit stack lock');\r\n            }\r\n        }\r\n        // can acquire all locks\r\n        for (const editStack of editStackSnapshot.editStacks) {\r\n            editStack.locked = true;\r\n        }\r\n        return () => {\r\n            // release all locks\r\n            for (const editStack of editStackSnapshot.editStacks) {\r\n                editStack.locked = false;\r\n            }\r\n        };\r\n    }\r\n    _safeInvokeWithLocks(element, invoke, editStackSnapshot, cleanup, continuation) {\r\n        const releaseLocks = this._acquireLocks(editStackSnapshot);\r\n        let result;\r\n        try {\r\n            result = invoke();\r\n        }\r\n        catch (err) {\r\n            releaseLocks();\r\n            cleanup.dispose();\r\n            return this._onError(err, element);\r\n        }\r\n        if (result) {\r\n            // result is Promise<void>\r\n            return result.then(() => {\r\n                releaseLocks();\r\n                cleanup.dispose();\r\n                return continuation();\r\n            }, (err) => {\r\n                releaseLocks();\r\n                cleanup.dispose();\r\n                return this._onError(err, element);\r\n            });\r\n        }\r\n        else {\r\n            // result is void\r\n            releaseLocks();\r\n            cleanup.dispose();\r\n            return continuation();\r\n        }\r\n    }\r\n    _invokeWorkspacePrepare(element) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof element.actual.prepareUndoRedo === 'undefined') {\r\n                return Disposable.None;\r\n            }\r\n            const result = element.actual.prepareUndoRedo();\r\n            if (typeof result === 'undefined') {\r\n                return Disposable.None;\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    _invokeResourcePrepare(element, callback) {\r\n        if (element.actual.type !== 1 /* Workspace */ || typeof element.actual.prepareUndoRedo === 'undefined') {\r\n            // no preparation needed\r\n            return callback(Disposable.None);\r\n        }\r\n        const r = element.actual.prepareUndoRedo();\r\n        if (!r) {\r\n            // nothing to clean up\r\n            return callback(Disposable.None);\r\n        }\r\n        if (isDisposable(r)) {\r\n            return callback(r);\r\n        }\r\n        return r.then((disposable) => {\r\n            return callback(disposable);\r\n        });\r\n    }\r\n    _getAffectedEditStacks(element) {\r\n        const affectedEditStacks = [];\r\n        for (const strResource of element.strResources) {\r\n            affectedEditStacks.push(this._editStacks.get(strResource) || missingEditStack);\r\n        }\r\n        return new EditStackSnapshot(affectedEditStacks);\r\n    }\r\n    _tryToSplitAndUndo(strResource, element, ignoreResources, message) {\r\n        if (element.canSplit()) {\r\n            this._splitPastWorkspaceElement(element, ignoreResources);\r\n            this._notificationService.warn(message);\r\n            return new WorkspaceVerificationError(this._undo(strResource, 0, true));\r\n        }\r\n        else {\r\n            // Cannot safely split this workspace element => flush all undo/redo stacks\r\n            for (const strResource of element.strResources) {\r\n                this.removeElements(strResource);\r\n            }\r\n            this._notificationService.warn(message);\r\n            return new WorkspaceVerificationError();\r\n        }\r\n    }\r\n    _checkWorkspaceUndo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\r\n        if (element.removedResources) {\r\n            return this._tryToSplitAndUndo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\r\n        }\r\n        if (checkInvalidatedResources && element.invalidatedResources) {\r\n            return this._tryToSplitAndUndo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\r\n        }\r\n        // this must be the last past element in all the impacted resources!\r\n        const cannotUndoDueToResources = [];\r\n        for (const editStack of editStackSnapshot.editStacks) {\r\n            if (editStack.getClosestPastElement() !== element) {\r\n                cannotUndoDueToResources.push(editStack.resourceLabel);\r\n            }\r\n        }\r\n        if (cannotUndoDueToResources.length > 0) {\r\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because changes were made to {1}\", element.label, cannotUndoDueToResources.join(', ')));\r\n        }\r\n        const cannotLockDueToResources = [];\r\n        for (const editStack of editStackSnapshot.editStacks) {\r\n            if (editStack.locked) {\r\n                cannotLockDueToResources.push(editStack.resourceLabel);\r\n            }\r\n        }\r\n        if (cannotLockDueToResources.length > 0) {\r\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\r\n        }\r\n        // check if new stack elements were added in the meantime...\r\n        if (!editStackSnapshot.isValid()) {\r\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\r\n        }\r\n        return null;\r\n    }\r\n    _workspaceUndo(strResource, element, undoConfirmed) {\r\n        const affectedEditStacks = this._getAffectedEditStacks(element);\r\n        const verificationError = this._checkWorkspaceUndo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\r\n        if (verificationError) {\r\n            return verificationError.returnValue;\r\n        }\r\n        return this._confirmAndExecuteWorkspaceUndo(strResource, element, affectedEditStacks, undoConfirmed);\r\n    }\r\n    _isPartOfUndoGroup(element) {\r\n        if (!element.groupId) {\r\n            return false;\r\n        }\r\n        // check that there is at least another element with the same groupId ready to be undone\r\n        for (const [, editStack] of this._editStacks) {\r\n            const pastElement = editStack.getClosestPastElement();\r\n            if (!pastElement) {\r\n                continue;\r\n            }\r\n            if (pastElement === element) {\r\n                const secondPastElement = editStack.getSecondClosestPastElement();\r\n                if (secondPastElement && secondPastElement.groupId === element.groupId) {\r\n                    // there is another element with the same group id in the same stack!\r\n                    return true;\r\n                }\r\n            }\r\n            if (pastElement.groupId === element.groupId) {\r\n                // there is another element with the same group id in another stack!\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _confirmAndExecuteWorkspaceUndo(strResource, element, editStackSnapshot, undoConfirmed) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (element.canSplit() && !this._isPartOfUndoGroup(element)) {\r\n                // this element can be split\r\n                const result = yield this._dialogService.show(Severity.Info, nls.localize('confirmWorkspace', \"Would you like to undo '{0}' across all files?\", element.label), [\r\n                    nls.localize({ key: 'ok', comment: ['{0} denotes a number that is > 1'] }, \"Undo in {0} Files\", editStackSnapshot.editStacks.length),\r\n                    nls.localize('nok', \"Undo this File\"),\r\n                    nls.localize('cancel', \"Cancel\"),\r\n                ], {\r\n                    cancelId: 2\r\n                });\r\n                if (result.choice === 2) {\r\n                    // choice: cancel\r\n                    return;\r\n                }\r\n                if (result.choice === 1) {\r\n                    // choice: undo this file\r\n                    this._splitPastWorkspaceElement(element, null);\r\n                    return this._undo(strResource, 0, true);\r\n                }\r\n                // choice: undo in all files\r\n                // At this point, it is possible that the element has been made invalid in the meantime (due to the confirmation await)\r\n                const verificationError1 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*invalidated resources will be checked after the prepare call*/ false);\r\n                if (verificationError1) {\r\n                    return verificationError1.returnValue;\r\n                }\r\n                undoConfirmed = true;\r\n            }\r\n            // prepare\r\n            let cleanup;\r\n            try {\r\n                cleanup = yield this._invokeWorkspacePrepare(element);\r\n            }\r\n            catch (err) {\r\n                return this._onError(err, element);\r\n            }\r\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\r\n            const verificationError2 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\r\n            if (verificationError2) {\r\n                cleanup.dispose();\r\n                return verificationError2.returnValue;\r\n            }\r\n            for (const editStack of editStackSnapshot.editStacks) {\r\n                editStack.moveBackward(element);\r\n            }\r\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), editStackSnapshot, cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\r\n        });\r\n    }\r\n    _resourceUndo(editStack, element, undoConfirmed) {\r\n        if (!element.isValid) {\r\n            // invalid element => immediately flush edit stack!\r\n            editStack.flushAllElements();\r\n            return;\r\n        }\r\n        if (editStack.locked) {\r\n            const message = nls.localize({ key: 'cannotResourceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not undo '{0}' because there is already an undo or redo operation running.\", element.label);\r\n            this._notificationService.warn(message);\r\n            return;\r\n        }\r\n        return this._invokeResourcePrepare(element, (cleanup) => {\r\n            editStack.moveBackward(element);\r\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\r\n        });\r\n    }\r\n    _findClosestUndoElementInGroup(groupId) {\r\n        if (!groupId) {\r\n            return [null, null];\r\n        }\r\n        // find another element with the same groupId and with the highest groupOrder ready to be undone\r\n        let matchedElement = null;\r\n        let matchedStrResource = null;\r\n        for (const [strResource, editStack] of this._editStacks) {\r\n            const candidate = editStack.getClosestPastElement();\r\n            if (!candidate) {\r\n                continue;\r\n            }\r\n            if (candidate.groupId === groupId) {\r\n                if (!matchedElement || candidate.groupOrder > matchedElement.groupOrder) {\r\n                    matchedElement = candidate;\r\n                    matchedStrResource = strResource;\r\n                }\r\n            }\r\n        }\r\n        return [matchedElement, matchedStrResource];\r\n    }\r\n    _continueUndoInGroup(groupId, undoConfirmed) {\r\n        if (!groupId) {\r\n            return;\r\n        }\r\n        const [, matchedStrResource] = this._findClosestUndoElementInGroup(groupId);\r\n        if (matchedStrResource) {\r\n            return this._undo(matchedStrResource, 0, undoConfirmed);\r\n        }\r\n    }\r\n    undo(resourceOrSource) {\r\n        if (resourceOrSource instanceof UndoRedoSource) {\r\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\r\n            return matchedStrResource ? this._undo(matchedStrResource, resourceOrSource.id, false) : undefined;\r\n        }\r\n        if (typeof resourceOrSource === 'string') {\r\n            return this._undo(resourceOrSource, 0, false);\r\n        }\r\n        return this._undo(this.getUriComparisonKey(resourceOrSource), 0, false);\r\n    }\r\n    _undo(strResource, sourceId = 0, undoConfirmed) {\r\n        if (!this._editStacks.has(strResource)) {\r\n            return;\r\n        }\r\n        const editStack = this._editStacks.get(strResource);\r\n        const element = editStack.getClosestPastElement();\r\n        if (!element) {\r\n            return;\r\n        }\r\n        if (element.groupId) {\r\n            // this element is a part of a group, we need to make sure undoing in a group is in order\r\n            const [matchedElement, matchedStrResource] = this._findClosestUndoElementInGroup(element.groupId);\r\n            if (element !== matchedElement && matchedStrResource) {\r\n                // there is an element in the same group that should be undone before this one\r\n                return this._undo(matchedStrResource, sourceId, undoConfirmed);\r\n            }\r\n        }\r\n        const shouldPromptForConfirmation = (element.sourceId !== sourceId || element.confirmBeforeUndo);\r\n        if (shouldPromptForConfirmation && !undoConfirmed) {\r\n            // Hit a different source or the element asks for prompt before undo, prompt for confirmation\r\n            return this._confirmAndContinueUndo(strResource, sourceId, element);\r\n        }\r\n        try {\r\n            if (element.type === 1 /* Workspace */) {\r\n                return this._workspaceUndo(strResource, element, undoConfirmed);\r\n            }\r\n            else {\r\n                return this._resourceUndo(editStack, element, undoConfirmed);\r\n            }\r\n        }\r\n        finally {\r\n            if (DEBUG) {\r\n                this._print('undo');\r\n            }\r\n        }\r\n    }\r\n    _confirmAndContinueUndo(strResource, sourceId, element) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield this._dialogService.show(Severity.Info, nls.localize('confirmDifferentSource', \"Would you like to undo '{0}'?\", element.label), [\r\n                nls.localize('confirmDifferentSource.yes', \"Yes\"),\r\n                nls.localize('cancel', \"Cancel\"),\r\n            ], {\r\n                cancelId: 1\r\n            });\r\n            if (result.choice === 1) {\r\n                // choice: cancel\r\n                return;\r\n            }\r\n            // choice: undo\r\n            return this._undo(strResource, sourceId, true);\r\n        });\r\n    }\r\n    _findClosestRedoElementWithSource(sourceId) {\r\n        if (!sourceId) {\r\n            return [null, null];\r\n        }\r\n        // find an element with sourceId and with the lowest sourceOrder ready to be redone\r\n        let matchedElement = null;\r\n        let matchedStrResource = null;\r\n        for (const [strResource, editStack] of this._editStacks) {\r\n            const candidate = editStack.getClosestFutureElement();\r\n            if (!candidate) {\r\n                continue;\r\n            }\r\n            if (candidate.sourceId === sourceId) {\r\n                if (!matchedElement || candidate.sourceOrder < matchedElement.sourceOrder) {\r\n                    matchedElement = candidate;\r\n                    matchedStrResource = strResource;\r\n                }\r\n            }\r\n        }\r\n        return [matchedElement, matchedStrResource];\r\n    }\r\n    canRedo(resourceOrSource) {\r\n        if (resourceOrSource instanceof UndoRedoSource) {\r\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\r\n            return matchedStrResource ? true : false;\r\n        }\r\n        const strResource = this.getUriComparisonKey(resourceOrSource);\r\n        if (this._editStacks.has(strResource)) {\r\n            const editStack = this._editStacks.get(strResource);\r\n            return editStack.hasFutureElements();\r\n        }\r\n        return false;\r\n    }\r\n    _tryToSplitAndRedo(strResource, element, ignoreResources, message) {\r\n        if (element.canSplit()) {\r\n            this._splitFutureWorkspaceElement(element, ignoreResources);\r\n            this._notificationService.warn(message);\r\n            return new WorkspaceVerificationError(this._redo(strResource));\r\n        }\r\n        else {\r\n            // Cannot safely split this workspace element => flush all undo/redo stacks\r\n            for (const strResource of element.strResources) {\r\n                this.removeElements(strResource);\r\n            }\r\n            this._notificationService.warn(message);\r\n            return new WorkspaceVerificationError();\r\n        }\r\n    }\r\n    _checkWorkspaceRedo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\r\n        if (element.removedResources) {\r\n            return this._tryToSplitAndRedo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\r\n        }\r\n        if (checkInvalidatedResources && element.invalidatedResources) {\r\n            return this._tryToSplitAndRedo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\r\n        }\r\n        // this must be the last future element in all the impacted resources!\r\n        const cannotRedoDueToResources = [];\r\n        for (const editStack of editStackSnapshot.editStacks) {\r\n            if (editStack.getClosestFutureElement() !== element) {\r\n                cannotRedoDueToResources.push(editStack.resourceLabel);\r\n            }\r\n        }\r\n        if (cannotRedoDueToResources.length > 0) {\r\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because changes were made to {1}\", element.label, cannotRedoDueToResources.join(', ')));\r\n        }\r\n        const cannotLockDueToResources = [];\r\n        for (const editStack of editStackSnapshot.editStacks) {\r\n            if (editStack.locked) {\r\n                cannotLockDueToResources.push(editStack.resourceLabel);\r\n            }\r\n        }\r\n        if (cannotLockDueToResources.length > 0) {\r\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\r\n        }\r\n        // check if new stack elements were added in the meantime...\r\n        if (!editStackSnapshot.isValid()) {\r\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\r\n        }\r\n        return null;\r\n    }\r\n    _workspaceRedo(strResource, element) {\r\n        const affectedEditStacks = this._getAffectedEditStacks(element);\r\n        const verificationError = this._checkWorkspaceRedo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\r\n        if (verificationError) {\r\n            return verificationError.returnValue;\r\n        }\r\n        return this._executeWorkspaceRedo(strResource, element, affectedEditStacks);\r\n    }\r\n    _executeWorkspaceRedo(strResource, element, editStackSnapshot) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // prepare\r\n            let cleanup;\r\n            try {\r\n                cleanup = yield this._invokeWorkspacePrepare(element);\r\n            }\r\n            catch (err) {\r\n                return this._onError(err, element);\r\n            }\r\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\r\n            const verificationError = this._checkWorkspaceRedo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\r\n            if (verificationError) {\r\n                cleanup.dispose();\r\n                return verificationError.returnValue;\r\n            }\r\n            for (const editStack of editStackSnapshot.editStacks) {\r\n                editStack.moveForward(element);\r\n            }\r\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), editStackSnapshot, cleanup, () => this._continueRedoInGroup(element.groupId));\r\n        });\r\n    }\r\n    _resourceRedo(editStack, element) {\r\n        if (!element.isValid) {\r\n            // invalid element => immediately flush edit stack!\r\n            editStack.flushAllElements();\r\n            return;\r\n        }\r\n        if (editStack.locked) {\r\n            const message = nls.localize({ key: 'cannotResourceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not redo '{0}' because there is already an undo or redo operation running.\", element.label);\r\n            this._notificationService.warn(message);\r\n            return;\r\n        }\r\n        return this._invokeResourcePrepare(element, (cleanup) => {\r\n            editStack.moveForward(element);\r\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueRedoInGroup(element.groupId));\r\n        });\r\n    }\r\n    _findClosestRedoElementInGroup(groupId) {\r\n        if (!groupId) {\r\n            return [null, null];\r\n        }\r\n        // find another element with the same groupId and with the lowest groupOrder ready to be redone\r\n        let matchedElement = null;\r\n        let matchedStrResource = null;\r\n        for (const [strResource, editStack] of this._editStacks) {\r\n            const candidate = editStack.getClosestFutureElement();\r\n            if (!candidate) {\r\n                continue;\r\n            }\r\n            if (candidate.groupId === groupId) {\r\n                if (!matchedElement || candidate.groupOrder < matchedElement.groupOrder) {\r\n                    matchedElement = candidate;\r\n                    matchedStrResource = strResource;\r\n                }\r\n            }\r\n        }\r\n        return [matchedElement, matchedStrResource];\r\n    }\r\n    _continueRedoInGroup(groupId) {\r\n        if (!groupId) {\r\n            return;\r\n        }\r\n        const [, matchedStrResource] = this._findClosestRedoElementInGroup(groupId);\r\n        if (matchedStrResource) {\r\n            return this._redo(matchedStrResource);\r\n        }\r\n    }\r\n    redo(resourceOrSource) {\r\n        if (resourceOrSource instanceof UndoRedoSource) {\r\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\r\n            return matchedStrResource ? this._redo(matchedStrResource) : undefined;\r\n        }\r\n        if (typeof resourceOrSource === 'string') {\r\n            return this._redo(resourceOrSource);\r\n        }\r\n        return this._redo(this.getUriComparisonKey(resourceOrSource));\r\n    }\r\n    _redo(strResource) {\r\n        if (!this._editStacks.has(strResource)) {\r\n            return;\r\n        }\r\n        const editStack = this._editStacks.get(strResource);\r\n        const element = editStack.getClosestFutureElement();\r\n        if (!element) {\r\n            return;\r\n        }\r\n        if (element.groupId) {\r\n            // this element is a part of a group, we need to make sure redoing in a group is in order\r\n            const [matchedElement, matchedStrResource] = this._findClosestRedoElementInGroup(element.groupId);\r\n            if (element !== matchedElement && matchedStrResource) {\r\n                // there is an element in the same group that should be redone before this one\r\n                return this._redo(matchedStrResource);\r\n            }\r\n        }\r\n        try {\r\n            if (element.type === 1 /* Workspace */) {\r\n                return this._workspaceRedo(strResource, element);\r\n            }\r\n            else {\r\n                return this._resourceRedo(editStack, element);\r\n            }\r\n        }\r\n        finally {\r\n            if (DEBUG) {\r\n                this._print('redo');\r\n            }\r\n        }\r\n    }\r\n};\r\nUndoRedoService = __decorate([\r\n    __param(0, IDialogService),\r\n    __param(1, INotificationService)\r\n], UndoRedoService);\r\nexport { UndoRedoService };\r\nclass WorkspaceVerificationError {\r\n    constructor(returnValue) {\r\n        this.returnValue = returnValue;\r\n    }\r\n}\r\nregisterSingleton(IUndoRedoService, UndoRedoService);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './standaloneQuickInput.css';\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\r\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\r\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { QuickInputService } from '../../../../platform/quickinput/browser/quickInput.js';\r\nimport { once } from '../../../../base/common/functional.js';\r\nlet EditorScopedQuickInputServiceImpl = class EditorScopedQuickInputServiceImpl extends QuickInputService {\r\n    constructor(editor, instantiationService, contextKeyService, themeService, accessibilityService, layoutService) {\r\n        super(instantiationService, contextKeyService, themeService, accessibilityService, layoutService);\r\n        this.host = undefined;\r\n        // Use the passed in code editor as host for the quick input widget\r\n        const contribution = QuickInputEditorContribution.get(editor);\r\n        this.host = {\r\n            _serviceBrand: undefined,\r\n            get container() { return contribution.widget.getDomNode(); },\r\n            get dimension() { return editor.getLayoutInfo(); },\r\n            get onDidLayout() { return editor.onDidLayoutChange; },\r\n            focus: () => editor.focus()\r\n        };\r\n    }\r\n    createController() {\r\n        return super.createController(this.host);\r\n    }\r\n};\r\nEditorScopedQuickInputServiceImpl = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IThemeService),\r\n    __param(4, IAccessibilityService),\r\n    __param(5, ILayoutService)\r\n], EditorScopedQuickInputServiceImpl);\r\nexport { EditorScopedQuickInputServiceImpl };\r\nlet StandaloneQuickInputServiceImpl = class StandaloneQuickInputServiceImpl {\r\n    constructor(instantiationService, codeEditorService) {\r\n        this.instantiationService = instantiationService;\r\n        this.codeEditorService = codeEditorService;\r\n        this.mapEditorToService = new Map();\r\n    }\r\n    get activeService() {\r\n        const editor = this.codeEditorService.getFocusedCodeEditor();\r\n        if (!editor) {\r\n            throw new Error('Quick input service needs a focused editor to work.');\r\n        }\r\n        // Find the quick input implementation for the focused\r\n        // editor or create it lazily if not yet created\r\n        let quickInputService = this.mapEditorToService.get(editor);\r\n        if (!quickInputService) {\r\n            const newQuickInputService = quickInputService = this.instantiationService.createInstance(EditorScopedQuickInputServiceImpl, editor);\r\n            this.mapEditorToService.set(editor, quickInputService);\r\n            once(editor.onDidDispose)(() => {\r\n                newQuickInputService.dispose();\r\n                this.mapEditorToService.delete(editor);\r\n            });\r\n        }\r\n        return quickInputService;\r\n    }\r\n    get quickAccess() { return this.activeService.quickAccess; }\r\n    pick(picks, options = {}, token = CancellationToken.None) {\r\n        return this.activeService /* TS fail */.pick(picks, options, token);\r\n    }\r\n    createQuickPick() {\r\n        return this.activeService.createQuickPick();\r\n    }\r\n};\r\nStandaloneQuickInputServiceImpl = __decorate([\r\n    __param(0, IInstantiationService),\r\n    __param(1, ICodeEditorService)\r\n], StandaloneQuickInputServiceImpl);\r\nexport { StandaloneQuickInputServiceImpl };\r\nexport class QuickInputEditorContribution {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this.widget = new QuickInputEditorWidget(this.editor);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(QuickInputEditorContribution.ID);\r\n    }\r\n    dispose() {\r\n        this.widget.dispose();\r\n    }\r\n}\r\nQuickInputEditorContribution.ID = 'editor.controller.quickInput';\r\nexport class QuickInputEditorWidget {\r\n    constructor(codeEditor) {\r\n        this.codeEditor = codeEditor;\r\n        this.domNode = document.createElement('div');\r\n        this.codeEditor.addOverlayWidget(this);\r\n    }\r\n    getId() {\r\n        return QuickInputEditorWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this.domNode;\r\n    }\r\n    getPosition() {\r\n        return { preference: 2 /* TOP_CENTER */ };\r\n    }\r\n    dispose() {\r\n        this.codeEditor.removeOverlayWidget(this);\r\n    }\r\n}\r\nQuickInputEditorWidget.ID = 'editor.contrib.quickInputWidget';\r\nregisterEditorContribution(QuickInputEditorContribution.ID, QuickInputEditorContribution);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './media/quickInput.css';\r\nimport { NO_KEY_MODS, ItemActivation, QuickInputHideReason } from '../common/quickInput.js';\r\nimport * as dom from '../../../browser/dom.js';\r\nimport { CancellationToken } from '../../../common/cancellation.js';\r\nimport { QuickInputList, QuickInputListFocus } from './quickInputList.js';\r\nimport { QuickInputBox } from './quickInputBox.js';\r\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { CountBadge } from '../../../browser/ui/countBadge/countBadge.js';\r\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { Button } from '../../../browser/ui/button/button.js';\r\nimport { dispose, Disposable, DisposableStore } from '../../../common/lifecycle.js';\r\nimport Severity from '../../../common/severity.js';\r\nimport { ActionBar } from '../../../browser/ui/actionbar/actionbar.js';\r\nimport { Action } from '../../../common/actions.js';\r\nimport { equals } from '../../../common/arrays.js';\r\nimport { TimeoutTimer } from '../../../common/async.js';\r\nimport { getIconClass } from './quickInputUtils.js';\r\nimport { registerCodicon, Codicon } from '../../../common/codicons.js';\r\nimport { renderLabelWithIcons } from '../../../browser/ui/iconLabel/iconLabels.js';\r\nimport { isIOS } from '../../../common/platform.js';\r\nconst $ = dom.$;\r\nconst backButtonIcon = registerCodicon('quick-input-back', Codicon.arrowLeft);\r\nconst backButton = {\r\n    iconClass: backButtonIcon.classNames,\r\n    tooltip: localize('quickInput.back', \"Back\"),\r\n    handle: -1 // TODO\r\n};\r\nclass QuickInput extends Disposable {\r\n    constructor(ui) {\r\n        super();\r\n        this.ui = ui;\r\n        this.visible = false;\r\n        this._enabled = true;\r\n        this._busy = false;\r\n        this._ignoreFocusOut = false;\r\n        this._buttons = [];\r\n        this.noValidationMessage = QuickInput.noPromptMessage;\r\n        this._severity = Severity.Ignore;\r\n        this.buttonsUpdated = false;\r\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\r\n        this.onDidHideEmitter = this._register(new Emitter());\r\n        this.onDisposeEmitter = this._register(new Emitter());\r\n        this.visibleDisposables = this._register(new DisposableStore());\r\n        this.onDidHide = this.onDidHideEmitter.event;\r\n    }\r\n    get title() {\r\n        return this._title;\r\n    }\r\n    set title(title) {\r\n        this._title = title;\r\n        this.update();\r\n    }\r\n    get description() {\r\n        return this._description;\r\n    }\r\n    set description(description) {\r\n        this._description = description;\r\n        this.update();\r\n    }\r\n    get step() {\r\n        return this._steps;\r\n    }\r\n    set step(step) {\r\n        this._steps = step;\r\n        this.update();\r\n    }\r\n    get totalSteps() {\r\n        return this._totalSteps;\r\n    }\r\n    set totalSteps(totalSteps) {\r\n        this._totalSteps = totalSteps;\r\n        this.update();\r\n    }\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        this._enabled = enabled;\r\n        this.update();\r\n    }\r\n    get contextKey() {\r\n        return this._contextKey;\r\n    }\r\n    set contextKey(contextKey) {\r\n        this._contextKey = contextKey;\r\n        this.update();\r\n    }\r\n    get busy() {\r\n        return this._busy;\r\n    }\r\n    set busy(busy) {\r\n        this._busy = busy;\r\n        this.update();\r\n    }\r\n    get ignoreFocusOut() {\r\n        return this._ignoreFocusOut;\r\n    }\r\n    set ignoreFocusOut(ignoreFocusOut) {\r\n        const shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\r\n        this._ignoreFocusOut = ignoreFocusOut && !isIOS;\r\n        if (shouldUpdate) {\r\n            this.update();\r\n        }\r\n    }\r\n    get buttons() {\r\n        return this._buttons;\r\n    }\r\n    set buttons(buttons) {\r\n        this._buttons = buttons;\r\n        this.buttonsUpdated = true;\r\n        this.update();\r\n    }\r\n    get validationMessage() {\r\n        return this._validationMessage;\r\n    }\r\n    set validationMessage(validationMessage) {\r\n        this._validationMessage = validationMessage;\r\n        this.update();\r\n    }\r\n    get severity() {\r\n        return this._severity;\r\n    }\r\n    set severity(severity) {\r\n        this._severity = severity;\r\n        this.update();\r\n    }\r\n    show() {\r\n        if (this.visible) {\r\n            return;\r\n        }\r\n        this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\r\n            if (this.buttons.indexOf(button) !== -1) {\r\n                this.onDidTriggerButtonEmitter.fire(button);\r\n            }\r\n        }));\r\n        this.ui.show(this);\r\n        this.visible = true;\r\n        this.update();\r\n    }\r\n    hide() {\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        this.ui.hide();\r\n    }\r\n    didHide(reason = QuickInputHideReason.Other) {\r\n        this.visible = false;\r\n        this.visibleDisposables.clear();\r\n        this.onDidHideEmitter.fire({ reason });\r\n    }\r\n    update() {\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        const title = this.getTitle();\r\n        if (title && this.ui.title.textContent !== title) {\r\n            this.ui.title.textContent = title;\r\n        }\r\n        else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\r\n            this.ui.title.innerText = '\\u00a0;';\r\n        }\r\n        const description = this.getDescription();\r\n        if (this.ui.description1.textContent !== description) {\r\n            this.ui.description1.textContent = description;\r\n        }\r\n        if (this.ui.description2.textContent !== description) {\r\n            this.ui.description2.textContent = description;\r\n        }\r\n        if (this.busy && !this.busyDelay) {\r\n            this.busyDelay = new TimeoutTimer();\r\n            this.busyDelay.setIfNotSet(() => {\r\n                if (this.visible) {\r\n                    this.ui.progressBar.infinite();\r\n                }\r\n            }, 800);\r\n        }\r\n        if (!this.busy && this.busyDelay) {\r\n            this.ui.progressBar.stop();\r\n            this.busyDelay.cancel();\r\n            this.busyDelay = undefined;\r\n        }\r\n        if (this.buttonsUpdated) {\r\n            this.buttonsUpdated = false;\r\n            this.ui.leftActionBar.clear();\r\n            const leftButtons = this.buttons.filter(button => button === backButton);\r\n            this.ui.leftActionBar.push(leftButtons.map((button, index) => {\r\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\r\n                    this.onDidTriggerButtonEmitter.fire(button);\r\n                }));\r\n                action.tooltip = button.tooltip || '';\r\n                return action;\r\n            }), { icon: true, label: false });\r\n            this.ui.rightActionBar.clear();\r\n            const rightButtons = this.buttons.filter(button => button !== backButton);\r\n            this.ui.rightActionBar.push(rightButtons.map((button, index) => {\r\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\r\n                    this.onDidTriggerButtonEmitter.fire(button);\r\n                }));\r\n                action.tooltip = button.tooltip || '';\r\n                return action;\r\n            }), { icon: true, label: false });\r\n        }\r\n        this.ui.ignoreFocusOut = this.ignoreFocusOut;\r\n        this.ui.setEnabled(this.enabled);\r\n        this.ui.setContextKey(this.contextKey);\r\n        const validationMessage = this.validationMessage || this.noValidationMessage;\r\n        if (this._lastValidationMessage !== validationMessage) {\r\n            this._lastValidationMessage = validationMessage;\r\n            dom.reset(this.ui.message, ...renderLabelWithIcons(validationMessage));\r\n        }\r\n        if (this._lastSeverity !== this.severity) {\r\n            this._lastSeverity = this.severity;\r\n            this.showMessageDecoration(this.severity);\r\n        }\r\n    }\r\n    getTitle() {\r\n        if (this.title && this.step) {\r\n            return `${this.title} (${this.getSteps()})`;\r\n        }\r\n        if (this.title) {\r\n            return this.title;\r\n        }\r\n        if (this.step) {\r\n            return this.getSteps();\r\n        }\r\n        return '';\r\n    }\r\n    getDescription() {\r\n        return this.description || '';\r\n    }\r\n    getSteps() {\r\n        if (this.step && this.totalSteps) {\r\n            return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\r\n        }\r\n        if (this.step) {\r\n            return String(this.step);\r\n        }\r\n        return '';\r\n    }\r\n    showMessageDecoration(severity) {\r\n        this.ui.inputBox.showDecoration(severity);\r\n        if (severity !== Severity.Ignore) {\r\n            const styles = this.ui.inputBox.stylesForType(severity);\r\n            this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\r\n            this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\r\n            this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\r\n            this.ui.message.style.paddingBottom = '4px';\r\n        }\r\n        else {\r\n            this.ui.message.style.color = '';\r\n            this.ui.message.style.backgroundColor = '';\r\n            this.ui.message.style.border = '';\r\n            this.ui.message.style.paddingBottom = '';\r\n        }\r\n    }\r\n    dispose() {\r\n        this.hide();\r\n        this.onDisposeEmitter.fire();\r\n        super.dispose();\r\n    }\r\n}\r\nQuickInput.noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\");\r\nclass QuickPick extends QuickInput {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._value = '';\r\n        this.onDidChangeValueEmitter = this._register(new Emitter());\r\n        this.onWillAcceptEmitter = this._register(new Emitter());\r\n        this.onDidAcceptEmitter = this._register(new Emitter());\r\n        this.onDidCustomEmitter = this._register(new Emitter());\r\n        this._items = [];\r\n        this.itemsUpdated = false;\r\n        this._canSelectMany = false;\r\n        this._canAcceptInBackground = false;\r\n        this._matchOnDescription = false;\r\n        this._matchOnDetail = false;\r\n        this._matchOnLabel = true;\r\n        this._sortByLabel = true;\r\n        this._autoFocusOnList = true;\r\n        this._itemActivation = this.ui.isScreenReaderOptimized() ? ItemActivation.NONE /* https://github.com/microsoft/vscode/issues/57501 */ : ItemActivation.FIRST;\r\n        this._activeItems = [];\r\n        this.activeItemsUpdated = false;\r\n        this.activeItemsToConfirm = [];\r\n        this.onDidChangeActiveEmitter = this._register(new Emitter());\r\n        this._selectedItems = [];\r\n        this.selectedItemsUpdated = false;\r\n        this.selectedItemsToConfirm = [];\r\n        this.onDidChangeSelectionEmitter = this._register(new Emitter());\r\n        this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\r\n        this.valueSelectionUpdated = true;\r\n        this._ok = 'default';\r\n        this._customButton = false;\r\n        this.filterValue = (value) => value;\r\n        this.onDidChangeValue = this.onDidChangeValueEmitter.event;\r\n        this.onWillAccept = this.onWillAcceptEmitter.event;\r\n        this.onDidAccept = this.onDidAcceptEmitter.event;\r\n        this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\r\n        this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\r\n        this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\r\n    }\r\n    get quickNavigate() {\r\n        return this._quickNavigate;\r\n    }\r\n    set quickNavigate(quickNavigate) {\r\n        this._quickNavigate = quickNavigate;\r\n        this.update();\r\n    }\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value) {\r\n        if (this._value !== value) {\r\n            this._value = value || '';\r\n            this.update();\r\n            this.onDidChangeValueEmitter.fire(this._value);\r\n        }\r\n    }\r\n    set ariaLabel(ariaLabel) {\r\n        this._ariaLabel = ariaLabel;\r\n        this.update();\r\n    }\r\n    get ariaLabel() {\r\n        return this._ariaLabel;\r\n    }\r\n    get placeholder() {\r\n        return this._placeholder;\r\n    }\r\n    set placeholder(placeholder) {\r\n        this._placeholder = placeholder;\r\n        this.update();\r\n    }\r\n    get items() {\r\n        return this._items;\r\n    }\r\n    set items(items) {\r\n        this._items = items;\r\n        this.itemsUpdated = true;\r\n        this.update();\r\n    }\r\n    get canSelectMany() {\r\n        return this._canSelectMany;\r\n    }\r\n    set canSelectMany(canSelectMany) {\r\n        this._canSelectMany = canSelectMany;\r\n        this.update();\r\n    }\r\n    get canAcceptInBackground() {\r\n        return this._canAcceptInBackground;\r\n    }\r\n    set canAcceptInBackground(canAcceptInBackground) {\r\n        this._canAcceptInBackground = canAcceptInBackground;\r\n    }\r\n    get matchOnDescription() {\r\n        return this._matchOnDescription;\r\n    }\r\n    set matchOnDescription(matchOnDescription) {\r\n        this._matchOnDescription = matchOnDescription;\r\n        this.update();\r\n    }\r\n    get matchOnDetail() {\r\n        return this._matchOnDetail;\r\n    }\r\n    set matchOnDetail(matchOnDetail) {\r\n        this._matchOnDetail = matchOnDetail;\r\n        this.update();\r\n    }\r\n    get matchOnLabel() {\r\n        return this._matchOnLabel;\r\n    }\r\n    set matchOnLabel(matchOnLabel) {\r\n        this._matchOnLabel = matchOnLabel;\r\n        this.update();\r\n    }\r\n    get sortByLabel() {\r\n        return this._sortByLabel;\r\n    }\r\n    set sortByLabel(sortByLabel) {\r\n        this._sortByLabel = sortByLabel;\r\n        this.update();\r\n    }\r\n    get autoFocusOnList() {\r\n        return this._autoFocusOnList;\r\n    }\r\n    set autoFocusOnList(autoFocusOnList) {\r\n        this._autoFocusOnList = autoFocusOnList;\r\n        this.update();\r\n    }\r\n    get itemActivation() {\r\n        return this._itemActivation;\r\n    }\r\n    set itemActivation(itemActivation) {\r\n        this._itemActivation = itemActivation;\r\n    }\r\n    get activeItems() {\r\n        return this._activeItems;\r\n    }\r\n    set activeItems(activeItems) {\r\n        this._activeItems = activeItems;\r\n        this.activeItemsUpdated = true;\r\n        this.update();\r\n    }\r\n    get selectedItems() {\r\n        return this._selectedItems;\r\n    }\r\n    set selectedItems(selectedItems) {\r\n        this._selectedItems = selectedItems;\r\n        this.selectedItemsUpdated = true;\r\n        this.update();\r\n    }\r\n    get keyMods() {\r\n        if (this._quickNavigate) {\r\n            // Disable keyMods when quick navigate is enabled\r\n            // because in this model the interaction is purely\r\n            // keyboard driven and Ctrl/Alt are typically\r\n            // pressed and hold during this interaction.\r\n            return NO_KEY_MODS;\r\n        }\r\n        return this.ui.keyMods;\r\n    }\r\n    set valueSelection(valueSelection) {\r\n        this._valueSelection = valueSelection;\r\n        this.valueSelectionUpdated = true;\r\n        this.update();\r\n    }\r\n    get customButton() {\r\n        return this._customButton;\r\n    }\r\n    set customButton(showCustomButton) {\r\n        this._customButton = showCustomButton;\r\n        this.update();\r\n    }\r\n    get customLabel() {\r\n        return this._customButtonLabel;\r\n    }\r\n    set customLabel(label) {\r\n        this._customButtonLabel = label;\r\n        this.update();\r\n    }\r\n    get customHover() {\r\n        return this._customButtonHover;\r\n    }\r\n    set customHover(hover) {\r\n        this._customButtonHover = hover;\r\n        this.update();\r\n    }\r\n    get ok() {\r\n        return this._ok;\r\n    }\r\n    set ok(showOkButton) {\r\n        this._ok = showOkButton;\r\n        this.update();\r\n    }\r\n    get hideInput() {\r\n        return !!this._hideInput;\r\n    }\r\n    set hideInput(hideInput) {\r\n        this._hideInput = hideInput;\r\n        this.update();\r\n    }\r\n    trySelectFirst() {\r\n        if (this.autoFocusOnList) {\r\n            if (!this.canSelectMany) {\r\n                this.ui.list.focus(QuickInputListFocus.First);\r\n            }\r\n        }\r\n    }\r\n    show() {\r\n        if (!this.visible) {\r\n            this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\r\n                if (value === this.value) {\r\n                    return;\r\n                }\r\n                this._value = value;\r\n                const didFilter = this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\r\n                if (didFilter) {\r\n                    this.trySelectFirst();\r\n                }\r\n                this.onDidChangeValueEmitter.fire(value);\r\n            }));\r\n            this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\r\n                if (!this.autoFocusOnList) {\r\n                    this.ui.list.clearFocus();\r\n                }\r\n            }));\r\n            this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown((event) => {\r\n                switch (event.keyCode) {\r\n                    case 18 /* DownArrow */:\r\n                        this.ui.list.focus(QuickInputListFocus.Next);\r\n                        if (this.canSelectMany) {\r\n                            this.ui.list.domFocus();\r\n                        }\r\n                        dom.EventHelper.stop(event, true);\r\n                        break;\r\n                    case 16 /* UpArrow */:\r\n                        if (this.ui.list.getFocusedElements().length) {\r\n                            this.ui.list.focus(QuickInputListFocus.Previous);\r\n                        }\r\n                        else {\r\n                            this.ui.list.focus(QuickInputListFocus.Last);\r\n                        }\r\n                        if (this.canSelectMany) {\r\n                            this.ui.list.domFocus();\r\n                        }\r\n                        dom.EventHelper.stop(event, true);\r\n                        break;\r\n                    case 12 /* PageDown */:\r\n                        this.ui.list.focus(QuickInputListFocus.NextPage);\r\n                        if (this.canSelectMany) {\r\n                            this.ui.list.domFocus();\r\n                        }\r\n                        dom.EventHelper.stop(event, true);\r\n                        break;\r\n                    case 11 /* PageUp */:\r\n                        this.ui.list.focus(QuickInputListFocus.PreviousPage);\r\n                        if (this.canSelectMany) {\r\n                            this.ui.list.domFocus();\r\n                        }\r\n                        dom.EventHelper.stop(event, true);\r\n                        break;\r\n                    case 17 /* RightArrow */:\r\n                        if (!this._canAcceptInBackground) {\r\n                            return; // needs to be enabled\r\n                        }\r\n                        if (!this.ui.inputBox.isSelectionAtEnd()) {\r\n                            return; // ensure input box selection at end\r\n                        }\r\n                        if (this.activeItems[0]) {\r\n                            this._selectedItems = [this.activeItems[0]];\r\n                            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\r\n                            this.handleAccept(true);\r\n                        }\r\n                        break;\r\n                    case 14 /* Home */:\r\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\r\n                            this.ui.list.focus(QuickInputListFocus.First);\r\n                            dom.EventHelper.stop(event, true);\r\n                        }\r\n                        break;\r\n                    case 13 /* End */:\r\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\r\n                            this.ui.list.focus(QuickInputListFocus.Last);\r\n                            dom.EventHelper.stop(event, true);\r\n                        }\r\n                        break;\r\n                }\r\n            }));\r\n            this.visibleDisposables.add(this.ui.onDidAccept(() => {\r\n                if (!this.canSelectMany && this.activeItems[0]) {\r\n                    this._selectedItems = [this.activeItems[0]];\r\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\r\n                }\r\n                this.handleAccept(false);\r\n            }));\r\n            this.visibleDisposables.add(this.ui.onDidCustom(() => {\r\n                this.onDidCustomEmitter.fire();\r\n            }));\r\n            this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\r\n                if (this.activeItemsUpdated) {\r\n                    return; // Expect another event.\r\n                }\r\n                if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\r\n                    return;\r\n                }\r\n                this._activeItems = focusedItems;\r\n                this.onDidChangeActiveEmitter.fire(focusedItems);\r\n            }));\r\n            this.visibleDisposables.add(this.ui.list.onDidChangeSelection(({ items: selectedItems, event }) => {\r\n                if (this.canSelectMany) {\r\n                    if (selectedItems.length) {\r\n                        this.ui.list.setSelectedElements([]);\r\n                    }\r\n                    return;\r\n                }\r\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\r\n                    return;\r\n                }\r\n                this._selectedItems = selectedItems;\r\n                this.onDidChangeSelectionEmitter.fire(selectedItems);\r\n                if (selectedItems.length) {\r\n                    this.handleAccept(event instanceof MouseEvent && event.button === 1 /* mouse middle click */);\r\n                }\r\n            }));\r\n            this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\r\n                if (!this.canSelectMany) {\r\n                    return;\r\n                }\r\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\r\n                    return;\r\n                }\r\n                this._selectedItems = checkedItems;\r\n                this.onDidChangeSelectionEmitter.fire(checkedItems);\r\n            }));\r\n            this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\r\n            this.visibleDisposables.add(this.registerQuickNavigation());\r\n            this.valueSelectionUpdated = true;\r\n        }\r\n        super.show(); // TODO: Why have show() bubble up while update() trickles down? (Could move setComboboxAccessibility() here.)\r\n    }\r\n    handleAccept(inBackground) {\r\n        // Figure out veto via `onWillAccept` event\r\n        let veto = false;\r\n        this.onWillAcceptEmitter.fire({ veto: () => veto = true });\r\n        // Continue with `onDidAccpet` if no veto\r\n        if (!veto) {\r\n            this.onDidAcceptEmitter.fire({ inBackground });\r\n        }\r\n    }\r\n    registerQuickNavigation() {\r\n        return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\r\n            if (this.canSelectMany || !this._quickNavigate) {\r\n                return;\r\n            }\r\n            const keyboardEvent = new StandardKeyboardEvent(e);\r\n            const keyCode = keyboardEvent.keyCode;\r\n            // Select element when keys are pressed that signal it\r\n            const quickNavKeys = this._quickNavigate.keybindings;\r\n            const wasTriggerKeyPressed = quickNavKeys.some(k => {\r\n                const [firstPart, chordPart] = k.getParts();\r\n                if (chordPart) {\r\n                    return false;\r\n                }\r\n                if (firstPart.shiftKey && keyCode === 4 /* Shift */) {\r\n                    if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\r\n                        return false; // this is an optimistic check for the shift key being used to navigate back in quick input\r\n                    }\r\n                    return true;\r\n                }\r\n                if (firstPart.altKey && keyCode === 6 /* Alt */) {\r\n                    return true;\r\n                }\r\n                if (firstPart.ctrlKey && keyCode === 5 /* Ctrl */) {\r\n                    return true;\r\n                }\r\n                if (firstPart.metaKey && keyCode === 57 /* Meta */) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (wasTriggerKeyPressed) {\r\n                if (this.activeItems[0]) {\r\n                    this._selectedItems = [this.activeItems[0]];\r\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\r\n                    this.handleAccept(false);\r\n                }\r\n                // Unset quick navigate after press. It is only valid once\r\n                // and should not result in any behaviour change afterwards\r\n                // if the picker remains open because there was no active item\r\n                this._quickNavigate = undefined;\r\n            }\r\n        });\r\n    }\r\n    update() {\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        const hideInput = !!this._hideInput && this._items.length > 0;\r\n        this.ui.container.classList.toggle('hidden-input', hideInput && !this.description);\r\n        const visibilities = {\r\n            title: !!this.title || !!this.step || !!this.buttons.length,\r\n            description: !!this.description,\r\n            checkAll: this.canSelectMany && !this._hideCheckAll,\r\n            checkBox: this.canSelectMany,\r\n            inputBox: !hideInput,\r\n            progressBar: !hideInput,\r\n            visibleCount: true,\r\n            count: this.canSelectMany,\r\n            ok: this.ok === 'default' ? this.canSelectMany : this.ok,\r\n            list: true,\r\n            message: !!this.validationMessage,\r\n            customButton: this.customButton\r\n        };\r\n        this.ui.setVisibilities(visibilities);\r\n        super.update();\r\n        if (this.ui.inputBox.value !== this.value) {\r\n            this.ui.inputBox.value = this.value;\r\n        }\r\n        if (this.valueSelectionUpdated) {\r\n            this.valueSelectionUpdated = false;\r\n            this.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\r\n        }\r\n        if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\r\n            this.ui.inputBox.placeholder = (this.placeholder || '');\r\n        }\r\n        const ariaLabel = this.ariaLabel || this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\r\n        if (this.ui.inputBox.ariaLabel !== ariaLabel) {\r\n            this.ui.inputBox.ariaLabel = ariaLabel;\r\n        }\r\n        this.ui.list.matchOnDescription = this.matchOnDescription;\r\n        this.ui.list.matchOnDetail = this.matchOnDetail;\r\n        this.ui.list.matchOnLabel = this.matchOnLabel;\r\n        this.ui.list.sortByLabel = this.sortByLabel;\r\n        if (this.itemsUpdated) {\r\n            this.itemsUpdated = false;\r\n            this.ui.list.setElements(this.items);\r\n            this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\r\n            this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\r\n            this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\r\n            this.ui.count.setCount(this.ui.list.getCheckedCount());\r\n            switch (this._itemActivation) {\r\n                case ItemActivation.NONE:\r\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\r\n                    break;\r\n                case ItemActivation.SECOND:\r\n                    this.ui.list.focus(QuickInputListFocus.Second);\r\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\r\n                    break;\r\n                case ItemActivation.LAST:\r\n                    this.ui.list.focus(QuickInputListFocus.Last);\r\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\r\n                    break;\r\n                default:\r\n                    this.trySelectFirst();\r\n                    break;\r\n            }\r\n        }\r\n        if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\r\n            if (this.canSelectMany) {\r\n                this.ui.list.clearFocus();\r\n            }\r\n            else {\r\n                this.trySelectFirst();\r\n            }\r\n        }\r\n        if (this.activeItemsUpdated) {\r\n            this.activeItemsUpdated = false;\r\n            this.activeItemsToConfirm = this._activeItems;\r\n            this.ui.list.setFocusedElements(this.activeItems);\r\n            if (this.activeItemsToConfirm === this._activeItems) {\r\n                this.activeItemsToConfirm = null;\r\n            }\r\n        }\r\n        if (this.selectedItemsUpdated) {\r\n            this.selectedItemsUpdated = false;\r\n            this.selectedItemsToConfirm = this._selectedItems;\r\n            if (this.canSelectMany) {\r\n                this.ui.list.setCheckedElements(this.selectedItems);\r\n            }\r\n            else {\r\n                this.ui.list.setSelectedElements(this.selectedItems);\r\n            }\r\n            if (this.selectedItemsToConfirm === this._selectedItems) {\r\n                this.selectedItemsToConfirm = null;\r\n            }\r\n        }\r\n        this.ui.customButton.label = this.customLabel || '';\r\n        this.ui.customButton.element.title = this.customHover || '';\r\n        this.ui.setComboboxAccessibility(true);\r\n        if (!visibilities.inputBox) {\r\n            // we need to move focus into the tree to detect keybindings\r\n            // properly when the input box is not visible (quick nav)\r\n            this.ui.list.domFocus();\r\n            // Focus the first element in the list if multiselect is enabled\r\n            if (this.canSelectMany) {\r\n                this.ui.list.focus(QuickInputListFocus.First);\r\n            }\r\n        }\r\n    }\r\n}\r\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\r\nexport class QuickInputController extends Disposable {\r\n    constructor(options) {\r\n        super();\r\n        this.options = options;\r\n        this.comboboxAccessibility = false;\r\n        this.enabled = true;\r\n        this.onDidAcceptEmitter = this._register(new Emitter());\r\n        this.onDidCustomEmitter = this._register(new Emitter());\r\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\r\n        this.keyMods = { ctrlCmd: false, alt: false };\r\n        this.controller = null;\r\n        this.onShowEmitter = this._register(new Emitter());\r\n        this.onShow = this.onShowEmitter.event;\r\n        this.onHideEmitter = this._register(new Emitter());\r\n        this.onHide = this.onHideEmitter.event;\r\n        this.idPrefix = options.idPrefix;\r\n        this.parentElement = options.container;\r\n        this.styles = options.styles;\r\n        this.registerKeyModsListeners();\r\n    }\r\n    registerKeyModsListeners() {\r\n        const listener = (e) => {\r\n            this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\r\n            this.keyMods.alt = e.altKey;\r\n        };\r\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\r\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\r\n        this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\r\n    }\r\n    getUI() {\r\n        if (this.ui) {\r\n            return this.ui;\r\n        }\r\n        const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\r\n        container.tabIndex = -1;\r\n        container.style.display = 'none';\r\n        const styleSheet = dom.createStyleSheet(container);\r\n        const titleBar = dom.append(container, $('.quick-input-titlebar'));\r\n        const leftActionBar = this._register(new ActionBar(titleBar));\r\n        leftActionBar.domNode.classList.add('quick-input-left-action-bar');\r\n        const title = dom.append(titleBar, $('.quick-input-title'));\r\n        const rightActionBar = this._register(new ActionBar(titleBar));\r\n        rightActionBar.domNode.classList.add('quick-input-right-action-bar');\r\n        const description1 = dom.append(container, $('.quick-input-description'));\r\n        const headerContainer = dom.append(container, $('.quick-input-header'));\r\n        const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\r\n        checkAll.type = 'checkbox';\r\n        this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\r\n            const checked = checkAll.checked;\r\n            list.setAllVisibleChecked(checked);\r\n        }));\r\n        this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\r\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space'...\r\n                inputBox.setFocus();\r\n            }\r\n        }));\r\n        const description2 = dom.append(headerContainer, $('.quick-input-description'));\r\n        const extraContainer = dom.append(headerContainer, $('.quick-input-and-message'));\r\n        const filterContainer = dom.append(extraContainer, $('.quick-input-filter'));\r\n        const inputBox = this._register(new QuickInputBox(filterContainer));\r\n        inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\r\n        const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\r\n        visibleCountContainer.setAttribute('aria-live', 'polite');\r\n        visibleCountContainer.setAttribute('aria-atomic', 'true');\r\n        const visibleCount = new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") });\r\n        const countContainer = dom.append(filterContainer, $('.quick-input-count'));\r\n        countContainer.setAttribute('aria-live', 'polite');\r\n        const count = new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") });\r\n        const okContainer = dom.append(headerContainer, $('.quick-input-action'));\r\n        const ok = new Button(okContainer);\r\n        ok.label = localize('ok', \"OK\");\r\n        this._register(ok.onDidClick(e => {\r\n            this.onDidAcceptEmitter.fire();\r\n        }));\r\n        const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\r\n        const customButton = new Button(customButtonContainer);\r\n        customButton.label = localize('custom', \"Custom\");\r\n        this._register(customButton.onDidClick(e => {\r\n            this.onDidCustomEmitter.fire();\r\n        }));\r\n        const message = dom.append(extraContainer, $(`#${this.idPrefix}message.quick-input-message`));\r\n        const list = this._register(new QuickInputList(container, this.idPrefix + 'list', this.options));\r\n        this._register(list.onChangedAllVisibleChecked(checked => {\r\n            checkAll.checked = checked;\r\n        }));\r\n        this._register(list.onChangedVisibleCount(c => {\r\n            visibleCount.setCount(c);\r\n        }));\r\n        this._register(list.onChangedCheckedCount(c => {\r\n            count.setCount(c);\r\n        }));\r\n        this._register(list.onLeave(() => {\r\n            // Defer to avoid the input field reacting to the triggering key.\r\n            setTimeout(() => {\r\n                inputBox.setFocus();\r\n                if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\r\n                    list.clearFocus();\r\n                }\r\n            }, 0);\r\n        }));\r\n        this._register(list.onDidChangeFocus(() => {\r\n            if (this.comboboxAccessibility) {\r\n                this.getUI().inputBox.setAttribute('aria-activedescendant', this.getUI().list.getActiveDescendant() || '');\r\n            }\r\n        }));\r\n        const progressBar = new ProgressBar(container);\r\n        progressBar.getContainer().classList.add('quick-input-progress');\r\n        const focusTracker = dom.trackFocus(container);\r\n        this._register(focusTracker);\r\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\r\n            this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\r\n        }, true));\r\n        this._register(focusTracker.onDidBlur(() => {\r\n            if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\r\n                this.hide(QuickInputHideReason.Blur);\r\n            }\r\n            this.previousFocusElement = undefined;\r\n        }));\r\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e) => {\r\n            inputBox.setFocus();\r\n        }));\r\n        this._register(dom.addDisposableListener(container, dom.EventType.KEY_DOWN, (e) => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            switch (event.keyCode) {\r\n                case 3 /* Enter */:\r\n                    dom.EventHelper.stop(e, true);\r\n                    this.onDidAcceptEmitter.fire();\r\n                    break;\r\n                case 9 /* Escape */:\r\n                    dom.EventHelper.stop(e, true);\r\n                    this.hide(QuickInputHideReason.Gesture);\r\n                    break;\r\n                case 2 /* Tab */:\r\n                    if (!event.altKey && !event.ctrlKey && !event.metaKey) {\r\n                        const selectors = ['.action-label.codicon'];\r\n                        if (container.classList.contains('show-checkboxes')) {\r\n                            selectors.push('input');\r\n                        }\r\n                        else {\r\n                            selectors.push('input[type=text]');\r\n                        }\r\n                        if (this.getUI().list.isDisplayed()) {\r\n                            selectors.push('.monaco-list');\r\n                        }\r\n                        const stops = container.querySelectorAll(selectors.join(', '));\r\n                        if (event.shiftKey && event.target === stops[0]) {\r\n                            dom.EventHelper.stop(e, true);\r\n                            stops[stops.length - 1].focus();\r\n                        }\r\n                        else if (!event.shiftKey && event.target === stops[stops.length - 1]) {\r\n                            dom.EventHelper.stop(e, true);\r\n                            stops[0].focus();\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }));\r\n        this.ui = {\r\n            container,\r\n            styleSheet,\r\n            leftActionBar,\r\n            titleBar,\r\n            title,\r\n            description1,\r\n            description2,\r\n            rightActionBar,\r\n            checkAll,\r\n            filterContainer,\r\n            inputBox,\r\n            visibleCountContainer,\r\n            visibleCount,\r\n            countContainer,\r\n            count,\r\n            okContainer,\r\n            ok,\r\n            message,\r\n            customButtonContainer,\r\n            customButton,\r\n            list,\r\n            progressBar,\r\n            onDidAccept: this.onDidAcceptEmitter.event,\r\n            onDidCustom: this.onDidCustomEmitter.event,\r\n            onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\r\n            ignoreFocusOut: false,\r\n            keyMods: this.keyMods,\r\n            isScreenReaderOptimized: () => this.options.isScreenReaderOptimized(),\r\n            show: controller => this.show(controller),\r\n            hide: () => this.hide(),\r\n            setVisibilities: visibilities => this.setVisibilities(visibilities),\r\n            setComboboxAccessibility: enabled => this.setComboboxAccessibility(enabled),\r\n            setEnabled: enabled => this.setEnabled(enabled),\r\n            setContextKey: contextKey => this.options.setContextKey(contextKey),\r\n        };\r\n        this.updateStyles();\r\n        return this.ui;\r\n    }\r\n    pick(picks, options = {}, token = CancellationToken.None) {\r\n        return new Promise((doResolve, reject) => {\r\n            let resolve = (result) => {\r\n                resolve = doResolve;\r\n                if (options.onKeyMods) {\r\n                    options.onKeyMods(input.keyMods);\r\n                }\r\n                doResolve(result);\r\n            };\r\n            if (token.isCancellationRequested) {\r\n                resolve(undefined);\r\n                return;\r\n            }\r\n            const input = this.createQuickPick();\r\n            let activeItem;\r\n            const disposables = [\r\n                input,\r\n                input.onDidAccept(() => {\r\n                    if (input.canSelectMany) {\r\n                        resolve(input.selectedItems.slice());\r\n                        input.hide();\r\n                    }\r\n                    else {\r\n                        const result = input.activeItems[0];\r\n                        if (result) {\r\n                            resolve(result);\r\n                            input.hide();\r\n                        }\r\n                    }\r\n                }),\r\n                input.onDidChangeActive(items => {\r\n                    const focused = items[0];\r\n                    if (focused && options.onDidFocus) {\r\n                        options.onDidFocus(focused);\r\n                    }\r\n                }),\r\n                input.onDidChangeSelection(items => {\r\n                    if (!input.canSelectMany) {\r\n                        const result = items[0];\r\n                        if (result) {\r\n                            resolve(result);\r\n                            input.hide();\r\n                        }\r\n                    }\r\n                }),\r\n                input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), { removeItem: () => {\r\n                        const index = input.items.indexOf(event.item);\r\n                        if (index !== -1) {\r\n                            const items = input.items.slice();\r\n                            const removed = items.splice(index, 1);\r\n                            const activeItems = input.activeItems.filter((ai) => ai !== removed[0]);\r\n                            input.items = items;\r\n                            if (activeItems) {\r\n                                input.activeItems = activeItems;\r\n                            }\r\n                        }\r\n                    } }))),\r\n                input.onDidChangeValue(value => {\r\n                    if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\r\n                        input.activeItems = [activeItem];\r\n                    }\r\n                }),\r\n                token.onCancellationRequested(() => {\r\n                    input.hide();\r\n                }),\r\n                input.onDidHide(() => {\r\n                    dispose(disposables);\r\n                    resolve(undefined);\r\n                }),\r\n            ];\r\n            input.title = options.title;\r\n            input.canSelectMany = !!options.canPickMany;\r\n            input.placeholder = options.placeHolder;\r\n            input.ignoreFocusOut = !!options.ignoreFocusLost;\r\n            input.matchOnDescription = !!options.matchOnDescription;\r\n            input.matchOnDetail = !!options.matchOnDetail;\r\n            input.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\r\n            input.autoFocusOnList = (options.autoFocusOnList === undefined) || options.autoFocusOnList; // default to true\r\n            input.quickNavigate = options.quickNavigate;\r\n            input.contextKey = options.contextKey;\r\n            input.busy = true;\r\n            Promise.all([picks, options.activeItem])\r\n                .then(([items, _activeItem]) => {\r\n                activeItem = _activeItem;\r\n                input.busy = false;\r\n                input.items = items;\r\n                if (input.canSelectMany) {\r\n                    input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\r\n                }\r\n                if (activeItem) {\r\n                    input.activeItems = [activeItem];\r\n                }\r\n            });\r\n            input.show();\r\n            Promise.resolve(picks).then(undefined, err => {\r\n                reject(err);\r\n                input.hide();\r\n            });\r\n        });\r\n    }\r\n    createQuickPick() {\r\n        const ui = this.getUI();\r\n        return new QuickPick(ui);\r\n    }\r\n    show(controller) {\r\n        const ui = this.getUI();\r\n        this.onShowEmitter.fire();\r\n        const oldController = this.controller;\r\n        this.controller = controller;\r\n        if (oldController) {\r\n            oldController.didHide();\r\n        }\r\n        this.setEnabled(true);\r\n        ui.leftActionBar.clear();\r\n        ui.title.textContent = '';\r\n        ui.description1.textContent = '';\r\n        ui.description2.textContent = '';\r\n        ui.rightActionBar.clear();\r\n        ui.checkAll.checked = false;\r\n        // ui.inputBox.value = ''; Avoid triggering an event.\r\n        ui.inputBox.placeholder = '';\r\n        ui.inputBox.password = false;\r\n        ui.inputBox.showDecoration(Severity.Ignore);\r\n        ui.visibleCount.setCount(0);\r\n        ui.count.setCount(0);\r\n        dom.reset(ui.message);\r\n        ui.progressBar.stop();\r\n        ui.list.setElements([]);\r\n        ui.list.matchOnDescription = false;\r\n        ui.list.matchOnDetail = false;\r\n        ui.list.matchOnLabel = true;\r\n        ui.list.sortByLabel = true;\r\n        ui.ignoreFocusOut = false;\r\n        this.setComboboxAccessibility(false);\r\n        ui.inputBox.ariaLabel = '';\r\n        const backKeybindingLabel = this.options.backKeybindingLabel();\r\n        backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\r\n        ui.container.style.display = '';\r\n        this.updateLayout();\r\n        ui.inputBox.setFocus();\r\n    }\r\n    setVisibilities(visibilities) {\r\n        const ui = this.getUI();\r\n        ui.title.style.display = visibilities.title ? '' : 'none';\r\n        ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\r\n        ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\r\n        ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\r\n        ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\r\n        ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\r\n        ui.countContainer.style.display = visibilities.count ? '' : 'none';\r\n        ui.okContainer.style.display = visibilities.ok ? '' : 'none';\r\n        ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\r\n        ui.message.style.display = visibilities.message ? '' : 'none';\r\n        ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\r\n        ui.list.display(!!visibilities.list);\r\n        ui.container.classList[visibilities.checkBox ? 'add' : 'remove']('show-checkboxes');\r\n        this.updateLayout(); // TODO\r\n    }\r\n    setComboboxAccessibility(enabled) {\r\n        if (enabled !== this.comboboxAccessibility) {\r\n            const ui = this.getUI();\r\n            this.comboboxAccessibility = enabled;\r\n            if (this.comboboxAccessibility) {\r\n                ui.inputBox.setAttribute('role', 'combobox');\r\n                ui.inputBox.setAttribute('aria-haspopup', 'true');\r\n                ui.inputBox.setAttribute('aria-autocomplete', 'list');\r\n                ui.inputBox.setAttribute('aria-activedescendant', ui.list.getActiveDescendant() || '');\r\n            }\r\n            else {\r\n                ui.inputBox.removeAttribute('role');\r\n                ui.inputBox.removeAttribute('aria-haspopup');\r\n                ui.inputBox.removeAttribute('aria-autocomplete');\r\n                ui.inputBox.removeAttribute('aria-activedescendant');\r\n            }\r\n        }\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled !== this.enabled) {\r\n            this.enabled = enabled;\r\n            for (const item of this.getUI().leftActionBar.viewItems) {\r\n                item.getAction().enabled = enabled;\r\n            }\r\n            for (const item of this.getUI().rightActionBar.viewItems) {\r\n                item.getAction().enabled = enabled;\r\n            }\r\n            this.getUI().checkAll.disabled = !enabled;\r\n            // this.getUI().inputBox.enabled = enabled; Avoid loosing focus.\r\n            this.getUI().ok.enabled = enabled;\r\n            this.getUI().list.enabled = enabled;\r\n        }\r\n    }\r\n    hide(reason) {\r\n        var _a;\r\n        const controller = this.controller;\r\n        if (controller) {\r\n            const focusChanged = !((_a = this.ui) === null || _a === void 0 ? void 0 : _a.container.contains(document.activeElement));\r\n            this.controller = null;\r\n            this.onHideEmitter.fire();\r\n            this.getUI().container.style.display = 'none';\r\n            if (!focusChanged) {\r\n                if (this.previousFocusElement && this.previousFocusElement.offsetParent) {\r\n                    this.previousFocusElement.focus();\r\n                    this.previousFocusElement = undefined;\r\n                }\r\n                else {\r\n                    this.options.returnFocus();\r\n                }\r\n            }\r\n            controller.didHide(reason);\r\n        }\r\n    }\r\n    layout(dimension, titleBarOffset) {\r\n        this.dimension = dimension;\r\n        this.titleBarOffset = titleBarOffset;\r\n        this.updateLayout();\r\n    }\r\n    updateLayout() {\r\n        if (this.ui) {\r\n            this.ui.container.style.top = `${this.titleBarOffset}px`;\r\n            const style = this.ui.container.style;\r\n            const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\r\n            style.width = width + 'px';\r\n            style.marginLeft = '-' + (width / 2) + 'px';\r\n            this.ui.inputBox.layout();\r\n            this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\r\n        }\r\n    }\r\n    applyStyles(styles) {\r\n        this.styles = styles;\r\n        this.updateStyles();\r\n    }\r\n    updateStyles() {\r\n        if (this.ui) {\r\n            const { quickInputTitleBackground, quickInputBackground, quickInputForeground, contrastBorder, widgetShadow, } = this.styles.widget;\r\n            this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ? quickInputTitleBackground.toString() : '';\r\n            this.ui.container.style.backgroundColor = quickInputBackground ? quickInputBackground.toString() : '';\r\n            this.ui.container.style.color = quickInputForeground ? quickInputForeground.toString() : '';\r\n            this.ui.container.style.border = contrastBorder ? `1px solid ${contrastBorder}` : '';\r\n            this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\r\n            this.ui.inputBox.style(this.styles.inputBox);\r\n            this.ui.count.style(this.styles.countBadge);\r\n            this.ui.ok.style(this.styles.button);\r\n            this.ui.customButton.style(this.styles.button);\r\n            this.ui.progressBar.style(this.styles.progressBar);\r\n            this.ui.list.style(this.styles.list);\r\n            const content = [];\r\n            if (this.styles.list.pickerGroupBorder) {\r\n                content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.list.pickerGroupBorder}; }`);\r\n            }\r\n            if (this.styles.list.pickerGroupForeground) {\r\n                content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.list.pickerGroupForeground}; }`);\r\n            }\r\n            if (this.styles.keybindingLabel.keybindingLabelBackground ||\r\n                this.styles.keybindingLabel.keybindingLabelBorder ||\r\n                this.styles.keybindingLabel.keybindingLabelBottomBorder ||\r\n                this.styles.keybindingLabel.keybindingLabelShadow ||\r\n                this.styles.keybindingLabel.keybindingLabelForeground) {\r\n                content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\r\n                if (this.styles.keybindingLabel.keybindingLabelBackground) {\r\n                    content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\r\n                }\r\n                if (this.styles.keybindingLabel.keybindingLabelBorder) {\r\n                    // Order matters here. `border-color` must come before `border-bottom-color`.\r\n                    content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\r\n                }\r\n                if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\r\n                    content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\r\n                }\r\n                if (this.styles.keybindingLabel.keybindingLabelShadow) {\r\n                    content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\r\n                }\r\n                if (this.styles.keybindingLabel.keybindingLabelForeground) {\r\n                    content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\r\n                }\r\n                content.push('}');\r\n            }\r\n            const newStyles = content.join('\\n');\r\n            if (newStyles !== this.ui.styleSheet.textContent) {\r\n                this.ui.styleSheet.textContent = newStyles;\r\n            }\r\n        }\r\n    }\r\n}\r\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport const NO_KEY_MODS = { ctrlCmd: false, alt: false };\r\nexport var QuickInputHideReason;\r\n(function (QuickInputHideReason) {\r\n    /**\r\n     * Focus moved away from the quick input.\r\n     */\r\n    QuickInputHideReason[QuickInputHideReason[\"Blur\"] = 1] = \"Blur\";\r\n    /**\r\n     * An explicit user gesture, e.g. pressing Escape key.\r\n     */\r\n    QuickInputHideReason[QuickInputHideReason[\"Gesture\"] = 2] = \"Gesture\";\r\n    /**\r\n     * Anything else.\r\n     */\r\n    QuickInputHideReason[QuickInputHideReason[\"Other\"] = 3] = \"Other\";\r\n})(QuickInputHideReason || (QuickInputHideReason = {}));\r\nexport var ItemActivation;\r\n(function (ItemActivation) {\r\n    ItemActivation[ItemActivation[\"NONE\"] = 0] = \"NONE\";\r\n    ItemActivation[ItemActivation[\"FIRST\"] = 1] = \"FIRST\";\r\n    ItemActivation[ItemActivation[\"SECOND\"] = 2] = \"SECOND\";\r\n    ItemActivation[ItemActivation[\"LAST\"] = 3] = \"LAST\";\r\n})(ItemActivation || (ItemActivation = {}));\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './media/quickInput.css';\r\nimport * as dom from '../../../browser/dom.js';\r\nimport { dispose } from '../../../common/lifecycle.js';\r\nimport { matchesFuzzyIconAware, parseLabelWithIcons } from '../../../common/iconLabels.js';\r\nimport { compareAnything } from '../../../common/comparers.js';\r\nimport { Emitter, Event } from '../../../common/event.js';\r\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\r\nimport { IconLabel } from '../../../browser/ui/iconLabel/iconLabel.js';\r\nimport { HighlightedLabel } from '../../../browser/ui/highlightedlabel/highlightedLabel.js';\r\nimport { memoize } from '../../../common/decorators.js';\r\nimport { range } from '../../../common/arrays.js';\r\nimport * as platform from '../../../common/platform.js';\r\nimport { ActionBar } from '../../../browser/ui/actionbar/actionbar.js';\r\nimport { Action } from '../../../common/actions.js';\r\nimport { getIconClass } from './quickInputUtils.js';\r\nimport { withNullAsUndefined } from '../../../common/types.js';\r\nimport { KeybindingLabel } from '../../../browser/ui/keybindingLabel/keybindingLabel.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { getCodiconAriaLabel } from '../../../common/codicons.js';\r\nconst $ = dom.$;\r\nclass ListElement {\r\n    constructor(init) {\r\n        this.hidden = false;\r\n        this._onChecked = new Emitter();\r\n        this.onChecked = this._onChecked.event;\r\n        Object.assign(this, init);\r\n    }\r\n    get checked() {\r\n        return !!this._checked;\r\n    }\r\n    set checked(value) {\r\n        if (value !== this._checked) {\r\n            this._checked = value;\r\n            this._onChecked.fire(value);\r\n        }\r\n    }\r\n    dispose() {\r\n        this._onChecked.dispose();\r\n    }\r\n}\r\nclass ListElementRenderer {\r\n    get templateId() {\r\n        return ListElementRenderer.ID;\r\n    }\r\n    renderTemplate(container) {\r\n        const data = Object.create(null);\r\n        data.toDisposeElement = [];\r\n        data.toDisposeTemplate = [];\r\n        data.entry = dom.append(container, $('.quick-input-list-entry'));\r\n        // Checkbox\r\n        const label = dom.append(data.entry, $('label.quick-input-list-label'));\r\n        data.toDisposeTemplate.push(dom.addStandardDisposableListener(label, dom.EventType.CLICK, e => {\r\n            if (!data.checkbox.offsetParent) { // If checkbox not visible:\r\n                e.preventDefault(); // Prevent toggle of checkbox when it is immediately shown afterwards. #91740\r\n            }\r\n        }));\r\n        data.checkbox = dom.append(label, $('input.quick-input-list-checkbox'));\r\n        data.checkbox.type = 'checkbox';\r\n        data.toDisposeTemplate.push(dom.addStandardDisposableListener(data.checkbox, dom.EventType.CHANGE, e => {\r\n            data.element.checked = data.checkbox.checked;\r\n        }));\r\n        // Rows\r\n        const rows = dom.append(label, $('.quick-input-list-rows'));\r\n        const row1 = dom.append(rows, $('.quick-input-list-row'));\r\n        const row2 = dom.append(rows, $('.quick-input-list-row'));\r\n        // Label\r\n        data.label = new IconLabel(row1, { supportHighlights: true, supportDescriptionHighlights: true, supportIcons: true });\r\n        // Keybinding\r\n        const keybindingContainer = dom.append(row1, $('.quick-input-list-entry-keybinding'));\r\n        data.keybinding = new KeybindingLabel(keybindingContainer, platform.OS);\r\n        // Detail\r\n        const detailContainer = dom.append(row2, $('.quick-input-list-label-meta'));\r\n        data.detail = new HighlightedLabel(detailContainer, true);\r\n        // Separator\r\n        data.separator = dom.append(data.entry, $('.quick-input-list-separator'));\r\n        // Actions\r\n        data.actionBar = new ActionBar(data.entry);\r\n        data.actionBar.domNode.classList.add('quick-input-list-entry-action-bar');\r\n        data.toDisposeTemplate.push(data.actionBar);\r\n        return data;\r\n    }\r\n    renderElement(element, index, data) {\r\n        data.toDisposeElement = dispose(data.toDisposeElement);\r\n        data.element = element;\r\n        data.checkbox.checked = element.checked;\r\n        data.toDisposeElement.push(element.onChecked(checked => data.checkbox.checked = checked));\r\n        const { labelHighlights, descriptionHighlights, detailHighlights } = element;\r\n        // Label\r\n        const options = Object.create(null);\r\n        options.matches = labelHighlights || [];\r\n        options.descriptionTitle = element.saneDescription;\r\n        options.descriptionMatches = descriptionHighlights || [];\r\n        options.extraClasses = element.item.iconClasses;\r\n        options.italic = element.item.italic;\r\n        options.strikethrough = element.item.strikethrough;\r\n        data.label.setLabel(element.saneLabel, element.saneDescription, options);\r\n        // Keybinding\r\n        data.keybinding.set(element.item.keybinding);\r\n        // Meta\r\n        data.detail.set(element.saneDetail, detailHighlights);\r\n        // Separator\r\n        if (element.separator && element.separator.label) {\r\n            data.separator.textContent = element.separator.label;\r\n            data.separator.style.display = '';\r\n        }\r\n        else {\r\n            data.separator.style.display = 'none';\r\n        }\r\n        data.entry.classList.toggle('quick-input-list-separator-border', !!element.separator);\r\n        // Actions\r\n        data.actionBar.clear();\r\n        const buttons = element.item.buttons;\r\n        if (buttons && buttons.length) {\r\n            data.actionBar.push(buttons.map((button, index) => {\r\n                let cssClasses = button.iconClass || (button.iconPath ? getIconClass(button.iconPath) : undefined);\r\n                if (button.alwaysVisible) {\r\n                    cssClasses = cssClasses ? `${cssClasses} always-visible` : 'always-visible';\r\n                }\r\n                const action = new Action(`id-${index}`, '', cssClasses, true, () => __awaiter(this, void 0, void 0, function* () {\r\n                    element.fireButtonTriggered({\r\n                        button,\r\n                        item: element.item\r\n                    });\r\n                }));\r\n                action.tooltip = button.tooltip || '';\r\n                return action;\r\n            }), { icon: true, label: false });\r\n            data.entry.classList.add('has-actions');\r\n        }\r\n        else {\r\n            data.entry.classList.remove('has-actions');\r\n        }\r\n    }\r\n    disposeElement(element, index, data) {\r\n        data.toDisposeElement = dispose(data.toDisposeElement);\r\n    }\r\n    disposeTemplate(data) {\r\n        data.toDisposeElement = dispose(data.toDisposeElement);\r\n        data.toDisposeTemplate = dispose(data.toDisposeTemplate);\r\n    }\r\n}\r\nListElementRenderer.ID = 'listelement';\r\nclass ListElementDelegate {\r\n    getHeight(element) {\r\n        return element.saneDetail ? 44 : 22;\r\n    }\r\n    getTemplateId(element) {\r\n        return ListElementRenderer.ID;\r\n    }\r\n}\r\nexport var QuickInputListFocus;\r\n(function (QuickInputListFocus) {\r\n    QuickInputListFocus[QuickInputListFocus[\"First\"] = 1] = \"First\";\r\n    QuickInputListFocus[QuickInputListFocus[\"Second\"] = 2] = \"Second\";\r\n    QuickInputListFocus[QuickInputListFocus[\"Last\"] = 3] = \"Last\";\r\n    QuickInputListFocus[QuickInputListFocus[\"Next\"] = 4] = \"Next\";\r\n    QuickInputListFocus[QuickInputListFocus[\"Previous\"] = 5] = \"Previous\";\r\n    QuickInputListFocus[QuickInputListFocus[\"NextPage\"] = 6] = \"NextPage\";\r\n    QuickInputListFocus[QuickInputListFocus[\"PreviousPage\"] = 7] = \"PreviousPage\";\r\n})(QuickInputListFocus || (QuickInputListFocus = {}));\r\nexport class QuickInputList {\r\n    constructor(parent, id, options) {\r\n        this.parent = parent;\r\n        this.inputElements = [];\r\n        this.elements = [];\r\n        this.elementsToIndexes = new Map();\r\n        this.matchOnDescription = false;\r\n        this.matchOnDetail = false;\r\n        this.matchOnLabel = true;\r\n        this.matchOnMeta = true;\r\n        this.sortByLabel = true;\r\n        this._onChangedAllVisibleChecked = new Emitter();\r\n        this.onChangedAllVisibleChecked = this._onChangedAllVisibleChecked.event;\r\n        this._onChangedCheckedCount = new Emitter();\r\n        this.onChangedCheckedCount = this._onChangedCheckedCount.event;\r\n        this._onChangedVisibleCount = new Emitter();\r\n        this.onChangedVisibleCount = this._onChangedVisibleCount.event;\r\n        this._onChangedCheckedElements = new Emitter();\r\n        this.onChangedCheckedElements = this._onChangedCheckedElements.event;\r\n        this._onButtonTriggered = new Emitter();\r\n        this.onButtonTriggered = this._onButtonTriggered.event;\r\n        this._onKeyDown = new Emitter();\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onLeave = new Emitter();\r\n        this.onLeave = this._onLeave.event;\r\n        this._fireCheckedEvents = true;\r\n        this.elementDisposables = [];\r\n        this.disposables = [];\r\n        this.id = id;\r\n        this.container = dom.append(this.parent, $('.quick-input-list'));\r\n        const delegate = new ListElementDelegate();\r\n        const accessibilityProvider = new QuickInputAccessibilityProvider();\r\n        this.list = options.createList('QuickInput', this.container, delegate, [new ListElementRenderer()], {\r\n            identityProvider: { getId: element => element.saneLabel },\r\n            setRowLineHeight: false,\r\n            multipleSelectionSupport: false,\r\n            horizontalScrolling: false,\r\n            accessibilityProvider\r\n        });\r\n        this.list.getHTMLElement().id = id;\r\n        this.disposables.push(this.list);\r\n        this.disposables.push(this.list.onKeyDown(e => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            switch (event.keyCode) {\r\n                case 10 /* Space */:\r\n                    this.toggleCheckbox();\r\n                    break;\r\n                case 31 /* KEY_A */:\r\n                    if (platform.isMacintosh ? e.metaKey : e.ctrlKey) {\r\n                        this.list.setFocus(range(this.list.length));\r\n                    }\r\n                    break;\r\n                case 16 /* UpArrow */:\r\n                    const focus1 = this.list.getFocus();\r\n                    if (focus1.length === 1 && focus1[0] === 0) {\r\n                        this._onLeave.fire();\r\n                    }\r\n                    break;\r\n                case 18 /* DownArrow */:\r\n                    const focus2 = this.list.getFocus();\r\n                    if (focus2.length === 1 && focus2[0] === this.list.length - 1) {\r\n                        this._onLeave.fire();\r\n                    }\r\n                    break;\r\n            }\r\n            this._onKeyDown.fire(event);\r\n        }));\r\n        this.disposables.push(this.list.onMouseDown(e => {\r\n            if (e.browserEvent.button !== 2) {\r\n                // Works around / fixes #64350.\r\n                e.browserEvent.preventDefault();\r\n            }\r\n        }));\r\n        this.disposables.push(dom.addDisposableListener(this.container, dom.EventType.CLICK, e => {\r\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space' on checkbox.\r\n                this._onLeave.fire();\r\n            }\r\n        }));\r\n        this.disposables.push(this.list.onMouseMiddleClick(e => {\r\n            this._onLeave.fire();\r\n        }));\r\n        this.disposables.push(this.list.onContextMenu(e => {\r\n            if (typeof e.index === 'number') {\r\n                e.browserEvent.preventDefault();\r\n                // we want to treat a context menu event as\r\n                // a gesture to open the item at the index\r\n                // since we do not have any context menu\r\n                // this enables for example macOS to Ctrl-\r\n                // click on an item to open it.\r\n                this.list.setSelection([e.index]);\r\n            }\r\n        }));\r\n        this.disposables.push(this._onChangedAllVisibleChecked, this._onChangedCheckedCount, this._onChangedVisibleCount, this._onChangedCheckedElements, this._onButtonTriggered, this._onLeave, this._onKeyDown);\r\n    }\r\n    get onDidChangeFocus() {\r\n        return Event.map(this.list.onDidChangeFocus, e => e.elements.map(e => e.item));\r\n    }\r\n    get onDidChangeSelection() {\r\n        return Event.map(this.list.onDidChangeSelection, e => ({ items: e.elements.map(e => e.item), event: e.browserEvent }));\r\n    }\r\n    getAllVisibleChecked() {\r\n        return this.allVisibleChecked(this.elements, false);\r\n    }\r\n    allVisibleChecked(elements, whenNoneVisible = true) {\r\n        for (let i = 0, n = elements.length; i < n; i++) {\r\n            const element = elements[i];\r\n            if (!element.hidden) {\r\n                if (!element.checked) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    whenNoneVisible = true;\r\n                }\r\n            }\r\n        }\r\n        return whenNoneVisible;\r\n    }\r\n    getCheckedCount() {\r\n        let count = 0;\r\n        const elements = this.elements;\r\n        for (let i = 0, n = elements.length; i < n; i++) {\r\n            if (elements[i].checked) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    getVisibleCount() {\r\n        let count = 0;\r\n        const elements = this.elements;\r\n        for (let i = 0, n = elements.length; i < n; i++) {\r\n            if (!elements[i].hidden) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    setAllVisibleChecked(checked) {\r\n        try {\r\n            this._fireCheckedEvents = false;\r\n            this.elements.forEach(element => {\r\n                if (!element.hidden) {\r\n                    element.checked = checked;\r\n                }\r\n            });\r\n        }\r\n        finally {\r\n            this._fireCheckedEvents = true;\r\n            this.fireCheckedEvents();\r\n        }\r\n    }\r\n    setElements(inputElements) {\r\n        this.elementDisposables = dispose(this.elementDisposables);\r\n        const fireButtonTriggered = (event) => this.fireButtonTriggered(event);\r\n        this.inputElements = inputElements;\r\n        this.elements = inputElements.reduce((result, item, index) => {\r\n            var _a, _b, _c;\r\n            if (item.type !== 'separator') {\r\n                const previous = index && inputElements[index - 1];\r\n                const saneLabel = item.label && item.label.replace(/\\r?\\n/g, ' ');\r\n                const saneMeta = item.meta && item.meta.replace(/\\r?\\n/g, ' ');\r\n                const saneDescription = item.description && item.description.replace(/\\r?\\n/g, ' ');\r\n                const saneDetail = item.detail && item.detail.replace(/\\r?\\n/g, ' ');\r\n                const saneAriaLabel = item.ariaLabel || [saneLabel, saneDescription, saneDetail]\r\n                    .map(s => getCodiconAriaLabel(s))\r\n                    .filter(s => !!s)\r\n                    .join(', ');\r\n                result.push(new ListElement({\r\n                    index,\r\n                    item,\r\n                    saneLabel,\r\n                    saneMeta,\r\n                    saneAriaLabel,\r\n                    saneDescription,\r\n                    saneDetail,\r\n                    labelHighlights: (_a = item.highlights) === null || _a === void 0 ? void 0 : _a.label,\r\n                    descriptionHighlights: (_b = item.highlights) === null || _b === void 0 ? void 0 : _b.description,\r\n                    detailHighlights: (_c = item.highlights) === null || _c === void 0 ? void 0 : _c.detail,\r\n                    checked: false,\r\n                    separator: previous && previous.type === 'separator' ? previous : undefined,\r\n                    fireButtonTriggered\r\n                }));\r\n            }\r\n            return result;\r\n        }, []);\r\n        this.elementDisposables.push(...this.elements);\r\n        this.elementDisposables.push(...this.elements.map(element => element.onChecked(() => this.fireCheckedEvents())));\r\n        this.elementsToIndexes = this.elements.reduce((map, element, index) => {\r\n            map.set(element.item, index);\r\n            return map;\r\n        }, new Map());\r\n        this.list.splice(0, this.list.length); // Clear focus and selection first, sending the events when the list is empty.\r\n        this.list.splice(0, this.list.length, this.elements);\r\n        this._onChangedVisibleCount.fire(this.elements.length);\r\n    }\r\n    getFocusedElements() {\r\n        return this.list.getFocusedElements()\r\n            .map(e => e.item);\r\n    }\r\n    setFocusedElements(items) {\r\n        this.list.setFocus(items\r\n            .filter(item => this.elementsToIndexes.has(item))\r\n            .map(item => this.elementsToIndexes.get(item)));\r\n        if (items.length > 0) {\r\n            const focused = this.list.getFocus()[0];\r\n            if (typeof focused === 'number') {\r\n                this.list.reveal(focused);\r\n            }\r\n        }\r\n    }\r\n    getActiveDescendant() {\r\n        return this.list.getHTMLElement().getAttribute('aria-activedescendant');\r\n    }\r\n    setSelectedElements(items) {\r\n        this.list.setSelection(items\r\n            .filter(item => this.elementsToIndexes.has(item))\r\n            .map(item => this.elementsToIndexes.get(item)));\r\n    }\r\n    getCheckedElements() {\r\n        return this.elements.filter(e => e.checked)\r\n            .map(e => e.item);\r\n    }\r\n    setCheckedElements(items) {\r\n        try {\r\n            this._fireCheckedEvents = false;\r\n            const checked = new Set();\r\n            for (const item of items) {\r\n                checked.add(item);\r\n            }\r\n            for (const element of this.elements) {\r\n                element.checked = checked.has(element.item);\r\n            }\r\n        }\r\n        finally {\r\n            this._fireCheckedEvents = true;\r\n            this.fireCheckedEvents();\r\n        }\r\n    }\r\n    set enabled(value) {\r\n        this.list.getHTMLElement().style.pointerEvents = value ? '' : 'none';\r\n    }\r\n    focus(what) {\r\n        if (!this.list.length) {\r\n            return;\r\n        }\r\n        if (what === QuickInputListFocus.Next && this.list.getFocus()[0] === this.list.length - 1) {\r\n            what = QuickInputListFocus.First;\r\n        }\r\n        if (what === QuickInputListFocus.Previous && this.list.getFocus()[0] === 0) {\r\n            what = QuickInputListFocus.Last;\r\n        }\r\n        if (what === QuickInputListFocus.Second && this.list.length < 2) {\r\n            what = QuickInputListFocus.First;\r\n        }\r\n        switch (what) {\r\n            case QuickInputListFocus.First:\r\n                this.list.focusFirst();\r\n                break;\r\n            case QuickInputListFocus.Second:\r\n                this.list.focusNth(1);\r\n                break;\r\n            case QuickInputListFocus.Last:\r\n                this.list.focusLast();\r\n                break;\r\n            case QuickInputListFocus.Next:\r\n                this.list.focusNext();\r\n                break;\r\n            case QuickInputListFocus.Previous:\r\n                this.list.focusPrevious();\r\n                break;\r\n            case QuickInputListFocus.NextPage:\r\n                this.list.focusNextPage();\r\n                break;\r\n            case QuickInputListFocus.PreviousPage:\r\n                this.list.focusPreviousPage();\r\n                break;\r\n        }\r\n        const focused = this.list.getFocus()[0];\r\n        if (typeof focused === 'number') {\r\n            this.list.reveal(focused);\r\n        }\r\n    }\r\n    clearFocus() {\r\n        this.list.setFocus([]);\r\n    }\r\n    domFocus() {\r\n        this.list.domFocus();\r\n    }\r\n    layout(maxHeight) {\r\n        this.list.getHTMLElement().style.maxHeight = maxHeight ? `calc(${Math.floor(maxHeight / 44) * 44}px)` : '';\r\n        this.list.layout();\r\n    }\r\n    filter(query) {\r\n        if (!(this.sortByLabel || this.matchOnLabel || this.matchOnDescription || this.matchOnDetail)) {\r\n            this.list.layout();\r\n            return false;\r\n        }\r\n        query = query.trim();\r\n        // Reset filtering\r\n        if (!query || !(this.matchOnLabel || this.matchOnDescription || this.matchOnDetail)) {\r\n            this.elements.forEach(element => {\r\n                element.labelHighlights = undefined;\r\n                element.descriptionHighlights = undefined;\r\n                element.detailHighlights = undefined;\r\n                element.hidden = false;\r\n                const previous = element.index && this.inputElements[element.index - 1];\r\n                element.separator = previous && previous.type === 'separator' ? previous : undefined;\r\n            });\r\n        }\r\n        // Filter by value (since we support icons in labels, use $(..) aware fuzzy matching)\r\n        else {\r\n            let currentSeparator;\r\n            this.elements.forEach(element => {\r\n                const labelHighlights = this.matchOnLabel ? withNullAsUndefined(matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneLabel))) : undefined;\r\n                const descriptionHighlights = this.matchOnDescription ? withNullAsUndefined(matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDescription || ''))) : undefined;\r\n                const detailHighlights = this.matchOnDetail ? withNullAsUndefined(matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDetail || ''))) : undefined;\r\n                const metaHighlights = this.matchOnMeta ? withNullAsUndefined(matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneMeta || ''))) : undefined;\r\n                if (labelHighlights || descriptionHighlights || detailHighlights || metaHighlights) {\r\n                    element.labelHighlights = labelHighlights;\r\n                    element.descriptionHighlights = descriptionHighlights;\r\n                    element.detailHighlights = detailHighlights;\r\n                    element.hidden = false;\r\n                }\r\n                else {\r\n                    element.labelHighlights = undefined;\r\n                    element.descriptionHighlights = undefined;\r\n                    element.detailHighlights = undefined;\r\n                    element.hidden = !element.item.alwaysShow;\r\n                }\r\n                element.separator = undefined;\r\n                // we can show the separator unless the list gets sorted by match\r\n                if (!this.sortByLabel) {\r\n                    const previous = element.index && this.inputElements[element.index - 1];\r\n                    currentSeparator = previous && previous.type === 'separator' ? previous : currentSeparator;\r\n                    if (currentSeparator && !element.hidden) {\r\n                        element.separator = currentSeparator;\r\n                        currentSeparator = undefined;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const shownElements = this.elements.filter(element => !element.hidden);\r\n        // Sort by value\r\n        if (this.sortByLabel && query) {\r\n            const normalizedSearchValue = query.toLowerCase();\r\n            shownElements.sort((a, b) => {\r\n                return compareEntries(a, b, normalizedSearchValue);\r\n            });\r\n        }\r\n        this.elementsToIndexes = shownElements.reduce((map, element, index) => {\r\n            map.set(element.item, index);\r\n            return map;\r\n        }, new Map());\r\n        this.list.splice(0, this.list.length, shownElements);\r\n        this.list.setFocus([]);\r\n        this.list.layout();\r\n        this._onChangedAllVisibleChecked.fire(this.getAllVisibleChecked());\r\n        this._onChangedVisibleCount.fire(shownElements.length);\r\n        return true;\r\n    }\r\n    toggleCheckbox() {\r\n        try {\r\n            this._fireCheckedEvents = false;\r\n            const elements = this.list.getFocusedElements();\r\n            const allChecked = this.allVisibleChecked(elements);\r\n            for (const element of elements) {\r\n                element.checked = !allChecked;\r\n            }\r\n        }\r\n        finally {\r\n            this._fireCheckedEvents = true;\r\n            this.fireCheckedEvents();\r\n        }\r\n    }\r\n    display(display) {\r\n        this.container.style.display = display ? '' : 'none';\r\n    }\r\n    isDisplayed() {\r\n        return this.container.style.display !== 'none';\r\n    }\r\n    dispose() {\r\n        this.elementDisposables = dispose(this.elementDisposables);\r\n        this.disposables = dispose(this.disposables);\r\n    }\r\n    fireCheckedEvents() {\r\n        if (this._fireCheckedEvents) {\r\n            this._onChangedAllVisibleChecked.fire(this.getAllVisibleChecked());\r\n            this._onChangedCheckedCount.fire(this.getCheckedCount());\r\n            this._onChangedCheckedElements.fire(this.getCheckedElements());\r\n        }\r\n    }\r\n    fireButtonTriggered(event) {\r\n        this._onButtonTriggered.fire(event);\r\n    }\r\n    style(styles) {\r\n        this.list.style(styles);\r\n    }\r\n}\r\n__decorate([\r\n    memoize\r\n], QuickInputList.prototype, \"onDidChangeFocus\", null);\r\n__decorate([\r\n    memoize\r\n], QuickInputList.prototype, \"onDidChangeSelection\", null);\r\nfunction compareEntries(elementA, elementB, lookFor) {\r\n    const labelHighlightsA = elementA.labelHighlights || [];\r\n    const labelHighlightsB = elementB.labelHighlights || [];\r\n    if (labelHighlightsA.length && !labelHighlightsB.length) {\r\n        return -1;\r\n    }\r\n    if (!labelHighlightsA.length && labelHighlightsB.length) {\r\n        return 1;\r\n    }\r\n    if (labelHighlightsA.length === 0 && labelHighlightsB.length === 0) {\r\n        return 0;\r\n    }\r\n    return compareAnything(elementA.saneLabel, elementB.saneLabel, lookFor);\r\n}\r\nclass QuickInputAccessibilityProvider {\r\n    getWidgetAriaLabel() {\r\n        return localize('quickInput', \"Quick Input\");\r\n    }\r\n    getAriaLabel(element) {\r\n        return element.saneAriaLabel;\r\n    }\r\n    getWidgetRole() {\r\n        return 'listbox';\r\n    }\r\n    getRole() {\r\n        return 'option';\r\n    }\r\n}\r\n", "import { IdleValue } from './async.js';\r\n// When comparing large numbers of strings it's better for performance to create an\r\n// Intl.Collator object and use the function provided by its compare property\r\n// than it is to use String.prototype.localeCompare()\r\n// A collator with numeric sorting enabled, and no sensitivity to case, accents or diacritics.\r\nconst intlFileNameCollatorBaseNumeric = new IdleValue(() => {\r\n    const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n    return {\r\n        collator: collator,\r\n        collatorIsNumeric: collator.resolvedOptions().numeric\r\n    };\r\n});\r\n/** Compares filenames without distinguishing the name from the extension. Disambiguates by unicode comparison. */\r\nexport function compareFileNames(one, other, caseSensitive = false) {\r\n    const a = one || '';\r\n    const b = other || '';\r\n    const result = intlFileNameCollatorBaseNumeric.value.collator.compare(a, b);\r\n    // Using the numeric option will make compare(`foo1`, `foo01`) === 0. Disambiguate.\r\n    if (intlFileNameCollatorBaseNumeric.value.collatorIsNumeric && result === 0 && a !== b) {\r\n        return a < b ? -1 : 1;\r\n    }\r\n    return result;\r\n}\r\nexport function compareAnything(one, other, lookFor) {\r\n    const elementAName = one.toLowerCase();\r\n    const elementBName = other.toLowerCase();\r\n    // Sort prefix matches over non prefix matches\r\n    const prefixCompare = compareByPrefix(one, other, lookFor);\r\n    if (prefixCompare) {\r\n        return prefixCompare;\r\n    }\r\n    // Sort suffix matches over non suffix matches\r\n    const elementASuffixMatch = elementAName.endsWith(lookFor);\r\n    const elementBSuffixMatch = elementBName.endsWith(lookFor);\r\n    if (elementASuffixMatch !== elementBSuffixMatch) {\r\n        return elementASuffixMatch ? -1 : 1;\r\n    }\r\n    // Understand file names\r\n    const r = compareFileNames(elementAName, elementBName);\r\n    if (r !== 0) {\r\n        return r;\r\n    }\r\n    // Compare by name\r\n    return elementAName.localeCompare(elementBName);\r\n}\r\nexport function compareByPrefix(one, other, lookFor) {\r\n    const elementAName = one.toLowerCase();\r\n    const elementBName = other.toLowerCase();\r\n    // Sort prefix matches over non prefix matches\r\n    const elementAPrefixMatch = elementAName.startsWith(lookFor);\r\n    const elementBPrefixMatch = elementBName.startsWith(lookFor);\r\n    if (elementAPrefixMatch !== elementBPrefixMatch) {\r\n        return elementAPrefixMatch ? -1 : 1;\r\n    }\r\n    // Same prefix: Sort shorter matches to the top to have those on top that match more precisely\r\n    else if (elementAPrefixMatch && elementBPrefixMatch) {\r\n        if (elementAName.length < elementBName.length) {\r\n            return -1;\r\n        }\r\n        if (elementAName.length > elementBName.length) {\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './media/quickInput.css';\r\nimport * as dom from '../../../browser/dom.js';\r\nimport { IdGenerator } from '../../../common/idGenerator.js';\r\nconst iconPathToClass = {};\r\nconst iconClassGenerator = new IdGenerator('quick-input-button-icon-');\r\nexport function getIconClass(iconPath) {\r\n    if (!iconPath) {\r\n        return undefined;\r\n    }\r\n    let iconClass;\r\n    const key = iconPath.dark.toString();\r\n    if (iconPathToClass[key]) {\r\n        iconClass = iconPathToClass[key];\r\n    }\r\n    else {\r\n        iconClass = iconClassGenerator.nextId();\r\n        dom.createCSSRule(`.${iconClass}`, `background-image: ${dom.asCSSUrl(iconPath.light || iconPath.dark)}`);\r\n        dom.createCSSRule(`.vs-dark .${iconClass}, .hc-black .${iconClass}`, `background-image: ${dom.asCSSUrl(iconPath.dark)}`);\r\n        iconPathToClass[key] = iconClass;\r\n    }\r\n    return iconClass;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './keybindingLabel.css';\r\nimport { equals } from '../../../common/objects.js';\r\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\r\nimport * as dom from '../../dom.js';\r\nimport { localize } from '../../../../nls.js';\r\nconst $ = dom.$;\r\nexport class KeybindingLabel {\r\n    constructor(container, os, options) {\r\n        this.os = os;\r\n        this.keyElements = new Set();\r\n        this.options = options || Object.create(null);\r\n        this.labelBackground = this.options.keybindingLabelBackground;\r\n        this.labelForeground = this.options.keybindingLabelForeground;\r\n        this.labelBorder = this.options.keybindingLabelBorder;\r\n        this.labelBottomBorder = this.options.keybindingLabelBottomBorder;\r\n        this.labelShadow = this.options.keybindingLabelShadow;\r\n        this.domNode = dom.append(container, $('.monaco-keybinding'));\r\n        this.didEverRender = false;\r\n        container.appendChild(this.domNode);\r\n    }\r\n    get element() {\r\n        return this.domNode;\r\n    }\r\n    set(keybinding, matches) {\r\n        if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\r\n            return;\r\n        }\r\n        this.keybinding = keybinding;\r\n        this.matches = matches;\r\n        this.render();\r\n    }\r\n    render() {\r\n        this.clear();\r\n        if (this.keybinding) {\r\n            let [firstPart, chordPart] = this.keybinding.getParts();\r\n            if (firstPart) {\r\n                this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\r\n            }\r\n            if (chordPart) {\r\n                dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\r\n                this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\r\n            }\r\n            this.domNode.title = this.keybinding.getAriaLabel() || '';\r\n        }\r\n        else if (this.options && this.options.renderUnboundKeybindings) {\r\n            this.renderUnbound(this.domNode);\r\n        }\r\n        this.applyStyles();\r\n        this.didEverRender = true;\r\n    }\r\n    clear() {\r\n        dom.clearNode(this.domNode);\r\n        this.keyElements.clear();\r\n    }\r\n    renderPart(parent, part, match) {\r\n        const modifierLabels = UILabelProvider.modifierLabels[this.os];\r\n        if (part.ctrlKey) {\r\n            this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\r\n        }\r\n        if (part.shiftKey) {\r\n            this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\r\n        }\r\n        if (part.altKey) {\r\n            this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\r\n        }\r\n        if (part.metaKey) {\r\n            this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\r\n        }\r\n        const keyLabel = part.keyLabel;\r\n        if (keyLabel) {\r\n            this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\r\n        }\r\n    }\r\n    renderKey(parent, label, highlight, separator) {\r\n        dom.append(parent, this.createKeyElement(label, highlight ? '.highlight' : ''));\r\n        if (separator) {\r\n            dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\r\n        }\r\n    }\r\n    renderUnbound(parent) {\r\n        dom.append(parent, this.createKeyElement(localize('unbound', \"Unbound\")));\r\n    }\r\n    createKeyElement(label, extraClass = '') {\r\n        const keyElement = $('span.monaco-keybinding-key' + extraClass, undefined, label);\r\n        this.keyElements.add(keyElement);\r\n        return keyElement;\r\n    }\r\n    style(styles) {\r\n        this.labelBackground = styles.keybindingLabelBackground;\r\n        this.labelForeground = styles.keybindingLabelForeground;\r\n        this.labelBorder = styles.keybindingLabelBorder;\r\n        this.labelBottomBorder = styles.keybindingLabelBottomBorder;\r\n        this.labelShadow = styles.keybindingLabelShadow;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        var _a;\r\n        if (this.element) {\r\n            for (const keyElement of this.keyElements) {\r\n                if (this.labelBackground) {\r\n                    keyElement.style.backgroundColor = (_a = this.labelBackground) === null || _a === void 0 ? void 0 : _a.toString();\r\n                }\r\n                if (this.labelBorder) {\r\n                    keyElement.style.borderColor = this.labelBorder.toString();\r\n                }\r\n                if (this.labelBottomBorder) {\r\n                    keyElement.style.borderBottomColor = this.labelBottomBorder.toString();\r\n                }\r\n                if (this.labelShadow) {\r\n                    keyElement.style.boxShadow = `inset 0 -1px 0 ${this.labelShadow}`;\r\n                }\r\n            }\r\n            if (this.labelForeground) {\r\n                this.element.style.color = this.labelForeground.toString();\r\n            }\r\n        }\r\n    }\r\n    static areSame(a, b) {\r\n        if (a === b || (!a && !b)) {\r\n            return true;\r\n        }\r\n        return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './media/quickInput.css';\r\nimport * as dom from '../../../browser/dom.js';\r\nimport { InputBox } from '../../../browser/ui/inputbox/inputBox.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\r\nimport Severity from '../../../common/severity.js';\r\nimport { StandardMouseEvent } from '../../../browser/mouseEvent.js';\r\nconst $ = dom.$;\r\nexport class QuickInputBox extends Disposable {\r\n    constructor(parent) {\r\n        super();\r\n        this.parent = parent;\r\n        this.onKeyDown = (handler) => {\r\n            return dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.KEY_DOWN, (e) => {\r\n                handler(new StandardKeyboardEvent(e));\r\n            });\r\n        };\r\n        this.onMouseDown = (handler) => {\r\n            return dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.MOUSE_DOWN, (e) => {\r\n                handler(new StandardMouseEvent(e));\r\n            });\r\n        };\r\n        this.onDidChange = (handler) => {\r\n            return this.inputBox.onDidChange(handler);\r\n        };\r\n        this.container = dom.append(this.parent, $('.quick-input-box'));\r\n        this.inputBox = this._register(new InputBox(this.container, undefined));\r\n    }\r\n    get value() {\r\n        return this.inputBox.value;\r\n    }\r\n    set value(value) {\r\n        this.inputBox.value = value;\r\n    }\r\n    select(range = null) {\r\n        this.inputBox.select(range);\r\n    }\r\n    isSelectionAtEnd() {\r\n        return this.inputBox.isSelectionAtEnd();\r\n    }\r\n    get placeholder() {\r\n        return this.inputBox.inputElement.getAttribute('placeholder') || '';\r\n    }\r\n    set placeholder(placeholder) {\r\n        this.inputBox.setPlaceHolder(placeholder);\r\n    }\r\n    get ariaLabel() {\r\n        return this.inputBox.getAriaLabel();\r\n    }\r\n    set ariaLabel(ariaLabel) {\r\n        this.inputBox.setAriaLabel(ariaLabel);\r\n    }\r\n    get password() {\r\n        return this.inputBox.inputElement.type === 'password';\r\n    }\r\n    set password(password) {\r\n        this.inputBox.inputElement.type = password ? 'password' : 'text';\r\n    }\r\n    setAttribute(name, value) {\r\n        this.inputBox.inputElement.setAttribute(name, value);\r\n    }\r\n    removeAttribute(name) {\r\n        this.inputBox.inputElement.removeAttribute(name);\r\n    }\r\n    showDecoration(decoration) {\r\n        if (decoration === Severity.Ignore) {\r\n            this.inputBox.hideMessage();\r\n        }\r\n        else {\r\n            this.inputBox.showMessage({ type: decoration === Severity.Info ? 1 /* INFO */ : decoration === Severity.Warning ? 2 /* WARNING */ : 3 /* ERROR */, content: '' });\r\n        }\r\n    }\r\n    stylesForType(decoration) {\r\n        return this.inputBox.stylesForType(decoration === Severity.Info ? 1 /* INFO */ : decoration === Severity.Warning ? 2 /* WARNING */ : 3 /* ERROR */);\r\n    }\r\n    setFocus() {\r\n        this.inputBox.focus();\r\n    }\r\n    layout() {\r\n        this.inputBox.layout();\r\n    }\r\n    style(styles) {\r\n        this.inputBox.style(styles);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './inputBox.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport * as dom from '../../dom.js';\r\nimport { renderFormattedText, renderText } from '../../formattedTextRenderer.js';\r\nimport * as aria from '../aria/aria.js';\r\nimport { ActionBar } from '../actionbar/actionbar.js';\r\nimport { Event, Emitter } from '../../../common/event.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nimport { HistoryNavigator } from '../../../common/history.js';\r\nimport { ScrollableElement } from '../scrollbar/scrollableElement.js';\r\nimport { DomEmitter } from '../../event.js';\r\nconst $ = dom.$;\r\nconst defaultOpts = {\r\n    inputBackground: Color.fromHex('#3C3C3C'),\r\n    inputForeground: Color.fromHex('#CCCCCC'),\r\n    inputValidationInfoBorder: Color.fromHex('#55AAFF'),\r\n    inputValidationInfoBackground: Color.fromHex('#063B49'),\r\n    inputValidationWarningBorder: Color.fromHex('#B89500'),\r\n    inputValidationWarningBackground: Color.fromHex('#352A05'),\r\n    inputValidationErrorBorder: Color.fromHex('#BE1100'),\r\n    inputValidationErrorBackground: Color.fromHex('#5A1D1D')\r\n};\r\nexport class InputBox extends Widget {\r\n    constructor(container, contextViewProvider, options) {\r\n        var _a;\r\n        super();\r\n        this.state = 'idle';\r\n        this.maxHeight = Number.POSITIVE_INFINITY;\r\n        this._onDidChange = this._register(new Emitter());\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._onDidHeightChange = this._register(new Emitter());\r\n        this.onDidHeightChange = this._onDidHeightChange.event;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.options = options || Object.create(null);\r\n        mixin(this.options, defaultOpts, false);\r\n        this.message = null;\r\n        this.placeholder = this.options.placeholder || '';\r\n        this.tooltip = (_a = this.options.tooltip) !== null && _a !== void 0 ? _a : (this.placeholder || '');\r\n        this.ariaLabel = this.options.ariaLabel || '';\r\n        this.inputBackground = this.options.inputBackground;\r\n        this.inputForeground = this.options.inputForeground;\r\n        this.inputBorder = this.options.inputBorder;\r\n        this.inputValidationInfoBorder = this.options.inputValidationInfoBorder;\r\n        this.inputValidationInfoBackground = this.options.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = this.options.inputValidationInfoForeground;\r\n        this.inputValidationWarningBorder = this.options.inputValidationWarningBorder;\r\n        this.inputValidationWarningBackground = this.options.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = this.options.inputValidationWarningForeground;\r\n        this.inputValidationErrorBorder = this.options.inputValidationErrorBorder;\r\n        this.inputValidationErrorBackground = this.options.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = this.options.inputValidationErrorForeground;\r\n        if (this.options.validationOptions) {\r\n            this.validation = this.options.validationOptions.validation;\r\n        }\r\n        this.element = dom.append(container, $('.monaco-inputbox.idle'));\r\n        let tagName = this.options.flexibleHeight ? 'textarea' : 'input';\r\n        let wrapper = dom.append(this.element, $('.ibwrapper'));\r\n        this.input = dom.append(wrapper, $(tagName + '.input.empty'));\r\n        this.input.setAttribute('autocorrect', 'off');\r\n        this.input.setAttribute('autocapitalize', 'off');\r\n        this.input.setAttribute('spellcheck', 'false');\r\n        this.onfocus(this.input, () => this.element.classList.add('synthetic-focus'));\r\n        this.onblur(this.input, () => this.element.classList.remove('synthetic-focus'));\r\n        if (this.options.flexibleHeight) {\r\n            this.maxHeight = typeof this.options.flexibleMaxHeight === 'number' ? this.options.flexibleMaxHeight : Number.POSITIVE_INFINITY;\r\n            this.mirror = dom.append(wrapper, $('div.mirror'));\r\n            this.mirror.innerText = '\\u00a0';\r\n            this.scrollableElement = new ScrollableElement(this.element, { vertical: 1 /* Auto */ });\r\n            if (this.options.flexibleWidth) {\r\n                this.input.setAttribute('wrap', 'off');\r\n                this.mirror.style.whiteSpace = 'pre';\r\n                this.mirror.style.wordWrap = 'initial';\r\n            }\r\n            dom.append(container, this.scrollableElement.getDomNode());\r\n            this._register(this.scrollableElement);\r\n            // from ScrollableElement to DOM\r\n            this._register(this.scrollableElement.onScroll(e => this.input.scrollTop = e.scrollTop));\r\n            const onSelectionChange = this._register(new DomEmitter(document, 'selectionchange'));\r\n            const onAnchoredSelectionChange = Event.filter(onSelectionChange.event, () => {\r\n                const selection = document.getSelection();\r\n                return (selection === null || selection === void 0 ? void 0 : selection.anchorNode) === wrapper;\r\n            });\r\n            // from DOM to ScrollableElement\r\n            this._register(onAnchoredSelectionChange(this.updateScrollDimensions, this));\r\n            this._register(this.onDidHeightChange(this.updateScrollDimensions, this));\r\n        }\r\n        else {\r\n            this.input.type = this.options.type || 'text';\r\n            this.input.setAttribute('wrap', 'off');\r\n        }\r\n        if (this.ariaLabel) {\r\n            this.input.setAttribute('aria-label', this.ariaLabel);\r\n        }\r\n        if (this.placeholder && !this.options.showPlaceholderOnFocus) {\r\n            this.setPlaceHolder(this.placeholder);\r\n        }\r\n        if (this.tooltip) {\r\n            this.setTooltip(this.tooltip);\r\n        }\r\n        this.oninput(this.input, () => this.onValueChange());\r\n        this.onblur(this.input, () => this.onBlur());\r\n        this.onfocus(this.input, () => this.onFocus());\r\n        this.ignoreGesture(this.input);\r\n        setTimeout(() => this.updateMirror(), 0);\r\n        // Support actions\r\n        if (this.options.actions) {\r\n            this.actionbar = this._register(new ActionBar(this.element));\r\n            this.actionbar.push(this.options.actions, { icon: true, label: false });\r\n        }\r\n        this.applyStyles();\r\n    }\r\n    onBlur() {\r\n        this._hideMessage();\r\n        if (this.options.showPlaceholderOnFocus) {\r\n            this.input.setAttribute('placeholder', '');\r\n        }\r\n    }\r\n    onFocus() {\r\n        this._showMessage();\r\n        if (this.options.showPlaceholderOnFocus) {\r\n            this.input.setAttribute('placeholder', this.placeholder || '');\r\n        }\r\n    }\r\n    setPlaceHolder(placeHolder) {\r\n        this.placeholder = placeHolder;\r\n        this.input.setAttribute('placeholder', placeHolder);\r\n    }\r\n    setTooltip(tooltip) {\r\n        this.tooltip = tooltip;\r\n        this.input.title = tooltip;\r\n    }\r\n    setAriaLabel(label) {\r\n        this.ariaLabel = label;\r\n        if (label) {\r\n            this.input.setAttribute('aria-label', this.ariaLabel);\r\n        }\r\n        else {\r\n            this.input.removeAttribute('aria-label');\r\n        }\r\n    }\r\n    getAriaLabel() {\r\n        return this.ariaLabel;\r\n    }\r\n    get inputElement() {\r\n        return this.input;\r\n    }\r\n    get value() {\r\n        return this.input.value;\r\n    }\r\n    set value(newValue) {\r\n        if (this.input.value !== newValue) {\r\n            this.input.value = newValue;\r\n            this.onValueChange();\r\n        }\r\n    }\r\n    get height() {\r\n        return typeof this.cachedHeight === 'number' ? this.cachedHeight : dom.getTotalHeight(this.element);\r\n    }\r\n    focus() {\r\n        this.input.focus();\r\n    }\r\n    blur() {\r\n        this.input.blur();\r\n    }\r\n    hasFocus() {\r\n        return document.activeElement === this.input;\r\n    }\r\n    select(range = null) {\r\n        this.input.select();\r\n        if (range) {\r\n            this.input.setSelectionRange(range.start, range.end);\r\n            if (range.end === this.input.value.length) {\r\n                this.input.scrollLeft = this.input.scrollWidth;\r\n            }\r\n        }\r\n    }\r\n    isSelectionAtEnd() {\r\n        return this.input.selectionEnd === this.input.value.length && this.input.selectionStart === this.input.selectionEnd;\r\n    }\r\n    enable() {\r\n        this.input.removeAttribute('disabled');\r\n    }\r\n    disable() {\r\n        this.blur();\r\n        this.input.disabled = true;\r\n        this._hideMessage();\r\n    }\r\n    get width() {\r\n        return dom.getTotalWidth(this.input);\r\n    }\r\n    set width(width) {\r\n        if (this.options.flexibleHeight && this.options.flexibleWidth) {\r\n            // textarea with horizontal scrolling\r\n            let horizontalPadding = 0;\r\n            if (this.mirror) {\r\n                const paddingLeft = parseFloat(this.mirror.style.paddingLeft || '') || 0;\r\n                const paddingRight = parseFloat(this.mirror.style.paddingRight || '') || 0;\r\n                horizontalPadding = paddingLeft + paddingRight;\r\n            }\r\n            this.input.style.width = (width - horizontalPadding) + 'px';\r\n        }\r\n        else {\r\n            this.input.style.width = width + 'px';\r\n        }\r\n        if (this.mirror) {\r\n            this.mirror.style.width = width + 'px';\r\n        }\r\n    }\r\n    set paddingRight(paddingRight) {\r\n        if (this.options.flexibleHeight && this.options.flexibleWidth) {\r\n            this.input.style.width = `calc(100% - ${paddingRight}px)`;\r\n        }\r\n        else {\r\n            this.input.style.paddingRight = paddingRight + 'px';\r\n        }\r\n        if (this.mirror) {\r\n            this.mirror.style.paddingRight = paddingRight + 'px';\r\n        }\r\n    }\r\n    updateScrollDimensions() {\r\n        if (typeof this.cachedContentHeight !== 'number' || typeof this.cachedHeight !== 'number' || !this.scrollableElement) {\r\n            return;\r\n        }\r\n        const scrollHeight = this.cachedContentHeight;\r\n        const height = this.cachedHeight;\r\n        const scrollTop = this.input.scrollTop;\r\n        this.scrollableElement.setScrollDimensions({ scrollHeight, height });\r\n        this.scrollableElement.setScrollPosition({ scrollTop });\r\n    }\r\n    showMessage(message, force) {\r\n        this.message = message;\r\n        this.element.classList.remove('idle');\r\n        this.element.classList.remove('info');\r\n        this.element.classList.remove('warning');\r\n        this.element.classList.remove('error');\r\n        this.element.classList.add(this.classForType(message.type));\r\n        const styles = this.stylesForType(this.message.type);\r\n        this.element.style.border = styles.border ? `1px solid ${styles.border}` : '';\r\n        if (this.hasFocus() || force) {\r\n            this._showMessage();\r\n        }\r\n    }\r\n    hideMessage() {\r\n        this.message = null;\r\n        this.element.classList.remove('info');\r\n        this.element.classList.remove('warning');\r\n        this.element.classList.remove('error');\r\n        this.element.classList.add('idle');\r\n        this._hideMessage();\r\n        this.applyStyles();\r\n    }\r\n    validate() {\r\n        let errorMsg = null;\r\n        if (this.validation) {\r\n            errorMsg = this.validation(this.value);\r\n            if (errorMsg) {\r\n                this.inputElement.setAttribute('aria-invalid', 'true');\r\n                this.showMessage(errorMsg);\r\n            }\r\n            else if (this.inputElement.hasAttribute('aria-invalid')) {\r\n                this.inputElement.removeAttribute('aria-invalid');\r\n                this.hideMessage();\r\n            }\r\n        }\r\n        return errorMsg === null || errorMsg === void 0 ? void 0 : errorMsg.type;\r\n    }\r\n    stylesForType(type) {\r\n        switch (type) {\r\n            case 1 /* INFO */: return { border: this.inputValidationInfoBorder, background: this.inputValidationInfoBackground, foreground: this.inputValidationInfoForeground };\r\n            case 2 /* WARNING */: return { border: this.inputValidationWarningBorder, background: this.inputValidationWarningBackground, foreground: this.inputValidationWarningForeground };\r\n            default: return { border: this.inputValidationErrorBorder, background: this.inputValidationErrorBackground, foreground: this.inputValidationErrorForeground };\r\n        }\r\n    }\r\n    classForType(type) {\r\n        switch (type) {\r\n            case 1 /* INFO */: return 'info';\r\n            case 2 /* WARNING */: return 'warning';\r\n            default: return 'error';\r\n        }\r\n    }\r\n    _showMessage() {\r\n        if (!this.contextViewProvider || !this.message) {\r\n            return;\r\n        }\r\n        let div;\r\n        let layout = () => div.style.width = dom.getTotalWidth(this.element) + 'px';\r\n        this.contextViewProvider.showContextView({\r\n            getAnchor: () => this.element,\r\n            anchorAlignment: 1 /* RIGHT */,\r\n            render: (container) => {\r\n                if (!this.message) {\r\n                    return null;\r\n                }\r\n                div = dom.append(container, $('.monaco-inputbox-container'));\r\n                layout();\r\n                const renderOptions = {\r\n                    inline: true,\r\n                    className: 'monaco-inputbox-message'\r\n                };\r\n                const spanElement = (this.message.formatContent\r\n                    ? renderFormattedText(this.message.content, renderOptions)\r\n                    : renderText(this.message.content, renderOptions));\r\n                spanElement.classList.add(this.classForType(this.message.type));\r\n                const styles = this.stylesForType(this.message.type);\r\n                spanElement.style.backgroundColor = styles.background ? styles.background.toString() : '';\r\n                spanElement.style.color = styles.foreground ? styles.foreground.toString() : '';\r\n                spanElement.style.border = styles.border ? `1px solid ${styles.border}` : '';\r\n                dom.append(div, spanElement);\r\n                return null;\r\n            },\r\n            onHide: () => {\r\n                this.state = 'closed';\r\n            },\r\n            layout: layout\r\n        });\r\n        // ARIA Support\r\n        let alertText;\r\n        if (this.message.type === 3 /* ERROR */) {\r\n            alertText = nls.localize('alertErrorMessage', \"Error: {0}\", this.message.content);\r\n        }\r\n        else if (this.message.type === 2 /* WARNING */) {\r\n            alertText = nls.localize('alertWarningMessage', \"Warning: {0}\", this.message.content);\r\n        }\r\n        else {\r\n            alertText = nls.localize('alertInfoMessage', \"Info: {0}\", this.message.content);\r\n        }\r\n        aria.alert(alertText);\r\n        this.state = 'open';\r\n    }\r\n    _hideMessage() {\r\n        if (!this.contextViewProvider) {\r\n            return;\r\n        }\r\n        if (this.state === 'open') {\r\n            this.contextViewProvider.hideContextView();\r\n        }\r\n        this.state = 'idle';\r\n    }\r\n    onValueChange() {\r\n        this._onDidChange.fire(this.value);\r\n        this.validate();\r\n        this.updateMirror();\r\n        this.input.classList.toggle('empty', !this.value);\r\n        if (this.state === 'open' && this.contextViewProvider) {\r\n            this.contextViewProvider.layout();\r\n        }\r\n    }\r\n    updateMirror() {\r\n        if (!this.mirror) {\r\n            return;\r\n        }\r\n        const value = this.value;\r\n        const lastCharCode = value.charCodeAt(value.length - 1);\r\n        const suffix = lastCharCode === 10 ? ' ' : '';\r\n        const mirrorTextContent = (value + suffix)\r\n            .replace(/\\u000c/g, ''); // Don't measure with the form feed character, which messes up sizing\r\n        if (mirrorTextContent) {\r\n            this.mirror.textContent = value + suffix;\r\n        }\r\n        else {\r\n            this.mirror.innerText = '\\u00a0';\r\n        }\r\n        this.layout();\r\n    }\r\n    style(styles) {\r\n        this.inputBackground = styles.inputBackground;\r\n        this.inputForeground = styles.inputForeground;\r\n        this.inputBorder = styles.inputBorder;\r\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\r\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\r\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\r\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\r\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\r\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        const background = this.inputBackground ? this.inputBackground.toString() : '';\r\n        const foreground = this.inputForeground ? this.inputForeground.toString() : '';\r\n        const border = this.inputBorder ? this.inputBorder.toString() : '';\r\n        this.element.style.backgroundColor = background;\r\n        this.element.style.color = foreground;\r\n        this.input.style.backgroundColor = 'inherit';\r\n        this.input.style.color = foreground;\r\n        this.element.style.borderWidth = border ? '1px' : '';\r\n        this.element.style.borderStyle = border ? 'solid' : '';\r\n        this.element.style.borderColor = border;\r\n    }\r\n    layout() {\r\n        if (!this.mirror) {\r\n            return;\r\n        }\r\n        const previousHeight = this.cachedContentHeight;\r\n        this.cachedContentHeight = dom.getTotalHeight(this.mirror);\r\n        if (previousHeight !== this.cachedContentHeight) {\r\n            this.cachedHeight = Math.min(this.cachedContentHeight, this.maxHeight);\r\n            this.input.style.height = this.cachedHeight + 'px';\r\n            this._onDidHeightChange.fire(this.cachedContentHeight);\r\n        }\r\n    }\r\n    insertAtCursor(text) {\r\n        const inputElement = this.inputElement;\r\n        const start = inputElement.selectionStart;\r\n        const end = inputElement.selectionEnd;\r\n        const content = inputElement.value;\r\n        if (start !== null && end !== null) {\r\n            this.value = content.substr(0, start) + text + content.substr(end);\r\n            inputElement.setSelectionRange(start + 1, start + 1);\r\n            this.layout();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._hideMessage();\r\n        this.message = null;\r\n        if (this.actionbar) {\r\n            this.actionbar.dispose();\r\n        }\r\n        super.dispose();\r\n    }\r\n}\r\nexport class HistoryInputBox extends InputBox {\r\n    constructor(container, contextViewProvider, options) {\r\n        super(container, contextViewProvider, options);\r\n        this.history = new HistoryNavigator(options.history, 100);\r\n    }\r\n    addToHistory() {\r\n        if (this.value && this.value !== this.getCurrentValue()) {\r\n            this.history.add(this.value);\r\n        }\r\n    }\r\n    showNextValue() {\r\n        if (!this.history.has(this.value)) {\r\n            this.addToHistory();\r\n        }\r\n        let next = this.getNextValue();\r\n        if (next) {\r\n            next = next === this.value ? this.getNextValue() : next;\r\n        }\r\n        if (next) {\r\n            this.value = next;\r\n            aria.status(this.value);\r\n        }\r\n    }\r\n    showPreviousValue() {\r\n        if (!this.history.has(this.value)) {\r\n            this.addToHistory();\r\n        }\r\n        let previous = this.getPreviousValue();\r\n        if (previous) {\r\n            previous = previous === this.value ? this.getPreviousValue() : previous;\r\n        }\r\n        if (previous) {\r\n            this.value = previous;\r\n            aria.status(this.value);\r\n        }\r\n    }\r\n    getCurrentValue() {\r\n        let currentValue = this.history.current();\r\n        if (!currentValue) {\r\n            currentValue = this.history.last();\r\n            this.history.next();\r\n        }\r\n        return currentValue;\r\n    }\r\n    getPreviousValue() {\r\n        return this.history.previous() || this.history.first();\r\n    }\r\n    getNextValue() {\r\n        return this.history.next() || this.history.last();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './countBadge.css';\r\nimport { $, append } from '../../dom.js';\r\nimport { format } from '../../../common/strings.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nconst defaultOpts = {\r\n    badgeBackground: Color.fromHex('#4D4D4D'),\r\n    badgeForeground: Color.fromHex('#FFFFFF')\r\n};\r\nexport class CountBadge {\r\n    constructor(container, options) {\r\n        this.count = 0;\r\n        this.options = options || Object.create(null);\r\n        mixin(this.options, defaultOpts, false);\r\n        this.badgeBackground = this.options.badgeBackground;\r\n        this.badgeForeground = this.options.badgeForeground;\r\n        this.badgeBorder = this.options.badgeBorder;\r\n        this.element = append(container, $('.monaco-count-badge'));\r\n        this.countFormat = this.options.countFormat || '{0}';\r\n        this.titleFormat = this.options.titleFormat || '';\r\n        this.setCount(this.options.count || 0);\r\n    }\r\n    setCount(count) {\r\n        this.count = count;\r\n        this.render();\r\n    }\r\n    setTitleFormat(titleFormat) {\r\n        this.titleFormat = titleFormat;\r\n        this.render();\r\n    }\r\n    render() {\r\n        this.element.textContent = format(this.countFormat, this.count);\r\n        this.element.title = format(this.titleFormat, this.count);\r\n        this.applyStyles();\r\n    }\r\n    style(styles) {\r\n        this.badgeBackground = styles.badgeBackground;\r\n        this.badgeForeground = styles.badgeForeground;\r\n        this.badgeBorder = styles.badgeBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.element) {\r\n            const background = this.badgeBackground ? this.badgeBackground.toString() : '';\r\n            const foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\r\n            const border = this.badgeBorder ? this.badgeBorder.toString() : '';\r\n            this.element.style.backgroundColor = background;\r\n            this.element.style.color = foreground;\r\n            this.element.style.borderWidth = border ? '1px' : '';\r\n            this.element.style.borderStyle = border ? 'solid' : '';\r\n            this.element.style.borderColor = border;\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './progressbar.css';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nimport { show } from '../../dom.js';\r\nimport { RunOnceScheduler } from '../../../common/async.js';\r\nconst CSS_DONE = 'done';\r\nconst CSS_ACTIVE = 'active';\r\nconst CSS_INFINITE = 'infinite';\r\nconst CSS_DISCRETE = 'discrete';\r\nconst defaultOpts = {\r\n    progressBarBackground: Color.fromHex('#0E70C0')\r\n};\r\n/**\r\n * A progress bar with support for infinite or discrete progress.\r\n */\r\nexport class ProgressBar extends Disposable {\r\n    constructor(container, options) {\r\n        super();\r\n        this.options = options || Object.create(null);\r\n        mixin(this.options, defaultOpts, false);\r\n        this.workedVal = 0;\r\n        this.progressBarBackground = this.options.progressBarBackground;\r\n        this._register(this.showDelayedScheduler = new RunOnceScheduler(() => show(this.element), 0));\r\n        this.create(container);\r\n    }\r\n    create(container) {\r\n        this.element = document.createElement('div');\r\n        this.element.classList.add('monaco-progress-container');\r\n        this.element.setAttribute('role', 'progressbar');\r\n        this.element.setAttribute('aria-valuemin', '0');\r\n        container.appendChild(this.element);\r\n        this.bit = document.createElement('div');\r\n        this.bit.classList.add('progress-bit');\r\n        this.element.appendChild(this.bit);\r\n        this.applyStyles();\r\n    }\r\n    off() {\r\n        this.bit.style.width = 'inherit';\r\n        this.bit.style.opacity = '1';\r\n        this.element.classList.remove(CSS_ACTIVE, CSS_INFINITE, CSS_DISCRETE);\r\n        this.workedVal = 0;\r\n        this.totalWork = undefined;\r\n    }\r\n    /**\r\n     * Stops the progressbar from showing any progress instantly without fading out.\r\n     */\r\n    stop() {\r\n        return this.doDone(false);\r\n    }\r\n    doDone(delayed) {\r\n        this.element.classList.add(CSS_DONE);\r\n        // let it grow to 100% width and hide afterwards\r\n        if (!this.element.classList.contains(CSS_INFINITE)) {\r\n            this.bit.style.width = 'inherit';\r\n            if (delayed) {\r\n                setTimeout(() => this.off(), 200);\r\n            }\r\n            else {\r\n                this.off();\r\n            }\r\n        }\r\n        // let it fade out and hide afterwards\r\n        else {\r\n            this.bit.style.opacity = '0';\r\n            if (delayed) {\r\n                setTimeout(() => this.off(), 200);\r\n            }\r\n            else {\r\n                this.off();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Use this mode to indicate progress that has no total number of work units.\r\n     */\r\n    infinite() {\r\n        this.bit.style.width = '2%';\r\n        this.bit.style.opacity = '1';\r\n        this.element.classList.remove(CSS_DISCRETE, CSS_DONE);\r\n        this.element.classList.add(CSS_ACTIVE, CSS_INFINITE);\r\n        return this;\r\n    }\r\n    getContainer() {\r\n        return this.element;\r\n    }\r\n    style(styles) {\r\n        this.progressBarBackground = styles.progressBarBackground;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.bit) {\r\n            const background = this.progressBarBackground ? this.progressBarBackground.toString() : '';\r\n            this.bit.style.backgroundColor = background;\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './button.css';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { mixin } from '../../../common/objects.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { Gesture, EventType as TouchEventType } from '../../touch.js';\r\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\r\nimport { addDisposableListener, EventType, EventHelper, trackFocus, reset } from '../../dom.js';\r\nconst defaultOptions = {\r\n    buttonBackground: Color.fromHex('#0E639C'),\r\n    buttonHoverBackground: Color.fromHex('#006BB3'),\r\n    buttonForeground: Color.white\r\n};\r\nexport class Button extends Disposable {\r\n    constructor(container, options) {\r\n        super();\r\n        this._onDidClick = this._register(new Emitter());\r\n        this.options = options || Object.create(null);\r\n        mixin(this.options, defaultOptions, false);\r\n        this.buttonForeground = this.options.buttonForeground;\r\n        this.buttonBackground = this.options.buttonBackground;\r\n        this.buttonHoverBackground = this.options.buttonHoverBackground;\r\n        this.buttonSecondaryForeground = this.options.buttonSecondaryForeground;\r\n        this.buttonSecondaryBackground = this.options.buttonSecondaryBackground;\r\n        this.buttonSecondaryHoverBackground = this.options.buttonSecondaryHoverBackground;\r\n        this.buttonBorder = this.options.buttonBorder;\r\n        this._element = document.createElement('a');\r\n        this._element.classList.add('monaco-button');\r\n        this._element.tabIndex = 0;\r\n        this._element.setAttribute('role', 'button');\r\n        container.appendChild(this._element);\r\n        this._register(Gesture.addTarget(this._element));\r\n        [EventType.CLICK, TouchEventType.Tap].forEach(eventType => {\r\n            this._register(addDisposableListener(this._element, eventType, e => {\r\n                if (!this.enabled) {\r\n                    EventHelper.stop(e);\r\n                    return;\r\n                }\r\n                this._onDidClick.fire(e);\r\n            }));\r\n        });\r\n        this._register(addDisposableListener(this._element, EventType.KEY_DOWN, e => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            let eventHandled = false;\r\n            if (this.enabled && (event.equals(3 /* Enter */) || event.equals(10 /* Space */))) {\r\n                this._onDidClick.fire(e);\r\n                eventHandled = true;\r\n            }\r\n            else if (event.equals(9 /* Escape */)) {\r\n                this._element.blur();\r\n                eventHandled = true;\r\n            }\r\n            if (eventHandled) {\r\n                EventHelper.stop(event, true);\r\n            }\r\n        }));\r\n        this._register(addDisposableListener(this._element, EventType.MOUSE_OVER, e => {\r\n            if (!this._element.classList.contains('disabled')) {\r\n                this.setHoverBackground();\r\n            }\r\n        }));\r\n        this._register(addDisposableListener(this._element, EventType.MOUSE_OUT, e => {\r\n            this.applyStyles(); // restore standard styles\r\n        }));\r\n        // Also set hover background when button is focused for feedback\r\n        this.focusTracker = this._register(trackFocus(this._element));\r\n        this._register(this.focusTracker.onDidFocus(() => this.setHoverBackground()));\r\n        this._register(this.focusTracker.onDidBlur(() => this.applyStyles())); // restore standard styles\r\n        this.applyStyles();\r\n    }\r\n    get onDidClick() { return this._onDidClick.event; }\r\n    setHoverBackground() {\r\n        let hoverBackground;\r\n        if (this.options.secondary) {\r\n            hoverBackground = this.buttonSecondaryHoverBackground ? this.buttonSecondaryHoverBackground.toString() : null;\r\n        }\r\n        else {\r\n            hoverBackground = this.buttonHoverBackground ? this.buttonHoverBackground.toString() : null;\r\n        }\r\n        if (hoverBackground) {\r\n            this._element.style.backgroundColor = hoverBackground;\r\n        }\r\n    }\r\n    style(styles) {\r\n        this.buttonForeground = styles.buttonForeground;\r\n        this.buttonBackground = styles.buttonBackground;\r\n        this.buttonHoverBackground = styles.buttonHoverBackground;\r\n        this.buttonSecondaryForeground = styles.buttonSecondaryForeground;\r\n        this.buttonSecondaryBackground = styles.buttonSecondaryBackground;\r\n        this.buttonSecondaryHoverBackground = styles.buttonSecondaryHoverBackground;\r\n        this.buttonBorder = styles.buttonBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this._element) {\r\n            let background, foreground;\r\n            if (this.options.secondary) {\r\n                foreground = this.buttonSecondaryForeground ? this.buttonSecondaryForeground.toString() : '';\r\n                background = this.buttonSecondaryBackground ? this.buttonSecondaryBackground.toString() : '';\r\n            }\r\n            else {\r\n                foreground = this.buttonForeground ? this.buttonForeground.toString() : '';\r\n                background = this.buttonBackground ? this.buttonBackground.toString() : '';\r\n            }\r\n            const border = this.buttonBorder ? this.buttonBorder.toString() : '';\r\n            this._element.style.color = foreground;\r\n            this._element.style.backgroundColor = background;\r\n            this._element.style.borderWidth = border ? '1px' : '';\r\n            this._element.style.borderStyle = border ? 'solid' : '';\r\n            this._element.style.borderColor = border;\r\n        }\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    set label(value) {\r\n        this._element.classList.add('monaco-text-button');\r\n        if (this.options.supportIcons) {\r\n            reset(this._element, ...renderLabelWithIcons(value));\r\n        }\r\n        else {\r\n            this._element.textContent = value;\r\n        }\r\n        if (typeof this.options.title === 'string') {\r\n            this._element.title = this.options.title;\r\n        }\r\n        else if (this.options.title) {\r\n            this._element.title = value;\r\n        }\r\n    }\r\n    set enabled(value) {\r\n        if (value) {\r\n            this._element.classList.remove('disabled');\r\n            this._element.setAttribute('aria-disabled', String(false));\r\n            this._element.tabIndex = 0;\r\n        }\r\n        else {\r\n            this._element.classList.add('disabled');\r\n            this._element.setAttribute('aria-disabled', String(true));\r\n        }\r\n    }\r\n    get enabled() {\r\n        return !this._element.classList.contains('disabled');\r\n    }\r\n}\r\n", "import { createDecorator } from '../../instantiation/common/instantiation.js';\r\nexport * from '../../../base/parts/quickinput/common/quickInput.js';\r\nexport const IQuickInputService = createDecorator('quickInputService');\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Registry } from '../../registry/common/platform.js';\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nexport var DefaultQuickAccessFilterValue;\r\n(function (DefaultQuickAccessFilterValue) {\r\n    /**\r\n     * Keep the value as it is given to quick access.\r\n     */\r\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"PRESERVE\"] = 0] = \"PRESERVE\";\r\n    /**\r\n     * Use the value that was used last time something was accepted from the picker.\r\n     */\r\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"LAST\"] = 1] = \"LAST\";\r\n})(DefaultQuickAccessFilterValue || (DefaultQuickAccessFilterValue = {}));\r\nexport const Extensions = {\r\n    Quickaccess: 'workbench.contributions.quickaccess'\r\n};\r\nexport class QuickAccessRegistry {\r\n    constructor() {\r\n        this.providers = [];\r\n        this.defaultProvider = undefined;\r\n    }\r\n    registerQuickAccessProvider(provider) {\r\n        // Extract the default provider when no prefix is present\r\n        if (provider.prefix.length === 0) {\r\n            this.defaultProvider = provider;\r\n        }\r\n        else {\r\n            this.providers.push(provider);\r\n        }\r\n        // sort the providers by decreasing prefix length, such that longer\r\n        // prefixes take priority: 'ext' vs 'ext install' - the latter should win\r\n        this.providers.sort((providerA, providerB) => providerB.prefix.length - providerA.prefix.length);\r\n        return toDisposable(() => {\r\n            this.providers.splice(this.providers.indexOf(provider), 1);\r\n            if (this.defaultProvider === provider) {\r\n                this.defaultProvider = undefined;\r\n            }\r\n        });\r\n    }\r\n    getQuickAccessProviders() {\r\n        return coalesce([this.defaultProvider, ...this.providers]);\r\n    }\r\n    getQuickAccessProvider(prefix) {\r\n        const result = prefix ? (this.providers.find(provider => prefix.startsWith(provider.prefix)) || undefined) : undefined;\r\n        return result || this.defaultProvider;\r\n    }\r\n}\r\nRegistry.add(Extensions.Quickaccess, new QuickAccessRegistry());\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IQuickInputService, ItemActivation } from '../common/quickInput.js';\r\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Extensions, DefaultQuickAccessFilterValue } from '../common/quickAccess.js';\r\nimport { Registry } from '../../registry/common/platform.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { once } from '../../../base/common/functional.js';\r\nlet QuickAccessController = class QuickAccessController extends Disposable {\r\n    constructor(quickInputService, instantiationService) {\r\n        super();\r\n        this.quickInputService = quickInputService;\r\n        this.instantiationService = instantiationService;\r\n        this.registry = Registry.as(Extensions.Quickaccess);\r\n        this.mapProviderToDescriptor = new Map();\r\n        this.lastAcceptedPickerValues = new Map();\r\n        this.visibleQuickAccess = undefined;\r\n    }\r\n    show(value = '', options) {\r\n        this.doShowOrPick(value, false, options);\r\n    }\r\n    doShowOrPick(value, pick, options) {\r\n        var _a;\r\n        // Find provider for the value to show\r\n        const [provider, descriptor] = this.getOrInstantiateProvider(value);\r\n        // Return early if quick access is already showing on that same prefix\r\n        const visibleQuickAccess = this.visibleQuickAccess;\r\n        const visibleDescriptor = visibleQuickAccess === null || visibleQuickAccess === void 0 ? void 0 : visibleQuickAccess.descriptor;\r\n        if (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\r\n            // Apply value only if it is more specific than the prefix\r\n            // from the provider and we are not instructed to preserve\r\n            if (value !== descriptor.prefix && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\r\n                visibleQuickAccess.picker.value = value;\r\n            }\r\n            // Always adjust selection\r\n            this.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\r\n            return;\r\n        }\r\n        // Rewrite the filter value based on certain rules unless disabled\r\n        if (descriptor && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\r\n            let newValue = undefined;\r\n            // If we have a visible provider with a value, take it's filter value but\r\n            // rewrite to new provider prefix in case they differ\r\n            if (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\r\n                const newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\r\n                if (newValueCandidateWithoutPrefix) {\r\n                    newValue = `${descriptor.prefix}${newValueCandidateWithoutPrefix}`;\r\n                }\r\n            }\r\n            // Otherwise, take a default value as instructed\r\n            if (!newValue) {\r\n                const defaultFilterValue = provider === null || provider === void 0 ? void 0 : provider.defaultFilterValue;\r\n                if (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\r\n                    newValue = this.lastAcceptedPickerValues.get(descriptor);\r\n                }\r\n                else if (typeof defaultFilterValue === 'string') {\r\n                    newValue = `${descriptor.prefix}${defaultFilterValue}`;\r\n                }\r\n            }\r\n            if (typeof newValue === 'string') {\r\n                value = newValue;\r\n            }\r\n        }\r\n        // Create a picker for the provider to use with the initial value\r\n        // and adjust the filtering to exclude the prefix from filtering\r\n        const disposables = new DisposableStore();\r\n        const picker = disposables.add(this.quickInputService.createQuickPick());\r\n        picker.value = value;\r\n        this.adjustValueSelection(picker, descriptor, options);\r\n        picker.placeholder = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\r\n        picker.quickNavigate = options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration;\r\n        picker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\r\n        if (typeof (options === null || options === void 0 ? void 0 : options.itemActivation) === 'number' || (options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration)) {\r\n            picker.itemActivation = (_a = options === null || options === void 0 ? void 0 : options.itemActivation) !== null && _a !== void 0 ? _a : ItemActivation.SECOND /* quick nav is always second */;\r\n        }\r\n        picker.contextKey = descriptor === null || descriptor === void 0 ? void 0 : descriptor.contextKey;\r\n        picker.filterValue = (value) => value.substring(descriptor ? descriptor.prefix.length : 0);\r\n        if (descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder) {\r\n            picker.ariaLabel = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\r\n        }\r\n        // Pick mode: setup a promise that can be resolved\r\n        // with the selected items and prevent execution\r\n        let pickPromise = undefined;\r\n        let pickResolve = undefined;\r\n        if (pick) {\r\n            pickPromise = new Promise(resolve => pickResolve = resolve);\r\n            disposables.add(once(picker.onWillAccept)(e => {\r\n                e.veto();\r\n                picker.hide();\r\n            }));\r\n        }\r\n        // Register listeners\r\n        disposables.add(this.registerPickerListeners(picker, provider, descriptor, value));\r\n        // Ask provider to fill the picker as needed if we have one\r\n        // and pass over a cancellation token that will indicate when\r\n        // the picker is hiding without a pick being made.\r\n        const cts = disposables.add(new CancellationTokenSource());\r\n        if (provider) {\r\n            disposables.add(provider.provide(picker, cts.token));\r\n        }\r\n        // Finally, trigger disposal and cancellation when the picker\r\n        // hides depending on items selected or not.\r\n        once(picker.onDidHide)(() => {\r\n            if (picker.selectedItems.length === 0) {\r\n                cts.cancel();\r\n            }\r\n            // Start to dispose once picker hides\r\n            disposables.dispose();\r\n            // Resolve pick promise with selected items\r\n            pickResolve === null || pickResolve === void 0 ? void 0 : pickResolve(picker.selectedItems);\r\n        });\r\n        // Finally, show the picker. This is important because a provider\r\n        // may not call this and then our disposables would leak that rely\r\n        // on the onDidHide event.\r\n        picker.show();\r\n        // Pick mode: return with promise\r\n        if (pick) {\r\n            return pickPromise;\r\n        }\r\n    }\r\n    adjustValueSelection(picker, descriptor, options) {\r\n        var _a;\r\n        let valueSelection;\r\n        // Preserve: just always put the cursor at the end\r\n        if (options === null || options === void 0 ? void 0 : options.preserveValue) {\r\n            valueSelection = [picker.value.length, picker.value.length];\r\n        }\r\n        // Otherwise: select the value up until the prefix\r\n        else {\r\n            valueSelection = [(_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.prefix.length) !== null && _a !== void 0 ? _a : 0, picker.value.length];\r\n        }\r\n        picker.valueSelection = valueSelection;\r\n    }\r\n    registerPickerListeners(picker, provider, descriptor, value) {\r\n        const disposables = new DisposableStore();\r\n        // Remember as last visible picker and clean up once picker get's disposed\r\n        const visibleQuickAccess = this.visibleQuickAccess = { picker, descriptor, value };\r\n        disposables.add(toDisposable(() => {\r\n            if (visibleQuickAccess === this.visibleQuickAccess) {\r\n                this.visibleQuickAccess = undefined;\r\n            }\r\n        }));\r\n        // Whenever the value changes, check if the provider has\r\n        // changed and if so - re-create the picker from the beginning\r\n        disposables.add(picker.onDidChangeValue(value => {\r\n            const [providerForValue] = this.getOrInstantiateProvider(value);\r\n            if (providerForValue !== provider) {\r\n                this.show(value, { preserveValue: true } /* do not rewrite value from user typing! */);\r\n            }\r\n            else {\r\n                visibleQuickAccess.value = value; // remember the value in our visible one\r\n            }\r\n        }));\r\n        // Remember picker input for future use when accepting\r\n        if (descriptor) {\r\n            disposables.add(picker.onDidAccept(() => {\r\n                this.lastAcceptedPickerValues.set(descriptor, picker.value);\r\n            }));\r\n        }\r\n        return disposables;\r\n    }\r\n    getOrInstantiateProvider(value) {\r\n        const providerDescriptor = this.registry.getQuickAccessProvider(value);\r\n        if (!providerDescriptor) {\r\n            return [undefined, undefined];\r\n        }\r\n        let provider = this.mapProviderToDescriptor.get(providerDescriptor);\r\n        if (!provider) {\r\n            provider = this.instantiationService.createInstance(providerDescriptor.ctor);\r\n            this.mapProviderToDescriptor.set(providerDescriptor, provider);\r\n        }\r\n        return [provider, providerDescriptor];\r\n    }\r\n};\r\nQuickAccessController = __decorate([\r\n    __param(0, IQuickInputService),\r\n    __param(1, IInstantiationService)\r\n], QuickAccessController);\r\nexport { QuickAccessController };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { IThemeService, Themable } from '../../theme/common/themeService.js';\r\nimport { inputBackground, inputForeground, inputBorder, inputValidationInfoBackground, inputValidationInfoForeground, inputValidationInfoBorder, inputValidationWarningBackground, inputValidationWarningForeground, inputValidationWarningBorder, inputValidationErrorBackground, inputValidationErrorForeground, inputValidationErrorBorder, badgeBackground, badgeForeground, contrastBorder, buttonForeground, buttonBackground, buttonHoverBackground, progressBarBackground, widgetShadow, activeContrastBorder, pickerGroupBorder, pickerGroupForeground, quickInputForeground, quickInputBackground, quickInputTitleBackground, quickInputListFocusBackground, keybindingLabelBackground, keybindingLabelForeground, keybindingLabelBorder, keybindingLabelBottomBorder, quickInputListFocusForeground, quickInputListFocusIconForeground } from '../../theme/common/colorRegistry.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { computeStyles } from '../../theme/common/styler.js';\r\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\r\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\r\nimport { QuickInputController } from '../../../base/parts/quickinput/browser/quickInput.js';\r\nimport { WorkbenchList } from '../../list/browser/listService.js';\r\nimport { QuickAccessController } from './quickAccess.js';\r\nlet QuickInputService = class QuickInputService extends Themable {\r\n    constructor(instantiationService, contextKeyService, themeService, accessibilityService, layoutService) {\r\n        super(themeService);\r\n        this.instantiationService = instantiationService;\r\n        this.contextKeyService = contextKeyService;\r\n        this.accessibilityService = accessibilityService;\r\n        this.layoutService = layoutService;\r\n        this.contexts = new Map();\r\n    }\r\n    get controller() {\r\n        if (!this._controller) {\r\n            this._controller = this._register(this.createController());\r\n        }\r\n        return this._controller;\r\n    }\r\n    get quickAccess() {\r\n        if (!this._quickAccess) {\r\n            this._quickAccess = this._register(this.instantiationService.createInstance(QuickAccessController));\r\n        }\r\n        return this._quickAccess;\r\n    }\r\n    createController(host = this.layoutService, options) {\r\n        var _a, _b;\r\n        const defaultOptions = {\r\n            idPrefix: 'quickInput_',\r\n            container: host.container,\r\n            ignoreFocusOut: () => false,\r\n            isScreenReaderOptimized: () => this.accessibilityService.isScreenReaderOptimized(),\r\n            backKeybindingLabel: () => undefined,\r\n            setContextKey: (id) => this.setContextKey(id),\r\n            returnFocus: () => host.focus(),\r\n            createList: (user, container, delegate, renderers, options) => this.instantiationService.createInstance(WorkbenchList, user, container, delegate, renderers, options),\r\n            styles: this.computeStyles()\r\n        };\r\n        const controller = this._register(new QuickInputController(Object.assign(Object.assign({}, defaultOptions), options)));\r\n        controller.layout(host.dimension, (_b = (_a = host.offset) === null || _a === void 0 ? void 0 : _a.top) !== null && _b !== void 0 ? _b : 0);\r\n        // Layout changes\r\n        this._register(host.onDidLayout(dimension => { var _a, _b; return controller.layout(dimension, (_b = (_a = host.offset) === null || _a === void 0 ? void 0 : _a.top) !== null && _b !== void 0 ? _b : 0); }));\r\n        // Context keys\r\n        this._register(controller.onShow(() => this.resetContextKeys()));\r\n        this._register(controller.onHide(() => this.resetContextKeys()));\r\n        return controller;\r\n    }\r\n    setContextKey(id) {\r\n        let key;\r\n        if (id) {\r\n            key = this.contexts.get(id);\r\n            if (!key) {\r\n                key = new RawContextKey(id, false)\r\n                    .bindTo(this.contextKeyService);\r\n                this.contexts.set(id, key);\r\n            }\r\n        }\r\n        if (key && key.get()) {\r\n            return; // already active context\r\n        }\r\n        this.resetContextKeys();\r\n        if (key) {\r\n            key.set(true);\r\n        }\r\n    }\r\n    resetContextKeys() {\r\n        this.contexts.forEach(context => {\r\n            if (context.get()) {\r\n                context.reset();\r\n            }\r\n        });\r\n    }\r\n    pick(picks, options = {}, token = CancellationToken.None) {\r\n        return this.controller.pick(picks, options, token);\r\n    }\r\n    createQuickPick() {\r\n        return this.controller.createQuickPick();\r\n    }\r\n    updateStyles() {\r\n        this.controller.applyStyles(this.computeStyles());\r\n    }\r\n    computeStyles() {\r\n        return {\r\n            widget: Object.assign({}, computeStyles(this.theme, {\r\n                quickInputBackground,\r\n                quickInputForeground,\r\n                quickInputTitleBackground,\r\n                contrastBorder,\r\n                widgetShadow\r\n            })),\r\n            inputBox: computeStyles(this.theme, {\r\n                inputForeground,\r\n                inputBackground,\r\n                inputBorder,\r\n                inputValidationInfoBackground,\r\n                inputValidationInfoForeground,\r\n                inputValidationInfoBorder,\r\n                inputValidationWarningBackground,\r\n                inputValidationWarningForeground,\r\n                inputValidationWarningBorder,\r\n                inputValidationErrorBackground,\r\n                inputValidationErrorForeground,\r\n                inputValidationErrorBorder\r\n            }),\r\n            countBadge: computeStyles(this.theme, {\r\n                badgeBackground,\r\n                badgeForeground,\r\n                badgeBorder: contrastBorder\r\n            }),\r\n            button: computeStyles(this.theme, {\r\n                buttonForeground,\r\n                buttonBackground,\r\n                buttonHoverBackground,\r\n                buttonBorder: contrastBorder\r\n            }),\r\n            progressBar: computeStyles(this.theme, {\r\n                progressBarBackground\r\n            }),\r\n            keybindingLabel: computeStyles(this.theme, {\r\n                keybindingLabelBackground,\r\n                keybindingLabelForeground,\r\n                keybindingLabelBorder,\r\n                keybindingLabelBottomBorder,\r\n                keybindingLabelShadow: widgetShadow\r\n            }),\r\n            list: computeStyles(this.theme, {\r\n                listBackground: quickInputBackground,\r\n                // Look like focused when inactive.\r\n                listInactiveFocusForeground: quickInputListFocusForeground,\r\n                listInactiveSelectionIconForeground: quickInputListFocusIconForeground,\r\n                listInactiveFocusBackground: quickInputListFocusBackground,\r\n                listFocusOutline: activeContrastBorder,\r\n                listInactiveFocusOutline: activeContrastBorder,\r\n                pickerGroupBorder,\r\n                pickerGroupForeground\r\n            })\r\n        };\r\n    }\r\n};\r\nQuickInputService = __decorate([\r\n    __param(0, IInstantiationService),\r\n    __param(1, IContextKeyService),\r\n    __param(2, IThemeService),\r\n    __param(3, IAccessibilityService),\r\n    __param(4, ILayoutService)\r\n], QuickInputService);\r\nexport { QuickInputService };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { IBulkEditService } from '../../browser/services/bulkEditService.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { EditorWorkerServiceImpl } from '../../common/services/editorWorkerServiceImpl.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { ModeServiceImpl } from '../../common/services/modeServiceImpl.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { ModelServiceImpl } from '../../common/services/modelServiceImpl.js';\r\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfigurationService.js';\r\nimport { SimpleBulkEditService, SimpleConfigurationService, SimpleDialogService, SimpleNotificationService, SimpleEditorProgressService, SimpleResourceConfigurationService, SimpleResourcePropertiesService, SimpleUriLabelService, SimpleWorkspaceContextService, StandaloneCommandService, StandaloneKeybindingService, StandaloneTelemetryService, SimpleLayoutService } from './simpleServices.js';\r\nimport { StandaloneCodeEditorServiceImpl } from './standaloneCodeServiceImpl.js';\r\nimport { StandaloneThemeServiceImpl } from './standaloneThemeServiceImpl.js';\r\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\r\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\r\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\r\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\r\nimport { IInstantiationService, createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\r\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\r\nimport { ConsoleLogger, ILogService, LogService } from '../../../platform/log/common/log.js';\r\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\r\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\r\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\r\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\r\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsServiceImpl.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\r\nimport { getSingletonServiceDescriptors } from '../../../platform/instantiation/common/extensions.js';\r\nimport { AccessibilityService } from '../../../platform/accessibility/common/accessibilityService.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\r\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\r\nimport { UndoRedoService } from '../../../platform/undoRedo/common/undoRedoService.js';\r\nimport { StandaloneQuickInputServiceImpl } from './quickInput/standaloneQuickInputServiceImpl.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nexport var StaticServices;\r\n(function (StaticServices) {\r\n    const _serviceCollection = new ServiceCollection();\r\n    class LazyStaticService {\r\n        constructor(serviceId, factory) {\r\n            this._serviceId = serviceId;\r\n            this._factory = factory;\r\n            this._value = null;\r\n        }\r\n        get id() { return this._serviceId; }\r\n        get(overrides) {\r\n            if (!this._value) {\r\n                if (overrides) {\r\n                    this._value = overrides[this._serviceId.toString()];\r\n                }\r\n                if (!this._value) {\r\n                    this._value = this._factory(overrides);\r\n                }\r\n                if (!this._value) {\r\n                    throw new Error('Service ' + this._serviceId + ' is missing!');\r\n                }\r\n                _serviceCollection.set(this._serviceId, this._value);\r\n            }\r\n            return this._value;\r\n        }\r\n    }\r\n    StaticServices.LazyStaticService = LazyStaticService;\r\n    let _all = [];\r\n    function define(serviceId, factory) {\r\n        let r = new LazyStaticService(serviceId, factory);\r\n        _all.push(r);\r\n        return r;\r\n    }\r\n    function init(overrides) {\r\n        // Create a fresh service collection\r\n        let result = new ServiceCollection();\r\n        // make sure to add all services that use `registerSingleton`\r\n        for (const [id, descriptor] of getSingletonServiceDescriptors()) {\r\n            result.set(id, descriptor);\r\n        }\r\n        // Initialize the service collection with the overrides\r\n        for (let serviceId in overrides) {\r\n            if (overrides.hasOwnProperty(serviceId)) {\r\n                result.set(createDecorator(serviceId), overrides[serviceId]);\r\n            }\r\n        }\r\n        // Make sure the same static services are present in all service collections\r\n        _all.forEach(service => result.set(service.id, service.get(overrides)));\r\n        // Ensure the collection gets the correct instantiation service\r\n        let instantiationService = new InstantiationService(result, true);\r\n        result.set(IInstantiationService, instantiationService);\r\n        return [result, instantiationService];\r\n    }\r\n    StaticServices.init = init;\r\n    StaticServices.instantiationService = define(IInstantiationService, () => new InstantiationService(_serviceCollection, true));\r\n    const configurationServiceImpl = new SimpleConfigurationService();\r\n    StaticServices.configurationService = define(IConfigurationService, () => configurationServiceImpl);\r\n    StaticServices.resourceConfigurationService = define(ITextResourceConfigurationService, () => new SimpleResourceConfigurationService(configurationServiceImpl));\r\n    StaticServices.resourcePropertiesService = define(ITextResourcePropertiesService, () => new SimpleResourcePropertiesService(configurationServiceImpl));\r\n    StaticServices.contextService = define(IWorkspaceContextService, () => new SimpleWorkspaceContextService());\r\n    StaticServices.labelService = define(ILabelService, () => new SimpleUriLabelService());\r\n    StaticServices.telemetryService = define(ITelemetryService, () => new StandaloneTelemetryService());\r\n    StaticServices.dialogService = define(IDialogService, () => new SimpleDialogService());\r\n    StaticServices.notificationService = define(INotificationService, () => new SimpleNotificationService());\r\n    StaticServices.markerService = define(IMarkerService, () => new MarkerService());\r\n    StaticServices.modeService = define(IModeService, (o) => new ModeServiceImpl());\r\n    StaticServices.standaloneThemeService = define(IStandaloneThemeService, () => new StandaloneThemeServiceImpl());\r\n    StaticServices.logService = define(ILogService, () => new LogService(new ConsoleLogger()));\r\n    StaticServices.undoRedoService = define(IUndoRedoService, (o) => new UndoRedoService(StaticServices.dialogService.get(o), StaticServices.notificationService.get(o)));\r\n    StaticServices.modelService = define(IModelService, (o) => new ModelServiceImpl(StaticServices.configurationService.get(o), StaticServices.resourcePropertiesService.get(o), StaticServices.standaloneThemeService.get(o), StaticServices.logService.get(o), StaticServices.undoRedoService.get(o)));\r\n    StaticServices.markerDecorationsService = define(IMarkerDecorationsService, (o) => new MarkerDecorationsService(StaticServices.modelService.get(o), StaticServices.markerService.get(o)));\r\n    StaticServices.contextKeyService = define(IContextKeyService, (o) => new ContextKeyService(StaticServices.configurationService.get(o)));\r\n    StaticServices.codeEditorService = define(ICodeEditorService, (o) => new StandaloneCodeEditorServiceImpl(null, StaticServices.contextKeyService.get(o), StaticServices.standaloneThemeService.get(o)));\r\n    StaticServices.editorProgressService = define(IEditorProgressService, () => new SimpleEditorProgressService());\r\n    StaticServices.storageService = define(IStorageService, () => new InMemoryStorageService());\r\n    StaticServices.editorWorkerService = define(IEditorWorkerService, (o) => new EditorWorkerServiceImpl(StaticServices.modelService.get(o), StaticServices.resourceConfigurationService.get(o), StaticServices.logService.get(o)));\r\n})(StaticServices || (StaticServices = {}));\r\nexport class DynamicStandaloneServices extends Disposable {\r\n    constructor(domElement, overrides) {\r\n        super();\r\n        const [_serviceCollection, _instantiationService] = StaticServices.init(overrides);\r\n        this._serviceCollection = _serviceCollection;\r\n        this._instantiationService = _instantiationService;\r\n        const configurationService = this.get(IConfigurationService);\r\n        const notificationService = this.get(INotificationService);\r\n        const telemetryService = this.get(ITelemetryService);\r\n        const themeService = this.get(IThemeService);\r\n        const logService = this.get(ILogService);\r\n        const contextKeyService = this.get(IContextKeyService);\r\n        let ensure = (serviceId, factory) => {\r\n            let value = null;\r\n            if (overrides) {\r\n                value = overrides[serviceId.toString()];\r\n            }\r\n            if (!value) {\r\n                value = factory();\r\n            }\r\n            this._serviceCollection.set(serviceId, value);\r\n            return value;\r\n        };\r\n        ensure(IAccessibilityService, () => new AccessibilityService(contextKeyService, configurationService));\r\n        ensure(IListService, () => new ListService(themeService));\r\n        let commandService = ensure(ICommandService, () => new StandaloneCommandService(this._instantiationService));\r\n        let keybindingService = ensure(IKeybindingService, () => this._register(new StandaloneKeybindingService(contextKeyService, commandService, telemetryService, notificationService, logService, domElement)));\r\n        let layoutService = ensure(ILayoutService, () => new SimpleLayoutService(StaticServices.codeEditorService.get(ICodeEditorService), domElement));\r\n        ensure(IQuickInputService, () => new StandaloneQuickInputServiceImpl(_instantiationService, StaticServices.codeEditorService.get(ICodeEditorService)));\r\n        let contextViewService = ensure(IContextViewService, () => this._register(new ContextViewService(layoutService)));\r\n        ensure(IClipboardService, () => new BrowserClipboardService());\r\n        ensure(IContextMenuService, () => {\r\n            const contextMenuService = new ContextMenuService(telemetryService, notificationService, contextViewService, keybindingService, themeService);\r\n            contextMenuService.configure({ blockMouse: false }); // we do not want that in the standalone editor\r\n            return this._register(contextMenuService);\r\n        });\r\n        ensure(IMenuService, () => new MenuService(commandService));\r\n        ensure(IBulkEditService, () => new SimpleBulkEditService(StaticServices.modelService.get(IModelService)));\r\n    }\r\n    get(serviceId) {\r\n        let r = this._serviceCollection.get(serviceId);\r\n        if (!r) {\r\n            throw new Error('Missing service ' + serviceId);\r\n        }\r\n        return r;\r\n    }\r\n    set(serviceId, instance) {\r\n        this._serviceCollection.set(serviceId, instance);\r\n    }\r\n    has(serviceId) {\r\n        return this._serviceCollection.has(serviceId);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/*\r\n * This module only exports 'compile' which compiles a JSON language definition\r\n * into a typed and checked ILexer definition.\r\n */\r\nimport * as monarchCommon from './monarchCommon.js';\r\n/*\r\n * Type helpers\r\n *\r\n * Note: this is just for sanity checks on the JSON description which is\r\n * helpful for the programmer. No checks are done anymore once the lexer is\r\n * already 'compiled and checked'.\r\n *\r\n */\r\nfunction isArrayOf(elemType, obj) {\r\n    if (!obj) {\r\n        return false;\r\n    }\r\n    if (!(Array.isArray(obj))) {\r\n        return false;\r\n    }\r\n    for (const el of obj) {\r\n        if (!(elemType(el))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction bool(prop, defValue) {\r\n    if (typeof prop === 'boolean') {\r\n        return prop;\r\n    }\r\n    return defValue;\r\n}\r\nfunction string(prop, defValue) {\r\n    if (typeof (prop) === 'string') {\r\n        return prop;\r\n    }\r\n    return defValue;\r\n}\r\nfunction arrayToHash(array) {\r\n    const result = {};\r\n    for (const e of array) {\r\n        result[e] = true;\r\n    }\r\n    return result;\r\n}\r\nfunction createKeywordMatcher(arr, caseInsensitive = false) {\r\n    if (caseInsensitive) {\r\n        arr = arr.map(function (x) { return x.toLowerCase(); });\r\n    }\r\n    const hash = arrayToHash(arr);\r\n    if (caseInsensitive) {\r\n        return function (word) {\r\n            return hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\r\n        };\r\n    }\r\n    else {\r\n        return function (word) {\r\n            return hash[word] !== undefined && hash.hasOwnProperty(word);\r\n        };\r\n    }\r\n}\r\n// Lexer helpers\r\n/**\r\n * Compiles a regular expression string, adding the 'i' flag if 'ignoreCase' is set, and the 'u' flag if 'unicode' is set.\r\n * Also replaces @\\w+ or sequences with the content of the specified attribute\r\n * @\\w+ replacement can be avoided by escaping `@` signs with another `@` sign.\r\n * @example /@attr/ will be replaced with the value of lexer[attr]\r\n * @example /@@text/ will not be replaced and will become /@text/.\r\n */\r\nfunction compileRegExp(lexer, str) {\r\n    // @@ must be interpreted as a literal @, so we replace all occurences of @@ with a placeholder character\r\n    str = str.replace(/@@/g, `\\x01`);\r\n    let n = 0;\r\n    let hadExpansion;\r\n    do {\r\n        hadExpansion = false;\r\n        str = str.replace(/@(\\w+)/g, function (s, attr) {\r\n            hadExpansion = true;\r\n            let sub = '';\r\n            if (typeof (lexer[attr]) === 'string') {\r\n                sub = lexer[attr];\r\n            }\r\n            else if (lexer[attr] && lexer[attr] instanceof RegExp) {\r\n                sub = lexer[attr].source;\r\n            }\r\n            else {\r\n                if (lexer[attr] === undefined) {\r\n                    throw monarchCommon.createError(lexer, 'language definition does not contain attribute \\'' + attr + '\\', used at: ' + str);\r\n                }\r\n                else {\r\n                    throw monarchCommon.createError(lexer, 'attribute reference \\'' + attr + '\\' must be a string, used at: ' + str);\r\n                }\r\n            }\r\n            return (monarchCommon.empty(sub) ? '' : '(?:' + sub + ')');\r\n        });\r\n        n++;\r\n    } while (hadExpansion && n < 5);\r\n    // handle escaped @@\r\n    str = str.replace(/\\x01/g, '@');\r\n    let flags = (lexer.ignoreCase ? 'i' : '') + (lexer.unicode ? 'u' : '');\r\n    return new RegExp(str, flags);\r\n}\r\n/**\r\n * Compiles guard functions for case matches.\r\n * This compiles 'cases' attributes into efficient match functions.\r\n *\r\n */\r\nfunction selectScrutinee(id, matches, state, num) {\r\n    if (num < 0) {\r\n        return id;\r\n    }\r\n    if (num < matches.length) {\r\n        return matches[num];\r\n    }\r\n    if (num >= 100) {\r\n        num = num - 100;\r\n        let parts = state.split('.');\r\n        parts.unshift(state);\r\n        if (num < parts.length) {\r\n            return parts[num];\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction createGuard(lexer, ruleName, tkey, val) {\r\n    // get the scrutinee and pattern\r\n    let scrut = -1; // -1: $!, 0-99: $n, 100+n: $Sn\r\n    let oppat = tkey;\r\n    let matches = tkey.match(/^\\$(([sS]?)(\\d\\d?)|#)(.*)$/);\r\n    if (matches) {\r\n        if (matches[3]) { // if digits\r\n            scrut = parseInt(matches[3]);\r\n            if (matches[2]) {\r\n                scrut = scrut + 100; // if [sS] present\r\n            }\r\n        }\r\n        oppat = matches[4];\r\n    }\r\n    // get operator\r\n    let op = '~';\r\n    let pat = oppat;\r\n    if (!oppat || oppat.length === 0) {\r\n        op = '!=';\r\n        pat = '';\r\n    }\r\n    else if (/^\\w*$/.test(pat)) { // just a word\r\n        op = '==';\r\n    }\r\n    else {\r\n        matches = oppat.match(/^(@|!@|~|!~|==|!=)(.*)$/);\r\n        if (matches) {\r\n            op = matches[1];\r\n            pat = matches[2];\r\n        }\r\n    }\r\n    // set the tester function\r\n    let tester;\r\n    // special case a regexp that matches just words\r\n    if ((op === '~' || op === '!~') && /^(\\w|\\|)*$/.test(pat)) {\r\n        let inWords = createKeywordMatcher(pat.split('|'), lexer.ignoreCase);\r\n        tester = function (s) { return (op === '~' ? inWords(s) : !inWords(s)); };\r\n    }\r\n    else if (op === '@' || op === '!@') {\r\n        let words = lexer[pat];\r\n        if (!words) {\r\n            throw monarchCommon.createError(lexer, 'the @ match target \\'' + pat + '\\' is not defined, in rule: ' + ruleName);\r\n        }\r\n        if (!(isArrayOf(function (elem) { return (typeof (elem) === 'string'); }, words))) {\r\n            throw monarchCommon.createError(lexer, 'the @ match target \\'' + pat + '\\' must be an array of strings, in rule: ' + ruleName);\r\n        }\r\n        let inWords = createKeywordMatcher(words, lexer.ignoreCase);\r\n        tester = function (s) { return (op === '@' ? inWords(s) : !inWords(s)); };\r\n    }\r\n    else if (op === '~' || op === '!~') {\r\n        if (pat.indexOf('$') < 0) {\r\n            // precompile regular expression\r\n            let re = compileRegExp(lexer, '^' + pat + '$');\r\n            tester = function (s) { return (op === '~' ? re.test(s) : !re.test(s)); };\r\n        }\r\n        else {\r\n            tester = function (s, id, matches, state) {\r\n                let re = compileRegExp(lexer, '^' + monarchCommon.substituteMatches(lexer, pat, id, matches, state) + '$');\r\n                return re.test(s);\r\n            };\r\n        }\r\n    }\r\n    else { // if (op==='==' || op==='!=') {\r\n        if (pat.indexOf('$') < 0) {\r\n            let patx = monarchCommon.fixCase(lexer, pat);\r\n            tester = function (s) { return (op === '==' ? s === patx : s !== patx); };\r\n        }\r\n        else {\r\n            let patx = monarchCommon.fixCase(lexer, pat);\r\n            tester = function (s, id, matches, state, eos) {\r\n                let patexp = monarchCommon.substituteMatches(lexer, patx, id, matches, state);\r\n                return (op === '==' ? s === patexp : s !== patexp);\r\n            };\r\n        }\r\n    }\r\n    // return the branch object\r\n    if (scrut === -1) {\r\n        return {\r\n            name: tkey, value: val, test: function (id, matches, state, eos) {\r\n                return tester(id, id, matches, state, eos);\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            name: tkey, value: val, test: function (id, matches, state, eos) {\r\n                let scrutinee = selectScrutinee(id, matches, state, scrut);\r\n                return tester(!scrutinee ? '' : scrutinee, id, matches, state, eos);\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * Compiles an action: i.e. optimize regular expressions and case matches\r\n * and do many sanity checks.\r\n *\r\n * This is called only during compilation but if the lexer definition\r\n * contains user functions as actions (which is usually not allowed), then this\r\n * may be called during lexing. It is important therefore to compile common cases efficiently\r\n */\r\nfunction compileAction(lexer, ruleName, action) {\r\n    if (!action) {\r\n        return { token: '' };\r\n    }\r\n    else if (typeof (action) === 'string') {\r\n        return action; // { token: action };\r\n    }\r\n    else if (action.token || action.token === '') {\r\n        if (typeof (action.token) !== 'string') {\r\n            throw monarchCommon.createError(lexer, 'a \\'token\\' attribute must be of type string, in rule: ' + ruleName);\r\n        }\r\n        else {\r\n            // only copy specific typed fields (only happens once during compile Lexer)\r\n            let newAction = { token: action.token };\r\n            if (action.token.indexOf('$') >= 0) {\r\n                newAction.tokenSubst = true;\r\n            }\r\n            if (typeof (action.bracket) === 'string') {\r\n                if (action.bracket === '@open') {\r\n                    newAction.bracket = 1 /* Open */;\r\n                }\r\n                else if (action.bracket === '@close') {\r\n                    newAction.bracket = -1 /* Close */;\r\n                }\r\n                else {\r\n                    throw monarchCommon.createError(lexer, 'a \\'bracket\\' attribute must be either \\'@open\\' or \\'@close\\', in rule: ' + ruleName);\r\n                }\r\n            }\r\n            if (action.next) {\r\n                if (typeof (action.next) !== 'string') {\r\n                    throw monarchCommon.createError(lexer, 'the next state must be a string value in rule: ' + ruleName);\r\n                }\r\n                else {\r\n                    let next = action.next;\r\n                    if (!/^(@pop|@push|@popall)$/.test(next)) {\r\n                        if (next[0] === '@') {\r\n                            next = next.substr(1); // peel off starting @ sign\r\n                        }\r\n                        if (next.indexOf('$') < 0) { // no dollar substitution, we can check if the state exists\r\n                            if (!monarchCommon.stateExists(lexer, monarchCommon.substituteMatches(lexer, next, '', [], ''))) {\r\n                                throw monarchCommon.createError(lexer, 'the next state \\'' + action.next + '\\' is not defined in rule: ' + ruleName);\r\n                            }\r\n                        }\r\n                    }\r\n                    newAction.next = next;\r\n                }\r\n            }\r\n            if (typeof (action.goBack) === 'number') {\r\n                newAction.goBack = action.goBack;\r\n            }\r\n            if (typeof (action.switchTo) === 'string') {\r\n                newAction.switchTo = action.switchTo;\r\n            }\r\n            if (typeof (action.log) === 'string') {\r\n                newAction.log = action.log;\r\n            }\r\n            if (typeof (action.nextEmbedded) === 'string') {\r\n                newAction.nextEmbedded = action.nextEmbedded;\r\n                lexer.usesEmbedded = true;\r\n            }\r\n            return newAction;\r\n        }\r\n    }\r\n    else if (Array.isArray(action)) {\r\n        let results = [];\r\n        for (let i = 0, len = action.length; i < len; i++) {\r\n            results[i] = compileAction(lexer, ruleName, action[i]);\r\n        }\r\n        return { group: results };\r\n    }\r\n    else if (action.cases) {\r\n        // build an array of test cases\r\n        let cases = [];\r\n        // for each case, push a test function and result value\r\n        for (let tkey in action.cases) {\r\n            if (action.cases.hasOwnProperty(tkey)) {\r\n                const val = compileAction(lexer, ruleName, action.cases[tkey]);\r\n                // what kind of case\r\n                if (tkey === '@default' || tkey === '@' || tkey === '') {\r\n                    cases.push({ test: undefined, value: val, name: tkey });\r\n                }\r\n                else if (tkey === '@eos') {\r\n                    cases.push({ test: function (id, matches, state, eos) { return eos; }, value: val, name: tkey });\r\n                }\r\n                else {\r\n                    cases.push(createGuard(lexer, ruleName, tkey, val)); // call separate function to avoid local variable capture\r\n                }\r\n            }\r\n        }\r\n        // create a matching function\r\n        const def = lexer.defaultToken;\r\n        return {\r\n            test: function (id, matches, state, eos) {\r\n                for (const _case of cases) {\r\n                    const didmatch = (!_case.test || _case.test(id, matches, state, eos));\r\n                    if (didmatch) {\r\n                        return _case.value;\r\n                    }\r\n                }\r\n                return def;\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        throw monarchCommon.createError(lexer, 'an action must be a string, an object with a \\'token\\' or \\'cases\\' attribute, or an array of actions; in rule: ' + ruleName);\r\n    }\r\n}\r\n/**\r\n * Helper class for creating matching rules\r\n */\r\nclass Rule {\r\n    constructor(name) {\r\n        this.regex = new RegExp('');\r\n        this.action = { token: '' };\r\n        this.matchOnlyAtLineStart = false;\r\n        this.name = '';\r\n        this.name = name;\r\n    }\r\n    setRegex(lexer, re) {\r\n        let sregex;\r\n        if (typeof (re) === 'string') {\r\n            sregex = re;\r\n        }\r\n        else if (re instanceof RegExp) {\r\n            sregex = re.source;\r\n        }\r\n        else {\r\n            throw monarchCommon.createError(lexer, 'rules must start with a match string or regular expression: ' + this.name);\r\n        }\r\n        this.matchOnlyAtLineStart = (sregex.length > 0 && sregex[0] === '^');\r\n        this.name = this.name + ': ' + sregex;\r\n        this.regex = compileRegExp(lexer, '^(?:' + (this.matchOnlyAtLineStart ? sregex.substr(1) : sregex) + ')');\r\n    }\r\n    setAction(lexer, act) {\r\n        this.action = compileAction(lexer, this.name, act);\r\n    }\r\n}\r\n/**\r\n * Compiles a json description function into json where all regular expressions,\r\n * case matches etc, are compiled and all include rules are expanded.\r\n * We also compile the bracket definitions, supply defaults, and do many sanity checks.\r\n * If the 'jsonStrict' parameter is 'false', we allow at certain locations\r\n * regular expression objects and functions that get called during lexing.\r\n * (Currently we have no samples that need this so perhaps we should always have\r\n * jsonStrict to true).\r\n */\r\nexport function compile(languageId, json) {\r\n    if (!json || typeof (json) !== 'object') {\r\n        throw new Error('Monarch: expecting a language definition object');\r\n    }\r\n    // Create our lexer\r\n    let lexer = {};\r\n    lexer.languageId = languageId;\r\n    lexer.includeLF = bool(json.includeLF, false);\r\n    lexer.noThrow = false; // raise exceptions during compilation\r\n    lexer.maxStack = 100;\r\n    // Set standard fields: be defensive about types\r\n    lexer.start = (typeof json.start === 'string' ? json.start : null);\r\n    lexer.ignoreCase = bool(json.ignoreCase, false);\r\n    lexer.unicode = bool(json.unicode, false);\r\n    lexer.tokenPostfix = string(json.tokenPostfix, '.' + lexer.languageId);\r\n    lexer.defaultToken = string(json.defaultToken, 'source');\r\n    lexer.usesEmbedded = false; // becomes true if we find a nextEmbedded action\r\n    // For calling compileAction later on\r\n    let lexerMin = json;\r\n    lexerMin.languageId = languageId;\r\n    lexerMin.includeLF = lexer.includeLF;\r\n    lexerMin.ignoreCase = lexer.ignoreCase;\r\n    lexerMin.unicode = lexer.unicode;\r\n    lexerMin.noThrow = lexer.noThrow;\r\n    lexerMin.usesEmbedded = lexer.usesEmbedded;\r\n    lexerMin.stateNames = json.tokenizer;\r\n    lexerMin.defaultToken = lexer.defaultToken;\r\n    // Compile an array of rules into newrules where RegExp objects are created.\r\n    function addRules(state, newrules, rules) {\r\n        for (const rule of rules) {\r\n            let include = rule.include;\r\n            if (include) {\r\n                if (typeof (include) !== 'string') {\r\n                    throw monarchCommon.createError(lexer, 'an \\'include\\' attribute must be a string at: ' + state);\r\n                }\r\n                if (include[0] === '@') {\r\n                    include = include.substr(1); // peel off starting @\r\n                }\r\n                if (!json.tokenizer[include]) {\r\n                    throw monarchCommon.createError(lexer, 'include target \\'' + include + '\\' is not defined at: ' + state);\r\n                }\r\n                addRules(state + '.' + include, newrules, json.tokenizer[include]);\r\n            }\r\n            else {\r\n                const newrule = new Rule(state);\r\n                // Set up new rule attributes\r\n                if (Array.isArray(rule) && rule.length >= 1 && rule.length <= 3) {\r\n                    newrule.setRegex(lexerMin, rule[0]);\r\n                    if (rule.length >= 3) {\r\n                        if (typeof (rule[1]) === 'string') {\r\n                            newrule.setAction(lexerMin, { token: rule[1], next: rule[2] });\r\n                        }\r\n                        else if (typeof (rule[1]) === 'object') {\r\n                            const rule1 = rule[1];\r\n                            rule1.next = rule[2];\r\n                            newrule.setAction(lexerMin, rule1);\r\n                        }\r\n                        else {\r\n                            throw monarchCommon.createError(lexer, 'a next state as the last element of a rule can only be given if the action is either an object or a string, at: ' + state);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newrule.setAction(lexerMin, rule[1]);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!rule.regex) {\r\n                        throw monarchCommon.createError(lexer, 'a rule must either be an array, or an object with a \\'regex\\' or \\'include\\' field at: ' + state);\r\n                    }\r\n                    if (rule.name) {\r\n                        if (typeof rule.name === 'string') {\r\n                            newrule.name = rule.name;\r\n                        }\r\n                    }\r\n                    if (rule.matchOnlyAtStart) {\r\n                        newrule.matchOnlyAtLineStart = bool(rule.matchOnlyAtLineStart, false);\r\n                    }\r\n                    newrule.setRegex(lexerMin, rule.regex);\r\n                    newrule.setAction(lexerMin, rule.action);\r\n                }\r\n                newrules.push(newrule);\r\n            }\r\n        }\r\n    }\r\n    // compile the tokenizer rules\r\n    if (!json.tokenizer || typeof (json.tokenizer) !== 'object') {\r\n        throw monarchCommon.createError(lexer, 'a language definition must define the \\'tokenizer\\' attribute as an object');\r\n    }\r\n    lexer.tokenizer = [];\r\n    for (let key in json.tokenizer) {\r\n        if (json.tokenizer.hasOwnProperty(key)) {\r\n            if (!lexer.start) {\r\n                lexer.start = key;\r\n            }\r\n            const rules = json.tokenizer[key];\r\n            lexer.tokenizer[key] = new Array();\r\n            addRules('tokenizer.' + key, lexer.tokenizer[key], rules);\r\n        }\r\n    }\r\n    lexer.usesEmbedded = lexerMin.usesEmbedded; // can be set during compileAction\r\n    // Set simple brackets\r\n    if (json.brackets) {\r\n        if (!(Array.isArray(json.brackets))) {\r\n            throw monarchCommon.createError(lexer, 'the \\'brackets\\' attribute must be defined as an array');\r\n        }\r\n    }\r\n    else {\r\n        json.brackets = [\r\n            { open: '{', close: '}', token: 'delimiter.curly' },\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n            { open: '<', close: '>', token: 'delimiter.angle' }\r\n        ];\r\n    }\r\n    let brackets = [];\r\n    for (let el of json.brackets) {\r\n        let desc = el;\r\n        if (desc && Array.isArray(desc) && desc.length === 3) {\r\n            desc = { token: desc[2], open: desc[0], close: desc[1] };\r\n        }\r\n        if (desc.open === desc.close) {\r\n            throw monarchCommon.createError(lexer, 'open and close brackets in a \\'brackets\\' attribute must be different: ' + desc.open +\r\n                '\\n hint: use the \\'bracket\\' attribute if matching on equal brackets is required.');\r\n        }\r\n        if (typeof desc.open === 'string' && typeof desc.token === 'string' && typeof desc.close === 'string') {\r\n            brackets.push({\r\n                token: desc.token + lexer.tokenPostfix,\r\n                open: monarchCommon.fixCase(lexer, desc.open),\r\n                close: monarchCommon.fixCase(lexer, desc.close)\r\n            });\r\n        }\r\n        else {\r\n            throw monarchCommon.createError(lexer, 'every element in the \\'brackets\\' array must be a \\'{open,close,token}\\' object or array');\r\n        }\r\n    }\r\n    lexer.brackets = brackets;\r\n    // Disable throw so the syntax highlighter goes, no matter what\r\n    lexer.noThrow = true;\r\n    return lexer;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Token, TokenizationResult, TokenizationResult2 } from '../../common/core/token.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { ModesRegistry } from '../../common/modes/modesRegistry.js';\r\nimport * as standaloneEnums from '../../common/standalone/standaloneEnums.js';\r\nimport { StaticServices } from './standaloneServices.js';\r\nimport { compile } from '../common/monarch/monarchCompile.js';\r\nimport { createTokenizationSupport } from '../common/monarch/monarchLexer.js';\r\n/**\r\n * Register information about a new language.\r\n */\r\nexport function register(language) {\r\n    ModesRegistry.registerLanguage(language);\r\n}\r\n/**\r\n * Get the information of all the registered languages.\r\n */\r\nexport function getLanguages() {\r\n    let result = [];\r\n    result = result.concat(ModesRegistry.getLanguages());\r\n    return result;\r\n}\r\nexport function getEncodedLanguageId(languageId) {\r\n    let lid = StaticServices.modeService.get().getLanguageIdentifier(languageId);\r\n    return lid ? lid.id : 0;\r\n}\r\n/**\r\n * An event emitted when a language is first time needed (e.g. a model has it set).\r\n * @event\r\n */\r\nexport function onLanguage(languageId, callback) {\r\n    let disposable = StaticServices.modeService.get().onDidCreateMode((mode) => {\r\n        if (mode.getId() === languageId) {\r\n            // stop listening\r\n            disposable.dispose();\r\n            // invoke actual listener\r\n            callback();\r\n        }\r\n    });\r\n    return disposable;\r\n}\r\n/**\r\n * Set the editing configuration for a language.\r\n */\r\nexport function setLanguageConfiguration(languageId, configuration) {\r\n    let languageIdentifier = StaticServices.modeService.get().getLanguageIdentifier(languageId);\r\n    if (!languageIdentifier) {\r\n        throw new Error(`Cannot set configuration for unknown language ${languageId}`);\r\n    }\r\n    return LanguageConfigurationRegistry.register(languageIdentifier, configuration, 100);\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class EncodedTokenizationSupport2Adapter {\r\n    constructor(languageIdentifier, actual) {\r\n        this._languageIdentifier = languageIdentifier;\r\n        this._actual = actual;\r\n    }\r\n    getInitialState() {\r\n        return this._actual.getInitialState();\r\n    }\r\n    tokenize(line, hasEOL, state, offsetDelta) {\r\n        if (typeof this._actual.tokenize === 'function') {\r\n            return TokenizationSupport2Adapter.adaptTokenize(this._languageIdentifier.language, this._actual, line, state, offsetDelta);\r\n        }\r\n        throw new Error('Not supported!');\r\n    }\r\n    tokenize2(line, hasEOL, state) {\r\n        let result = this._actual.tokenizeEncoded(line, state);\r\n        return new TokenizationResult2(result.tokens, result.endState);\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport class TokenizationSupport2Adapter {\r\n    constructor(standaloneThemeService, languageIdentifier, actual) {\r\n        this._standaloneThemeService = standaloneThemeService;\r\n        this._languageIdentifier = languageIdentifier;\r\n        this._actual = actual;\r\n    }\r\n    getInitialState() {\r\n        return this._actual.getInitialState();\r\n    }\r\n    static _toClassicTokens(tokens, language, offsetDelta) {\r\n        let result = [];\r\n        let previousStartIndex = 0;\r\n        for (let i = 0, len = tokens.length; i < len; i++) {\r\n            const t = tokens[i];\r\n            let startIndex = t.startIndex;\r\n            // Prevent issues stemming from a buggy external tokenizer.\r\n            if (i === 0) {\r\n                // Force first token to start at first index!\r\n                startIndex = 0;\r\n            }\r\n            else if (startIndex < previousStartIndex) {\r\n                // Force tokens to be after one another!\r\n                startIndex = previousStartIndex;\r\n            }\r\n            result[i] = new Token(startIndex + offsetDelta, t.scopes, language);\r\n            previousStartIndex = startIndex;\r\n        }\r\n        return result;\r\n    }\r\n    static adaptTokenize(language, actual, line, state, offsetDelta) {\r\n        let actualResult = actual.tokenize(line, state);\r\n        let tokens = TokenizationSupport2Adapter._toClassicTokens(actualResult.tokens, language, offsetDelta);\r\n        let endState;\r\n        // try to save an object if possible\r\n        if (actualResult.endState.equals(state)) {\r\n            endState = state;\r\n        }\r\n        else {\r\n            endState = actualResult.endState;\r\n        }\r\n        return new TokenizationResult(tokens, endState);\r\n    }\r\n    tokenize(line, hasEOL, state, offsetDelta) {\r\n        return TokenizationSupport2Adapter.adaptTokenize(this._languageIdentifier.language, this._actual, line, state, offsetDelta);\r\n    }\r\n    _toBinaryTokens(tokens, offsetDelta) {\r\n        const languageId = this._languageIdentifier.id;\r\n        const tokenTheme = this._standaloneThemeService.getColorTheme().tokenTheme;\r\n        let result = [], resultLen = 0;\r\n        let previousStartIndex = 0;\r\n        for (let i = 0, len = tokens.length; i < len; i++) {\r\n            const t = tokens[i];\r\n            const metadata = tokenTheme.match(languageId, t.scopes);\r\n            if (resultLen > 0 && result[resultLen - 1] === metadata) {\r\n                // same metadata\r\n                continue;\r\n            }\r\n            let startIndex = t.startIndex;\r\n            // Prevent issues stemming from a buggy external tokenizer.\r\n            if (i === 0) {\r\n                // Force first token to start at first index!\r\n                startIndex = 0;\r\n            }\r\n            else if (startIndex < previousStartIndex) {\r\n                // Force tokens to be after one another!\r\n                startIndex = previousStartIndex;\r\n            }\r\n            result[resultLen++] = startIndex + offsetDelta;\r\n            result[resultLen++] = metadata;\r\n            previousStartIndex = startIndex;\r\n        }\r\n        let actualResult = new Uint32Array(resultLen);\r\n        for (let i = 0; i < resultLen; i++) {\r\n            actualResult[i] = result[i];\r\n        }\r\n        return actualResult;\r\n    }\r\n    tokenize2(line, hasEOL, state, offsetDelta) {\r\n        let actualResult = this._actual.tokenize(line, state);\r\n        let tokens = this._toBinaryTokens(actualResult.tokens, offsetDelta);\r\n        let endState;\r\n        // try to save an object if possible\r\n        if (actualResult.endState.equals(state)) {\r\n            endState = state;\r\n        }\r\n        else {\r\n            endState = actualResult.endState;\r\n        }\r\n        return new TokenizationResult2(tokens, endState);\r\n    }\r\n}\r\nfunction isEncodedTokensProvider(provider) {\r\n    return 'tokenizeEncoded' in provider;\r\n}\r\nfunction isThenable(obj) {\r\n    return obj && typeof obj.then === 'function';\r\n}\r\n/**\r\n * Change the color map that is used for token colors.\r\n * Supported formats (hex): #RRGGBB, $RRGGBBAA, #RGB, #RGBA\r\n */\r\nexport function setColorMap(colorMap) {\r\n    if (colorMap) {\r\n        const result = [null];\r\n        for (let i = 1, len = colorMap.length; i < len; i++) {\r\n            result[i] = Color.fromHex(colorMap[i]);\r\n        }\r\n        StaticServices.standaloneThemeService.get().setColorMapOverride(result);\r\n    }\r\n    else {\r\n        StaticServices.standaloneThemeService.get().setColorMapOverride(null);\r\n    }\r\n}\r\n/**\r\n * Set the tokens provider for a language (manual implementation).\r\n */\r\nexport function setTokensProvider(languageId, provider) {\r\n    let languageIdentifier = StaticServices.modeService.get().getLanguageIdentifier(languageId);\r\n    if (!languageIdentifier) {\r\n        throw new Error(`Cannot set tokens provider for unknown language ${languageId}`);\r\n    }\r\n    const create = (provider) => {\r\n        if (isEncodedTokensProvider(provider)) {\r\n            return new EncodedTokenizationSupport2Adapter(languageIdentifier, provider);\r\n        }\r\n        else {\r\n            return new TokenizationSupport2Adapter(StaticServices.standaloneThemeService.get(), languageIdentifier, provider);\r\n        }\r\n    };\r\n    if (isThenable(provider)) {\r\n        return modes.TokenizationRegistry.registerPromise(languageId, provider.then(provider => create(provider)));\r\n    }\r\n    return modes.TokenizationRegistry.register(languageId, create(provider));\r\n}\r\n/**\r\n * Set the tokens provider for a language (monarch implementation).\r\n */\r\nexport function setMonarchTokensProvider(languageId, languageDef) {\r\n    const create = (languageDef) => {\r\n        return createTokenizationSupport(StaticServices.modeService.get(), StaticServices.standaloneThemeService.get(), languageId, compile(languageId, languageDef));\r\n    };\r\n    if (isThenable(languageDef)) {\r\n        return modes.TokenizationRegistry.registerPromise(languageId, languageDef.then(languageDef => create(languageDef)));\r\n    }\r\n    return modes.TokenizationRegistry.register(languageId, create(languageDef));\r\n}\r\n/**\r\n * Register a reference provider (used by e.g. reference search).\r\n */\r\nexport function registerReferenceProvider(languageId, provider) {\r\n    return modes.ReferenceProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a rename provider (used by e.g. rename symbol).\r\n */\r\nexport function registerRenameProvider(languageId, provider) {\r\n    return modes.RenameProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a signature help provider (used by e.g. parameter hints).\r\n */\r\nexport function registerSignatureHelpProvider(languageId, provider) {\r\n    return modes.SignatureHelpProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a hover provider (used by e.g. editor hover).\r\n */\r\nexport function registerHoverProvider(languageId, provider) {\r\n    return modes.HoverProviderRegistry.register(languageId, {\r\n        provideHover: (model, position, token) => {\r\n            let word = model.getWordAtPosition(position);\r\n            return Promise.resolve(provider.provideHover(model, position, token)).then((value) => {\r\n                if (!value) {\r\n                    return undefined;\r\n                }\r\n                if (!value.range && word) {\r\n                    value.range = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n                }\r\n                if (!value.range) {\r\n                    value.range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n                }\r\n                return value;\r\n            });\r\n        }\r\n    });\r\n}\r\n/**\r\n * Register a document symbol provider (used by e.g. outline).\r\n */\r\nexport function registerDocumentSymbolProvider(languageId, provider) {\r\n    return modes.DocumentSymbolProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a document highlight provider (used by e.g. highlight occurrences).\r\n */\r\nexport function registerDocumentHighlightProvider(languageId, provider) {\r\n    return modes.DocumentHighlightProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register an linked editing range provider.\r\n */\r\nexport function registerLinkedEditingRangeProvider(languageId, provider) {\r\n    return modes.LinkedEditingRangeProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a definition provider (used by e.g. go to definition).\r\n */\r\nexport function registerDefinitionProvider(languageId, provider) {\r\n    return modes.DefinitionProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a implementation provider (used by e.g. go to implementation).\r\n */\r\nexport function registerImplementationProvider(languageId, provider) {\r\n    return modes.ImplementationProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a type definition provider (used by e.g. go to type definition).\r\n */\r\nexport function registerTypeDefinitionProvider(languageId, provider) {\r\n    return modes.TypeDefinitionProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a code lens provider (used by e.g. inline code lenses).\r\n */\r\nexport function registerCodeLensProvider(languageId, provider) {\r\n    return modes.CodeLensProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a code action provider (used by e.g. quick fix).\r\n */\r\nexport function registerCodeActionProvider(languageId, provider) {\r\n    return modes.CodeActionProviderRegistry.register(languageId, {\r\n        provideCodeActions: (model, range, context, token) => {\r\n            let markers = StaticServices.markerService.get().read({ resource: model.uri }).filter(m => {\r\n                return Range.areIntersectingOrTouching(m, range);\r\n            });\r\n            return provider.provideCodeActions(model, range, { markers, only: context.only }, token);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Register a formatter that can handle only entire models.\r\n */\r\nexport function registerDocumentFormattingEditProvider(languageId, provider) {\r\n    return modes.DocumentFormattingEditProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a formatter that can handle a range inside a model.\r\n */\r\nexport function registerDocumentRangeFormattingEditProvider(languageId, provider) {\r\n    return modes.DocumentRangeFormattingEditProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a formatter than can do formatting as the user types.\r\n */\r\nexport function registerOnTypeFormattingEditProvider(languageId, provider) {\r\n    return modes.OnTypeFormattingEditProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a link provider that can find links in text.\r\n */\r\nexport function registerLinkProvider(languageId, provider) {\r\n    return modes.LinkProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a completion item provider (use by e.g. suggestions).\r\n */\r\nexport function registerCompletionItemProvider(languageId, provider) {\r\n    return modes.CompletionProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a document color provider (used by Color Picker, Color Decorator).\r\n */\r\nexport function registerColorProvider(languageId, provider) {\r\n    return modes.ColorProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a folding range provider\r\n */\r\nexport function registerFoldingRangeProvider(languageId, provider) {\r\n    return modes.FoldingRangeProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a declaration provider\r\n */\r\nexport function registerDeclarationProvider(languageId, provider) {\r\n    return modes.DeclarationProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a selection range provider\r\n */\r\nexport function registerSelectionRangeProvider(languageId, provider) {\r\n    return modes.SelectionRangeRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a document semantic tokens provider\r\n */\r\nexport function registerDocumentSemanticTokensProvider(languageId, provider) {\r\n    return modes.DocumentSemanticTokensProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register a document range semantic tokens provider\r\n */\r\nexport function registerDocumentRangeSemanticTokensProvider(languageId, provider) {\r\n    return modes.DocumentRangeSemanticTokensProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register an inline completions provider.\r\n */\r\nexport function registerInlineCompletionsProvider(languageId, provider) {\r\n    return modes.InlineCompletionsProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * Register an inlay hints provider.\r\n */\r\nexport function registerInlayHintsProvider(languageId, provider) {\r\n    return modes.InlayHintsProviderRegistry.register(languageId, provider);\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport function createMonacoLanguagesAPI() {\r\n    return {\r\n        register: register,\r\n        getLanguages: getLanguages,\r\n        onLanguage: onLanguage,\r\n        getEncodedLanguageId: getEncodedLanguageId,\r\n        // provider methods\r\n        setLanguageConfiguration: setLanguageConfiguration,\r\n        setColorMap: setColorMap,\r\n        setTokensProvider: setTokensProvider,\r\n        setMonarchTokensProvider: setMonarchTokensProvider,\r\n        registerReferenceProvider: registerReferenceProvider,\r\n        registerRenameProvider: registerRenameProvider,\r\n        registerCompletionItemProvider: registerCompletionItemProvider,\r\n        registerSignatureHelpProvider: registerSignatureHelpProvider,\r\n        registerHoverProvider: registerHoverProvider,\r\n        registerDocumentSymbolProvider: registerDocumentSymbolProvider,\r\n        registerDocumentHighlightProvider: registerDocumentHighlightProvider,\r\n        registerLinkedEditingRangeProvider: registerLinkedEditingRangeProvider,\r\n        registerDefinitionProvider: registerDefinitionProvider,\r\n        registerImplementationProvider: registerImplementationProvider,\r\n        registerTypeDefinitionProvider: registerTypeDefinitionProvider,\r\n        registerCodeLensProvider: registerCodeLensProvider,\r\n        registerCodeActionProvider: registerCodeActionProvider,\r\n        registerDocumentFormattingEditProvider: registerDocumentFormattingEditProvider,\r\n        registerDocumentRangeFormattingEditProvider: registerDocumentRangeFormattingEditProvider,\r\n        registerOnTypeFormattingEditProvider: registerOnTypeFormattingEditProvider,\r\n        registerLinkProvider: registerLinkProvider,\r\n        registerColorProvider: registerColorProvider,\r\n        registerFoldingRangeProvider: registerFoldingRangeProvider,\r\n        registerDeclarationProvider: registerDeclarationProvider,\r\n        registerSelectionRangeProvider: registerSelectionRangeProvider,\r\n        registerDocumentSemanticTokensProvider: registerDocumentSemanticTokensProvider,\r\n        registerDocumentRangeSemanticTokensProvider: registerDocumentRangeSemanticTokensProvider,\r\n        registerInlineCompletionsProvider: registerInlineCompletionsProvider,\r\n        registerInlayHintsProvider: registerInlayHintsProvider,\r\n        // enums\r\n        DocumentHighlightKind: standaloneEnums.DocumentHighlightKind,\r\n        CompletionItemKind: standaloneEnums.CompletionItemKind,\r\n        CompletionItemTag: standaloneEnums.CompletionItemTag,\r\n        CompletionItemInsertTextRule: standaloneEnums.CompletionItemInsertTextRule,\r\n        SymbolKind: standaloneEnums.SymbolKind,\r\n        SymbolTag: standaloneEnums.SymbolTag,\r\n        IndentAction: standaloneEnums.IndentAction,\r\n        CompletionTriggerKind: standaloneEnums.CompletionTriggerKind,\r\n        SignatureHelpTriggerKind: standaloneEnums.SignatureHelpTriggerKind,\r\n        InlayHintKind: standaloneEnums.InlayHintKind,\r\n        InlineCompletionTriggerKind: standaloneEnums.InlineCompletionTriggerKind,\r\n        // classes\r\n        FoldingRangeKind: modes.FoldingRangeKind,\r\n    };\r\n}\r\n", "/**\r\n * **!Do not construct directly!**\r\n *\r\n * **!Only static methods because it gets serialized!**\r\n *\r\n * This represents the \"canonical\" version for an extension identifier. Extension ids\r\n * have to be case-insensitive (due to the marketplace), but we must ensure case\r\n * preservation because the extension API is already public at this time.\r\n *\r\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\r\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\r\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\r\n *\r\n * To make matters more complicated, an extension can optionally have an UUID. When two\r\n * extensions have the same UUID, they are considered equal even if their identifier is different.\r\n */\r\nexport class ExtensionIdentifier {\r\n    constructor(value) {\r\n        this.value = value;\r\n        this._lower = value.toLowerCase();\r\n    }\r\n    /**\r\n     * Gives the value by which to index (for equality).\r\n     */\r\n    static toKey(id) {\r\n        if (typeof id === 'string') {\r\n            return id.toLowerCase();\r\n        }\r\n        return id._lower;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { asArray, isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { EditorStateCancellationTokenSource, TextModelCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { DocumentFormattingEditProviderRegistry, DocumentRangeFormattingEditProviderRegistry, OnTypeFormattingEditProviderRegistry } from '../../common/modes.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { FormattingEdit } from './formattingEdit.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ExtensionIdentifier } from '../../../platform/extensions/common/extensions.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nexport function alertFormattingEdits(edits) {\r\n    edits = edits.filter(edit => edit.range);\r\n    if (!edits.length) {\r\n        return;\r\n    }\r\n    let { range } = edits[0];\r\n    for (let i = 1; i < edits.length; i++) {\r\n        range = Range.plusRange(range, edits[i].range);\r\n    }\r\n    const { startLineNumber, endLineNumber } = range;\r\n    if (startLineNumber === endLineNumber) {\r\n        if (edits.length === 1) {\r\n            alert(nls.localize('hint11', \"Made 1 formatting edit on line {0}\", startLineNumber));\r\n        }\r\n        else {\r\n            alert(nls.localize('hintn1', \"Made {0} formatting edits on line {1}\", edits.length, startLineNumber));\r\n        }\r\n    }\r\n    else {\r\n        if (edits.length === 1) {\r\n            alert(nls.localize('hint1n', \"Made 1 formatting edit between lines {0} and {1}\", startLineNumber, endLineNumber));\r\n        }\r\n        else {\r\n            alert(nls.localize('hintnn', \"Made {0} formatting edits between lines {1} and {2}\", edits.length, startLineNumber, endLineNumber));\r\n        }\r\n    }\r\n}\r\nexport function getRealAndSyntheticDocumentFormattersOrdered(model) {\r\n    const result = [];\r\n    const seen = new Set();\r\n    // (1) add all document formatter\r\n    const docFormatter = DocumentFormattingEditProviderRegistry.ordered(model);\r\n    for (const formatter of docFormatter) {\r\n        result.push(formatter);\r\n        if (formatter.extensionId) {\r\n            seen.add(ExtensionIdentifier.toKey(formatter.extensionId));\r\n        }\r\n    }\r\n    // (2) add all range formatter as document formatter (unless the same extension already did that)\r\n    const rangeFormatter = DocumentRangeFormattingEditProviderRegistry.ordered(model);\r\n    for (const formatter of rangeFormatter) {\r\n        if (formatter.extensionId) {\r\n            if (seen.has(ExtensionIdentifier.toKey(formatter.extensionId))) {\r\n                continue;\r\n            }\r\n            seen.add(ExtensionIdentifier.toKey(formatter.extensionId));\r\n        }\r\n        result.push({\r\n            displayName: formatter.displayName,\r\n            extensionId: formatter.extensionId,\r\n            provideDocumentFormattingEdits(model, options, token) {\r\n                return formatter.provideDocumentRangeFormattingEdits(model, model.getFullModelRange(), options, token);\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}\r\nexport class FormattingConflicts {\r\n    static setFormatterSelector(selector) {\r\n        const remove = FormattingConflicts._selectors.unshift(selector);\r\n        return { dispose: remove };\r\n    }\r\n    static select(formatter, document, mode) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (formatter.length === 0) {\r\n                return undefined;\r\n            }\r\n            const selector = Iterable.first(FormattingConflicts._selectors);\r\n            if (selector) {\r\n                return yield selector(formatter, document, mode);\r\n            }\r\n            return undefined;\r\n        });\r\n    }\r\n}\r\nFormattingConflicts._selectors = new LinkedList();\r\nexport function formatDocumentRangesWithSelectedProvider(accessor, editorOrModel, rangeOrRanges, mode, progress, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const instaService = accessor.get(IInstantiationService);\r\n        const model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\r\n        const provider = DocumentRangeFormattingEditProviderRegistry.ordered(model);\r\n        const selected = yield FormattingConflicts.select(provider, model, mode);\r\n        if (selected) {\r\n            progress.report(selected);\r\n            yield instaService.invokeFunction(formatDocumentRangesWithProvider, selected, editorOrModel, rangeOrRanges, token);\r\n        }\r\n    });\r\n}\r\nexport function formatDocumentRangesWithProvider(accessor, provider, editorOrModel, rangeOrRanges, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const workerService = accessor.get(IEditorWorkerService);\r\n        let model;\r\n        let cts;\r\n        if (isCodeEditor(editorOrModel)) {\r\n            model = editorOrModel.getModel();\r\n            cts = new EditorStateCancellationTokenSource(editorOrModel, 1 /* Value */ | 4 /* Position */, undefined, token);\r\n        }\r\n        else {\r\n            model = editorOrModel;\r\n            cts = new TextModelCancellationTokenSource(editorOrModel, token);\r\n        }\r\n        // make sure that ranges don't overlap nor touch each other\r\n        let ranges = [];\r\n        let len = 0;\r\n        for (let range of asArray(rangeOrRanges).sort(Range.compareRangesUsingStarts)) {\r\n            if (len > 0 && Range.areIntersectingOrTouching(ranges[len - 1], range)) {\r\n                ranges[len - 1] = Range.fromPositions(ranges[len - 1].getStartPosition(), range.getEndPosition());\r\n            }\r\n            else {\r\n                len = ranges.push(range);\r\n            }\r\n        }\r\n        const computeEdits = (range) => __awaiter(this, void 0, void 0, function* () {\r\n            return (yield provider.provideDocumentRangeFormattingEdits(model, range, model.getFormattingOptions(), cts.token)) || [];\r\n        });\r\n        const hasIntersectingEdit = (a, b) => {\r\n            if (!a.length || !b.length) {\r\n                return false;\r\n            }\r\n            // quick exit if the list of ranges are completely unrelated [O(n)]\r\n            const mergedA = a.reduce((acc, val) => { return Range.plusRange(acc, val.range); }, a[0].range);\r\n            if (!b.some(x => { return Range.intersectRanges(mergedA, x.range); })) {\r\n                return false;\r\n            }\r\n            // fallback to a complete check [O(n^2)]\r\n            for (let edit of a) {\r\n                for (let otherEdit of b) {\r\n                    if (Range.intersectRanges(edit.range, otherEdit.range)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        const allEdits = [];\r\n        const rawEditsList = [];\r\n        try {\r\n            for (let range of ranges) {\r\n                if (cts.token.isCancellationRequested) {\r\n                    return true;\r\n                }\r\n                rawEditsList.push(yield computeEdits(range));\r\n            }\r\n            for (let i = 0; i < ranges.length; ++i) {\r\n                for (let j = i + 1; j < ranges.length; ++j) {\r\n                    if (cts.token.isCancellationRequested) {\r\n                        return true;\r\n                    }\r\n                    if (hasIntersectingEdit(rawEditsList[i], rawEditsList[j])) {\r\n                        // Merge ranges i and j into a single range, recompute the associated edits\r\n                        const mergedRange = Range.plusRange(ranges[i], ranges[j]);\r\n                        const edits = yield computeEdits(mergedRange);\r\n                        ranges.splice(j, 1);\r\n                        ranges.splice(i, 1);\r\n                        ranges.push(mergedRange);\r\n                        rawEditsList.splice(j, 1);\r\n                        rawEditsList.splice(i, 1);\r\n                        rawEditsList.push(edits);\r\n                        // Restart scanning\r\n                        i = 0;\r\n                        j = 0;\r\n                    }\r\n                }\r\n            }\r\n            for (let rawEdits of rawEditsList) {\r\n                if (cts.token.isCancellationRequested) {\r\n                    return true;\r\n                }\r\n                const minimalEdits = yield workerService.computeMoreMinimalEdits(model.uri, rawEdits);\r\n                if (minimalEdits) {\r\n                    allEdits.push(...minimalEdits);\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            cts.dispose();\r\n        }\r\n        if (allEdits.length === 0) {\r\n            return false;\r\n        }\r\n        if (isCodeEditor(editorOrModel)) {\r\n            // use editor to apply edits\r\n            FormattingEdit.execute(editorOrModel, allEdits, true);\r\n            alertFormattingEdits(allEdits);\r\n            editorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), 1 /* Immediate */);\r\n        }\r\n        else {\r\n            // use model to apply edits\r\n            const [{ range }] = allEdits;\r\n            const initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n            model.pushEditOperations([initialSelection], allEdits.map(edit => {\r\n                return {\r\n                    text: edit.text,\r\n                    range: Range.lift(edit.range),\r\n                    forceMoveMarkers: true\r\n                };\r\n            }), undoEdits => {\r\n                for (const { range } of undoEdits) {\r\n                    if (Range.areIntersectingOrTouching(range, initialSelection)) {\r\n                        return [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\r\n                    }\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n        return true;\r\n    });\r\n}\r\nexport function formatDocumentWithSelectedProvider(accessor, editorOrModel, mode, progress, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const instaService = accessor.get(IInstantiationService);\r\n        const model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\r\n        const provider = getRealAndSyntheticDocumentFormattersOrdered(model);\r\n        const selected = yield FormattingConflicts.select(provider, model, mode);\r\n        if (selected) {\r\n            progress.report(selected);\r\n            yield instaService.invokeFunction(formatDocumentWithProvider, selected, editorOrModel, mode, token);\r\n        }\r\n    });\r\n}\r\nexport function formatDocumentWithProvider(accessor, provider, editorOrModel, mode, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const workerService = accessor.get(IEditorWorkerService);\r\n        let model;\r\n        let cts;\r\n        if (isCodeEditor(editorOrModel)) {\r\n            model = editorOrModel.getModel();\r\n            cts = new EditorStateCancellationTokenSource(editorOrModel, 1 /* Value */ | 4 /* Position */, undefined, token);\r\n        }\r\n        else {\r\n            model = editorOrModel;\r\n            cts = new TextModelCancellationTokenSource(editorOrModel, token);\r\n        }\r\n        let edits;\r\n        try {\r\n            const rawEdits = yield provider.provideDocumentFormattingEdits(model, model.getFormattingOptions(), cts.token);\r\n            edits = yield workerService.computeMoreMinimalEdits(model.uri, rawEdits);\r\n            if (cts.token.isCancellationRequested) {\r\n                return true;\r\n            }\r\n        }\r\n        finally {\r\n            cts.dispose();\r\n        }\r\n        if (!edits || edits.length === 0) {\r\n            return false;\r\n        }\r\n        if (isCodeEditor(editorOrModel)) {\r\n            // use editor to apply edits\r\n            FormattingEdit.execute(editorOrModel, edits, mode !== 2 /* Silent */);\r\n            if (mode !== 2 /* Silent */) {\r\n                alertFormattingEdits(edits);\r\n                editorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), 1 /* Immediate */);\r\n            }\r\n        }\r\n        else {\r\n            // use model to apply edits\r\n            const [{ range }] = edits;\r\n            const initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n            model.pushEditOperations([initialSelection], edits.map(edit => {\r\n                return {\r\n                    text: edit.text,\r\n                    range: Range.lift(edit.range),\r\n                    forceMoveMarkers: true\r\n                };\r\n            }), undoEdits => {\r\n                for (const { range } of undoEdits) {\r\n                    if (Range.areIntersectingOrTouching(range, initialSelection)) {\r\n                        return [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\r\n                    }\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n        return true;\r\n    });\r\n}\r\nexport function getDocumentRangeFormattingEditsUntilResult(workerService, model, range, options, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const providers = DocumentRangeFormattingEditProviderRegistry.ordered(model);\r\n        for (const provider of providers) {\r\n            let rawEdits = yield Promise.resolve(provider.provideDocumentRangeFormattingEdits(model, range, options, token)).catch(onUnexpectedExternalError);\r\n            if (isNonEmptyArray(rawEdits)) {\r\n                return yield workerService.computeMoreMinimalEdits(model.uri, rawEdits);\r\n            }\r\n        }\r\n        return undefined;\r\n    });\r\n}\r\nexport function getDocumentFormattingEditsUntilResult(workerService, model, options, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const providers = getRealAndSyntheticDocumentFormattersOrdered(model);\r\n        for (const provider of providers) {\r\n            let rawEdits = yield Promise.resolve(provider.provideDocumentFormattingEdits(model, options, token)).catch(onUnexpectedExternalError);\r\n            if (isNonEmptyArray(rawEdits)) {\r\n                return yield workerService.computeMoreMinimalEdits(model.uri, rawEdits);\r\n            }\r\n        }\r\n        return undefined;\r\n    });\r\n}\r\nexport function getOnTypeFormattingEdits(workerService, model, position, ch, options) {\r\n    const providers = OnTypeFormattingEditProviderRegistry.ordered(model);\r\n    if (providers.length === 0) {\r\n        return Promise.resolve(undefined);\r\n    }\r\n    if (providers[0].autoFormatTriggerCharacters.indexOf(ch) < 0) {\r\n        return Promise.resolve(undefined);\r\n    }\r\n    return Promise.resolve(providers[0].provideOnTypeFormattingEdits(model, position, ch, options, CancellationToken.None)).catch(onUnexpectedExternalError).then(edits => {\r\n        return workerService.computeMoreMinimalEdits(model.uri, edits);\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeFormatRangeProvider', function (accessor, ...args) {\r\n    const [resource, range, options] = args;\r\n    assertType(URI.isUri(resource));\r\n    assertType(Range.isIRange(range));\r\n    const model = accessor.get(IModelService).getModel(resource);\r\n    if (!model) {\r\n        throw illegalArgument('resource');\r\n    }\r\n    return getDocumentRangeFormattingEditsUntilResult(accessor.get(IEditorWorkerService), model, Range.lift(range), options, CancellationToken.None);\r\n});\r\nCommandsRegistry.registerCommand('_executeFormatDocumentProvider', function (accessor, ...args) {\r\n    const [resource, options] = args;\r\n    assertType(URI.isUri(resource));\r\n    const model = accessor.get(IModelService).getModel(resource);\r\n    if (!model) {\r\n        throw illegalArgument('resource');\r\n    }\r\n    return getDocumentFormattingEditsUntilResult(accessor.get(IEditorWorkerService), model, options, CancellationToken.None);\r\n});\r\nCommandsRegistry.registerCommand('_executeFormatOnTypeProvider', function (accessor, ...args) {\r\n    const [resource, position, ch, options] = args;\r\n    assertType(URI.isUri(resource));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof ch === 'string');\r\n    const model = accessor.get(IModelService).getModel(resource);\r\n    if (!model) {\r\n        throw illegalArgument('resource');\r\n    }\r\n    return getOnTypeFormattingEdits(accessor.get(IEditorWorkerService), model, Position.lift(position), ch, options);\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a;\r\nimport { EditorOptions } from './common/config/editorOptions.js';\r\nimport { createMonacoBaseAPI } from './common/standalone/standaloneBase.js';\r\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\r\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\r\nimport { globals } from '../base/common/platform.js';\r\nimport { FormattingConflicts } from './contrib/format/format.js';\r\n// Set defaults for standalone editor\r\nEditorOptions.wrappingIndent.defaultValue = 0 /* None */;\r\nEditorOptions.glyphMargin.defaultValue = false;\r\nEditorOptions.autoIndent.defaultValue = 3 /* Advanced */;\r\nEditorOptions.overviewRulerLanes.defaultValue = 2;\r\n// We need to register a formatter selector which simply picks the first available formatter.\r\n// See https://github.com/microsoft/monaco-editor/issues/2327\r\nFormattingConflicts.setFormatterSelector((formatter, document, mode) => Promise.resolve(formatter[0]));\r\nconst api = createMonacoBaseAPI();\r\napi.editor = createMonacoEditorAPI();\r\napi.languages = createMonacoLanguagesAPI();\r\nexport const CancellationTokenSource = api.CancellationTokenSource;\r\nexport const Emitter = api.Emitter;\r\nexport const KeyCode = api.KeyCode;\r\nexport const KeyMod = api.KeyMod;\r\nexport const Position = api.Position;\r\nexport const Range = api.Range;\r\nexport const Selection = api.Selection;\r\nexport const SelectionDirection = api.SelectionDirection;\r\nexport const MarkerSeverity = api.MarkerSeverity;\r\nexport const MarkerTag = api.MarkerTag;\r\nexport const Uri = api.Uri;\r\nexport const Token = api.Token;\r\nexport const editor = api.editor;\r\nexport const languages = api.languages;\r\nif (((_a = globals.MonacoEnvironment) === null || _a === void 0 ? void 0 : _a.globalAPI) || (typeof define === 'function' && define.amd)) {\r\n    self.monaco = api;\r\n}\r\nif (typeof self.require !== 'undefined' && typeof self.require.config === 'function') {\r\n    self.require.config({\r\n        ignoreDuplicateModules: [\r\n            'vscode-languageserver-types',\r\n            'vscode-languageserver-types/main',\r\n            'vscode-languageserver-textdocument',\r\n            'vscode-languageserver-textdocument/main',\r\n            'vscode-nls',\r\n            'vscode-nls/vscode-nls',\r\n            'jsonc-parser',\r\n            'jsonc-parser/main',\r\n            'vscode-uri',\r\n            'vscode-uri/index',\r\n            'vs/basic-languages/typescript/typescript'\r\n        ]\r\n    });\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
