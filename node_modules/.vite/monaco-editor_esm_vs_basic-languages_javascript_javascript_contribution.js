import "./chunk-E55X6OAI.js";
import {
  languages
} from "./chunk-6YCQGRU7.js";
import "./chunk-YXUDLFWZ.js";
import "./chunk-R6I3GLEQ.js";

// node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js
var languageDefinitions = {};
var lazyLanguageLoaders = {};
var LazyLanguageLoader = function() {
  function LazyLanguageLoader2(languageId) {
    var _this = this;
    this._languageId = languageId;
    this._loadingTriggered = false;
    this._lazyLoadPromise = new Promise(function(resolve, reject) {
      _this._lazyLoadPromiseResolve = resolve;
      _this._lazyLoadPromiseReject = reject;
    });
  }
  LazyLanguageLoader2.getOrCreate = function(languageId) {
    if (!lazyLanguageLoaders[languageId]) {
      lazyLanguageLoaders[languageId] = new LazyLanguageLoader2(languageId);
    }
    return lazyLanguageLoaders[languageId];
  };
  LazyLanguageLoader2.prototype.whenLoaded = function() {
    return this._lazyLoadPromise;
  };
  LazyLanguageLoader2.prototype.load = function() {
    var _this = this;
    if (!this._loadingTriggered) {
      this._loadingTriggered = true;
      languageDefinitions[this._languageId].loader().then(function(mod) {
        return _this._lazyLoadPromiseResolve(mod);
      }, function(err) {
        return _this._lazyLoadPromiseReject(err);
      });
    }
    return this._lazyLoadPromise;
  };
  return LazyLanguageLoader2;
}();
function registerLanguage(def) {
  var languageId = def.id;
  languageDefinitions[languageId] = def;
  languages.register(def);
  var lazyLanguageLoader = LazyLanguageLoader.getOrCreate(languageId);
  languages.setMonarchTokensProvider(languageId, lazyLanguageLoader.whenLoaded().then(function(mod) {
    return mod.language;
  }));
  languages.onLanguage(languageId, function() {
    lazyLanguageLoader.load().then(function(mod) {
      languages.setLanguageConfiguration(languageId, mod.conf);
    });
  });
}

// node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution.js
registerLanguage({
  id: "javascript",
  extensions: [".js", ".es6", ".jsx", ".mjs"],
  firstLine: "^#!.*\\bnode",
  filenames: ["jakefile"],
  aliases: ["JavaScript", "javascript", "js"],
  mimetypes: ["text/javascript"],
  loader: function() {
    return import("./javascript-LBJMAKE3.js");
  }
});
//# sourceMappingURL=monaco-editor_esm_vs_basic-languages_javascript_javascript_contribution.js.map
