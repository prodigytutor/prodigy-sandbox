{
  "version": 3,
  "sources": ["../monaco-editor/esm/vs/base/common/marked/marked.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextWidget.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostText.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionsModel.js", "../monaco-editor/esm/vs/editor/contrib/snippet/snippetParser.js", "../monaco-editor/esm/vs/editor/contrib/snippet/snippetSession.js", "../monaco-editor/esm/vs/platform/workspaces/common/workspaces.js", "../monaco-editor/esm/vs/base/common/labels.js", "../monaco-editor/esm/vs/base/common/uuid.js", "../monaco-editor/esm/vs/editor/contrib/snippet/snippetVariables.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggest.js", "../monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestMemory.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestAlternatives.js", "../monaco-editor/esm/vs/editor/contrib/suggest/completionModel.js", "../monaco-editor/esm/vs/editor/contrib/smartSelect/bracketSelections.js", "../monaco-editor/esm/vs/editor/contrib/suggest/wordDistance.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestModel.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestWidget.js", "../monaco-editor/esm/vs/editor/contrib/symbolIcons/symbolIcons.js", "../monaco-editor/esm/vs/base/common/htmlContent.js", "../monaco-editor/esm/vs/base/browser/markdownRenderer.js", "../monaco-editor/esm/vs/base/common/insane/insane.js", "../monaco-editor/esm/vs/editor/browser/core/markdownRenderer.js", "../monaco-editor/esm/vs/editor/contrib/suggest/resizable.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetDetails.js", "../monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js", "../monaco-editor/esm/vs/base/browser/ui/dropdown/dropdownActionViewItem.js", "../monaco-editor/esm/vs/base/browser/ui/dropdown/dropdown.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetStatus.js", "../monaco-editor/esm/vs/platform/files/common/files.js", "../monaco-editor/esm/vs/editor/common/services/getIconClasses.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetRenderer.js", "../monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js", "../monaco-editor/esm/vs/editor/contrib/suggest/wordContextKey.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestCommitCharacters.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestOvertypingCapturer.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestController.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/suggestWidgetAdapterModel.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/utils.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextModel.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextController.js"],
  "sourcesContent": ["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn) {\n    var module = { exports: {} };\n  \treturn fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation,\n    repeatString: repeatString\n  };\n\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim$1(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length > bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list\n              itemMatch.splice(i, 2, itemMatch[i] + '\\n' + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else {\n              if ( // different bullet style\n              !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n                addBack = itemMatch.slice(i + 1).join('\\n');\n                list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n                i = l - 1;\n              }\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim$1(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.listItemStart = edit$1(/^( *)(bull)/).replace('bull', block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit$1(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit$1(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit$1(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit$1(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  var repeatString$1 = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport './ghostText.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\r\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\r\nimport { Configuration } from '../../browser/config/configuration.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { ghostTextBorder, ghostTextForeground } from '../../common/view/editorColorRegistry.js';\r\nimport { RGBA, Color } from '../../../base/common/color.js';\r\nimport { CursorColumns } from '../../common/controller/cursorCommon.js';\r\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\r\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\r\n    constructor(editor, model, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.model = model;\r\n        this.instantiationService = instantiationService;\r\n        this.disposed = false;\r\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\r\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor));\r\n        this.viewMoreContentWidget = undefined;\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(27 /* disableMonospaceOptimizations */)\r\n                || e.hasChanged(104 /* stopRenderingLineAfter */)\r\n                || e.hasChanged(87 /* renderWhitespace */)\r\n                || e.hasChanged(81 /* renderControlCharacters */)\r\n                || e.hasChanged(42 /* fontLigatures */)\r\n                || e.hasChanged(41 /* fontInfo */)\r\n                || e.hasChanged(57 /* lineHeight */)) {\r\n                this.update();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            var _a;\r\n            this.disposed = true;\r\n            this.update();\r\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.viewMoreContentWidget = undefined;\r\n        }));\r\n        this._register(model.onDidChange(() => {\r\n            this.update();\r\n        }));\r\n        this.update();\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\r\n    }\r\n    update() {\r\n        var _a;\r\n        const ghostText = this.model.ghostText;\r\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\r\n            this.partsWidget.clear();\r\n            this.additionalLinesWidget.clear();\r\n            return;\r\n        }\r\n        const inlineTexts = new Array();\r\n        const additionalLines = new Array();\r\n        function addToAdditionalLines(lines, className) {\r\n            if (additionalLines.length > 0) {\r\n                const lastLine = additionalLines[additionalLines.length - 1];\r\n                if (className) {\r\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* Regular */));\r\n                }\r\n                lastLine.content += lines[0];\r\n                lines = lines.slice(1);\r\n            }\r\n            for (const line of lines) {\r\n                additionalLines.push({\r\n                    content: line,\r\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* Regular */)] : []\r\n                });\r\n            }\r\n        }\r\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\r\n        this.editor.getModel().getLineTokens(ghostText.lineNumber);\r\n        let hiddenTextStartColumn = undefined;\r\n        let lastIdx = 0;\r\n        for (const part of ghostText.parts) {\r\n            let lines = part.lines;\r\n            if (hiddenTextStartColumn === undefined) {\r\n                inlineTexts.push({\r\n                    column: part.column,\r\n                    text: lines[0],\r\n                });\r\n                lines = lines.slice(1);\r\n            }\r\n            else {\r\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\r\n            }\r\n            if (lines.length > 0) {\r\n                addToAdditionalLines(lines, 'ghost-text');\r\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\r\n                    hiddenTextStartColumn = part.column;\r\n                }\r\n            }\r\n            lastIdx = part.column - 1;\r\n        }\r\n        if (hiddenTextStartColumn !== undefined) {\r\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\r\n        }\r\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\r\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\r\n        if (ghostText.parts.some(p => p.lines.length < 0)) {\r\n            // Not supported at the moment, condition is always false.\r\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\r\n        }\r\n        else {\r\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.viewMoreContentWidget = undefined;\r\n        }\r\n    }\r\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\r\n        const fontInfo = this.editor.getOption(41 /* fontInfo */);\r\n        const domNode = document.createElement('div');\r\n        domNode.className = 'suggest-preview-additional-widget';\r\n        Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n        const spacer = document.createElement('span');\r\n        spacer.className = 'content-spacer';\r\n        spacer.append(firstLineText);\r\n        domNode.append(spacer);\r\n        const newline = document.createElement('span');\r\n        newline.className = 'content-newline suggest-preview-text';\r\n        newline.append('\u23CE  ');\r\n        domNode.append(newline);\r\n        const disposableStore = new DisposableStore();\r\n        const button = document.createElement('div');\r\n        button.className = 'button suggest-preview-text';\r\n        button.append(`+${remainingLinesLength} lines\u2026`);\r\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\r\n            var _a;\r\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\r\n            e.preventDefault();\r\n            this.editor.focus();\r\n        }));\r\n        domNode.append(button);\r\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\r\n    }\r\n};\r\nGhostTextWidget = __decorate([\r\n    __param(2, IInstantiationService)\r\n], GhostTextWidget);\r\nexport { GhostTextWidget };\r\nlet DecorationsWidget = class DecorationsWidget {\r\n    constructor(editor, codeEditorService, themeService, contextKeyService) {\r\n        this.editor = editor;\r\n        this.codeEditorService = codeEditorService;\r\n        this.themeService = themeService;\r\n        this.contextKeyService = contextKeyService;\r\n        this.decorationIds = [];\r\n        this.disposableStore = new DisposableStore();\r\n    }\r\n    dispose() {\r\n        this.clear();\r\n        this.disposableStore.dispose();\r\n    }\r\n    clear() {\r\n        this.editor.deltaDecorations(this.decorationIds, []);\r\n        this.disposableStore.clear();\r\n    }\r\n    setParts(lineNumber, parts, hiddenText) {\r\n        this.disposableStore.clear();\r\n        const colorTheme = this.themeService.getColorTheme();\r\n        const foreground = colorTheme.getColor(ghostTextForeground);\r\n        let opacity = undefined;\r\n        let color = undefined;\r\n        if (foreground) {\r\n            opacity = String(foreground.rgba.a);\r\n            color = Color.Format.CSS.format(opaque(foreground));\r\n        }\r\n        const borderColor = colorTheme.getColor(ghostTextBorder);\r\n        let border = undefined;\r\n        if (borderColor) {\r\n            border = `2px dashed ${borderColor}`;\r\n        }\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        const line = textModel.getLineContent(lineNumber) || '';\r\n        let lastIndex = 0;\r\n        let currentLinePrefix = '';\r\n        const hiddenTextDecorations = new Array();\r\n        if (hiddenText) {\r\n            hiddenTextDecorations.push({\r\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\r\n                options: {\r\n                    inlineClassName: 'ghost-text-hidden',\r\n                    description: 'ghost-text-hidden'\r\n                }\r\n            });\r\n        }\r\n        const key = this.contextKeyService.getContextKeyValue('config.editor.useInjectedText');\r\n        const shouldUseInjectedText = key === undefined ? true : !!key;\r\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map(p => {\r\n            currentLinePrefix += line.substring(lastIndex, p.column - 1);\r\n            lastIndex = p.column - 1;\r\n            // To avoid visual confusion, we don't want to render visible whitespace\r\n            const contentText = shouldUseInjectedText ? p.text : this.renderSingleLineText(p.text, currentLinePrefix, tabSize, false);\r\n            const decorationType = this.disposableStore.add(registerDecorationType(this.codeEditorService, 'ghost-text', '0-ghost-text-', {\r\n                after: {\r\n                    // TODO: escape?\r\n                    contentText,\r\n                    opacity,\r\n                    color,\r\n                    border,\r\n                },\r\n            }));\r\n            return ({\r\n                range: Range.fromPositions(new Position(lineNumber, p.column)),\r\n                options: shouldUseInjectedText ? {\r\n                    description: 'ghost-text',\r\n                    after: { content: contentText, inlineClassName: 'ghost-text-decoration' }\r\n                } : Object.assign({}, decorationType.resolve())\r\n            });\r\n        }).concat(hiddenTextDecorations));\r\n    }\r\n    renderSingleLineText(text, lineStart, tabSize, renderWhitespace) {\r\n        const newLine = lineStart + text;\r\n        const visibleColumnsByColumns = CursorColumns.visibleColumnsByColumns(newLine, tabSize);\r\n        let contentText = '';\r\n        let curCol = lineStart.length + 1;\r\n        for (const c of text) {\r\n            if (c === '\\t') {\r\n                const width = visibleColumnsByColumns[curCol + 1] - visibleColumnsByColumns[curCol];\r\n                if (renderWhitespace) {\r\n                    contentText += '\u2192';\r\n                    for (let i = 1; i < width; i++) {\r\n                        contentText += '\\xa0';\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < width; i++) {\r\n                        contentText += '\\xa0';\r\n                    }\r\n                }\r\n            }\r\n            else if (c === ' ') {\r\n                if (renderWhitespace) {\r\n                    contentText += '\u00B7';\r\n                }\r\n                else {\r\n                    contentText += '\\xa0';\r\n                }\r\n            }\r\n            else {\r\n                contentText += c;\r\n            }\r\n            curCol += 1;\r\n        }\r\n        return contentText;\r\n    }\r\n};\r\nDecorationsWidget = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IThemeService),\r\n    __param(3, IContextKeyService)\r\n], DecorationsWidget);\r\nfunction opaque(color) {\r\n    const { r, b, g } = color.rgba;\r\n    return new Color(new RGBA(r, g, b, 255));\r\n}\r\nclass AdditionalLinesWidget {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this._viewZoneId = undefined;\r\n    }\r\n    get viewZoneId() { return this._viewZoneId; }\r\n    dispose() {\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n        });\r\n    }\r\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\r\n            if (heightInLines > 0) {\r\n                const domNode = document.createElement('div');\r\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions());\r\n                this._viewZoneId = changeAccessor.addZone({\r\n                    afterLineNumber: lineNumber,\r\n                    heightInLines: heightInLines,\r\n                    domNode,\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction renderLines(domNode, tabSize, lines, opts) {\r\n    const disableMonospaceOptimizations = opts.get(27 /* disableMonospaceOptimizations */);\r\n    const stopRenderingLineAfter = opts.get(104 /* stopRenderingLineAfter */);\r\n    // To avoid visual confusion, we don't want to render visible whitespace\r\n    const renderWhitespace = 'none';\r\n    const renderControlCharacters = opts.get(81 /* renderControlCharacters */);\r\n    const fontLigatures = opts.get(42 /* fontLigatures */);\r\n    const fontInfo = opts.get(41 /* fontInfo */);\r\n    const lineHeight = opts.get(57 /* lineHeight */);\r\n    const sb = createStringBuilder(10000);\r\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\r\n    for (let i = 0, len = lines.length; i < len; i++) {\r\n        const lineData = lines[i];\r\n        const line = lineData.content;\r\n        sb.appendASCIIString('<div class=\"view-line');\r\n        sb.appendASCIIString('\" style=\"top:');\r\n        sb.appendASCIIString(String(i * lineHeight));\r\n        sb.appendASCIIString('px;width:1000000px;\">');\r\n        const isBasicASCII = strings.isBasicASCII(line);\r\n        const containsRTL = strings.containsRTL(line);\r\n        const lineTokens = LineTokens.createEmpty(line);\r\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\r\n        sb.appendASCIIString('</div>');\r\n    }\r\n    sb.appendASCIIString('</div>');\r\n    Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n    const html = sb.build();\r\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\r\n    domNode.innerHTML = trustedhtml;\r\n}\r\nlet keyCounter = 0;\r\nfunction registerDecorationType(service, description, keyPrefix, options) {\r\n    const key = keyPrefix + (keyCounter++);\r\n    service.registerDecorationType(description, key, options);\r\n    return {\r\n        dispose() {\r\n            service.removeDecorationType(key);\r\n        },\r\n        resolve() {\r\n            return service.resolveDecorationOptions(key, true);\r\n        }\r\n    };\r\n}\r\nclass ViewMoreLinesContentWidget extends Disposable {\r\n    constructor(editor, position, domNode, disposableStore) {\r\n        super();\r\n        this.editor = editor;\r\n        this.position = position;\r\n        this.domNode = domNode;\r\n        this.allowEditorOverflow = false;\r\n        this.suppressMouseDown = false;\r\n        this._register(disposableStore);\r\n        this._register(toDisposable(() => {\r\n            this.editor.removeContentWidget(this);\r\n        }));\r\n        this.editor.addContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'editor.widget.viewMoreLinesWidget';\r\n    }\r\n    getDomNode() {\r\n        return this.domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            position: this.position,\r\n            preference: [0 /* EXACT */]\r\n        };\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const foreground = theme.getColor(ghostTextForeground);\r\n    if (foreground) {\r\n        const opacity = String(foreground.rgba.a);\r\n        const color = Color.Format.CSS.format(opaque(foreground));\r\n        collector.addRule(`.monaco-editor .ghost-text-decoration { opacity: ${opacity}; color: ${color}; }`);\r\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { opacity: ${opacity}; color: ${color}; }`);\r\n    }\r\n    const border = theme.getColor(ghostTextBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 2px dashed ${border}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nexport class GhostText {\r\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\r\n        this.lineNumber = lineNumber;\r\n        this.parts = parts;\r\n        this.additionalReservedLineCount = additionalReservedLineCount;\r\n    }\r\n    static equals(a, b) {\r\n        return a === b || (!!a && !!b && a.equals(b));\r\n    }\r\n    equals(other) {\r\n        return this.lineNumber === other.lineNumber &&\r\n            this.parts.length === other.parts.length &&\r\n            this.parts.every((part, index) => part.equals(other.parts[index]));\r\n    }\r\n}\r\nexport class GhostTextPart {\r\n    constructor(column, lines) {\r\n        this.column = column;\r\n        this.lines = lines;\r\n    }\r\n    equals(other) {\r\n        return this.column === other.column &&\r\n            this.lines.length === other.lines.length &&\r\n            this.lines.every((line, index) => line === other.lines[index]);\r\n    }\r\n}\r\nexport class BaseGhostTextWidgetModel extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._expanded = undefined;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(105 /* suggest */) && this._expanded === undefined) {\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n    }\r\n    get expanded() {\r\n        if (this._expanded === undefined) {\r\n            // TODO this should use a global hidden setting.\r\n            // See https://github.com/microsoft/vscode/issues/125037.\r\n            return true;\r\n        }\r\n        return this._expanded;\r\n    }\r\n    setExpanded(expanded) {\r\n        this._expanded = true;\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { InlineCompletionsProviderRegistry, InlineCompletionTriggerKind } from '../../common/modes.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { RedoCommand, UndoCommand } from '../../browser/editorExtensions.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\r\nimport { GhostText, BaseGhostTextWidgetModel, GhostTextPart } from './ghostText.js';\r\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\r\n    constructor(editor, commandService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.commandService = commandService;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.completionSession = this._register(new MutableDisposable());\r\n        this.active = false;\r\n        this._register(commandService.onDidExecuteCommand(e => {\r\n            // These commands don't trigger onDidType.\r\n            const commands = new Set([\r\n                UndoCommand.id,\r\n                RedoCommand.id,\r\n                CoreEditingCommands.Tab.id,\r\n                CoreEditingCommands.DeleteLeft.id,\r\n                CoreEditingCommands.DeleteRight.id\r\n            ]);\r\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\r\n                this.handleUserInput();\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidType((e) => {\r\n            this.handleUserInput();\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.session && !this.session.isValid) {\r\n                this.hide();\r\n            }\r\n        }));\r\n    }\r\n    handleUserInput() {\r\n        if (this.session && !this.session.isValid) {\r\n            this.hide();\r\n        }\r\n        setTimeout(() => {\r\n            // Wait for the cursor update that happens in the same iteration loop iteration\r\n            this.startSessionIfTriggered();\r\n        }, 0);\r\n    }\r\n    get session() {\r\n        return this.completionSession.value;\r\n    }\r\n    get ghostText() {\r\n        var _a;\r\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\r\n    }\r\n    get minReservedLineCount() {\r\n        return this.session ? this.session.minReservedLineCount : 0;\r\n    }\r\n    get expanded() {\r\n        return this.session ? this.session.expanded : false;\r\n    }\r\n    setExpanded(expanded) {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\r\n    }\r\n    setActive(active) {\r\n        var _a;\r\n        this.active = active;\r\n        if (active) {\r\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\r\n        }\r\n    }\r\n    startSessionIfTriggered() {\r\n        const suggestOptions = this.editor.getOption(53 /* inlineSuggest */);\r\n        if (!suggestOptions.enabled) {\r\n            return;\r\n        }\r\n        if (this.session && this.session.isValid) {\r\n            return;\r\n        }\r\n        this.trigger();\r\n    }\r\n    trigger() {\r\n        if (this.completionSession.value) {\r\n            return;\r\n        }\r\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService);\r\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\r\n            this.onDidChangeEmitter.fire();\r\n        }));\r\n    }\r\n    hide() {\r\n        this.completionSession.clear();\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    commitCurrentSuggestion() {\r\n        var _a;\r\n        // Don't dispose the session, so that after committing, more suggestions are shown.\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\r\n    }\r\n    showNext() {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\r\n    }\r\n    showPrevious() {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nInlineCompletionsModel = __decorate([\r\n    __param(1, ICommandService)\r\n], InlineCompletionsModel);\r\nexport { InlineCompletionsModel };\r\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\r\n    constructor(editor, triggerPosition, shouldUpdate, commandService) {\r\n        super(editor);\r\n        this.triggerPosition = triggerPosition;\r\n        this.shouldUpdate = shouldUpdate;\r\n        this.commandService = commandService;\r\n        this.minReservedLineCount = 0;\r\n        this.updateOperation = this._register(new MutableDisposable());\r\n        this.cache = this._register(new MutableDisposable());\r\n        this.updateSoon = this._register(new RunOnceScheduler(() => this.update(InlineCompletionTriggerKind.Automatic), 50));\r\n        this.textModel = this.editor.getModel();\r\n        //#region Selection\r\n        // We use a semantic id to track the selection even if the cache changes.\r\n        this.currentlySelectedCompletionId = undefined;\r\n        let lastCompletionItem = undefined;\r\n        this._register(this.onDidChange(() => {\r\n            const currentCompletion = this.currentCompletion;\r\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\r\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\r\n                const provider = currentCompletion.sourceProvider;\r\n                if (provider.handleItemDidShow) {\r\n                    provider.handleItemDidShow(currentCompletion.sourceInlineCompletions, lastCompletionItem);\r\n                }\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.cache.value) {\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidChangeModelContent((e) => {\r\n            if (this.cache.value) {\r\n                let hasChanged = false;\r\n                for (const c of this.cache.value.completions) {\r\n                    const newRange = this.textModel.getDecorationRange(c.decorationId);\r\n                    if (!newRange) {\r\n                        onUnexpectedError(new Error('Decoration has no range'));\r\n                        continue;\r\n                    }\r\n                    if (!c.synchronizedRange.equalsRange(newRange)) {\r\n                        hasChanged = true;\r\n                        c.synchronizedRange = newRange;\r\n                    }\r\n                }\r\n                if (hasChanged) {\r\n                    this.onDidChangeEmitter.fire();\r\n                }\r\n            }\r\n            this.scheduleAutomaticUpdate();\r\n        }));\r\n        this._register(InlineCompletionsProviderRegistry.onDidChange(() => {\r\n            this.updateSoon.schedule();\r\n        }));\r\n        this.scheduleAutomaticUpdate();\r\n    }\r\n    fixAndGetIndexOfCurrentSelection() {\r\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\r\n            return 0;\r\n        }\r\n        if (this.cache.value.completions.length === 0) {\r\n            // don't reset the selection in this case\r\n            return 0;\r\n        }\r\n        const idx = this.cache.value.completions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\r\n        if (idx === -1) {\r\n            // Reset the selection so that the selection does not jump back when it appears again\r\n            this.currentlySelectedCompletionId = undefined;\r\n            return 0;\r\n        }\r\n        return idx;\r\n    }\r\n    get currentCachedCompletion() {\r\n        if (!this.cache.value) {\r\n            return undefined;\r\n        }\r\n        return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()];\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\r\n            if (completions.length > 0) {\r\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\r\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\r\n            }\r\n            else {\r\n                this.currentlySelectedCompletionId = undefined;\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        });\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\r\n            if (completions.length > 0) {\r\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\r\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\r\n            }\r\n            else {\r\n                this.currentlySelectedCompletionId = undefined;\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        });\r\n    }\r\n    ensureUpdateWithExplicitContext() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.updateOperation.value) {\r\n                // Restart or wait for current update operation\r\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\r\n                    yield this.updateOperation.value.promise;\r\n                }\r\n                else {\r\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\r\n                }\r\n            }\r\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\r\n                // Refresh cache\r\n                yield this.update(InlineCompletionTriggerKind.Explicit);\r\n            }\r\n        });\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;\r\n        });\r\n    }\r\n    //#endregion\r\n    get ghostText() {\r\n        const currentCompletion = this.currentCompletion;\r\n        const mode = this.editor.getOptions().get(53 /* inlineSuggest */).mode;\r\n        return currentCompletion ? inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, this.editor.getPosition()) : undefined;\r\n    }\r\n    get currentCompletion() {\r\n        const completion = this.currentCachedCompletion;\r\n        if (!completion) {\r\n            return undefined;\r\n        }\r\n        return {\r\n            text: completion.inlineCompletion.text,\r\n            range: completion.synchronizedRange,\r\n            command: completion.inlineCompletion.command,\r\n            sourceProvider: completion.inlineCompletion.sourceProvider,\r\n            sourceInlineCompletions: completion.inlineCompletion.sourceInlineCompletions,\r\n            sourceInlineCompletion: completion.inlineCompletion.sourceInlineCompletion,\r\n        };\r\n    }\r\n    get isValid() {\r\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\r\n    }\r\n    scheduleAutomaticUpdate() {\r\n        // Since updateSoon debounces, starvation can happen.\r\n        // To prevent stale cache, we clear the current update operation.\r\n        this.updateOperation.clear();\r\n        this.updateSoon.schedule();\r\n    }\r\n    update(triggerKind) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.shouldUpdate()) {\r\n                return;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                let result;\r\n                try {\r\n                    result = yield provideInlineCompletions(position, this.editor.getModel(), { triggerKind }, token);\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                    return;\r\n                }\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                this.cache.value = new SynchronizedInlineCompletionsCache(this.editor, result, () => this.onDidChangeEmitter.fire(), triggerKind);\r\n                this.onDidChangeEmitter.fire();\r\n            }));\r\n            const operation = new UpdateOperation(promise, triggerKind);\r\n            this.updateOperation.value = operation;\r\n            yield promise;\r\n            if (this.updateOperation.value === operation) {\r\n                this.updateOperation.clear();\r\n            }\r\n        });\r\n    }\r\n    takeOwnership(disposable) {\r\n        this._register(disposable);\r\n    }\r\n    commitCurrentCompletion() {\r\n        if (!this.ghostText) {\r\n            // No ghost text was shown for this completion.\r\n            // Thus, we don't want to commit anything.\r\n            return;\r\n        }\r\n        const completion = this.currentCompletion;\r\n        if (completion) {\r\n            this.commit(completion);\r\n        }\r\n    }\r\n    commit(completion) {\r\n        // Mark the cache as stale, but don't dispose it yet,\r\n        // otherwise command args might get disposed.\r\n        const cache = this.cache.clearAndLeak();\r\n        this.editor.executeEdits('inlineSuggestion.accept', [\r\n            EditOperation.replaceMove(completion.range, completion.text)\r\n        ]);\r\n        if (completion.command) {\r\n            this.commandService\r\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\r\n                .finally(() => {\r\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\r\n            })\r\n                .then(undefined, onUnexpectedExternalError);\r\n        }\r\n        else {\r\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\r\n        }\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n}\r\nclass UpdateOperation {\r\n    constructor(promise, triggerKind) {\r\n        this.promise = promise;\r\n        this.triggerKind = triggerKind;\r\n    }\r\n    dispose() {\r\n        this.promise.cancel();\r\n    }\r\n}\r\n/**\r\n * The cache keeps itself in sync with the editor.\r\n * It also owns the completions result and disposes it when the cache is diposed.\r\n*/\r\nclass SynchronizedInlineCompletionsCache extends Disposable {\r\n    constructor(editor, completionsSource, onChange, triggerKind) {\r\n        super();\r\n        this.triggerKind = triggerKind;\r\n        const decorationIds = editor.deltaDecorations([], completionsSource.items.map(i => ({\r\n            range: i.range,\r\n            options: {\r\n                description: 'inline-completion-tracking-range'\r\n            },\r\n        })));\r\n        this._register(toDisposable(() => {\r\n            editor.deltaDecorations(decorationIds, []);\r\n        }));\r\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            let hasChanged = false;\r\n            const model = editor.getModel();\r\n            for (const c of this.completions) {\r\n                const newRange = model.getDecorationRange(c.decorationId);\r\n                if (!newRange) {\r\n                    onUnexpectedError(new Error('Decoration has no range'));\r\n                    continue;\r\n                }\r\n                if (!c.synchronizedRange.equalsRange(newRange)) {\r\n                    hasChanged = true;\r\n                    c.synchronizedRange = newRange;\r\n                }\r\n            }\r\n            if (hasChanged) {\r\n                onChange();\r\n            }\r\n        }));\r\n        this._register(completionsSource);\r\n    }\r\n}\r\nclass CachedInlineCompletion {\r\n    constructor(inlineCompletion, decorationId) {\r\n        this.inlineCompletion = inlineCompletion;\r\n        this.decorationId = decorationId;\r\n        this.semanticId = JSON.stringify({\r\n            text: this.inlineCompletion.text,\r\n            startLine: this.inlineCompletion.range.startLineNumber,\r\n            startColumn: this.inlineCompletion.range.startColumn,\r\n            command: this.inlineCompletion.command\r\n        });\r\n        this.synchronizedRange = inlineCompletion.range;\r\n    }\r\n}\r\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition) {\r\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\r\n        // Only single line replacements are supported.\r\n        return undefined;\r\n    }\r\n    // This is a single line string\r\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\r\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.text);\r\n    const lineNumber = inlineCompletion.range.startLineNumber;\r\n    const parts = new Array();\r\n    if (mode === 'prefix') {\r\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\r\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\r\n            // Prefixes only have a single change.\r\n            return undefined;\r\n        }\r\n    }\r\n    for (const c of changes) {\r\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\r\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\r\n            // No ghost text before cursor\r\n            return undefined;\r\n        }\r\n        if (c.originalLength > 0) {\r\n            const originalText = valueToBeReplaced.substr(c.originalStart, c.originalLength);\r\n            const firstNonWsCol = textModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n            if (!(/^(\\t| )*$/.test(originalText) && (firstNonWsCol === 0 || insertColumn <= firstNonWsCol))) {\r\n                return undefined;\r\n            }\r\n        }\r\n        if (c.modifiedLength === 0) {\r\n            continue;\r\n        }\r\n        const text = inlineCompletion.text.substr(c.modifiedStart, c.modifiedLength);\r\n        const lines = strings.splitLines(text);\r\n        parts.push(new GhostTextPart(insertColumn, lines));\r\n    }\r\n    return new GhostText(lineNumber, parts, 0);\r\n}\r\nlet lastRequest = undefined;\r\nfunction cachingDiff(originalValue, newValue) {\r\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\r\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\r\n    }\r\n    else {\r\n        const changes = smartDiff(originalValue, newValue);\r\n        lastRequest = {\r\n            originalValue,\r\n            newValue,\r\n            changes\r\n        };\r\n        return changes;\r\n    }\r\n}\r\n/**\r\n * When matching `if ()` with `if (f() = 1) { g(); }`,\r\n * align it like this:        `if (       )`\r\n * Not like this:\t\t\t  `if (  )`\r\n * Also not like this:\t\t  `if (             )`.\r\n *\r\n * The parenthesis are preprocessed to ensure that they match correctly.\r\n */\r\nfunction smartDiff(originalValue, newValue) {\r\n    function getMaxCharCode(val) {\r\n        let maxCharCode = 0;\r\n        for (let i = 0, len = val.length; i < len; i++) {\r\n            const charCode = val.charCodeAt(i);\r\n            if (charCode > maxCharCode) {\r\n                maxCharCode = charCode;\r\n            }\r\n        }\r\n        return maxCharCode;\r\n    }\r\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\r\n    function getUniqueCharCode(id) {\r\n        if (id < 0) {\r\n            throw new Error('unexpected');\r\n        }\r\n        return maxCharCode + id + 1;\r\n    }\r\n    function getElements(source) {\r\n        let level = 0;\r\n        let group = 0;\r\n        const characters = new Int32Array(source.length);\r\n        for (let i = 0, len = source.length; i < len; i++) {\r\n            const id = group * 100 + level;\r\n            // TODO support more brackets\r\n            if (source[i] === '(') {\r\n                characters[i] = getUniqueCharCode(2 * id);\r\n                level++;\r\n            }\r\n            else if (source[i] === ')') {\r\n                characters[i] = getUniqueCharCode(2 * id + 1);\r\n                if (level === 1) {\r\n                    group++;\r\n                }\r\n                level = Math.max(level - 1, 0);\r\n            }\r\n            else {\r\n                characters[i] = source.charCodeAt(i);\r\n            }\r\n        }\r\n        return characters;\r\n    }\r\n    const elements1 = getElements(originalValue);\r\n    const elements2 = getElements(newValue);\r\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\r\n}\r\nfunction getDefaultRange(position, model) {\r\n    const word = model.getWordAtPosition(position);\r\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\r\n    // By default, always replace up until the end of the current line.\r\n    // This default might be subject to change!\r\n    return word\r\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\r\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\r\n}\r\nfunction provideInlineCompletions(position, model, context, token = CancellationToken.None) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const defaultReplaceRange = getDefaultRange(position, model);\r\n        const providers = InlineCompletionsProviderRegistry.all(model);\r\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n            const completions = yield provider.provideInlineCompletions(model, position, context, token);\r\n            return ({\r\n                completions,\r\n                provider,\r\n                dispose: () => {\r\n                    if (completions) {\r\n                        provider.freeInlineCompletions(completions);\r\n                    }\r\n                }\r\n            });\r\n        })));\r\n        const itemsByHash = new Map();\r\n        for (const result of results) {\r\n            const completions = result.completions;\r\n            if (completions) {\r\n                for (const item of completions.items.map(item => ({\r\n                    text: item.text,\r\n                    range: item.range ? Range.lift(item.range) : defaultReplaceRange,\r\n                    command: item.command,\r\n                    sourceProvider: result.provider,\r\n                    sourceInlineCompletions: completions,\r\n                    sourceInlineCompletion: item\r\n                }))) {\r\n                    if (item.range.startLineNumber !== item.range.endLineNumber) {\r\n                        // Ignore invalid ranges.\r\n                        continue;\r\n                    }\r\n                    itemsByHash.set(JSON.stringify({ text: item.text, range: item.range }), item);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            items: [...itemsByHash.values()],\r\n            dispose: () => {\r\n                for (const result of results) {\r\n                    result.dispose();\r\n                }\r\n            },\r\n        };\r\n    });\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Scanner {\r\n    constructor() {\r\n        this.value = '';\r\n        this.pos = 0;\r\n    }\r\n    static isDigitCharacter(ch) {\r\n        return ch >= 48 /* Digit0 */ && ch <= 57 /* Digit9 */;\r\n    }\r\n    static isVariableCharacter(ch) {\r\n        return ch === 95 /* Underline */\r\n            || (ch >= 97 /* a */ && ch <= 122 /* z */)\r\n            || (ch >= 65 /* A */ && ch <= 90 /* Z */);\r\n    }\r\n    text(value) {\r\n        this.value = value;\r\n        this.pos = 0;\r\n    }\r\n    tokenText(token) {\r\n        return this.value.substr(token.pos, token.len);\r\n    }\r\n    next() {\r\n        if (this.pos >= this.value.length) {\r\n            return { type: 14 /* EOF */, pos: this.pos, len: 0 };\r\n        }\r\n        let pos = this.pos;\r\n        let len = 0;\r\n        let ch = this.value.charCodeAt(pos);\r\n        let type;\r\n        // static types\r\n        type = Scanner._table[ch];\r\n        if (typeof type === 'number') {\r\n            this.pos += 1;\r\n            return { type, pos, len: 1 };\r\n        }\r\n        // number\r\n        if (Scanner.isDigitCharacter(ch)) {\r\n            type = 8 /* Int */;\r\n            do {\r\n                len += 1;\r\n                ch = this.value.charCodeAt(pos + len);\r\n            } while (Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // variable name\r\n        if (Scanner.isVariableCharacter(ch)) {\r\n            type = 9 /* VariableName */;\r\n            do {\r\n                ch = this.value.charCodeAt(pos + (++len));\r\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // format\r\n        type = 10 /* Format */;\r\n        do {\r\n            len += 1;\r\n            ch = this.value.charCodeAt(pos + len);\r\n        } while (!isNaN(ch)\r\n            && typeof Scanner._table[ch] === 'undefined' // not static token\r\n            && !Scanner.isDigitCharacter(ch) // not number\r\n            && !Scanner.isVariableCharacter(ch) // not variable\r\n        );\r\n        this.pos += len;\r\n        return { type, pos, len };\r\n    }\r\n}\r\nScanner._table = {\r\n    [36 /* DollarSign */]: 0 /* Dollar */,\r\n    [58 /* Colon */]: 1 /* Colon */,\r\n    [44 /* Comma */]: 2 /* Comma */,\r\n    [123 /* OpenCurlyBrace */]: 3 /* CurlyOpen */,\r\n    [125 /* CloseCurlyBrace */]: 4 /* CurlyClose */,\r\n    [92 /* Backslash */]: 5 /* Backslash */,\r\n    [47 /* Slash */]: 6 /* Forwardslash */,\r\n    [124 /* Pipe */]: 7 /* Pipe */,\r\n    [43 /* Plus */]: 11 /* Plus */,\r\n    [45 /* Dash */]: 12 /* Dash */,\r\n    [63 /* QuestionMark */]: 13 /* QuestionMark */,\r\n};\r\nexport class Marker {\r\n    constructor() {\r\n        this._children = [];\r\n    }\r\n    appendChild(child) {\r\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\r\n            // this and previous child are text -> merge them\r\n            this._children[this._children.length - 1].value += child.value;\r\n        }\r\n        else {\r\n            // normal adoption of child\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        return this;\r\n    }\r\n    replace(child, others) {\r\n        const { parent } = child;\r\n        const idx = parent.children.indexOf(child);\r\n        const newChildren = parent.children.slice(0);\r\n        newChildren.splice(idx, 1, ...others);\r\n        parent._children = newChildren;\r\n        (function _fixParent(children, parent) {\r\n            for (const child of children) {\r\n                child.parent = parent;\r\n                _fixParent(child.children, child);\r\n            }\r\n        })(others, parent);\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    get snippet() {\r\n        let candidate = this;\r\n        while (true) {\r\n            if (!candidate) {\r\n                return undefined;\r\n            }\r\n            if (candidate instanceof TextmateSnippet) {\r\n                return candidate;\r\n            }\r\n            candidate = candidate.parent;\r\n        }\r\n    }\r\n    toString() {\r\n        return this.children.reduce((prev, cur) => prev + cur.toString(), '');\r\n    }\r\n    len() {\r\n        return 0;\r\n    }\r\n}\r\nexport class Text extends Marker {\r\n    constructor(value) {\r\n        super();\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    len() {\r\n        return this.value.length;\r\n    }\r\n    clone() {\r\n        return new Text(this.value);\r\n    }\r\n}\r\nexport class TransformableMarker extends Marker {\r\n}\r\nexport class Placeholder extends TransformableMarker {\r\n    constructor(index) {\r\n        super();\r\n        this.index = index;\r\n    }\r\n    static compareByIndex(a, b) {\r\n        if (a.index === b.index) {\r\n            return 0;\r\n        }\r\n        else if (a.isFinalTabstop) {\r\n            return 1;\r\n        }\r\n        else if (b.isFinalTabstop) {\r\n            return -1;\r\n        }\r\n        else if (a.index < b.index) {\r\n            return -1;\r\n        }\r\n        else if (a.index > b.index) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    get isFinalTabstop() {\r\n        return this.index === 0;\r\n    }\r\n    get choice() {\r\n        return this._children.length === 1 && this._children[0] instanceof Choice\r\n            ? this._children[0]\r\n            : undefined;\r\n    }\r\n    clone() {\r\n        let ret = new Placeholder(this.index);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class Choice extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.options = [];\r\n    }\r\n    appendChild(marker) {\r\n        if (marker instanceof Text) {\r\n            marker.parent = this;\r\n            this.options.push(marker);\r\n        }\r\n        return this;\r\n    }\r\n    toString() {\r\n        return this.options[0].value;\r\n    }\r\n    len() {\r\n        return this.options[0].len();\r\n    }\r\n    clone() {\r\n        let ret = new Choice();\r\n        this.options.forEach(ret.appendChild, ret);\r\n        return ret;\r\n    }\r\n}\r\nexport class Transform extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.regexp = new RegExp('');\r\n    }\r\n    resolve(value) {\r\n        const _this = this;\r\n        let didMatch = false;\r\n        let ret = value.replace(this.regexp, function () {\r\n            didMatch = true;\r\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\r\n        });\r\n        // when the regex didn't match and when the transform has\r\n        // else branches, then run those\r\n        if (!didMatch && this._children.some(child => child instanceof FormatString && Boolean(child.elseValue))) {\r\n            ret = this._replace([]);\r\n        }\r\n        return ret;\r\n    }\r\n    _replace(groups) {\r\n        let ret = '';\r\n        for (const marker of this._children) {\r\n            if (marker instanceof FormatString) {\r\n                let value = groups[marker.index] || '';\r\n                value = marker.resolve(value);\r\n                ret += value;\r\n            }\r\n            else {\r\n                ret += marker.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    toString() {\r\n        return '';\r\n    }\r\n    clone() {\r\n        let ret = new Transform();\r\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class FormatString extends Marker {\r\n    constructor(index, shorthandName, ifValue, elseValue) {\r\n        super();\r\n        this.index = index;\r\n        this.shorthandName = shorthandName;\r\n        this.ifValue = ifValue;\r\n        this.elseValue = elseValue;\r\n    }\r\n    resolve(value) {\r\n        if (this.shorthandName === 'upcase') {\r\n            return !value ? '' : value.toLocaleUpperCase();\r\n        }\r\n        else if (this.shorthandName === 'downcase') {\r\n            return !value ? '' : value.toLocaleLowerCase();\r\n        }\r\n        else if (this.shorthandName === 'capitalize') {\r\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\r\n        }\r\n        else if (this.shorthandName === 'pascalcase') {\r\n            return !value ? '' : this._toPascalCase(value);\r\n        }\r\n        else if (this.shorthandName === 'camelcase') {\r\n            return !value ? '' : this._toCamelCase(value);\r\n        }\r\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\r\n            return this.ifValue;\r\n        }\r\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\r\n            return this.elseValue;\r\n        }\r\n        else {\r\n            return value || '';\r\n        }\r\n    }\r\n    _toPascalCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map(word => {\r\n            return word.charAt(0).toUpperCase()\r\n                + word.substr(1).toLowerCase();\r\n        })\r\n            .join('');\r\n    }\r\n    _toCamelCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map((word, index) => {\r\n            if (index === 0) {\r\n                return word.toLowerCase();\r\n            }\r\n            else {\r\n                return word.charAt(0).toUpperCase()\r\n                    + word.substr(1).toLowerCase();\r\n            }\r\n        })\r\n            .join('');\r\n    }\r\n    clone() {\r\n        let ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\r\n        return ret;\r\n    }\r\n}\r\nexport class Variable extends TransformableMarker {\r\n    constructor(name) {\r\n        super();\r\n        this.name = name;\r\n    }\r\n    resolve(resolver) {\r\n        let value = resolver.resolve(this);\r\n        if (this.transform) {\r\n            value = this.transform.resolve(value || '');\r\n        }\r\n        if (value !== undefined) {\r\n            this._children = [new Text(value)];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clone() {\r\n        const ret = new Variable(this.name);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nfunction walk(marker, visitor) {\r\n    const stack = [...marker];\r\n    while (stack.length > 0) {\r\n        const marker = stack.shift();\r\n        const recurse = visitor(marker);\r\n        if (!recurse) {\r\n            break;\r\n        }\r\n        stack.unshift(...marker.children);\r\n    }\r\n}\r\nexport class TextmateSnippet extends Marker {\r\n    get placeholderInfo() {\r\n        if (!this._placeholders) {\r\n            // fill in placeholders\r\n            let all = [];\r\n            let last;\r\n            this.walk(function (candidate) {\r\n                if (candidate instanceof Placeholder) {\r\n                    all.push(candidate);\r\n                    last = !last || last.index < candidate.index ? candidate : last;\r\n                }\r\n                return true;\r\n            });\r\n            this._placeholders = { all, last };\r\n        }\r\n        return this._placeholders;\r\n    }\r\n    get placeholders() {\r\n        const { all } = this.placeholderInfo;\r\n        return all;\r\n    }\r\n    offset(marker) {\r\n        let pos = 0;\r\n        let found = false;\r\n        this.walk(candidate => {\r\n            if (candidate === marker) {\r\n                found = true;\r\n                return false;\r\n            }\r\n            pos += candidate.len();\r\n            return true;\r\n        });\r\n        if (!found) {\r\n            return -1;\r\n        }\r\n        return pos;\r\n    }\r\n    fullLen(marker) {\r\n        let ret = 0;\r\n        walk([marker], marker => {\r\n            ret += marker.len();\r\n            return true;\r\n        });\r\n        return ret;\r\n    }\r\n    enclosingPlaceholders(placeholder) {\r\n        let ret = [];\r\n        let { parent } = placeholder;\r\n        while (parent) {\r\n            if (parent instanceof Placeholder) {\r\n                ret.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        return ret;\r\n    }\r\n    resolveVariables(resolver) {\r\n        this.walk(candidate => {\r\n            if (candidate instanceof Variable) {\r\n                if (candidate.resolve(resolver)) {\r\n                    this._placeholders = undefined;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return this;\r\n    }\r\n    appendChild(child) {\r\n        this._placeholders = undefined;\r\n        return super.appendChild(child);\r\n    }\r\n    replace(child, others) {\r\n        this._placeholders = undefined;\r\n        return super.replace(child, others);\r\n    }\r\n    clone() {\r\n        let ret = new TextmateSnippet();\r\n        this._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n    walk(visitor) {\r\n        walk(this.children, visitor);\r\n    }\r\n}\r\nexport class SnippetParser {\r\n    constructor() {\r\n        this._scanner = new Scanner();\r\n        this._token = { type: 14 /* EOF */, pos: 0, len: 0 };\r\n    }\r\n    static escape(value) {\r\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\r\n    }\r\n    static guessNeedsClipboard(template) {\r\n        return /\\${?CLIPBOARD/.test(template);\r\n    }\r\n    parse(value, insertFinalTabstop, enforceFinalTabstop) {\r\n        this._scanner.text(value);\r\n        this._token = this._scanner.next();\r\n        const snippet = new TextmateSnippet();\r\n        while (this._parse(snippet)) {\r\n            // nothing\r\n        }\r\n        // fill in values for placeholders. the first placeholder of an index\r\n        // that has a value defines the value for all placeholders with that index\r\n        const placeholderDefaultValues = new Map();\r\n        const incompletePlaceholders = [];\r\n        let placeholderCount = 0;\r\n        snippet.walk(marker => {\r\n            if (marker instanceof Placeholder) {\r\n                placeholderCount += 1;\r\n                if (marker.isFinalTabstop) {\r\n                    placeholderDefaultValues.set(0, undefined);\r\n                }\r\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\r\n                    placeholderDefaultValues.set(marker.index, marker.children);\r\n                }\r\n                else {\r\n                    incompletePlaceholders.push(marker);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        for (const placeholder of incompletePlaceholders) {\r\n            const defaultValues = placeholderDefaultValues.get(placeholder.index);\r\n            if (defaultValues) {\r\n                const clone = new Placeholder(placeholder.index);\r\n                clone.transform = placeholder.transform;\r\n                for (const child of defaultValues) {\r\n                    clone.appendChild(child.clone());\r\n                }\r\n                snippet.replace(placeholder, [clone]);\r\n            }\r\n        }\r\n        if (!enforceFinalTabstop) {\r\n            enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\r\n        }\r\n        if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\r\n            // the snippet uses placeholders but has no\r\n            // final tabstop defined -> insert at the end\r\n            snippet.appendChild(new Placeholder(0));\r\n        }\r\n        return snippet;\r\n    }\r\n    _accept(type, value) {\r\n        if (type === undefined || this._token.type === type) {\r\n            let ret = !value ? true : this._scanner.tokenText(this._token);\r\n            this._token = this._scanner.next();\r\n            return ret;\r\n        }\r\n        return false;\r\n    }\r\n    _backTo(token) {\r\n        this._scanner.pos = token.pos + token.len;\r\n        this._token = token;\r\n        return false;\r\n    }\r\n    _until(type) {\r\n        const start = this._token;\r\n        while (this._token.type !== type) {\r\n            if (this._token.type === 14 /* EOF */) {\r\n                return false;\r\n            }\r\n            else if (this._token.type === 5 /* Backslash */) {\r\n                const nextToken = this._scanner.next();\r\n                if (nextToken.type !== 0 /* Dollar */\r\n                    && nextToken.type !== 4 /* CurlyClose */\r\n                    && nextToken.type !== 5 /* Backslash */) {\r\n                    return false;\r\n                }\r\n            }\r\n            this._token = this._scanner.next();\r\n        }\r\n        const value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\r\n        this._token = this._scanner.next();\r\n        return value;\r\n    }\r\n    _parse(marker) {\r\n        return this._parseEscaped(marker)\r\n            || this._parseTabstopOrVariableName(marker)\r\n            || this._parseComplexPlaceholder(marker)\r\n            || this._parseComplexVariable(marker)\r\n            || this._parseAnything(marker);\r\n    }\r\n    // \\$, \\\\, \\} -> just text\r\n    _parseEscaped(marker) {\r\n        let value;\r\n        if (value = this._accept(5 /* Backslash */, true)) {\r\n            // saw a backslash, append escaped token or that backslash\r\n            value = this._accept(0 /* Dollar */, true)\r\n                || this._accept(4 /* CurlyClose */, true)\r\n                || this._accept(5 /* Backslash */, true)\r\n                || value;\r\n            marker.appendChild(new Text(value));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // $foo -> variable, $1 -> tabstop\r\n    _parseTabstopOrVariableName(parent) {\r\n        let value;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && (value = this._accept(9 /* VariableName */, true) || this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        parent.appendChild(/^\\d+$/.test(value)\r\n            ? new Placeholder(Number(value))\r\n            : new Variable(value));\r\n        return true;\r\n    }\r\n    // ${1:<children>}, ${1} -> placeholder\r\n    _parseComplexPlaceholder(parent) {\r\n        let index;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (index = this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const placeholder = new Placeholder(Number(index));\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${1:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(placeholder);\r\n                    return true;\r\n                }\r\n                if (this._parse(placeholder)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + index + ':'));\r\n                placeholder.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (placeholder.index > 0 && this._accept(7 /* Pipe */)) {\r\n            // ${1|one,two,three|}\r\n            const choice = new Choice();\r\n            while (true) {\r\n                if (this._parseChoiceElement(choice)) {\r\n                    if (this._accept(2 /* Comma */)) {\r\n                        // opt, -> more\r\n                        continue;\r\n                    }\r\n                    if (this._accept(7 /* Pipe */)) {\r\n                        placeholder.appendChild(choice);\r\n                        if (this._accept(4 /* CurlyClose */)) {\r\n                            // ..|} -> done\r\n                            parent.appendChild(placeholder);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1/<regex>/<format>/<options>}\r\n            if (this._parseTransform(placeholder)) {\r\n                parent.appendChild(placeholder);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(placeholder);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${1 <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseChoiceElement(parent) {\r\n        const token = this._token;\r\n        const values = [];\r\n        while (true) {\r\n            if (this._token.type === 2 /* Comma */ || this._token.type === 7 /* Pipe */) {\r\n                break;\r\n            }\r\n            let value;\r\n            if (value = this._accept(5 /* Backslash */, true)) {\r\n                // \\, \\|, or \\\\\r\n                value = this._accept(2 /* Comma */, true)\r\n                    || this._accept(7 /* Pipe */, true)\r\n                    || this._accept(5 /* Backslash */, true)\r\n                    || value;\r\n            }\r\n            else {\r\n                value = this._accept(undefined, true);\r\n            }\r\n            if (!value) {\r\n                // EOF\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            values.push(value);\r\n        }\r\n        if (values.length === 0) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        parent.appendChild(new Text(values.join('')));\r\n        return true;\r\n    }\r\n    // ${foo:<children>}, ${foo} -> variable\r\n    _parseComplexVariable(parent) {\r\n        let name;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (name = this._accept(9 /* VariableName */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const variable = new Variable(name);\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${foo:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(variable);\r\n                    return true;\r\n                }\r\n                if (this._parse(variable)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + name + ':'));\r\n                variable.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${foo/<regex>/<format>/<options>}\r\n            if (this._parseTransform(variable)) {\r\n                parent.appendChild(variable);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${foo}\r\n            parent.appendChild(variable);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${foo <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseTransform(parent) {\r\n        // ...<regex>/<format>/<options>}\r\n        let transform = new Transform();\r\n        let regexValue = '';\r\n        let regexOptions = '';\r\n        // (1) /regex\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(6 /* Forwardslash */, true) || escaped;\r\n                regexValue += escaped;\r\n                continue;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexValue += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (2) /format\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(5 /* Backslash */, true) || this._accept(6 /* Forwardslash */, true) || escaped;\r\n                transform.appendChild(new Text(escaped));\r\n                continue;\r\n            }\r\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (3) /option\r\n        while (true) {\r\n            if (this._accept(4 /* CurlyClose */)) {\r\n                break;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexOptions += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            transform.regexp = new RegExp(regexValue, regexOptions);\r\n        }\r\n        catch (e) {\r\n            // invalid regexp\r\n            return false;\r\n        }\r\n        parent.transform = transform;\r\n        return true;\r\n    }\r\n    _parseFormatString(parent) {\r\n        const token = this._token;\r\n        if (!this._accept(0 /* Dollar */)) {\r\n            return false;\r\n        }\r\n        let complex = false;\r\n        if (this._accept(3 /* CurlyOpen */)) {\r\n            complex = true;\r\n        }\r\n        let index = this._accept(8 /* Int */, true);\r\n        if (!index) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (!complex) {\r\n            // $1\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (!this._accept(1 /* Colon */)) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1:/upcase}\r\n            let shorthand = this._accept(9 /* VariableName */, true);\r\n            if (!shorthand || !this._accept(4 /* CurlyClose */)) {\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            else {\r\n                parent.appendChild(new FormatString(Number(index), shorthand));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(11 /* Plus */)) {\r\n            // ${1:+<if>}\r\n            let ifValue = this._until(4 /* CurlyClose */);\r\n            if (ifValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(12 /* Dash */)) {\r\n            // ${2:-<else>}\r\n            let elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(13 /* QuestionMark */)) {\r\n            // ${2:?<if>:<else>}\r\n            let ifValue = this._until(1 /* Colon */);\r\n            if (ifValue) {\r\n                let elseValue = this._until(4 /* CurlyClose */);\r\n                if (elseValue) {\r\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // ${1:<else>}\r\n            let elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        this._backTo(token);\r\n        return false;\r\n    }\r\n    _parseAnything(marker) {\r\n        if (this._token.type !== 14 /* EOF */) {\r\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\r\n            this._accept(undefined);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { groupBy } from '../../../base/common/arrays.js';\r\nimport { dispose } from '../../../base/common/lifecycle.js';\r\nimport { getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport './snippetSession.css';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\r\nimport { optional } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Choice, Placeholder, SnippetParser, Text } from './snippetParser.js';\r\nimport { ClipboardBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, SelectionBasedVariableResolver, TimeBasedVariableResolver, CommentBasedVariableResolver, WorkspaceBasedVariableResolver, RandomBasedVariableResolver } from './snippetVariables.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport * as colors from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nregisterThemingParticipant((theme, collector) => {\r\n    function getColorGraceful(name) {\r\n        const color = theme.getColor(name);\r\n        return color ? color.toString() : 'transparent';\r\n    }\r\n    collector.addRule(`.monaco-editor .snippet-placeholder { background-color: ${getColorGraceful(colors.snippetTabstopHighlightBackground)}; outline-color: ${getColorGraceful(colors.snippetTabstopHighlightBorder)}; }`);\r\n    collector.addRule(`.monaco-editor .finish-snippet-placeholder { background-color: ${getColorGraceful(colors.snippetFinalTabstopHighlightBackground)}; outline-color: ${getColorGraceful(colors.snippetFinalTabstopHighlightBorder)}; }`);\r\n});\r\nexport class OneSnippet {\r\n    constructor(_editor, _snippet, _offset, _snippetLineLeadingWhitespace) {\r\n        this._editor = _editor;\r\n        this._snippet = _snippet;\r\n        this._offset = _offset;\r\n        this._snippetLineLeadingWhitespace = _snippetLineLeadingWhitespace;\r\n        this._nestingLevel = 1;\r\n        this._placeholderGroups = groupBy(_snippet.placeholders, Placeholder.compareByIndex);\r\n        this._placeholderGroupsIdx = -1;\r\n    }\r\n    dispose() {\r\n        if (this._placeholderDecorations) {\r\n            this._editor.deltaDecorations([...this._placeholderDecorations.values()], []);\r\n        }\r\n        this._placeholderGroups.length = 0;\r\n    }\r\n    _initDecorations() {\r\n        if (this._placeholderDecorations) {\r\n            // already initialized\r\n            return;\r\n        }\r\n        this._placeholderDecorations = new Map();\r\n        const model = this._editor.getModel();\r\n        this._editor.changeDecorations(accessor => {\r\n            // create a decoration for each placeholder\r\n            for (const placeholder of this._snippet.placeholders) {\r\n                const placeholderOffset = this._snippet.offset(placeholder);\r\n                const placeholderLen = this._snippet.fullLen(placeholder);\r\n                const range = Range.fromPositions(model.getPositionAt(this._offset + placeholderOffset), model.getPositionAt(this._offset + placeholderOffset + placeholderLen));\r\n                const options = placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive;\r\n                const handle = accessor.addDecoration(range, options);\r\n                this._placeholderDecorations.set(placeholder, handle);\r\n            }\r\n        });\r\n    }\r\n    move(fwd) {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this._initDecorations();\r\n        // Transform placeholder text if necessary\r\n        if (this._placeholderGroupsIdx >= 0) {\r\n            let operations = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                // Check if the placeholder has a transformation\r\n                if (placeholder.transform) {\r\n                    const id = this._placeholderDecorations.get(placeholder);\r\n                    const range = this._editor.getModel().getDecorationRange(id);\r\n                    const currentValue = this._editor.getModel().getValueInRange(range);\r\n                    const transformedValueLines = placeholder.transform.resolve(currentValue).split(/\\r\\n|\\r|\\n/);\r\n                    // fix indentation for transformed lines\r\n                    for (let i = 1; i < transformedValueLines.length; i++) {\r\n                        transformedValueLines[i] = this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace + transformedValueLines[i]);\r\n                    }\r\n                    operations.push(EditOperation.replace(range, transformedValueLines.join(this._editor.getModel().getEOL())));\r\n                }\r\n            }\r\n            if (operations.length > 0) {\r\n                this._editor.executeEdits('snippet.placeholderTransform', operations);\r\n            }\r\n        }\r\n        let couldSkipThisPlaceholder = false;\r\n        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {\r\n            this._placeholderGroupsIdx += 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else if (fwd === false && this._placeholderGroupsIdx > 0) {\r\n            this._placeholderGroupsIdx -= 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else {\r\n            // the selection of the current placeholder might\r\n            // not acurate any more -> simply restore it\r\n        }\r\n        const newSelections = this._editor.getModel().changeDecorations(accessor => {\r\n            const activePlaceholders = new Set();\r\n            // change stickiness to always grow when typing at its edges\r\n            // because these decorations represent the currently active\r\n            // tabstop.\r\n            // Special case #1: reaching the final tabstop\r\n            // Special case #2: placeholders enclosing active placeholders\r\n            const selections = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                selections.push(new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));\r\n                // consider to skip this placeholder index when the decoration\r\n                // range is empty but when the placeholder wasn't. that's a strong\r\n                // hint that the placeholder has been deleted. (all placeholder must match this)\r\n                couldSkipThisPlaceholder = couldSkipThisPlaceholder && this._hasPlaceholderBeenCollapsed(placeholder);\r\n                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                activePlaceholders.add(placeholder);\r\n                for (const enclosingPlaceholder of this._snippet.enclosingPlaceholders(placeholder)) {\r\n                    const id = this._placeholderDecorations.get(enclosingPlaceholder);\r\n                    accessor.changeDecorationOptions(id, enclosingPlaceholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                    activePlaceholders.add(enclosingPlaceholder);\r\n                }\r\n            }\r\n            // change stickness to never grow when typing at its edges\r\n            // so that in-active tabstops never grow\r\n            for (const [placeholder, id] of this._placeholderDecorations) {\r\n                if (!activePlaceholders.has(placeholder)) {\r\n                    accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive);\r\n                }\r\n            }\r\n            return selections;\r\n        });\r\n        return !couldSkipThisPlaceholder ? newSelections !== null && newSelections !== void 0 ? newSelections : [] : this.move(fwd);\r\n    }\r\n    _hasPlaceholderBeenCollapsed(placeholder) {\r\n        // A placeholder is empty when it wasn't empty when authored but\r\n        // when its tracking decoration is empty. This also applies to all\r\n        // potential parent placeholders\r\n        let marker = placeholder;\r\n        while (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                const id = this._placeholderDecorations.get(marker);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (range.isEmpty() && marker.toString().length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            marker = marker.parent;\r\n        }\r\n        return false;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippet.placeholders.length > 0;\r\n    }\r\n    computePossibleSelections() {\r\n        const result = new Map();\r\n        for (const placeholdersWithEqualIndex of this._placeholderGroups) {\r\n            let ranges;\r\n            for (const placeholder of placeholdersWithEqualIndex) {\r\n                if (placeholder.isFinalTabstop) {\r\n                    // ignore those\r\n                    break;\r\n                }\r\n                if (!ranges) {\r\n                    ranges = [];\r\n                    result.set(placeholder.index, ranges);\r\n                }\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (!range) {\r\n                    // one of the placeholder lost its decoration and\r\n                    // therefore we bail out and pretend the placeholder\r\n                    // (with its mirrors) doesn't exist anymore.\r\n                    result.delete(placeholder.index);\r\n                    break;\r\n                }\r\n                ranges.push(range);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    get choice() {\r\n        return this._placeholderGroups[this._placeholderGroupsIdx][0].choice;\r\n    }\r\n    merge(others) {\r\n        const model = this._editor.getModel();\r\n        this._nestingLevel *= 10;\r\n        this._editor.changeDecorations(accessor => {\r\n            // For each active placeholder take one snippet and merge it\r\n            // in that the placeholder (can be many for `$1foo$1foo`). Because\r\n            // everything is sorted by editor selection we can simply remove\r\n            // elements from the beginning of the array\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const nested = others.shift();\r\n                console.assert(!nested._placeholderDecorations);\r\n                // Massage placeholder-indicies of the nested snippet to be\r\n                // sorted right after the insertion point. This ensures we move\r\n                // through the placeholders in the correct order\r\n                const indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;\r\n                for (const nestedPlaceholder of nested._snippet.placeholderInfo.all) {\r\n                    if (nestedPlaceholder.isFinalTabstop) {\r\n                        nestedPlaceholder.index = placeholder.index + ((indexLastPlaceholder + 1) / this._nestingLevel);\r\n                    }\r\n                    else {\r\n                        nestedPlaceholder.index = placeholder.index + (nestedPlaceholder.index / this._nestingLevel);\r\n                    }\r\n                }\r\n                this._snippet.replace(placeholder, nested._snippet.children);\r\n                // Remove the placeholder at which position are inserting\r\n                // the snippet and also remove its decoration.\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                accessor.removeDecoration(id);\r\n                this._placeholderDecorations.delete(placeholder);\r\n                // For each *new* placeholder we create decoration to monitor\r\n                // how and if it grows/shrinks.\r\n                for (const placeholder of nested._snippet.placeholders) {\r\n                    const placeholderOffset = nested._snippet.offset(placeholder);\r\n                    const placeholderLen = nested._snippet.fullLen(placeholder);\r\n                    const range = Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));\r\n                    const handle = accessor.addDecoration(range, OneSnippet._decor.inactive);\r\n                    this._placeholderDecorations.set(placeholder, handle);\r\n                }\r\n            }\r\n            // Last, re-create the placeholder groups by sorting placeholders by their index.\r\n            this._placeholderGroups = groupBy(this._snippet.placeholders, Placeholder.compareByIndex);\r\n        });\r\n    }\r\n}\r\nOneSnippet._decor = {\r\n    active: ModelDecorationOptions.register({ description: 'snippet-placeholder-1', stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    inactive: ModelDecorationOptions.register({ description: 'snippet-placeholder-2', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    activeFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-3', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n    inactiveFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-4', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n};\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nexport class SnippetSession {\r\n    constructor(editor, template, options = _defaultOptions) {\r\n        this._templateMerges = [];\r\n        this._snippets = [];\r\n        this._editor = editor;\r\n        this._template = template;\r\n        this._options = options;\r\n    }\r\n    static adjustWhitespace(model, position, snippet, adjustIndentation, adjustNewlines) {\r\n        const line = model.getLineContent(position.lineNumber);\r\n        const lineLeadingWhitespace = getLeadingWhitespace(line, 0, position.column - 1);\r\n        // the snippet as inserted\r\n        let snippetTextString;\r\n        snippet.walk(marker => {\r\n            // all text elements that are not inside choice\r\n            if (!(marker instanceof Text) || marker.parent instanceof Choice) {\r\n                return true;\r\n            }\r\n            const lines = marker.value.split(/\\r\\n|\\r|\\n/);\r\n            if (adjustIndentation) {\r\n                // adjust indentation of snippet test\r\n                // -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized\r\n                // -all N+1 lines get extra-indented and normalized\r\n                // -the text start get extra-indented and normalized when following a linebreak\r\n                const offset = snippet.offset(marker);\r\n                if (offset === 0) {\r\n                    // snippet start\r\n                    lines[0] = model.normalizeIndentation(lines[0]);\r\n                }\r\n                else {\r\n                    // check if text start is after a linebreak\r\n                    snippetTextString = snippetTextString !== null && snippetTextString !== void 0 ? snippetTextString : snippet.toString();\r\n                    let prevChar = snippetTextString.charCodeAt(offset - 1);\r\n                    if (prevChar === 10 /* LineFeed */ || prevChar === 13 /* CarriageReturn */) {\r\n                        lines[0] = model.normalizeIndentation(lineLeadingWhitespace + lines[0]);\r\n                    }\r\n                }\r\n                for (let i = 1; i < lines.length; i++) {\r\n                    lines[i] = model.normalizeIndentation(lineLeadingWhitespace + lines[i]);\r\n                }\r\n            }\r\n            const newValue = lines.join(model.getEOL());\r\n            if (newValue !== marker.value) {\r\n                marker.parent.replace(marker, [new Text(newValue)]);\r\n                snippetTextString = undefined;\r\n            }\r\n            return true;\r\n        });\r\n        return lineLeadingWhitespace;\r\n    }\r\n    static adjustSelection(model, selection, overwriteBefore, overwriteAfter) {\r\n        if (overwriteBefore !== 0 || overwriteAfter !== 0) {\r\n            // overwrite[Before|After] is compute using the position, not the whole\r\n            // selection. therefore we adjust the selection around that position\r\n            const { positionLineNumber, positionColumn } = selection;\r\n            const positionColumnBefore = positionColumn - overwriteBefore;\r\n            const positionColumnAfter = positionColumn + overwriteAfter;\r\n            const range = model.validateRange({\r\n                startLineNumber: positionLineNumber,\r\n                startColumn: positionColumnBefore,\r\n                endLineNumber: positionLineNumber,\r\n                endColumn: positionColumnAfter\r\n            });\r\n            selection = Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());\r\n        }\r\n        return selection;\r\n    }\r\n    static createEditsAndSnippets(editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer) {\r\n        const edits = [];\r\n        const snippets = [];\r\n        if (!editor.hasModel()) {\r\n            return { edits, snippets };\r\n        }\r\n        const model = editor.getModel();\r\n        const workspaceService = editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService, optional));\r\n        const modelBasedVariableResolver = editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService, optional), model));\r\n        const readClipboardText = () => clipboardText;\r\n        let delta = 0;\r\n        // know what text the overwrite[Before|After] extensions\r\n        // of the primary curser have selected because only when\r\n        // secondary selections extend to the same text we can grow them\r\n        let firstBeforeText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));\r\n        let firstAfterText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));\r\n        // remember the first non-whitespace column to decide if\r\n        // `keepWhitespace` should be overruled for secondary selections\r\n        let firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);\r\n        // sort selections by their start position but remeber\r\n        // the original index. that allows you to create correct\r\n        // offset-based selection logic without changing the\r\n        // primary selection\r\n        const indexedSelections = editor.getSelections()\r\n            .map((selection, idx) => ({ selection, idx }))\r\n            .sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        for (const { selection, idx } of indexedSelections) {\r\n            // extend selection with the `overwriteBefore` and `overwriteAfter` and then\r\n            // compare if this matches the extensions of the primary selection\r\n            let extensionBefore = SnippetSession.adjustSelection(model, selection, overwriteBefore, 0);\r\n            let extensionAfter = SnippetSession.adjustSelection(model, selection, 0, overwriteAfter);\r\n            if (firstBeforeText !== model.getValueInRange(extensionBefore)) {\r\n                extensionBefore = selection;\r\n            }\r\n            if (firstAfterText !== model.getValueInRange(extensionAfter)) {\r\n                extensionAfter = selection;\r\n            }\r\n            // merge the before and after selection into one\r\n            const snippetSelection = selection\r\n                .setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn)\r\n                .setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);\r\n            const snippet = new SnippetParser().parse(template, true, enforceFinalTabstop);\r\n            // adjust the template string to match the indentation and\r\n            // whitespace rules of this insert location (can be different for each cursor)\r\n            // happens when being asked for (default) or when this is a secondary\r\n            // cursor and the leading whitespace is different\r\n            const start = snippetSelection.getStartPosition();\r\n            const snippetLineLeadingWhitespace = SnippetSession.adjustWhitespace(model, start, snippet, adjustWhitespace || (idx > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection.positionLineNumber)), true);\r\n            snippet.resolveVariables(new CompositeSnippetVariableResolver([\r\n                modelBasedVariableResolver,\r\n                new ClipboardBasedVariableResolver(readClipboardText, idx, indexedSelections.length, editor.getOption(69 /* multiCursorPaste */) === 'spread'),\r\n                new SelectionBasedVariableResolver(model, selection, idx, overtypingCapturer),\r\n                new CommentBasedVariableResolver(model, selection),\r\n                new TimeBasedVariableResolver,\r\n                new WorkspaceBasedVariableResolver(workspaceService),\r\n                new RandomBasedVariableResolver,\r\n            ]));\r\n            const offset = model.getOffsetAt(start) + delta;\r\n            delta += snippet.toString().length - model.getValueLengthInRange(snippetSelection);\r\n            // store snippets with the index of their originating selection.\r\n            // that ensures the primiary cursor stays primary despite not being\r\n            // the one with lowest start position\r\n            edits[idx] = EditOperation.replace(snippetSelection, snippet.toString());\r\n            edits[idx].identifier = { major: idx, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\r\n            snippets[idx] = new OneSnippet(editor, snippet, offset, snippetLineLeadingWhitespace);\r\n        }\r\n        return { edits, snippets };\r\n    }\r\n    dispose() {\r\n        dispose(this._snippets);\r\n    }\r\n    _logInfo() {\r\n        return `template=\"${this._template}\", merged_templates=\"${this._templateMerges.join(' -> ')}\"`;\r\n    }\r\n    insert() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // make insert edit and start with first selections\r\n        const { edits, snippets } = SnippetSession.createEditsAndSnippets(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer);\r\n        this._snippets = snippets;\r\n        this._editor.executeEdits('snippet', edits, undoEdits => {\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(true);\r\n            }\r\n            else {\r\n                return undoEdits\r\n                    .filter(edit => !!edit.identifier) // only use our undo edits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition()));\r\n            }\r\n        });\r\n        this._editor.revealRange(this._editor.getSelections()[0]);\r\n    }\r\n    merge(template, options = _defaultOptions) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._templateMerges.push([this._snippets[0]._nestingLevel, this._snippets[0]._placeholderGroupsIdx, template]);\r\n        const { edits, snippets } = SnippetSession.createEditsAndSnippets(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText, options.overtypingCapturer);\r\n        this._editor.executeEdits('snippet', edits, undoEdits => {\r\n            for (const snippet of this._snippets) {\r\n                snippet.merge(snippets);\r\n            }\r\n            console.assert(snippets.length === 0);\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(undefined);\r\n            }\r\n            else {\r\n                return (undoEdits\r\n                    .filter(edit => !!edit.identifier) // only use our undo edits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition())));\r\n            }\r\n        });\r\n    }\r\n    next() {\r\n        const newSelections = this._move(true);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    prev() {\r\n        const newSelections = this._move(false);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    _move(fwd) {\r\n        const selections = [];\r\n        for (const snippet of this._snippets) {\r\n            const oneSelection = snippet.move(fwd);\r\n            selections.push(...oneSelection);\r\n        }\r\n        return selections;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._snippets[0].isAtFirstPlaceholder;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._snippets[0].isAtLastPlaceholder;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippets[0].hasPlaceholder;\r\n    }\r\n    get choice() {\r\n        return this._snippets[0].choice;\r\n    }\r\n    isSelectionWithinPlaceholders() {\r\n        if (!this.hasPlaceholder) {\r\n            return false;\r\n        }\r\n        const selections = this._editor.getSelections();\r\n        if (selections.length < this._snippets.length) {\r\n            // this means we started snippet mode with N\r\n            // selections and have M (N > M) selections.\r\n            // So one snippet is without selection -> cancel\r\n            return false;\r\n        }\r\n        let allPossibleSelections = new Map();\r\n        for (const snippet of this._snippets) {\r\n            const possibleSelections = snippet.computePossibleSelections();\r\n            // for the first snippet find the placeholder (and its ranges)\r\n            // that contain at least one selection. for all remaining snippets\r\n            // the same placeholder (and their ranges) must be used.\r\n            if (allPossibleSelections.size === 0) {\r\n                for (const [index, ranges] of possibleSelections) {\r\n                    ranges.sort(Range.compareRangesUsingStarts);\r\n                    for (const selection of selections) {\r\n                        if (ranges[0].containsRange(selection)) {\r\n                            allPossibleSelections.set(index, []);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (allPossibleSelections.size === 0) {\r\n                // return false if we couldn't associate a selection to\r\n                // this (the first) snippet\r\n                return false;\r\n            }\r\n            // add selections from 'this' snippet so that we know all\r\n            // selections for this placeholder\r\n            allPossibleSelections.forEach((array, index) => {\r\n                array.push(...possibleSelections.get(index));\r\n            });\r\n        }\r\n        // sort selections (and later placeholder-ranges). then walk both\r\n        // arrays and make sure the placeholder-ranges contain the corresponding\r\n        // selection\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        for (let [index, ranges] of allPossibleSelections) {\r\n            if (ranges.length !== selections.length) {\r\n                allPossibleSelections.delete(index);\r\n                continue;\r\n            }\r\n            ranges.sort(Range.compareRangesUsingStarts);\r\n            for (let i = 0; i < ranges.length; i++) {\r\n                if (!ranges[i].containsRange(selections[i])) {\r\n                    allPossibleSelections.delete(index);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        // from all possible selections we have deleted those\r\n        // that don't match with the current selection. if we don't\r\n        // have any left, we don't have a selection anymore\r\n        return allPossibleSelections.size > 0;\r\n    }\r\n}\r\n", "import { URI } from '../../../base/common/uri.js';\r\nexport const WORKSPACE_EXTENSION = 'code-workspace';\r\nexport function isSingleFolderWorkspaceIdentifier(obj) {\r\n    const singleFolderIdentifier = obj;\r\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\r\n}\r\nexport function toWorkspaceIdentifier(workspace) {\r\n    // Multi root\r\n    if (workspace.configuration) {\r\n        return {\r\n            id: workspace.id,\r\n            configPath: workspace.configuration\r\n        };\r\n    }\r\n    // Single folder\r\n    if (workspace.folders.length === 1) {\r\n        return {\r\n            id: workspace.id,\r\n            uri: workspace.folders[0].uri\r\n        };\r\n    }\r\n    // Empty workspace\r\n    return undefined;\r\n}\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { URI } from './uri.js';\r\nimport { Schemas } from './network.js';\r\nimport { isWindows } from './platform.js';\r\nimport { basename } from './resources.js';\r\nimport { hasDriveLetter, isRootOrDriveLetter } from './extpath.js';\r\nexport function getBaseLabel(resource) {\r\n    if (!resource) {\r\n        return undefined;\r\n    }\r\n    if (typeof resource === 'string') {\r\n        resource = URI.file(resource);\r\n    }\r\n    const base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\r\n    // convert c: => C:\r\n    if (isWindows && isRootOrDriveLetter(base)) {\r\n        return normalizeDriveLetter(base);\r\n    }\r\n    return base;\r\n}\r\nexport function normalizeDriveLetter(path) {\r\n    if (hasDriveLetter(path)) {\r\n        return path.charAt(0).toUpperCase() + path.slice(1);\r\n    }\r\n    return path;\r\n}\r\n", "// prep-work\r\nconst _data = new Uint8Array(16);\r\nconst _hex = [];\r\nfor (let i = 0; i < 256; i++) {\r\n    _hex.push(i.toString(16).padStart(2, '0'));\r\n}\r\n// todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\r\nlet _fillRandomValues;\r\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\r\n    // browser\r\n    _fillRandomValues = crypto.getRandomValues.bind(crypto);\r\n}\r\nelse {\r\n    _fillRandomValues = function (bucket) {\r\n        for (let i = 0; i < bucket.length; i++) {\r\n            bucket[i] = Math.floor(Math.random() * 256);\r\n        }\r\n        return bucket;\r\n    };\r\n}\r\nexport function generateUuid() {\r\n    // get data\r\n    _fillRandomValues(_data);\r\n    // set version bits\r\n    _data[6] = (_data[6] & 0x0f) | 0x40;\r\n    _data[8] = (_data[8] & 0x3f) | 0x80;\r\n    // print as string\r\n    let i = 0;\r\n    let result = '';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    return result;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport * as path from '../../../base/common/path.js';\r\nimport { dirname } from '../../../base/common/resources.js';\r\nimport { Text } from './snippetParser.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { getLeadingWhitespace, commonPrefixLength, isFalsyOrWhitespace, splitLines } from '../../../base/common/strings.js';\r\nimport { toWorkspaceIdentifier, WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier } from '../../../platform/workspaces/common/workspaces.js';\r\nimport { normalizeDriveLetter } from '../../../base/common/labels.js';\r\nimport { generateUuid } from '../../../base/common/uuid.js';\r\nexport class CompositeSnippetVariableResolver {\r\n    constructor(_delegates) {\r\n        this._delegates = _delegates;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        for (const delegate of this._delegates) {\r\n            let value = delegate.resolve(variable);\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class SelectionBasedVariableResolver {\r\n    constructor(_model, _selection, _selectionIdx, _overtypingCapturer) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._overtypingCapturer = _overtypingCapturer;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\r\n            let value = this._model.getValueInRange(this._selection) || undefined;\r\n            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\r\n            // If there was no selected text, try to get last overtyped text\r\n            if (!value && this._overtypingCapturer) {\r\n                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\r\n                if (info) {\r\n                    value = info.value;\r\n                    isMultiline = info.multiline;\r\n                }\r\n            }\r\n            if (value && isMultiline && variable.snippet) {\r\n                // Selection is a multiline string which we indentation we now\r\n                // need to adjust. We compare the indentation of this variable\r\n                // with the indentation at the editor position and add potential\r\n                // extra indentation to the value\r\n                const line = this._model.getLineContent(this._selection.startLineNumber);\r\n                const lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\r\n                let varLeadingWhitespace = lineLeadingWhitespace;\r\n                variable.snippet.walk(marker => {\r\n                    if (marker === variable) {\r\n                        return false;\r\n                    }\r\n                    if (marker instanceof Text) {\r\n                        varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\r\n                    }\r\n                    return true;\r\n                });\r\n                const whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\r\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, (m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`);\r\n            }\r\n            return value;\r\n        }\r\n        else if (name === 'TM_CURRENT_LINE') {\r\n            return this._model.getLineContent(this._selection.positionLineNumber);\r\n        }\r\n        else if (name === 'TM_CURRENT_WORD') {\r\n            const info = this._model.getWordAtPosition({\r\n                lineNumber: this._selection.positionLineNumber,\r\n                column: this._selection.positionColumn\r\n            });\r\n            return info && info.word || undefined;\r\n        }\r\n        else if (name === 'TM_LINE_INDEX') {\r\n            return String(this._selection.positionLineNumber - 1);\r\n        }\r\n        else if (name === 'TM_LINE_NUMBER') {\r\n            return String(this._selection.positionLineNumber);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ModelBasedVariableResolver {\r\n    constructor(_labelService, _model) {\r\n        this._labelService = _labelService;\r\n        this._model = _model;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'TM_FILENAME') {\r\n            return path.basename(this._model.uri.fsPath);\r\n        }\r\n        else if (name === 'TM_FILENAME_BASE') {\r\n            const name = path.basename(this._model.uri.fsPath);\r\n            const idx = name.lastIndexOf('.');\r\n            if (idx <= 0) {\r\n                return name;\r\n            }\r\n            else {\r\n                return name.slice(0, idx);\r\n            }\r\n        }\r\n        else if (name === 'TM_DIRECTORY' && this._labelService) {\r\n            if (path.dirname(this._model.uri.fsPath) === '.') {\r\n                return '';\r\n            }\r\n            return this._labelService.getUriLabel(dirname(this._model.uri));\r\n        }\r\n        else if (name === 'TM_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri);\r\n        }\r\n        else if (name === 'RELATIVE_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ClipboardBasedVariableResolver {\r\n    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\r\n        this._readClipboardText = _readClipboardText;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._selectionCount = _selectionCount;\r\n        this._spread = _spread;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (variable.name !== 'CLIPBOARD') {\r\n            return undefined;\r\n        }\r\n        const clipboardText = this._readClipboardText();\r\n        if (!clipboardText) {\r\n            return undefined;\r\n        }\r\n        // `spread` is assigning each cursor a line of the clipboard\r\n        // text whenever there the line count equals the cursor count\r\n        // and when enabled\r\n        if (this._spread) {\r\n            const lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\r\n            if (lines.length === this._selectionCount) {\r\n                return lines[this._selectionIdx];\r\n            }\r\n        }\r\n        return clipboardText;\r\n    }\r\n}\r\nexport class CommentBasedVariableResolver {\r\n    constructor(_model, _selection) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\r\n        const config = LanguageConfigurationRegistry.getComments(langId);\r\n        if (!config) {\r\n            return undefined;\r\n        }\r\n        if (name === 'LINE_COMMENT') {\r\n            return config.lineCommentToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_START') {\r\n            return config.blockCommentStartToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_END') {\r\n            return config.blockCommentEndToken || undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class TimeBasedVariableResolver {\r\n    constructor() {\r\n        this._date = new Date();\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'CURRENT_YEAR') {\r\n            return String(this._date.getFullYear());\r\n        }\r\n        else if (name === 'CURRENT_YEAR_SHORT') {\r\n            return String(this._date.getFullYear()).slice(-2);\r\n        }\r\n        else if (name === 'CURRENT_MONTH') {\r\n            return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DATE') {\r\n            return String(this._date.getDate().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_HOUR') {\r\n            return String(this._date.getHours().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_MINUTE') {\r\n            return String(this._date.getMinutes().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_SECOND') {\r\n            return String(this._date.getSeconds().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME') {\r\n            return TimeBasedVariableResolver.dayNames[this._date.getDay()];\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME') {\r\n            return TimeBasedVariableResolver.monthNames[this._date.getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_SECONDS_UNIX') {\r\n            return String(Math.floor(this._date.getTime() / 1000));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\r\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\r\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\r\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\r\nexport class WorkspaceBasedVariableResolver {\r\n    constructor(_workspaceService) {\r\n        this._workspaceService = _workspaceService;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (!this._workspaceService) {\r\n            return undefined;\r\n        }\r\n        const workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\r\n        if (!workspaceIdentifier) {\r\n            return undefined;\r\n        }\r\n        if (variable.name === 'WORKSPACE_NAME') {\r\n            return this._resolveWorkspaceName(workspaceIdentifier);\r\n        }\r\n        else if (variable.name === 'WORKSPACE_FOLDER') {\r\n            return this._resoveWorkspacePath(workspaceIdentifier);\r\n        }\r\n        return undefined;\r\n    }\r\n    _resolveWorkspaceName(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return path.basename(workspaceIdentifier.uri.path);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        if (filename.endsWith(WORKSPACE_EXTENSION)) {\r\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\r\n        }\r\n        return filename;\r\n    }\r\n    _resoveWorkspacePath(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        let folderpath = workspaceIdentifier.configPath.fsPath;\r\n        if (folderpath.endsWith(filename)) {\r\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\r\n        }\r\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\r\n    }\r\n}\r\nexport class RandomBasedVariableResolver {\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'RANDOM') {\r\n            return Math.random().toString().slice(-6);\r\n        }\r\n        else if (name === 'RANDOM_HEX') {\r\n            return Math.random().toString(16).slice(-6);\r\n        }\r\n        else if (name === 'UUID') {\r\n            return generateUuid();\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onUnexpectedExternalError, canceled, isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { FuzzyScore } from '../../../base/common/filters.js';\r\nimport { isDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { localize } from '../../../nls.js';\r\nexport const Context = {\r\n    Visible: new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\")),\r\n    DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\r\n    MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\r\n    MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\r\n    AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\r\n    HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\r\n    InsertMode: new RawContextKey('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\r\n    CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\r\n};\r\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\r\nexport class CompletionItem {\r\n    constructor(position, completion, container, provider) {\r\n        this.position = position;\r\n        this.completion = completion;\r\n        this.container = container;\r\n        this.provider = provider;\r\n        // validation\r\n        this.isInvalid = false;\r\n        // sorting, filtering\r\n        this.score = FuzzyScore.Default;\r\n        this.distance = 0;\r\n        this.textLabel = typeof completion.label === 'string'\r\n            ? completion.label\r\n            : completion.label.label;\r\n        // ensure lower-variants (perf)\r\n        this.labelLow = this.textLabel.toLowerCase();\r\n        // validate label\r\n        this.isInvalid = !this.textLabel;\r\n        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\r\n        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\r\n        // normalize ranges\r\n        if (Range.isIRange(completion.range)) {\r\n            this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            // validate range\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\r\n        }\r\n        else {\r\n            this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\r\n            // validate ranges\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\r\n                || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\r\n                || completion.range.insert.startColumn !== completion.range.replace.startColumn;\r\n        }\r\n        // create the suggestion resolver\r\n        if (typeof provider.resolveCompletionItem !== 'function') {\r\n            this._resolveCache = Promise.resolve();\r\n            this._isResolved = true;\r\n        }\r\n    }\r\n    // ---- resolving\r\n    get isResolved() {\r\n        return !!this._isResolved;\r\n    }\r\n    resolve(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._resolveCache) {\r\n                const sub = token.onCancellationRequested(() => {\r\n                    this._resolveCache = undefined;\r\n                    this._isResolved = false;\r\n                });\r\n                this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\r\n                    Object.assign(this.completion, value);\r\n                    this._isResolved = true;\r\n                    sub.dispose();\r\n                }, err => {\r\n                    if (isPromiseCanceledError(err)) {\r\n                        // the IPC queue will reject the request with the\r\n                        // cancellation error -> reset cached\r\n                        this._resolveCache = undefined;\r\n                        this._isResolved = false;\r\n                    }\r\n                });\r\n            }\r\n            return this._resolveCache;\r\n        });\r\n    }\r\n}\r\nexport class CompletionOptions {\r\n    constructor(snippetSortOrder = 2 /* Bottom */, kindFilter = new Set(), providerFilter = new Set(), showDeprecated = true) {\r\n        this.snippetSortOrder = snippetSortOrder;\r\n        this.kindFilter = kindFilter;\r\n        this.providerFilter = providerFilter;\r\n        this.showDeprecated = showDeprecated;\r\n    }\r\n}\r\nCompletionOptions.default = new CompletionOptions();\r\nlet _snippetSuggestSupport;\r\nexport function getSnippetSuggestSupport() {\r\n    return _snippetSuggestSupport;\r\n}\r\nexport class CompletionItemModel {\r\n    constructor(items, needsClipboard, durations, disposable) {\r\n        this.items = items;\r\n        this.needsClipboard = needsClipboard;\r\n        this.durations = durations;\r\n        this.disposable = disposable;\r\n    }\r\n}\r\nexport function provideSuggestionItems(model, position, options = CompletionOptions.default, context = { triggerKind: 0 /* Invoke */ }, token = CancellationToken.None) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const sw = new StopWatch(true);\r\n        position = position.clone();\r\n        const word = model.getWordAtPosition(position);\r\n        const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\r\n        const defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\r\n        const result = [];\r\n        const disposables = new DisposableStore();\r\n        const durations = [];\r\n        let needsClipboard = false;\r\n        const onCompletionList = (provider, container, sw) => {\r\n            var _a, _b, _c;\r\n            if (!container) {\r\n                return;\r\n            }\r\n            for (let suggestion of container.suggestions) {\r\n                if (!options.kindFilter.has(suggestion.kind)) {\r\n                    // skip if not showing deprecated suggestions\r\n                    if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* Deprecated */))) {\r\n                        continue;\r\n                    }\r\n                    // fill in default range when missing\r\n                    if (!suggestion.range) {\r\n                        suggestion.range = defaultRange;\r\n                    }\r\n                    // fill in default sortText when missing\r\n                    if (!suggestion.sortText) {\r\n                        suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\r\n                    }\r\n                    if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* InsertAsSnippet */) {\r\n                        needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\r\n                    }\r\n                    result.push(new CompletionItem(position, suggestion, container, provider));\r\n                }\r\n            }\r\n            if (isDisposable(container)) {\r\n                disposables.add(container);\r\n            }\r\n            durations.push({\r\n                providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unkown_provider', elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1, elapsedOverall: sw.elapsed()\r\n            });\r\n        };\r\n        // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\r\n        // do so - no snippet filter, no special-providers-only request\r\n        const snippetCompletions = (() => __awaiter(this, void 0, void 0, function* () {\r\n            if (!_snippetSuggestSupport || options.kindFilter.has(27 /* Snippet */)) {\r\n                return;\r\n            }\r\n            if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\r\n                return;\r\n            }\r\n            const sw = new StopWatch(true);\r\n            const list = yield _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\r\n            onCompletionList(_snippetSuggestSupport, list, sw);\r\n        }))();\r\n        // add suggestions from contributed providers - providers are ordered in groups of\r\n        // equal score and once a group produces a result the process stops\r\n        // get provider groups, always add snippet suggestion provider\r\n        for (let providerGroup of modes.CompletionProviderRegistry.orderedGroups(model)) {\r\n            // for each support in the group ask for suggestions\r\n            let lenBefore = result.length;\r\n            yield Promise.all(providerGroup.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n                if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\r\n                    return;\r\n                }\r\n                try {\r\n                    const sw = new StopWatch(true);\r\n                    const list = yield provider.provideCompletionItems(model, position, context, token);\r\n                    onCompletionList(provider, list, sw);\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedExternalError(err);\r\n                }\r\n            })));\r\n            if (lenBefore !== result.length || token.isCancellationRequested) {\r\n                break;\r\n            }\r\n        }\r\n        yield snippetCompletions;\r\n        if (token.isCancellationRequested) {\r\n            disposables.dispose();\r\n            return Promise.reject(canceled());\r\n        }\r\n        return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, { entries: durations, elapsed: sw.elapsed() }, disposables);\r\n    });\r\n}\r\nfunction defaultComparator(a, b) {\r\n    // check with 'sortText'\r\n    if (a.sortTextLow && b.sortTextLow) {\r\n        if (a.sortTextLow < b.sortTextLow) {\r\n            return -1;\r\n        }\r\n        else if (a.sortTextLow > b.sortTextLow) {\r\n            return 1;\r\n        }\r\n    }\r\n    // check with 'label'\r\n    if (a.completion.label < b.completion.label) {\r\n        return -1;\r\n    }\r\n    else if (a.completion.label > b.completion.label) {\r\n        return 1;\r\n    }\r\n    // check with 'type'\r\n    return a.completion.kind - b.completion.kind;\r\n}\r\nfunction snippetUpComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* Snippet */) {\r\n            return -1;\r\n        }\r\n        else if (b.completion.kind === 27 /* Snippet */) {\r\n            return 1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nfunction snippetDownComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* Snippet */) {\r\n            return 1;\r\n        }\r\n        else if (b.completion.kind === 27 /* Snippet */) {\r\n            return -1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nconst _snippetComparators = new Map();\r\n_snippetComparators.set(0 /* Top */, snippetUpComparator);\r\n_snippetComparators.set(2 /* Bottom */, snippetDownComparator);\r\n_snippetComparators.set(1 /* Inline */, defaultComparator);\r\nexport function getSuggestionComparator(snippetConfig) {\r\n    return _snippetComparators.get(snippetConfig);\r\n}\r\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, position, triggerCharacter, maxItemsToResolve] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\r\n    assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const result = {\r\n            incomplete: false,\r\n            suggestions: []\r\n        };\r\n        const resolving = [];\r\n        const completions = yield provideSuggestionItems(ref.object.textEditorModel, Position.lift(position), undefined, { triggerCharacter, triggerKind: triggerCharacter ? 1 /* TriggerCharacter */ : 0 /* Invoke */ });\r\n        for (const item of completions.items) {\r\n            if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\r\n                resolving.push(item.resolve(CancellationToken.None));\r\n            }\r\n            result.incomplete = result.incomplete || item.container.incomplete;\r\n            result.suggestions.push(item.completion);\r\n        }\r\n        try {\r\n            yield Promise.all(resolving);\r\n            return result;\r\n        }\r\n        finally {\r\n            setTimeout(() => completions.disposable.dispose(), 100);\r\n        }\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\nconst _provider = new class {\r\n    constructor() {\r\n        this.onlyOnceSuggestions = [];\r\n    }\r\n    provideCompletionItems() {\r\n        let suggestions = this.onlyOnceSuggestions.slice(0);\r\n        let result = { suggestions };\r\n        this.onlyOnceSuggestions.length = 0;\r\n        return result;\r\n    }\r\n};\r\nmodes.CompletionProviderRegistry.register('*', _provider);\r\nexport function showSimpleSuggestions(editor, suggestions) {\r\n    setTimeout(() => {\r\n        _provider.onlyOnceSuggestions.push(...suggestions);\r\n        editor.getContribution('editor.contrib.suggestController').triggerSuggest(new Set().add(_provider));\r\n    }, 0);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nimport { localize } from '../../../nls.js';\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nlet SnippetController2 = class SnippetController2 {\r\n    constructor(_editor, _logService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SnippetController2.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._snippetListener.dispose();\r\n    }\r\n    insert(template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : Object.assign(Object.assign({}, _defaultOptions), opts));\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    }\r\n    _doInsert(template, opts) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\r\n    }\r\n    _updateState() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    }\r\n    _handleChoice() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        const { choice } = this._session;\r\n        if (!choice) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== choice) {\r\n            this._currentChoice = choice;\r\n            this._editor.setSelections(this._editor.getSelections()\r\n                .map(s => Selection.fromPositions(s.getStartPosition())));\r\n            const [first] = choice.options;\r\n            showSimpleSuggestions(this._editor, choice.options.map((option, i) => {\r\n                // let before = choice.options.slice(0, i);\r\n                // let after = choice.options.slice(i);\r\n                return {\r\n                    kind: 13 /* Value */,\r\n                    label: option.value,\r\n                    insertText: option.value,\r\n                    // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\r\n                    // snippetType: 'textmate',\r\n                    sortText: 'a'.repeat(i + 1),\r\n                    range: Range.fromPositions(this._editor.getPosition(), this._editor.getPosition().delta(0, first.value.length))\r\n                };\r\n            }));\r\n        }\r\n    }\r\n    finish() {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    }\r\n    cancel(resetSelection = false) {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    }\r\n    prev() {\r\n        if (this._session) {\r\n            this._session.prev();\r\n        }\r\n        this._updateState();\r\n    }\r\n    next() {\r\n        if (this._session) {\r\n            this._session.next();\r\n        }\r\n        this._updateState();\r\n    }\r\n    isInSnippet() {\r\n        return Boolean(this._inSnippet.get());\r\n    }\r\n};\r\nSnippetController2.ID = 'snippetController2';\r\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\r\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\r\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\r\nSnippetController2 = __decorate([\r\n    __param(1, ILogService),\r\n    __param(2, IContextKeyService)\r\n], SnippetController2);\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\r\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: ctrl => ctrl.next(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: ctrl => ctrl.prev(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.cancel(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.finish(),\r\n    // kbOpts: {\r\n    // \tweight: KeybindingWeight.EditorContrib + 30,\r\n    // \tkbExpr: EditorContextKeys.textFocus,\r\n    // \tprimary: KeyCode.Enter,\r\n    // }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { LRUCache, TernarySearchTree } from '../../../base/common/map.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\r\nimport { completionKindFromString } from '../../common/modes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nexport class Memory {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        let topScore = items[0].score[0];\r\n        for (let i = 0; i < items.length; i++) {\r\n            const { score, completion: suggestion } = items[i];\r\n            if (score[0] !== topScore) {\r\n                // stop when leaving the group of top matches\r\n                break;\r\n            }\r\n            if (suggestion.preselect) {\r\n                // stop when seeing an auto-select-item\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport class NoMemory extends Memory {\r\n    constructor() {\r\n        super('first');\r\n    }\r\n    memorize(model, pos, item) {\r\n        // no-op\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    fromJSON() {\r\n        //\r\n    }\r\n}\r\nexport class LRUMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsed');\r\n        this._cache = new LRUCache(300, 0.66);\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const key = `${model.getLanguageIdentifier().language}/${item.textLabel}`;\r\n        this._cache.set(key, {\r\n            touch: this._seq++,\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\r\n        if (/\\s$/.test(lineSuffix)) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        let topScore = items[0].score[0];\r\n        let indexPreselect = -1;\r\n        let indexRecency = -1;\r\n        let seq = -1;\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].score[0] !== topScore) {\r\n                // consider only top items\r\n                break;\r\n            }\r\n            const key = `${model.getLanguageIdentifier().language}/${items[i].textLabel}`;\r\n            const item = this._cache.peek(key);\r\n            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\r\n                seq = item.touch;\r\n                indexRecency = i;\r\n            }\r\n            if (items[i].completion.preselect && indexPreselect === -1) {\r\n                // stop when seeing an auto-select-item\r\n                return indexPreselect = i;\r\n            }\r\n        }\r\n        if (indexRecency !== -1) {\r\n            return indexRecency;\r\n        }\r\n        else if (indexPreselect !== -1) {\r\n            return indexPreselect;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return this._cache.toJSON();\r\n    }\r\n    fromJSON(data) {\r\n        this._cache.clear();\r\n        let seq = 0;\r\n        for (const [key, value] of data) {\r\n            value.touch = seq;\r\n            value.type = typeof value.type === 'number' ? value.type : completionKindFromString(value.type);\r\n            this._cache.set(key, value);\r\n        }\r\n        this._seq = this._cache.size;\r\n    }\r\n}\r\nexport class PrefixMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsedByPrefix');\r\n        this._trie = TernarySearchTree.forStrings();\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const { word } = model.getWordUntilPosition(pos);\r\n        const key = `${model.getLanguageIdentifier().language}/${word}`;\r\n        this._trie.set(key, {\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText,\r\n            touch: this._seq++\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        let { word } = model.getWordUntilPosition(pos);\r\n        if (!word) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        let key = `${model.getLanguageIdentifier().language}/${word}`;\r\n        let item = this._trie.get(key);\r\n        if (!item) {\r\n            item = this._trie.findSubstr(key);\r\n        }\r\n        if (item) {\r\n            for (let i = 0; i < items.length; i++) {\r\n                let { kind, insertText } = items[i].completion;\r\n                if (kind === item.type && insertText === item.insertText) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return super.select(model, pos, items);\r\n    }\r\n    toJSON() {\r\n        let entries = [];\r\n        this._trie.forEach((value, key) => entries.push([key, value]));\r\n        // sort by last recently used (touch), then\r\n        // take the top 200 item and normalize their\r\n        // touch\r\n        entries\r\n            .sort((a, b) => -(a[1].touch - b[1].touch))\r\n            .forEach((value, i) => value[1].touch = i);\r\n        return entries.slice(0, 200);\r\n    }\r\n    fromJSON(data) {\r\n        this._trie.clear();\r\n        if (data.length > 0) {\r\n            this._seq = data[0][1].touch + 1;\r\n            for (const [key, value] of data) {\r\n                value.type = typeof value.type === 'number' ? value.type : completionKindFromString(value.type);\r\n                this._trie.set(key, value);\r\n            }\r\n        }\r\n    }\r\n}\r\nlet SuggestMemoryService = class SuggestMemoryService {\r\n    constructor(_storageService, _modeService, _configService) {\r\n        this._storageService = _storageService;\r\n        this._modeService = _modeService;\r\n        this._configService = _configService;\r\n        this._disposables = new DisposableStore();\r\n        this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\r\n        this._disposables.add(_storageService.onWillSaveState(e => {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                this._saveState();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._persistSoon.dispose();\r\n    }\r\n    memorize(model, pos, item) {\r\n        this._withStrategy(model, pos).memorize(model, pos, item);\r\n        this._persistSoon.schedule();\r\n    }\r\n    select(model, pos, items) {\r\n        return this._withStrategy(model, pos).select(model, pos, items);\r\n    }\r\n    _withStrategy(model, pos) {\r\n        var _a, _b;\r\n        const mode = this._configService.getValue('editor.suggestSelection', {\r\n            overrideIdentifier: (_a = this._modeService.getLanguageIdentifier(model.getLanguageIdAtPosition(pos.lineNumber, pos.column))) === null || _a === void 0 ? void 0 : _a.language,\r\n            resource: model.uri\r\n        });\r\n        if (((_b = this._strategy) === null || _b === void 0 ? void 0 : _b.name) !== mode) {\r\n            this._saveState();\r\n            const ctor = SuggestMemoryService._strategyCtors.get(mode) || NoMemory;\r\n            this._strategy = new ctor();\r\n            try {\r\n                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n                const scope = share ? 0 /* GLOBAL */ : 1 /* WORKSPACE */;\r\n                const raw = this._storageService.get(`${SuggestMemoryService._storagePrefix}/${mode}`, scope);\r\n                if (raw) {\r\n                    this._strategy.fromJSON(JSON.parse(raw));\r\n                }\r\n            }\r\n            catch (e) {\r\n                // things can go wrong with JSON...\r\n            }\r\n        }\r\n        return this._strategy;\r\n    }\r\n    _saveState() {\r\n        if (this._strategy) {\r\n            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n            const scope = share ? 0 /* GLOBAL */ : 1 /* WORKSPACE */;\r\n            const raw = JSON.stringify(this._strategy);\r\n            this._storageService.store(`${SuggestMemoryService._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* MACHINE */);\r\n        }\r\n    }\r\n};\r\nSuggestMemoryService._strategyCtors = new Map([\r\n    ['recentlyUsedByPrefix', PrefixMemory],\r\n    ['recentlyUsed', LRUMemory],\r\n    ['first', NoMemory]\r\n]);\r\nSuggestMemoryService._storagePrefix = 'suggest/memories';\r\nSuggestMemoryService = __decorate([\r\n    __param(0, IStorageService),\r\n    __param(1, IModeService),\r\n    __param(2, IConfigurationService)\r\n], SuggestMemoryService);\r\nexport { SuggestMemoryService };\r\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\r\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, true);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nlet SuggestAlternatives = class SuggestAlternatives {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._index = 0;\r\n        this._ckOtherSuggestions = SuggestAlternatives.OtherSuggestions.bindTo(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        var _a;\r\n        this._ckOtherSuggestions.reset();\r\n        (_a = this._listener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._model = undefined;\r\n        this._acceptNext = undefined;\r\n        this._ignore = false;\r\n    }\r\n    set({ model, index }, acceptNext) {\r\n        // no suggestions -> nothing to do\r\n        if (model.items.length === 0) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        // no alternative suggestions -> nothing to do\r\n        let nextIndex = SuggestAlternatives._moveIndex(true, model, index);\r\n        if (nextIndex === index) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        this._acceptNext = acceptNext;\r\n        this._model = model;\r\n        this._index = index;\r\n        this._listener = this._editor.onDidChangeCursorPosition(() => {\r\n            if (!this._ignore) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this._ckOtherSuggestions.set(true);\r\n    }\r\n    static _moveIndex(fwd, model, index) {\r\n        let newIndex = index;\r\n        while (true) {\r\n            newIndex = (newIndex + model.items.length + (fwd ? +1 : -1)) % model.items.length;\r\n            if (newIndex === index) {\r\n                break;\r\n            }\r\n            if (!model.items[newIndex].completion.additionalTextEdits) {\r\n                break;\r\n            }\r\n        }\r\n        return newIndex;\r\n    }\r\n    next() {\r\n        this._move(true);\r\n    }\r\n    prev() {\r\n        this._move(false);\r\n    }\r\n    _move(fwd) {\r\n        if (!this._model) {\r\n            // nothing to reason about\r\n            return;\r\n        }\r\n        try {\r\n            this._ignore = true;\r\n            this._index = SuggestAlternatives._moveIndex(fwd, this._model, this._index);\r\n            this._acceptNext({ index: this._index, item: this._model.items[this._index], model: this._model });\r\n        }\r\n        finally {\r\n            this._ignore = false;\r\n        }\r\n    }\r\n};\r\nSuggestAlternatives.OtherSuggestions = new RawContextKey('hasOtherSuggestions', false);\r\nSuggestAlternatives = __decorate([\r\n    __param(1, IContextKeyService)\r\n], SuggestAlternatives);\r\nexport { SuggestAlternatives };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\r\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\r\nimport { quickSelect } from '../../../base/common/arrays.js';\r\nexport class LineContext {\r\n    constructor(leadingLineContent, characterCountDelta) {\r\n        this.leadingLineContent = leadingLineContent;\r\n        this.characterCountDelta = characterCountDelta;\r\n    }\r\n}\r\n/**\r\n * Sorted, filtered completion view model\r\n * */\r\nexport class CompletionModel {\r\n    constructor(items, column, lineContext, wordDistance, options, snippetSuggestions, clipboardText) {\r\n        this.clipboardText = clipboardText;\r\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\r\n        this._items = items;\r\n        this._column = column;\r\n        this._wordDistance = wordDistance;\r\n        this._options = options;\r\n        this._refilterKind = 1 /* All */;\r\n        this._lineContext = lineContext;\r\n        if (snippetSuggestions === 'top') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\r\n        }\r\n        else if (snippetSuggestions === 'bottom') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\r\n        }\r\n    }\r\n    get lineContext() {\r\n        return this._lineContext;\r\n    }\r\n    set lineContext(value) {\r\n        if (this._lineContext.leadingLineContent !== value.leadingLineContent\r\n            || this._lineContext.characterCountDelta !== value.characterCountDelta) {\r\n            this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */ : 1 /* All */;\r\n            this._lineContext = value;\r\n        }\r\n    }\r\n    get items() {\r\n        this._ensureCachedState();\r\n        return this._filteredItems;\r\n    }\r\n    get allProvider() {\r\n        this._ensureCachedState();\r\n        return this._providerInfo.keys();\r\n    }\r\n    get incomplete() {\r\n        this._ensureCachedState();\r\n        const result = new Set();\r\n        for (let [provider, incomplete] of this._providerInfo) {\r\n            if (incomplete) {\r\n                result.add(provider);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    adopt(except) {\r\n        let res = [];\r\n        for (let i = 0; i < this._items.length;) {\r\n            if (!except.has(this._items[i].provider)) {\r\n                res.push(this._items[i]);\r\n                // unordered removed\r\n                this._items[i] = this._items[this._items.length - 1];\r\n                this._items.pop();\r\n            }\r\n            else {\r\n                // continue with next item\r\n                i++;\r\n            }\r\n        }\r\n        this._refilterKind = 1 /* All */;\r\n        return res;\r\n    }\r\n    get stats() {\r\n        this._ensureCachedState();\r\n        return this._stats;\r\n    }\r\n    _ensureCachedState() {\r\n        if (this._refilterKind !== 0 /* Nothing */) {\r\n            this._createCachedState();\r\n        }\r\n    }\r\n    _createCachedState() {\r\n        this._providerInfo = new Map();\r\n        const labelLengths = [];\r\n        const { leadingLineContent, characterCountDelta } = this._lineContext;\r\n        let word = '';\r\n        let wordLow = '';\r\n        // incrementally filter less\r\n        const source = this._refilterKind === 1 /* All */ ? this._items : this._filteredItems;\r\n        const target = [];\r\n        // picks a score function based on the number of\r\n        // items that we have to score/filter and based on the\r\n        // user-configuration\r\n        const scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\r\n        for (let i = 0; i < source.length; i++) {\r\n            const item = source[i];\r\n            if (item.isInvalid) {\r\n                continue; // SKIP invalid items\r\n            }\r\n            // collect all support, know if their result is incomplete\r\n            this._providerInfo.set(item.provider, Boolean(item.container.incomplete));\r\n            // 'word' is that remainder of the current line that we\r\n            // filter and score against. In theory each suggestion uses a\r\n            // different word, but in practice not - that's why we cache\r\n            const overwriteBefore = item.position.column - item.editStart.column;\r\n            const wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\r\n            if (word.length !== wordLen) {\r\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\r\n                wordLow = word.toLowerCase();\r\n            }\r\n            // remember the word against which this item was\r\n            // scored\r\n            item.word = word;\r\n            if (wordLen === 0) {\r\n                // when there is nothing to score against, don't\r\n                // event try to do. Use a const rank and rely on\r\n                // the fallback-sort using the initial sort order.\r\n                // use a score of `-100` because that is out of the\r\n                // bound of values `fuzzyScore` will return\r\n                item.score = FuzzyScore.Default;\r\n            }\r\n            else {\r\n                // skip word characters that are whitespace until\r\n                // we have hit the replace range (overwriteBefore)\r\n                let wordPos = 0;\r\n                while (wordPos < overwriteBefore) {\r\n                    const ch = word.charCodeAt(wordPos);\r\n                    if (ch === 32 /* Space */ || ch === 9 /* Tab */) {\r\n                        wordPos += 1;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                if (wordPos >= wordLen) {\r\n                    // the wordPos at which scoring starts is the whole word\r\n                    // and therefore the same rules as not having a word apply\r\n                    item.score = FuzzyScore.Default;\r\n                }\r\n                else if (typeof item.completion.filterText === 'string') {\r\n                    // when there is a `filterText` it must match the `word`.\r\n                    // if it matches we check with the label to compute highlights\r\n                    // and if that doesn't yield a result we have no highlights,\r\n                    // despite having the match\r\n                    let match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    if (compareIgnoreCase(item.completion.filterText, item.textLabel) === 0) {\r\n                        // filterText and label are actually the same -> use good highlights\r\n                        item.score = match;\r\n                    }\r\n                    else {\r\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\r\n                        // of the filterText-match\r\n                        item.score = anyScore(word, wordLow, wordPos, item.textLabel, item.labelLow, 0);\r\n                        item.score[0] = match[0]; // use score from filterText\r\n                    }\r\n                }\r\n                else {\r\n                    // by default match `word` against the `label`\r\n                    let match = scoreFn(word, wordLow, wordPos, item.textLabel, item.labelLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    item.score = match;\r\n                }\r\n            }\r\n            item.idx = i;\r\n            item.distance = this._wordDistance.distance(item.position, item.completion);\r\n            target.push(item);\r\n            // update stats\r\n            labelLengths.push(item.textLabel.length);\r\n        }\r\n        this._filteredItems = target.sort(this._snippetCompareFn);\r\n        this._refilterKind = 0 /* Nothing */;\r\n        this._stats = {\r\n            pLabelLen: labelLengths.length ?\r\n                quickSelect(labelLengths.length - .85, labelLengths, (a, b) => a - b)\r\n                : 0\r\n        };\r\n    }\r\n    static _compareCompletionItems(a, b) {\r\n        if (a.score[0] > b.score[0]) {\r\n            return -1;\r\n        }\r\n        else if (a.score[0] < b.score[0]) {\r\n            return 1;\r\n        }\r\n        else if (a.distance < b.distance) {\r\n            return -1;\r\n        }\r\n        else if (a.distance > b.distance) {\r\n            return 1;\r\n        }\r\n        else if (a.idx < b.idx) {\r\n            return -1;\r\n        }\r\n        else if (a.idx > b.idx) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    static _compareCompletionItemsSnippetsDown(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* Snippet */) {\r\n                return 1;\r\n            }\r\n            else if (b.completion.kind === 27 /* Snippet */) {\r\n                return -1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n    static _compareCompletionItemsSnippetsUp(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* Snippet */) {\r\n                return -1;\r\n            }\r\n            else if (b.completion.kind === 27 /* Snippet */) {\r\n                return 1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nexport class BracketSelectionRangeProvider {\r\n    provideSelectionRanges(model, positions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = [];\r\n            for (const position of positions) {\r\n                const bucket = [];\r\n                result.push(bucket);\r\n                const ranges = new Map();\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findNextBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (bracket.isOpen) {\r\n                // wait for closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // process closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (!list) {\r\n                        list = new LinkedList();\r\n                        ranges.set(key, list);\r\n                    }\r\n                    list.push(bracket.range);\r\n                }\r\n            }\r\n            pos = bracket.range.getEndPosition();\r\n        }\r\n    }\r\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findPrevBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (!bracket.isOpen) {\r\n                // wait for opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (list) {\r\n                        let closing = list.shift();\r\n                        if (list.size === 0) {\r\n                            ranges.delete(key);\r\n                        }\r\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\r\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\r\n                        bucket.push({ range: innerBracket });\r\n                        bucket.push({ range: outerBracket });\r\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\r\n                    }\r\n                }\r\n            }\r\n            pos = bracket.range.getStartPosition();\r\n        }\r\n    }\r\n    static _addBracketLeading(model, bracket, bucket) {\r\n        if (bracket.startLineNumber === bracket.endLineNumber) {\r\n            return;\r\n        }\r\n        // xxxxxxxx {\r\n        //\r\n        // }\r\n        const startLine = bracket.startLineNumber;\r\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\r\n        if (column !== 0 && column !== bracket.startColumn) {\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\r\n        }\r\n        // xxxxxxxx\r\n        // {\r\n        //\r\n        // }\r\n        const aboveLine = startLine - 1;\r\n        if (aboveLine > 0) {\r\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\r\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\r\n            }\r\n        }\r\n    }\r\n}\r\nBracketSelectionRangeProvider._maxDuration = 30;\r\nBracketSelectionRangeProvider._maxRounds = 2;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { binarySearch, isFalsyOrEmpty } from '../../../base/common/arrays.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { BracketSelectionRangeProvider } from '../smartSelect/bracketSelections.js';\r\nexport class WordDistance {\r\n    static create(service, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.getOption(105 /* suggest */).localityBonus) {\r\n                return WordDistance.None;\r\n            }\r\n            if (!editor.hasModel()) {\r\n                return WordDistance.None;\r\n            }\r\n            const model = editor.getModel();\r\n            const position = editor.getPosition();\r\n            if (!service.canComputeWordRanges(model.uri)) {\r\n                return WordDistance.None;\r\n            }\r\n            const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\r\n            if (ranges.length === 0) {\r\n                return WordDistance.None;\r\n            }\r\n            const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\r\n            if (!wordRanges) {\r\n                return WordDistance.None;\r\n            }\r\n            // remove current word\r\n            const wordUntilPos = model.getWordUntilPosition(position);\r\n            delete wordRanges[wordUntilPos.word];\r\n            return new class extends WordDistance {\r\n                distance(anchor, item) {\r\n                    if (!position.equals(editor.getPosition())) {\r\n                        return 0;\r\n                    }\r\n                    if (item.kind === 17 /* Keyword */) {\r\n                        return 2 << 20;\r\n                    }\r\n                    let word = typeof item.label === 'string' ? item.label : item.label.label;\r\n                    let wordLines = wordRanges[word];\r\n                    if (isFalsyOrEmpty(wordLines)) {\r\n                        return 2 << 20;\r\n                    }\r\n                    let idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\r\n                    let bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\r\n                    let blockDistance = ranges.length;\r\n                    for (const range of ranges) {\r\n                        if (!Range.containsRange(range.range, bestWordRange)) {\r\n                            break;\r\n                        }\r\n                        blockDistance -= 1;\r\n                    }\r\n                    return blockDistance;\r\n                }\r\n            };\r\n        });\r\n    }\r\n}\r\nWordDistance.None = new class extends WordDistance {\r\n    distance() { return 0; }\r\n};\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { CompletionProviderRegistry } from '../../common/modes.js';\r\nimport { CompletionModel } from './completionModel.js';\r\nimport { getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, CompletionOptions } from './suggest.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { WordDistance } from './wordDistance.js';\r\nimport { isLowSurrogate, isHighSurrogate, getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nexport class LineContext {\r\n    constructor(model, position, auto, shy) {\r\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n        this.leadingWord = model.getWordUntilPosition(position);\r\n        this.lineNumber = position.lineNumber;\r\n        this.column = position.column;\r\n        this.auto = auto;\r\n        this.shy = shy;\r\n    }\r\n    static shouldAutoTrigger(editor) {\r\n        if (!editor.hasModel()) {\r\n            return false;\r\n        }\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        model.tokenizeIfCheap(pos.lineNumber);\r\n        const word = model.getWordAtPosition(pos);\r\n        if (!word) {\r\n            return false;\r\n        }\r\n        if (word.endColumn !== pos.column) {\r\n            return false;\r\n        }\r\n        if (!isNaN(Number(word.word))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction shouldPreventQuickSuggest(contextKeyService, configurationService) {\r\n    return (Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))\r\n        && !Boolean(configurationService.getValue('editor.inlineSuggest.allowQuickSuggestions')));\r\n}\r\nfunction shouldPreventSuggestOnTriggerCharacters(contextKeyService, configurationService) {\r\n    return (Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))\r\n        && !Boolean(configurationService.getValue('editor.inlineSuggest.allowSuggestOnTriggerCharacters')));\r\n}\r\nlet SuggestModel = class SuggestModel {\r\n    constructor(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._editorWorkerService = _editorWorkerService;\r\n        this._clipboardService = _clipboardService;\r\n        this._telemetryService = _telemetryService;\r\n        this._logService = _logService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._configurationService = _configurationService;\r\n        this._toDispose = new DisposableStore();\r\n        this._quickSuggestDelay = 10;\r\n        this._triggerCharacterListener = new DisposableStore();\r\n        this._triggerQuickSuggest = new TimeoutTimer();\r\n        this._state = 0 /* Idle */;\r\n        this._completionDisposables = new DisposableStore();\r\n        this._onDidCancel = new Emitter();\r\n        this._onDidTrigger = new Emitter();\r\n        this._onDidSuggest = new Emitter();\r\n        this.onDidCancel = this._onDidCancel.event;\r\n        this.onDidTrigger = this._onDidTrigger.event;\r\n        this.onDidSuggest = this._onDidSuggest.event;\r\n        this._telemetryGate = 0;\r\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\r\n        // wire up various listeners\r\n        this._toDispose.add(this._editor.onDidChangeModel(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeConfiguration(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateQuickSuggest();\r\n        }));\r\n        this._toDispose.add(CompletionProviderRegistry.onDidChange(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateActiveSuggestSession();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\r\n            this._onCursorChange(e);\r\n        }));\r\n        let editorIsComposing = false;\r\n        this._toDispose.add(this._editor.onDidCompositionStart(() => {\r\n            editorIsComposing = true;\r\n        }));\r\n        this._toDispose.add(this._editor.onDidCompositionEnd(() => {\r\n            // refilter when composition ends\r\n            editorIsComposing = false;\r\n            this._refilterCompletionItems();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            // only filter completions when the editor isn't\r\n            // composing a character, e.g. \u00A8 + u makes \u00FC but just\r\n            // \u00A8 cannot be used for filtering\r\n            if (!editorIsComposing) {\r\n                this._refilterCompletionItems();\r\n            }\r\n        }));\r\n        this._updateTriggerCharacters();\r\n        this._updateQuickSuggest();\r\n    }\r\n    dispose() {\r\n        dispose(this._triggerCharacterListener);\r\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\r\n        this._toDispose.dispose();\r\n        this._completionDisposables.dispose();\r\n        this.cancel();\r\n    }\r\n    // --- handle configuration & precondition changes\r\n    _updateQuickSuggest() {\r\n        this._quickSuggestDelay = this._editor.getOption(78 /* quickSuggestionsDelay */);\r\n        if (isNaN(this._quickSuggestDelay) || (!this._quickSuggestDelay && this._quickSuggestDelay !== 0) || this._quickSuggestDelay < 0) {\r\n            this._quickSuggestDelay = 10;\r\n        }\r\n    }\r\n    _updateTriggerCharacters() {\r\n        this._triggerCharacterListener.clear();\r\n        if (this._editor.getOption(79 /* readOnly */)\r\n            || !this._editor.hasModel()\r\n            || !this._editor.getOption(108 /* suggestOnTriggerCharacters */)) {\r\n            return;\r\n        }\r\n        const supportsByTriggerCharacter = new Map();\r\n        for (const support of CompletionProviderRegistry.all(this._editor.getModel())) {\r\n            for (const ch of support.triggerCharacters || []) {\r\n                let set = supportsByTriggerCharacter.get(ch);\r\n                if (!set) {\r\n                    set = new Set();\r\n                    set.add(getSnippetSuggestSupport());\r\n                    supportsByTriggerCharacter.set(ch, set);\r\n                }\r\n                set.add(support);\r\n            }\r\n        }\r\n        const checkTriggerCharacter = (text) => {\r\n            if (shouldPreventSuggestOnTriggerCharacters(this._contextKeyService, this._configurationService)) {\r\n                return;\r\n            }\r\n            if (LineContext.shouldAutoTrigger(this._editor)) {\r\n                // don't trigger by trigger characters when this is a case for quick suggest\r\n                return;\r\n            }\r\n            if (!text) {\r\n                // came here from the compositionEnd-event\r\n                const position = this._editor.getPosition();\r\n                const model = this._editor.getModel();\r\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n            }\r\n            let lastChar = '';\r\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\r\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\r\n                    lastChar = text.substr(text.length - 2);\r\n                }\r\n            }\r\n            else {\r\n                lastChar = text.charAt(text.length - 1);\r\n            }\r\n            const supports = supportsByTriggerCharacter.get(lastChar);\r\n            if (supports) {\r\n                // keep existing items that where not computed by the\r\n                // supports/providers that want to trigger now\r\n                const existing = this._completionModel\r\n                    ? { items: this._completionModel.adopt(supports), clipboardText: this._completionModel.clipboardText }\r\n                    : undefined;\r\n                this.trigger({ auto: true, shy: false, triggerCharacter: lastChar }, Boolean(this._completionModel), supports, existing);\r\n            }\r\n        };\r\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\r\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\r\n    }\r\n    // --- trigger/retrigger/cancel suggest\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    cancel(retrigger = false) {\r\n        var _a;\r\n        if (this._state !== 0 /* Idle */) {\r\n            this._triggerQuickSuggest.cancel();\r\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._requestToken = undefined;\r\n            this._state = 0 /* Idle */;\r\n            this._completionModel = undefined;\r\n            this._context = undefined;\r\n            this._onDidCancel.fire({ retrigger });\r\n        }\r\n    }\r\n    clear() {\r\n        this._completionDisposables.clear();\r\n    }\r\n    _updateActiveSuggestSession() {\r\n        if (this._state !== 0 /* Idle */) {\r\n            if (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\r\n                this.cancel();\r\n            }\r\n            else {\r\n                this.trigger({ auto: this._state === 2 /* Auto */, shy: false }, true);\r\n            }\r\n        }\r\n    }\r\n    _onCursorChange(e) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const prevSelection = this._currentSelection;\r\n        this._currentSelection = this._editor.getSelection();\r\n        if (!e.selection.isEmpty()\r\n            || (e.reason !== 0 /* NotSet */ && e.reason !== 3 /* Explicit */)\r\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\r\n            // Early exit if nothing needs to be done!\r\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (!CompletionProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        if (this._state === 0 /* Idle */ && e.reason === 0 /* NotSet */) {\r\n            if (this._editor.getOption(77 /* quickSuggestions */) === false) {\r\n                // not enabled\r\n                return;\r\n            }\r\n            if (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\r\n                // cursor didn't move RIGHT\r\n                return;\r\n            }\r\n            if (this._editor.getOption(105 /* suggest */).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\r\n                // no quick suggestion when in snippet mode\r\n                return;\r\n            }\r\n            this.cancel();\r\n            this._triggerQuickSuggest.cancelAndSet(() => {\r\n                if (this._state !== 0 /* Idle */) {\r\n                    return;\r\n                }\r\n                if (!LineContext.shouldAutoTrigger(this._editor)) {\r\n                    return;\r\n                }\r\n                if (!this._editor.hasModel()) {\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const pos = this._editor.getPosition();\r\n                // validate enabled now\r\n                const quickSuggestions = this._editor.getOption(77 /* quickSuggestions */);\r\n                if (quickSuggestions === false) {\r\n                    return;\r\n                }\r\n                else if (quickSuggestions === true) {\r\n                    // all good\r\n                }\r\n                else {\r\n                    // Check the type of the token that triggered this\r\n                    model.tokenizeIfCheap(pos.lineNumber);\r\n                    const lineTokens = model.getLineTokens(pos.lineNumber);\r\n                    const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\r\n                    const inValidScope = quickSuggestions.other && tokenType === 0 /* Other */\r\n                        || quickSuggestions.comments && tokenType === 1 /* Comment */\r\n                        || quickSuggestions.strings && tokenType === 2 /* String */;\r\n                    if (!inValidScope) {\r\n                        return;\r\n                    }\r\n                }\r\n                if (shouldPreventQuickSuggest(this._contextKeyService, this._configurationService)) {\r\n                    // do not trigger quick suggestions if inline suggestions are shown\r\n                    return;\r\n                }\r\n                // we made it till here -> trigger now\r\n                this.trigger({ auto: true, shy: false });\r\n            }, this._quickSuggestDelay);\r\n        }\r\n        else if (this._state !== 0 /* Idle */ && e.reason === 3 /* Explicit */) {\r\n            // suggest is active and something like cursor keys are used to move\r\n            // the cursor. this means we can refilter at the new position\r\n            this._refilterCompletionItems();\r\n        }\r\n    }\r\n    _refilterCompletionItems() {\r\n        // Re-filter suggestions. This MUST run async because filtering/scoring\r\n        // uses the model content AND the cursor position. The latter is NOT\r\n        // updated when the document has changed (the event which drives this method)\r\n        // and therefore a little pause (next mirco task) is needed. See:\r\n        // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\r\n        Promise.resolve().then(() => {\r\n            if (this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            const position = this._editor.getPosition();\r\n            const ctx = new LineContext(model, position, this._state === 2 /* Auto */, false);\r\n            this._onNewContext(ctx);\r\n        });\r\n    }\r\n    trigger(context, retrigger = false, onlyFrom, existing) {\r\n        var _a;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const auto = context.auto;\r\n        const ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n        // Cancel previous requests, change state & update UI\r\n        this.cancel(retrigger);\r\n        this._state = auto ? 2 /* Auto */ : 1 /* Manual */;\r\n        this._onDidTrigger.fire({ auto, shy: context.shy, position: this._editor.getPosition() });\r\n        // Capture context when request was sent\r\n        this._context = ctx;\r\n        // Build context for request\r\n        let suggestCtx = { triggerKind: (_a = context.triggerKind) !== null && _a !== void 0 ? _a : 0 /* Invoke */ };\r\n        if (context.triggerCharacter) {\r\n            suggestCtx = {\r\n                triggerKind: 1 /* TriggerCharacter */,\r\n                triggerCharacter: context.triggerCharacter\r\n            };\r\n        }\r\n        this._requestToken = new CancellationTokenSource();\r\n        // kind filter and snippet sort rules\r\n        const snippetSuggestions = this._editor.getOption(100 /* snippetSuggestions */);\r\n        let snippetSortOrder = 1 /* Inline */;\r\n        switch (snippetSuggestions) {\r\n            case 'top':\r\n                snippetSortOrder = 0 /* Top */;\r\n                break;\r\n            // \t\u2193 that's the default anyways...\r\n            // case 'inline':\r\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\r\n            // \tbreak;\r\n            case 'bottom':\r\n                snippetSortOrder = 2 /* Bottom */;\r\n                break;\r\n        }\r\n        const { itemKind: itemKindFilter, showDeprecated } = SuggestModel._createSuggestFilter(this._editor);\r\n        const wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\r\n        const completions = provideSuggestionItems(model, this._editor.getPosition(), new CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom, showDeprecated), suggestCtx, this._requestToken.token);\r\n        Promise.all([completions, wordDistance]).then(([completions, wordDistance]) => __awaiter(this, void 0, void 0, function* () {\r\n            var _b;\r\n            (_b = this._requestToken) === null || _b === void 0 ? void 0 : _b.dispose();\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            let clipboardText = existing === null || existing === void 0 ? void 0 : existing.clipboardText;\r\n            if (!clipboardText && completions.needsClipboard) {\r\n                clipboardText = yield this._clipboardService.readText();\r\n            }\r\n            if (this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            let items = completions.items;\r\n            if (existing) {\r\n                const cmpFn = getSuggestionComparator(snippetSortOrder);\r\n                items = items.concat(existing.items).sort(cmpFn);\r\n            }\r\n            const ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n            this._completionModel = new CompletionModel(items, this._context.column, {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            }, wordDistance, this._editor.getOption(105 /* suggest */), this._editor.getOption(100 /* snippetSuggestions */), clipboardText);\r\n            // store containers so that they can be disposed later\r\n            this._completionDisposables.add(completions.disposable);\r\n            this._onNewContext(ctx);\r\n            // finally report telemetry about durations\r\n            this._reportDurationsTelemetry(completions.durations);\r\n        })).catch(onUnexpectedError);\r\n    }\r\n    _reportDurationsTelemetry(durations) {\r\n        if (this._telemetryGate++ % 230 !== 0) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this._telemetryService.publicLog2('suggest.durations.json', { data: JSON.stringify(durations) });\r\n            this._logService.debug('suggest.durations.json', durations);\r\n        });\r\n    }\r\n    static _createSuggestFilter(editor) {\r\n        // kind filter and snippet sort rules\r\n        const result = new Set();\r\n        // snippet setting\r\n        const snippetSuggestions = editor.getOption(100 /* snippetSuggestions */);\r\n        if (snippetSuggestions === 'none') {\r\n            result.add(27 /* Snippet */);\r\n        }\r\n        // type setting\r\n        const suggestOptions = editor.getOption(105 /* suggest */);\r\n        if (!suggestOptions.showMethods) {\r\n            result.add(0 /* Method */);\r\n        }\r\n        if (!suggestOptions.showFunctions) {\r\n            result.add(1 /* Function */);\r\n        }\r\n        if (!suggestOptions.showConstructors) {\r\n            result.add(2 /* Constructor */);\r\n        }\r\n        if (!suggestOptions.showFields) {\r\n            result.add(3 /* Field */);\r\n        }\r\n        if (!suggestOptions.showVariables) {\r\n            result.add(4 /* Variable */);\r\n        }\r\n        if (!suggestOptions.showClasses) {\r\n            result.add(5 /* Class */);\r\n        }\r\n        if (!suggestOptions.showStructs) {\r\n            result.add(6 /* Struct */);\r\n        }\r\n        if (!suggestOptions.showInterfaces) {\r\n            result.add(7 /* Interface */);\r\n        }\r\n        if (!suggestOptions.showModules) {\r\n            result.add(8 /* Module */);\r\n        }\r\n        if (!suggestOptions.showProperties) {\r\n            result.add(9 /* Property */);\r\n        }\r\n        if (!suggestOptions.showEvents) {\r\n            result.add(10 /* Event */);\r\n        }\r\n        if (!suggestOptions.showOperators) {\r\n            result.add(11 /* Operator */);\r\n        }\r\n        if (!suggestOptions.showUnits) {\r\n            result.add(12 /* Unit */);\r\n        }\r\n        if (!suggestOptions.showValues) {\r\n            result.add(13 /* Value */);\r\n        }\r\n        if (!suggestOptions.showConstants) {\r\n            result.add(14 /* Constant */);\r\n        }\r\n        if (!suggestOptions.showEnums) {\r\n            result.add(15 /* Enum */);\r\n        }\r\n        if (!suggestOptions.showEnumMembers) {\r\n            result.add(16 /* EnumMember */);\r\n        }\r\n        if (!suggestOptions.showKeywords) {\r\n            result.add(17 /* Keyword */);\r\n        }\r\n        if (!suggestOptions.showWords) {\r\n            result.add(18 /* Text */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(19 /* Color */);\r\n        }\r\n        if (!suggestOptions.showFiles) {\r\n            result.add(20 /* File */);\r\n        }\r\n        if (!suggestOptions.showReferences) {\r\n            result.add(21 /* Reference */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(22 /* Customcolor */);\r\n        }\r\n        if (!suggestOptions.showFolders) {\r\n            result.add(23 /* Folder */);\r\n        }\r\n        if (!suggestOptions.showTypeParameters) {\r\n            result.add(24 /* TypeParameter */);\r\n        }\r\n        if (!suggestOptions.showSnippets) {\r\n            result.add(27 /* Snippet */);\r\n        }\r\n        if (!suggestOptions.showUsers) {\r\n            result.add(25 /* User */);\r\n        }\r\n        if (!suggestOptions.showIssues) {\r\n            result.add(26 /* Issue */);\r\n        }\r\n        return { itemKind: result, showDeprecated: suggestOptions.showDeprecated };\r\n    }\r\n    _onNewContext(ctx) {\r\n        if (!this._context) {\r\n            // happens when 24x7 IntelliSense is enabled and still in its delay\r\n            return;\r\n        }\r\n        if (ctx.lineNumber !== this._context.lineNumber) {\r\n            // e.g. happens when pressing Enter while IntelliSense is computed\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\r\n            // cancel IntelliSense when line start changes\r\n            // happens when the current word gets outdented\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.column < this._context.column) {\r\n            // typed -> moved cursor LEFT -> retrigger if still on a word\r\n            if (ctx.leadingWord.word) {\r\n                this.trigger({ auto: this._context.auto, shy: false }, true);\r\n            }\r\n            else {\r\n                this.cancel();\r\n            }\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            // happens when IntelliSense is not yet computed\r\n            return;\r\n        }\r\n        if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\r\n            // started a new word while IntelliSense shows -> retrigger\r\n            // Select those providers have not contributed to this completion model and re-trigger completions for\r\n            // them. Also adopt the existing items and merge them into the new completion model\r\n            const inactiveProvider = new Set(CompletionProviderRegistry.all(this._editor.getModel()));\r\n            for (let provider of this._completionModel.allProvider) {\r\n                inactiveProvider.delete(provider);\r\n            }\r\n            const items = this._completionModel.adopt(new Set());\r\n            this.trigger({ auto: this._context.auto, shy: false }, true, inactiveProvider, { items, clipboardText: this._completionModel.clipboardText });\r\n            return;\r\n        }\r\n        if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\r\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\r\n            const { incomplete } = this._completionModel;\r\n            const items = this._completionModel.adopt(incomplete);\r\n            this.trigger({ auto: this._state === 2 /* Auto */, shy: false, triggerKind: 2 /* TriggerForIncompleteCompletions */ }, true, incomplete, { items, clipboardText: this._completionModel.clipboardText });\r\n        }\r\n        else {\r\n            // typed -> moved cursor RIGHT -> update UI\r\n            let oldLineContext = this._completionModel.lineContext;\r\n            let isFrozen = false;\r\n            this._completionModel.lineContext = {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            };\r\n            if (this._completionModel.items.length === 0) {\r\n                if (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\r\n                    // retrigger when heading into a new word\r\n                    this.trigger({ auto: this._context.auto, shy: false }, true);\r\n                    return;\r\n                }\r\n                if (!this._context.auto) {\r\n                    // freeze when IntelliSense was manually requested\r\n                    this._completionModel.lineContext = oldLineContext;\r\n                    isFrozen = this._completionModel.items.length > 0;\r\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\r\n                        // there were results before but now there aren't\r\n                        // and also we are not on a word anymore -> cancel\r\n                        this.cancel();\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    // nothing left\r\n                    this.cancel();\r\n                    return;\r\n                }\r\n            }\r\n            this._onDidSuggest.fire({\r\n                completionModel: this._completionModel,\r\n                auto: this._context.auto,\r\n                shy: this._context.shy,\r\n                isFrozen,\r\n            });\r\n        }\r\n    }\r\n};\r\nSuggestModel = __decorate([\r\n    __param(1, IEditorWorkerService),\r\n    __param(2, IClipboardService),\r\n    __param(3, ITelemetryService),\r\n    __param(4, ILogService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IConfigurationService)\r\n], SuggestModel);\r\nexport { SuggestModel };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './media/suggest.css';\r\nimport '../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\r\nimport '../symbolIcons/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\r\nimport * as nls from '../../../nls.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Context as SuggestContext } from './suggest.js';\r\nimport { attachListStyler } from '../../../platform/theme/common/styler.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, editorWidgetBackground, quickInputListFocusBackground, activeContrastBorder, listHighlightForeground, editorForeground, editorWidgetBorder, focusBorder, textLinkForeground, textCodeBlockBackground, quickInputListFocusForeground, listFocusHighlightForeground, quickInputListFocusIconForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { TimeoutTimer, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { SuggestDetailsWidget, canExpandCompletionItem, SuggestDetailsOverlay } from './suggestWidgetDetails.js';\r\nimport { SuggestWidgetStatus } from './suggestWidgetStatus.js';\r\nimport { getAriaId, ItemRenderer } from './suggestWidgetRenderer.js';\r\nimport { ResizableHTMLElement } from './resizable.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { clamp } from '../../../base/common/numbers.js';\r\n/**\r\n * Suggest widget colors\r\n */\r\nexport const editorSuggestWidgetBackground = registerColor('editorSuggestWidget.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('editorSuggestWidgetBackground', 'Background color of the suggest widget.'));\r\nexport const editorSuggestWidgetBorder = registerColor('editorSuggestWidget.border', { dark: editorWidgetBorder, light: editorWidgetBorder, hc: editorWidgetBorder }, nls.localize('editorSuggestWidgetBorder', 'Border color of the suggest widget.'));\r\nexport const editorSuggestWidgetForeground = registerColor('editorSuggestWidget.foreground', { dark: editorForeground, light: editorForeground, hc: editorForeground }, nls.localize('editorSuggestWidgetForeground', 'Foreground color of the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedForeground = registerColor('editorSuggestWidget.selectedForeground', { dark: quickInputListFocusForeground, light: quickInputListFocusForeground, hc: quickInputListFocusForeground }, nls.localize('editorSuggestWidgetSelectedForeground', 'Foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedIconForeground = registerColor('editorSuggestWidget.selectedIconForeground', { dark: quickInputListFocusIconForeground, light: quickInputListFocusIconForeground, hc: quickInputListFocusIconForeground }, nls.localize('editorSuggestWidgetSelectedIconForeground', 'Icon foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedBackground = registerColor('editorSuggestWidget.selectedBackground', { dark: quickInputListFocusBackground, light: quickInputListFocusBackground, hc: quickInputListFocusBackground }, nls.localize('editorSuggestWidgetSelectedBackground', 'Background color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetHighlightForeground = registerColor('editorSuggestWidget.highlightForeground', { dark: listHighlightForeground, light: listHighlightForeground, hc: listHighlightForeground }, nls.localize('editorSuggestWidgetHighlightForeground', 'Color of the match highlights in the suggest widget.'));\r\nexport const editorSuggestWidgetHighlightFocusForeground = registerColor('editorSuggestWidget.focusHighlightForeground', { dark: listFocusHighlightForeground, light: listFocusHighlightForeground, hc: listFocusHighlightForeground }, nls.localize('editorSuggestWidgetFocusHighlightForeground', 'Color of the match highlights in the suggest widget when an item is focused.'));\r\nclass PersistedWidgetSize {\r\n    constructor(_service, editor) {\r\n        this._service = _service;\r\n        this._key = `suggestWidget.size/${editor.getEditorType()}/${editor instanceof EmbeddedCodeEditorWidget}`;\r\n    }\r\n    restore() {\r\n        var _a;\r\n        const raw = (_a = this._service.get(this._key, 0 /* GLOBAL */)) !== null && _a !== void 0 ? _a : '';\r\n        try {\r\n            const obj = JSON.parse(raw);\r\n            if (dom.Dimension.is(obj)) {\r\n                return dom.Dimension.lift(obj);\r\n            }\r\n        }\r\n        catch (_b) {\r\n            // ignore\r\n        }\r\n        return undefined;\r\n    }\r\n    store(size) {\r\n        this._service.store(this._key, JSON.stringify(size), 0 /* GLOBAL */, 1 /* MACHINE */);\r\n    }\r\n    reset() {\r\n        this._service.remove(this._key, 0 /* GLOBAL */);\r\n    }\r\n}\r\nlet SuggestWidget = class SuggestWidget {\r\n    constructor(editor, _storageService, _contextKeyService, _themeService, instantiationService) {\r\n        this.editor = editor;\r\n        this._storageService = _storageService;\r\n        this._state = 0 /* Hidden */;\r\n        this._isAuto = false;\r\n        this._ignoreFocusEvents = false;\r\n        this._forceRenderingAbove = false;\r\n        this._explainMode = false;\r\n        this._showTimeout = new TimeoutTimer();\r\n        this._disposables = new DisposableStore();\r\n        this._onDidSelect = new Emitter();\r\n        this._onDidFocus = new Emitter();\r\n        this._onDidHide = new Emitter();\r\n        this._onDidShow = new Emitter();\r\n        this.onDidSelect = this._onDidSelect.event;\r\n        this.onDidFocus = this._onDidFocus.event;\r\n        this.onDidHide = this._onDidHide.event;\r\n        this.onDidShow = this._onDidShow.event;\r\n        this._onDetailsKeydown = new Emitter();\r\n        this.onDetailsKeyDown = this._onDetailsKeydown.event;\r\n        this.element = new ResizableHTMLElement();\r\n        this.element.domNode.classList.add('editor-widget', 'suggest-widget');\r\n        this._contentWidget = new SuggestContentWidget(this, editor);\r\n        this._persistedSize = new PersistedWidgetSize(_storageService, editor);\r\n        class ResizeState {\r\n            constructor(persistedSize, currentSize, persistHeight = false, persistWidth = false) {\r\n                this.persistedSize = persistedSize;\r\n                this.currentSize = currentSize;\r\n                this.persistHeight = persistHeight;\r\n                this.persistWidth = persistWidth;\r\n            }\r\n        }\r\n        let state;\r\n        this._disposables.add(this.element.onDidWillResize(() => {\r\n            this._contentWidget.lockPreference();\r\n            state = new ResizeState(this._persistedSize.restore(), this.element.size);\r\n        }));\r\n        this._disposables.add(this.element.onDidResize(e => {\r\n            var _a, _b, _c, _d;\r\n            this._resize(e.dimension.width, e.dimension.height);\r\n            if (state) {\r\n                state.persistHeight = state.persistHeight || !!e.north || !!e.south;\r\n                state.persistWidth = state.persistWidth || !!e.east || !!e.west;\r\n            }\r\n            if (!e.done) {\r\n                return;\r\n            }\r\n            if (state) {\r\n                // only store width or height value that have changed and also\r\n                // only store changes that are above a certain threshold\r\n                const { itemHeight, defaultSize } = this.getLayoutInfo();\r\n                const threshold = Math.round(itemHeight / 2);\r\n                let { width, height } = this.element.size;\r\n                if (!state.persistHeight || Math.abs(state.currentSize.height - height) <= threshold) {\r\n                    height = (_b = (_a = state.persistedSize) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : defaultSize.height;\r\n                }\r\n                if (!state.persistWidth || Math.abs(state.currentSize.width - width) <= threshold) {\r\n                    width = (_d = (_c = state.persistedSize) === null || _c === void 0 ? void 0 : _c.width) !== null && _d !== void 0 ? _d : defaultSize.width;\r\n                }\r\n                this._persistedSize.store(new dom.Dimension(width, height));\r\n            }\r\n            // reset working state\r\n            this._contentWidget.unlockPreference();\r\n            state = undefined;\r\n        }));\r\n        this._messageElement = dom.append(this.element.domNode, dom.$('.message'));\r\n        this._listElement = dom.append(this.element.domNode, dom.$('.tree'));\r\n        const details = instantiationService.createInstance(SuggestDetailsWidget, this.editor);\r\n        details.onDidClose(this.toggleDetails, this, this._disposables);\r\n        this._details = new SuggestDetailsOverlay(details, this.editor);\r\n        const applyIconStyle = () => this.element.domNode.classList.toggle('no-icons', !this.editor.getOption(105 /* suggest */).showIcons);\r\n        applyIconStyle();\r\n        const renderer = instantiationService.createInstance(ItemRenderer, this.editor);\r\n        this._disposables.add(renderer);\r\n        this._disposables.add(renderer.onDidToggleDetails(() => this.toggleDetails()));\r\n        this._list = new List('SuggestWidget', this._listElement, {\r\n            getHeight: (_element) => this.getLayoutInfo().itemHeight,\r\n            getTemplateId: (_element) => 'suggestion'\r\n        }, [renderer], {\r\n            alwaysConsumeMouseWheel: true,\r\n            useShadows: false,\r\n            mouseSupport: false,\r\n            accessibilityProvider: {\r\n                getRole: () => 'option',\r\n                getAriaLabel: (item) => {\r\n                    if (item.isResolved && this._isDetailsVisible()) {\r\n                        const { documentation, detail } = item.completion;\r\n                        const docs = strings.format('{0}{1}', detail || '', documentation ? (typeof documentation === 'string' ? documentation : documentation.value) : '');\r\n                        return nls.localize('ariaCurrenttSuggestionReadDetails', \"{0}, docs: {1}\", item.textLabel, docs);\r\n                    }\r\n                    else {\r\n                        return item.textLabel;\r\n                    }\r\n                },\r\n                getWidgetAriaLabel: () => nls.localize('suggest', \"Suggest\"),\r\n                getWidgetRole: () => 'listbox'\r\n            }\r\n        });\r\n        this._status = instantiationService.createInstance(SuggestWidgetStatus, this.element.domNode);\r\n        const applyStatusBarStyle = () => this.element.domNode.classList.toggle('with-status-bar', this.editor.getOption(105 /* suggest */).showStatusBar);\r\n        applyStatusBarStyle();\r\n        this._disposables.add(attachListStyler(this._list, _themeService, {\r\n            listInactiveFocusBackground: editorSuggestWidgetSelectedBackground,\r\n            listInactiveFocusOutline: activeContrastBorder\r\n        }));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(t => this._onThemeChange(t)));\r\n        this._onThemeChange(_themeService.getColorTheme());\r\n        this._disposables.add(this._list.onMouseDown(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onTap(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onDidChangeSelection(e => this._onListSelection(e)));\r\n        this._disposables.add(this._list.onDidChangeFocus(e => this._onListFocus(e)));\r\n        this._disposables.add(this.editor.onDidChangeCursorSelection(() => this._onCursorSelectionChanged()));\r\n        this._disposables.add(this.editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(105 /* suggest */)) {\r\n                applyStatusBarStyle();\r\n                applyIconStyle();\r\n            }\r\n        }));\r\n        this._ctxSuggestWidgetVisible = SuggestContext.Visible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetDetailsVisible = SuggestContext.DetailsVisible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetMultipleSuggestions = SuggestContext.MultipleSuggestions.bindTo(_contextKeyService);\r\n        this._disposables.add(dom.addStandardDisposableListener(this._details.widget.domNode, 'keydown', e => {\r\n            this._onDetailsKeydown.fire(e);\r\n        }));\r\n        this._disposables.add(this.editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._details.widget.dispose();\r\n        this._details.dispose();\r\n        this._list.dispose();\r\n        this._status.dispose();\r\n        this._disposables.dispose();\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._showTimeout.dispose();\r\n        this._contentWidget.dispose();\r\n        this.element.dispose();\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        if (this._details.widget.domNode.contains(mouseEvent.target.element)) {\r\n            // Clicking inside details\r\n            this._details.widget.domNode.focus();\r\n        }\r\n        else {\r\n            // Clicking outside details and inside suggest\r\n            if (this.element.domNode.contains(mouseEvent.target.element)) {\r\n                this.editor.focus();\r\n            }\r\n        }\r\n    }\r\n    _onCursorSelectionChanged() {\r\n        if (this._state !== 0 /* Hidden */) {\r\n            this._contentWidget.layout();\r\n        }\r\n    }\r\n    _onListMouseDownOrTap(e) {\r\n        if (typeof e.element === 'undefined' || typeof e.index === 'undefined') {\r\n            return;\r\n        }\r\n        // prevent stealing browser focus from the editor\r\n        e.browserEvent.preventDefault();\r\n        e.browserEvent.stopPropagation();\r\n        this._select(e.element, e.index);\r\n    }\r\n    _onListSelection(e) {\r\n        if (e.elements.length) {\r\n            this._select(e.elements[0], e.indexes[0]);\r\n        }\r\n    }\r\n    _select(item, index) {\r\n        const completionModel = this._completionModel;\r\n        if (completionModel) {\r\n            this._onDidSelect.fire({ item, index, model: completionModel });\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    _onThemeChange(theme) {\r\n        const backgroundColor = theme.getColor(editorSuggestWidgetBackground);\r\n        if (backgroundColor) {\r\n            this.element.domNode.style.backgroundColor = backgroundColor.toString();\r\n            this._messageElement.style.backgroundColor = backgroundColor.toString();\r\n            this._details.widget.domNode.style.backgroundColor = backgroundColor.toString();\r\n        }\r\n        const borderColor = theme.getColor(editorSuggestWidgetBorder);\r\n        if (borderColor) {\r\n            this.element.domNode.style.borderColor = borderColor.toString();\r\n            this._messageElement.style.borderColor = borderColor.toString();\r\n            this._status.element.style.borderTopColor = borderColor.toString();\r\n            this._details.widget.domNode.style.borderColor = borderColor.toString();\r\n            this._detailsBorderColor = borderColor.toString();\r\n        }\r\n        const focusBorderColor = theme.getColor(focusBorder);\r\n        if (focusBorderColor) {\r\n            this._detailsFocusBorderColor = focusBorderColor.toString();\r\n        }\r\n        this._details.widget.borderWidth = theme.type === 'hc' ? 2 : 1;\r\n    }\r\n    _onListFocus(e) {\r\n        var _a;\r\n        if (this._ignoreFocusEvents) {\r\n            return;\r\n        }\r\n        if (!e.elements.length) {\r\n            if (this._currentSuggestionDetails) {\r\n                this._currentSuggestionDetails.cancel();\r\n                this._currentSuggestionDetails = undefined;\r\n                this._focusedItem = undefined;\r\n            }\r\n            this.editor.setAriaOptions({ activeDescendant: undefined });\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            return;\r\n        }\r\n        const item = e.elements[0];\r\n        const index = e.indexes[0];\r\n        if (item !== this._focusedItem) {\r\n            (_a = this._currentSuggestionDetails) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._currentSuggestionDetails = undefined;\r\n            this._focusedItem = item;\r\n            this._list.reveal(index);\r\n            this._currentSuggestionDetails = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                const loading = disposableTimeout(() => {\r\n                    if (this._isDetailsVisible()) {\r\n                        this.showDetails(true);\r\n                    }\r\n                }, 250);\r\n                token.onCancellationRequested(() => loading.dispose());\r\n                const result = yield item.resolve(token);\r\n                loading.dispose();\r\n                return result;\r\n            }));\r\n            this._currentSuggestionDetails.then(() => {\r\n                if (index >= this._list.length || item !== this._list.element(index)) {\r\n                    return;\r\n                }\r\n                // item can have extra information, so re-render\r\n                this._ignoreFocusEvents = true;\r\n                this._list.splice(index, 1, [item]);\r\n                this._list.setFocus([index]);\r\n                this._ignoreFocusEvents = false;\r\n                if (this._isDetailsVisible()) {\r\n                    this.showDetails(false);\r\n                }\r\n                else {\r\n                    this.element.domNode.classList.remove('docs-side');\r\n                }\r\n                this.editor.setAriaOptions({ activeDescendant: getAriaId(index) });\r\n            }).catch(onUnexpectedError);\r\n        }\r\n        // emit an event\r\n        this._onDidFocus.fire({ item, index, model: this._completionModel });\r\n    }\r\n    _setState(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        this._state = state;\r\n        this.element.domNode.classList.toggle('frozen', state === 4 /* Frozen */);\r\n        this.element.domNode.classList.remove('message');\r\n        switch (state) {\r\n            case 0 /* Hidden */:\r\n                dom.hide(this._messageElement, this._listElement, this._status.element);\r\n                this._details.hide(true);\r\n                this._status.hide();\r\n                this._contentWidget.hide();\r\n                this._ctxSuggestWidgetVisible.reset();\r\n                this._ctxSuggestWidgetMultipleSuggestions.reset();\r\n                this._showTimeout.cancel();\r\n                this.element.domNode.classList.remove('visible');\r\n                this._list.splice(0, this._list.length);\r\n                this._focusedItem = undefined;\r\n                this._cappedHeight = undefined;\r\n                this._explainMode = false;\r\n                break;\r\n            case 1 /* Loading */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget.LOADING_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                break;\r\n            case 2 /* Empty */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget.NO_SUGGESTIONS_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                break;\r\n            case 3 /* Open */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 4 /* Frozen */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 5 /* Details */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._details.show();\r\n                this._show();\r\n                break;\r\n        }\r\n    }\r\n    _show() {\r\n        this._status.show();\r\n        this._contentWidget.show();\r\n        this._layout(this._persistedSize.restore());\r\n        this._ctxSuggestWidgetVisible.set(true);\r\n        this._showTimeout.cancelAndSet(() => {\r\n            this.element.domNode.classList.add('visible');\r\n            this._onDidShow.fire(this);\r\n        }, 100);\r\n    }\r\n    showTriggered(auto, delay) {\r\n        if (this._state !== 0 /* Hidden */) {\r\n            return;\r\n        }\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        this._isAuto = !!auto;\r\n        if (!this._isAuto) {\r\n            this._loadingTimeout = disposableTimeout(() => this._setState(1 /* Loading */), delay);\r\n        }\r\n    }\r\n    showSuggestions(completionModel, selectionIndex, isFrozen, isAuto) {\r\n        var _a, _b;\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._currentSuggestionDetails) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._currentSuggestionDetails = undefined;\r\n        if (this._completionModel !== completionModel) {\r\n            this._completionModel = completionModel;\r\n        }\r\n        if (isFrozen && this._state !== 2 /* Empty */ && this._state !== 0 /* Hidden */) {\r\n            this._setState(4 /* Frozen */);\r\n            return;\r\n        }\r\n        const visibleCount = this._completionModel.items.length;\r\n        const isEmpty = visibleCount === 0;\r\n        this._ctxSuggestWidgetMultipleSuggestions.set(visibleCount > 1);\r\n        if (isEmpty) {\r\n            this._setState(isAuto ? 0 /* Hidden */ : 2 /* Empty */);\r\n            this._completionModel = undefined;\r\n            return;\r\n        }\r\n        this._focusedItem = undefined;\r\n        this._list.splice(0, this._list.length, this._completionModel.items);\r\n        this._setState(isFrozen ? 4 /* Frozen */ : 3 /* Open */);\r\n        this._list.reveal(selectionIndex, 0);\r\n        this._list.setFocus([selectionIndex]);\r\n        this._layout(this.element.size);\r\n        // Reset focus border\r\n        if (this._detailsBorderColor) {\r\n            this._details.widget.domNode.style.borderColor = this._detailsBorderColor;\r\n        }\r\n    }\r\n    selectNextPage() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.pageDown();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNextPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectNext() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNext(1, true);\r\n                return true;\r\n        }\r\n    }\r\n    selectLast() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.scrollBottom();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusLast();\r\n                return true;\r\n        }\r\n    }\r\n    selectPreviousPage() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.pageUp();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPreviousPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectPrevious() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPrevious(1, true);\r\n                return false;\r\n        }\r\n    }\r\n    selectFirst() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.scrollTop();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusFirst();\r\n                return true;\r\n        }\r\n    }\r\n    getFocusedItem() {\r\n        if (this._state !== 0 /* Hidden */\r\n            && this._state !== 2 /* Empty */\r\n            && this._state !== 1 /* Loading */\r\n            && this._completionModel) {\r\n            return {\r\n                item: this._list.getFocusedElements()[0],\r\n                index: this._list.getFocus()[0],\r\n                model: this._completionModel\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n    toggleDetailsFocus() {\r\n        if (this._state === 5 /* Details */) {\r\n            this._setState(3 /* Open */);\r\n            if (this._detailsBorderColor) {\r\n                this._details.widget.domNode.style.borderColor = this._detailsBorderColor;\r\n            }\r\n        }\r\n        else if (this._state === 3 /* Open */ && this._isDetailsVisible()) {\r\n            this._setState(5 /* Details */);\r\n            if (this._detailsFocusBorderColor) {\r\n                this._details.widget.domNode.style.borderColor = this._detailsFocusBorderColor;\r\n            }\r\n        }\r\n    }\r\n    toggleDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            // hide details widget\r\n            this._ctxSuggestWidgetDetailsVisible.set(false);\r\n            this._setDetailsVisible(false);\r\n            this._details.hide();\r\n            this.element.domNode.classList.remove('shows-details');\r\n        }\r\n        else if ((canExpandCompletionItem(this._list.getFocusedElements()[0]) || this._explainMode) && (this._state === 3 /* Open */ || this._state === 5 /* Details */ || this._state === 4 /* Frozen */)) {\r\n            // show details widget (iff possible)\r\n            this._ctxSuggestWidgetDetailsVisible.set(true);\r\n            this._setDetailsVisible(true);\r\n            this.showDetails(false);\r\n        }\r\n    }\r\n    showDetails(loading) {\r\n        this._details.show();\r\n        if (loading) {\r\n            this._details.widget.renderLoading();\r\n        }\r\n        else {\r\n            this._details.widget.renderItem(this._list.getFocusedElements()[0], this._explainMode);\r\n        }\r\n        this._positionDetails();\r\n        this.editor.focus();\r\n        this.element.domNode.classList.add('shows-details');\r\n    }\r\n    toggleExplainMode() {\r\n        if (this._list.getFocusedElements()[0]) {\r\n            this._explainMode = !this._explainMode;\r\n            if (!this._isDetailsVisible()) {\r\n                this.toggleDetails();\r\n            }\r\n            else {\r\n                this.showDetails(false);\r\n            }\r\n        }\r\n    }\r\n    resetPersistedSize() {\r\n        this._persistedSize.reset();\r\n    }\r\n    hideWidget() {\r\n        var _a;\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._setState(0 /* Hidden */);\r\n        this._onDidHide.fire(this);\r\n        this.element.clearSashHoverState();\r\n        // ensure that a reasonable widget height is persisted so that\r\n        // accidential \"resize-to-single-items\" cases aren't happening\r\n        const dim = this._persistedSize.restore();\r\n        const minPersistedHeight = Math.ceil(this.getLayoutInfo().itemHeight * 4.3);\r\n        if (dim && dim.height < minPersistedHeight) {\r\n            this._persistedSize.store(dim.with(undefined, minPersistedHeight));\r\n        }\r\n    }\r\n    isFrozen() {\r\n        return this._state === 4 /* Frozen */;\r\n    }\r\n    _afterRender(position) {\r\n        if (position === null) {\r\n            if (this._isDetailsVisible()) {\r\n                this._details.hide(); //todo@jrieken soft-hide\r\n            }\r\n            return;\r\n        }\r\n        if (this._state === 2 /* Empty */ || this._state === 1 /* Loading */) {\r\n            // no special positioning when widget isn't showing list\r\n            return;\r\n        }\r\n        if (this._isDetailsVisible()) {\r\n            this._details.show();\r\n        }\r\n        this._positionDetails();\r\n    }\r\n    _layout(size) {\r\n        var _a, _b, _c;\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this.editor.getDomNode()) {\r\n            // happens when running tests\r\n            return;\r\n        }\r\n        const bodyBox = dom.getClientArea(document.body);\r\n        const info = this.getLayoutInfo();\r\n        if (!size) {\r\n            size = info.defaultSize;\r\n        }\r\n        let height = size.height;\r\n        let width = size.width;\r\n        // status bar\r\n        this._status.element.style.lineHeight = `${info.itemHeight}px`;\r\n        if (this._state === 2 /* Empty */ || this._state === 1 /* Loading */) {\r\n            // showing a message only\r\n            height = info.itemHeight + info.borderHeight;\r\n            width = info.defaultSize.width / 2;\r\n            this.element.enableSashes(false, false, false, false);\r\n            this.element.minSize = this.element.maxSize = new dom.Dimension(width, height);\r\n            this._contentWidget.setPreference(2 /* BELOW */);\r\n        }\r\n        else {\r\n            // showing items\r\n            // width math\r\n            const maxWidth = bodyBox.width - info.borderHeight - 2 * info.horizontalPadding;\r\n            if (width > maxWidth) {\r\n                width = maxWidth;\r\n            }\r\n            const preferredWidth = this._completionModel ? this._completionModel.stats.pLabelLen * info.typicalHalfwidthCharacterWidth : width;\r\n            // height math\r\n            const fullHeight = info.statusBarHeight + this._list.contentHeight + info.borderHeight;\r\n            const minHeight = info.itemHeight + info.statusBarHeight;\r\n            const editorBox = dom.getDomNodePagePosition(this.editor.getDomNode());\r\n            const cursorBox = this.editor.getScrolledVisiblePosition(this.editor.getPosition());\r\n            const cursorBottom = editorBox.top + cursorBox.top + cursorBox.height;\r\n            const maxHeightBelow = Math.min(bodyBox.height - cursorBottom - info.verticalPadding, fullHeight);\r\n            const maxHeightAbove = Math.min(editorBox.top + cursorBox.top - info.verticalPadding, fullHeight);\r\n            let maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow) + info.borderHeight, fullHeight);\r\n            if (height === ((_a = this._cappedHeight) === null || _a === void 0 ? void 0 : _a.capped)) {\r\n                // Restore the old (wanted) height when the current\r\n                // height is capped to fit\r\n                height = this._cappedHeight.wanted;\r\n            }\r\n            if (height < minHeight) {\r\n                height = minHeight;\r\n            }\r\n            if (height > maxHeight) {\r\n                height = maxHeight;\r\n            }\r\n            const forceRenderingAboveRequiredSpace = 100;\r\n            if (height > maxHeightBelow || (this._forceRenderingAbove && maxHeightAbove > forceRenderingAboveRequiredSpace)) {\r\n                this._contentWidget.setPreference(1 /* ABOVE */);\r\n                this.element.enableSashes(true, true, false, false);\r\n                maxHeight = maxHeightAbove;\r\n            }\r\n            else {\r\n                this._contentWidget.setPreference(2 /* BELOW */);\r\n                this.element.enableSashes(false, true, true, false);\r\n                maxHeight = maxHeightBelow;\r\n            }\r\n            this.element.preferredSize = new dom.Dimension(preferredWidth, info.defaultSize.height);\r\n            this.element.maxSize = new dom.Dimension(maxWidth, maxHeight);\r\n            this.element.minSize = new dom.Dimension(220, minHeight);\r\n            // Know when the height was capped to fit and remember\r\n            // the wanted height for later. This is required when going\r\n            // left to widen suggestions.\r\n            this._cappedHeight = height === fullHeight\r\n                ? { wanted: (_c = (_b = this._cappedHeight) === null || _b === void 0 ? void 0 : _b.wanted) !== null && _c !== void 0 ? _c : size.height, capped: height }\r\n                : undefined;\r\n        }\r\n        this._resize(width, height);\r\n    }\r\n    _resize(width, height) {\r\n        const { width: maxWidth, height: maxHeight } = this.element.maxSize;\r\n        width = Math.min(maxWidth, width);\r\n        height = Math.min(maxHeight, height);\r\n        const { statusBarHeight } = this.getLayoutInfo();\r\n        this._list.layout(height - statusBarHeight, width);\r\n        this._listElement.style.height = `${height - statusBarHeight}px`;\r\n        this.element.layout(height, width);\r\n        this._contentWidget.layout();\r\n        this._positionDetails();\r\n    }\r\n    _positionDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            this._details.placeAtAnchor(this.element.domNode);\r\n        }\r\n    }\r\n    getLayoutInfo() {\r\n        const fontInfo = this.editor.getOption(41 /* fontInfo */);\r\n        const itemHeight = clamp(this.editor.getOption(107 /* suggestLineHeight */) || fontInfo.lineHeight, 8, 1000);\r\n        const statusBarHeight = !this.editor.getOption(105 /* suggest */).showStatusBar || this._state === 2 /* Empty */ || this._state === 1 /* Loading */ ? 0 : itemHeight;\r\n        const borderWidth = this._details.widget.borderWidth;\r\n        const borderHeight = 2 * borderWidth;\r\n        return {\r\n            itemHeight,\r\n            statusBarHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            typicalHalfwidthCharacterWidth: fontInfo.typicalHalfwidthCharacterWidth,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14,\r\n            defaultSize: new dom.Dimension(430, statusBarHeight + 12 * itemHeight + borderHeight)\r\n        };\r\n    }\r\n    _isDetailsVisible() {\r\n        return this._storageService.getBoolean('expandSuggestionDocs', 0 /* GLOBAL */, false);\r\n    }\r\n    _setDetailsVisible(value) {\r\n        this._storageService.store('expandSuggestionDocs', value, 0 /* GLOBAL */, 0 /* USER */);\r\n    }\r\n    forceRenderingAbove() {\r\n        if (!this._forceRenderingAbove) {\r\n            this._forceRenderingAbove = true;\r\n            this._layout(this._persistedSize.restore());\r\n        }\r\n    }\r\n    stopForceRenderingAbove() {\r\n        this._forceRenderingAbove = false;\r\n    }\r\n};\r\nSuggestWidget.LOADING_MESSAGE = nls.localize('suggestWidget.loading', \"Loading...\");\r\nSuggestWidget.NO_SUGGESTIONS_MESSAGE = nls.localize('suggestWidget.noSuggestions', \"No suggestions.\");\r\nSuggestWidget = __decorate([\r\n    __param(1, IStorageService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IThemeService),\r\n    __param(4, IInstantiationService)\r\n], SuggestWidget);\r\nexport { SuggestWidget };\r\nexport class SuggestContentWidget {\r\n    constructor(_widget, _editor) {\r\n        this._widget = _widget;\r\n        this._editor = _editor;\r\n        this.allowEditorOverflow = true;\r\n        this.suppressMouseDown = false;\r\n        this._preferenceLocked = false;\r\n        this._added = false;\r\n        this._hidden = false;\r\n    }\r\n    dispose() {\r\n        if (this._added) {\r\n            this._added = false;\r\n            this._editor.removeContentWidget(this);\r\n        }\r\n    }\r\n    getId() {\r\n        return 'editor.widget.suggestWidget';\r\n    }\r\n    getDomNode() {\r\n        return this._widget.element.domNode;\r\n    }\r\n    show() {\r\n        this._hidden = false;\r\n        if (!this._added) {\r\n            this._added = true;\r\n            this._editor.addContentWidget(this);\r\n        }\r\n    }\r\n    hide() {\r\n        if (!this._hidden) {\r\n            this._hidden = true;\r\n            this.layout();\r\n        }\r\n    }\r\n    layout() {\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    getPosition() {\r\n        if (this._hidden || !this._position || !this._preference) {\r\n            return null;\r\n        }\r\n        return {\r\n            position: this._position,\r\n            preference: [this._preference]\r\n        };\r\n    }\r\n    beforeRender() {\r\n        const { height, width } = this._widget.element.size;\r\n        const { borderWidth, horizontalPadding } = this._widget.getLayoutInfo();\r\n        return new dom.Dimension(width + 2 * borderWidth + horizontalPadding, height + 2 * borderWidth);\r\n    }\r\n    afterRender(position) {\r\n        this._widget._afterRender(position);\r\n    }\r\n    setPreference(preference) {\r\n        if (!this._preferenceLocked) {\r\n            this._preference = preference;\r\n        }\r\n    }\r\n    lockPreference() {\r\n        this._preferenceLocked = true;\r\n    }\r\n    unlockPreference() {\r\n        this._preferenceLocked = false;\r\n    }\r\n    setPosition(position) {\r\n        this._position = position;\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const matchHighlight = theme.getColor(editorSuggestWidgetHighlightForeground);\r\n    if (matchHighlight) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row .monaco-highlighted-label .highlight { color: ${matchHighlight}; }`);\r\n    }\r\n    const matchHighlightFocus = theme.getColor(editorSuggestWidgetHighlightFocusForeground);\r\n    if (matchHighlight) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .monaco-highlighted-label .highlight { color: ${matchHighlightFocus}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorSuggestWidgetForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget, .monaco-editor .suggest-details { color: ${foreground}; }`);\r\n    }\r\n    const selectedForeground = theme.getColor(editorSuggestWidgetSelectedForeground);\r\n    if (selectedForeground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused { color: ${selectedForeground}; }`);\r\n    }\r\n    const selectedIconForeground = theme.getColor(editorSuggestWidgetSelectedIconForeground);\r\n    if (selectedIconForeground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .codicon { color: ${selectedIconForeground}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .suggest-details a { color: ${link}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .suggest-details code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { localize } from '../../../nls.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, foreground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport const SYMBOL_ICON_ARRAY_FOREGROUND = registerColor('symbolIcon.arrayForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.arrayForeground', 'The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_BOOLEAN_FOREGROUND = registerColor('symbolIcon.booleanForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.booleanForeground', 'The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CLASS_FOREGROUND = registerColor('symbolIcon.classForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.classForeground', 'The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_COLOR_FOREGROUND = registerColor('symbolIcon.colorForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.colorForeground', 'The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CONSTANT_FOREGROUND = registerColor('symbolIcon.constantForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.constantForeground', 'The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CONSTRUCTOR_FOREGROUND = registerColor('symbolIcon.constructorForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.constructorForeground', 'The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_ENUMERATOR_FOREGROUND = registerColor('symbolIcon.enumeratorForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.enumeratorForeground', 'The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND = registerColor('symbolIcon.enumeratorMemberForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.enumeratorMemberForeground', 'The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_EVENT_FOREGROUND = registerColor('symbolIcon.eventForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.eventForeground', 'The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FIELD_FOREGROUND = registerColor('symbolIcon.fieldForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.fieldForeground', 'The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FILE_FOREGROUND = registerColor('symbolIcon.fileForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.fileForeground', 'The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FOLDER_FOREGROUND = registerColor('symbolIcon.folderForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.folderForeground', 'The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FUNCTION_FOREGROUND = registerColor('symbolIcon.functionForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.functionForeground', 'The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_INTERFACE_FOREGROUND = registerColor('symbolIcon.interfaceForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.interfaceForeground', 'The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_KEY_FOREGROUND = registerColor('symbolIcon.keyForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.keyForeground', 'The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_KEYWORD_FOREGROUND = registerColor('symbolIcon.keywordForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.keywordForeground', 'The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_METHOD_FOREGROUND = registerColor('symbolIcon.methodForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.methodForeground', 'The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_MODULE_FOREGROUND = registerColor('symbolIcon.moduleForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.moduleForeground', 'The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NAMESPACE_FOREGROUND = registerColor('symbolIcon.namespaceForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.namespaceForeground', 'The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NULL_FOREGROUND = registerColor('symbolIcon.nullForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.nullForeground', 'The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NUMBER_FOREGROUND = registerColor('symbolIcon.numberForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.numberForeground', 'The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_OBJECT_FOREGROUND = registerColor('symbolIcon.objectForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.objectForeground', 'The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_OPERATOR_FOREGROUND = registerColor('symbolIcon.operatorForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.operatorForeground', 'The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_PACKAGE_FOREGROUND = registerColor('symbolIcon.packageForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.packageForeground', 'The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_PROPERTY_FOREGROUND = registerColor('symbolIcon.propertyForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.propertyForeground', 'The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_REFERENCE_FOREGROUND = registerColor('symbolIcon.referenceForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.referenceForeground', 'The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_SNIPPET_FOREGROUND = registerColor('symbolIcon.snippetForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.snippetForeground', 'The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_STRING_FOREGROUND = registerColor('symbolIcon.stringForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.stringForeground', 'The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_STRUCT_FOREGROUND = registerColor('symbolIcon.structForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.structForeground', 'The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_TEXT_FOREGROUND = registerColor('symbolIcon.textForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.textForeground', 'The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_TYPEPARAMETER_FOREGROUND = registerColor('symbolIcon.typeParameterForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.typeParameterForeground', 'The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_UNIT_FOREGROUND = registerColor('symbolIcon.unitForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.unitForeground', 'The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_VARIABLE_FOREGROUND = registerColor('symbolIcon.variableForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.variableForeground', 'The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const symbolIconArrayColor = theme.getColor(SYMBOL_ICON_ARRAY_FOREGROUND);\r\n    if (symbolIconArrayColor) {\r\n        collector.addRule(`${Codicon.symbolArray.cssSelector} { color: ${symbolIconArrayColor}; }`);\r\n    }\r\n    const symbolIconBooleanColor = theme.getColor(SYMBOL_ICON_BOOLEAN_FOREGROUND);\r\n    if (symbolIconBooleanColor) {\r\n        collector.addRule(`${Codicon.symbolBoolean.cssSelector} { color: ${symbolIconBooleanColor}; }`);\r\n    }\r\n    const symbolIconClassColor = theme.getColor(SYMBOL_ICON_CLASS_FOREGROUND);\r\n    if (symbolIconClassColor) {\r\n        collector.addRule(`${Codicon.symbolClass.cssSelector} { color: ${symbolIconClassColor}; }`);\r\n    }\r\n    const symbolIconMethodColor = theme.getColor(SYMBOL_ICON_METHOD_FOREGROUND);\r\n    if (symbolIconMethodColor) {\r\n        collector.addRule(`${Codicon.symbolMethod.cssSelector} { color: ${symbolIconMethodColor}; }`);\r\n    }\r\n    const symbolIconColorColor = theme.getColor(SYMBOL_ICON_COLOR_FOREGROUND);\r\n    if (symbolIconColorColor) {\r\n        collector.addRule(`${Codicon.symbolColor.cssSelector} { color: ${symbolIconColorColor}; }`);\r\n    }\r\n    const symbolIconConstantColor = theme.getColor(SYMBOL_ICON_CONSTANT_FOREGROUND);\r\n    if (symbolIconConstantColor) {\r\n        collector.addRule(`${Codicon.symbolConstant.cssSelector} { color: ${symbolIconConstantColor}; }`);\r\n    }\r\n    const symbolIconConstructorColor = theme.getColor(SYMBOL_ICON_CONSTRUCTOR_FOREGROUND);\r\n    if (symbolIconConstructorColor) {\r\n        collector.addRule(`${Codicon.symbolConstructor.cssSelector} { color: ${symbolIconConstructorColor}; }`);\r\n    }\r\n    const symbolIconEnumeratorColor = theme.getColor(SYMBOL_ICON_ENUMERATOR_FOREGROUND);\r\n    if (symbolIconEnumeratorColor) {\r\n        collector.addRule(`\n\t\t\t${Codicon.symbolValue.cssSelector},${Codicon.symbolEnum.cssSelector} { color: ${symbolIconEnumeratorColor}; }`);\r\n    }\r\n    const symbolIconEnumeratorMemberColor = theme.getColor(SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND);\r\n    if (symbolIconEnumeratorMemberColor) {\r\n        collector.addRule(`${Codicon.symbolEnumMember.cssSelector} { color: ${symbolIconEnumeratorMemberColor}; }`);\r\n    }\r\n    const symbolIconEventColor = theme.getColor(SYMBOL_ICON_EVENT_FOREGROUND);\r\n    if (symbolIconEventColor) {\r\n        collector.addRule(`${Codicon.symbolEvent.cssSelector} { color: ${symbolIconEventColor}; }`);\r\n    }\r\n    const symbolIconFieldColor = theme.getColor(SYMBOL_ICON_FIELD_FOREGROUND);\r\n    if (symbolIconFieldColor) {\r\n        collector.addRule(`${Codicon.symbolField.cssSelector} { color: ${symbolIconFieldColor}; }`);\r\n    }\r\n    const symbolIconFileColor = theme.getColor(SYMBOL_ICON_FILE_FOREGROUND);\r\n    if (symbolIconFileColor) {\r\n        collector.addRule(`${Codicon.symbolFile.cssSelector} { color: ${symbolIconFileColor}; }`);\r\n    }\r\n    const symbolIconFolderColor = theme.getColor(SYMBOL_ICON_FOLDER_FOREGROUND);\r\n    if (symbolIconFolderColor) {\r\n        collector.addRule(`${Codicon.symbolFolder.cssSelector} { color: ${symbolIconFolderColor}; }`);\r\n    }\r\n    const symbolIconFunctionColor = theme.getColor(SYMBOL_ICON_FUNCTION_FOREGROUND);\r\n    if (symbolIconFunctionColor) {\r\n        collector.addRule(`${Codicon.symbolFunction.cssSelector} { color: ${symbolIconFunctionColor}; }`);\r\n    }\r\n    const symbolIconInterfaceColor = theme.getColor(SYMBOL_ICON_INTERFACE_FOREGROUND);\r\n    if (symbolIconInterfaceColor) {\r\n        collector.addRule(`${Codicon.symbolInterface.cssSelector} { color: ${symbolIconInterfaceColor}; }`);\r\n    }\r\n    const symbolIconKeyColor = theme.getColor(SYMBOL_ICON_KEY_FOREGROUND);\r\n    if (symbolIconKeyColor) {\r\n        collector.addRule(`${Codicon.symbolKey.cssSelector} { color: ${symbolIconKeyColor}; }`);\r\n    }\r\n    const symbolIconKeywordColor = theme.getColor(SYMBOL_ICON_KEYWORD_FOREGROUND);\r\n    if (symbolIconKeywordColor) {\r\n        collector.addRule(`${Codicon.symbolKeyword.cssSelector} { color: ${symbolIconKeywordColor}; }`);\r\n    }\r\n    const symbolIconModuleColor = theme.getColor(SYMBOL_ICON_MODULE_FOREGROUND);\r\n    if (symbolIconModuleColor) {\r\n        collector.addRule(`${Codicon.symbolModule.cssSelector} { color: ${symbolIconModuleColor}; }`);\r\n    }\r\n    const outlineNamespaceColor = theme.getColor(SYMBOL_ICON_NAMESPACE_FOREGROUND);\r\n    if (outlineNamespaceColor) {\r\n        collector.addRule(`${Codicon.symbolNamespace.cssSelector} { color: ${outlineNamespaceColor}; }`);\r\n    }\r\n    const symbolIconNullColor = theme.getColor(SYMBOL_ICON_NULL_FOREGROUND);\r\n    if (symbolIconNullColor) {\r\n        collector.addRule(`${Codicon.symbolNull.cssSelector} { color: ${symbolIconNullColor}; }`);\r\n    }\r\n    const symbolIconNumberColor = theme.getColor(SYMBOL_ICON_NUMBER_FOREGROUND);\r\n    if (symbolIconNumberColor) {\r\n        collector.addRule(`${Codicon.symbolNumber.cssSelector} { color: ${symbolIconNumberColor}; }`);\r\n    }\r\n    const symbolIconObjectColor = theme.getColor(SYMBOL_ICON_OBJECT_FOREGROUND);\r\n    if (symbolIconObjectColor) {\r\n        collector.addRule(`${Codicon.symbolObject.cssSelector} { color: ${symbolIconObjectColor}; }`);\r\n    }\r\n    const symbolIconOperatorColor = theme.getColor(SYMBOL_ICON_OPERATOR_FOREGROUND);\r\n    if (symbolIconOperatorColor) {\r\n        collector.addRule(`${Codicon.symbolOperator.cssSelector} { color: ${symbolIconOperatorColor}; }`);\r\n    }\r\n    const symbolIconPackageColor = theme.getColor(SYMBOL_ICON_PACKAGE_FOREGROUND);\r\n    if (symbolIconPackageColor) {\r\n        collector.addRule(`${Codicon.symbolPackage.cssSelector} { color: ${symbolIconPackageColor}; }`);\r\n    }\r\n    const symbolIconPropertyColor = theme.getColor(SYMBOL_ICON_PROPERTY_FOREGROUND);\r\n    if (symbolIconPropertyColor) {\r\n        collector.addRule(`${Codicon.symbolProperty.cssSelector} { color: ${symbolIconPropertyColor}; }`);\r\n    }\r\n    const symbolIconReferenceColor = theme.getColor(SYMBOL_ICON_REFERENCE_FOREGROUND);\r\n    if (symbolIconReferenceColor) {\r\n        collector.addRule(`${Codicon.symbolReference.cssSelector} { color: ${symbolIconReferenceColor}; }`);\r\n    }\r\n    const symbolIconSnippetColor = theme.getColor(SYMBOL_ICON_SNIPPET_FOREGROUND);\r\n    if (symbolIconSnippetColor) {\r\n        collector.addRule(`${Codicon.symbolSnippet.cssSelector} { color: ${symbolIconSnippetColor}; }`);\r\n    }\r\n    const symbolIconStringColor = theme.getColor(SYMBOL_ICON_STRING_FOREGROUND);\r\n    if (symbolIconStringColor) {\r\n        collector.addRule(`${Codicon.symbolString.cssSelector} { color: ${symbolIconStringColor}; }`);\r\n    }\r\n    const symbolIconStructColor = theme.getColor(SYMBOL_ICON_STRUCT_FOREGROUND);\r\n    if (symbolIconStructColor) {\r\n        collector.addRule(`${Codicon.symbolStruct.cssSelector} { color: ${symbolIconStructColor}; }`);\r\n    }\r\n    const symbolIconTextColor = theme.getColor(SYMBOL_ICON_TEXT_FOREGROUND);\r\n    if (symbolIconTextColor) {\r\n        collector.addRule(`${Codicon.symbolText.cssSelector} { color: ${symbolIconTextColor}; }`);\r\n    }\r\n    const symbolIconTypeParameterColor = theme.getColor(SYMBOL_ICON_TYPEPARAMETER_FOREGROUND);\r\n    if (symbolIconTypeParameterColor) {\r\n        collector.addRule(`${Codicon.symbolTypeParameter.cssSelector} { color: ${symbolIconTypeParameterColor}; }`);\r\n    }\r\n    const symbolIconUnitColor = theme.getColor(SYMBOL_ICON_UNIT_FOREGROUND);\r\n    if (symbolIconUnitColor) {\r\n        collector.addRule(`${Codicon.symbolUnit.cssSelector} { color: ${symbolIconUnitColor}; }`);\r\n    }\r\n    const symbolIconVariableColor = theme.getColor(SYMBOL_ICON_VARIABLE_FOREGROUND);\r\n    if (symbolIconVariableColor) {\r\n        collector.addRule(`${Codicon.symbolVariable.cssSelector} { color: ${symbolIconVariableColor}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { escapeIcons } from './iconLabels.js';\r\nimport { illegalArgument } from './errors.js';\r\nexport class MarkdownString {\r\n    constructor(value = '', isTrustedOrOptions = false) {\r\n        var _a, _b;\r\n        this.value = value;\r\n        if (typeof this.value !== 'string') {\r\n            throw illegalArgument('value');\r\n        }\r\n        if (typeof isTrustedOrOptions === 'boolean') {\r\n            this.isTrusted = isTrustedOrOptions;\r\n            this.supportThemeIcons = false;\r\n        }\r\n        else {\r\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\r\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\r\n        }\r\n    }\r\n    appendText(value, newlineStyle = 0 /* Paragraph */) {\r\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\r\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\r\n            .replace(/^>/gm, '\\\\>')\r\n            .replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\r\n        return this;\r\n    }\r\n    appendMarkdown(value) {\r\n        this.value += value;\r\n        return this;\r\n    }\r\n    appendCodeblock(langId, code) {\r\n        this.value += '\\n```';\r\n        this.value += langId;\r\n        this.value += '\\n';\r\n        this.value += code;\r\n        this.value += '\\n```\\n';\r\n        return this;\r\n    }\r\n}\r\nexport function isEmptyMarkdownString(oneOrMany) {\r\n    if (isMarkdownString(oneOrMany)) {\r\n        return !oneOrMany.value;\r\n    }\r\n    else if (Array.isArray(oneOrMany)) {\r\n        return oneOrMany.every(isEmptyMarkdownString);\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\nexport function isMarkdownString(thing) {\r\n    if (thing instanceof MarkdownString) {\r\n        return true;\r\n    }\r\n    else if (thing && typeof thing === 'object') {\r\n        return typeof thing.value === 'string'\r\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\r\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\r\n    }\r\n    return false;\r\n}\r\nexport function escapeMarkdownSyntaxTokens(text) {\r\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\r\n}\r\nexport function removeMarkdownEscapes(text) {\r\n    if (!text) {\r\n        return text;\r\n    }\r\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\r\n}\r\nexport function parseHrefAndDimensions(href) {\r\n    const dimensions = [];\r\n    const splitted = href.split('|').map(s => s.trim());\r\n    href = splitted[0];\r\n    const parameters = splitted[1];\r\n    if (parameters) {\r\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\r\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\r\n        const height = heightFromParams ? heightFromParams[1] : '';\r\n        const width = widthFromParams ? widthFromParams[1] : '';\r\n        const widthIsFinite = isFinite(parseInt(width));\r\n        const heightIsFinite = isFinite(parseInt(height));\r\n        if (widthIsFinite) {\r\n            dimensions.push(`width=\"${width}\"`);\r\n        }\r\n        if (heightIsFinite) {\r\n            dimensions.push(`height=\"${height}\"`);\r\n        }\r\n    }\r\n    return { href, dimensions };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a;\r\nimport * as DOM from './dom.js';\r\nimport { createElement } from './formattedTextRenderer.js';\r\nimport { onUnexpectedError } from '../common/errors.js';\r\nimport { parseHrefAndDimensions, removeMarkdownEscapes } from '../common/htmlContent.js';\r\nimport { defaultGenerator } from '../common/idGenerator.js';\r\nimport * as marked from '../common/marked/marked.js';\r\nimport { insane } from '../common/insane/insane.js';\r\nimport { parse } from '../common/marshalling.js';\r\nimport { cloneAndChange } from '../common/objects.js';\r\nimport { escape } from '../common/strings.js';\r\nimport { URI } from '../common/uri.js';\r\nimport { FileAccess, Schemas } from '../common/network.js';\r\nimport { markdownEscapeEscapedIcons } from '../common/iconLabels.js';\r\nimport { resolvePath } from '../common/resources.js';\r\nimport { StandardMouseEvent } from './mouseEvent.js';\r\nimport { renderLabelWithIcons } from './ui/iconLabel/iconLabels.js';\r\nimport { Event } from '../common/event.js';\r\nimport { DomEmitter } from './event.js';\r\nconst _ttpInsane = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('insane', {\r\n    createHTML(value, options) {\r\n        return insane(value, options);\r\n    }\r\n});\r\n/**\r\n * Low-level way create a html element from a markdown string.\r\n *\r\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/browser/core/markdownRenderer.ts)\r\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\r\n */\r\nexport function renderMarkdown(markdown, options = {}, markedOptions = {}) {\r\n    var _a;\r\n    const element = createElement(options);\r\n    const _uriMassage = function (part) {\r\n        let data;\r\n        try {\r\n            data = parse(decodeURIComponent(part));\r\n        }\r\n        catch (e) {\r\n            // ignore\r\n        }\r\n        if (!data) {\r\n            return part;\r\n        }\r\n        data = cloneAndChange(data, value => {\r\n            if (markdown.uris && markdown.uris[value]) {\r\n                return URI.revive(markdown.uris[value]);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n        return encodeURIComponent(JSON.stringify(data));\r\n    };\r\n    const _href = function (href, isDomUri) {\r\n        const data = markdown.uris && markdown.uris[href];\r\n        if (!data) {\r\n            return href; // no uri exists\r\n        }\r\n        let uri = URI.revive(data);\r\n        if (URI.parse(href).toString() === uri.toString()) {\r\n            return href; // no tranformation performed\r\n        }\r\n        if (isDomUri) {\r\n            // this URI will end up as \"src\"-attribute of a dom node\r\n            // and because of that special rewriting needs to be done\r\n            // so that the URI uses a protocol that's understood by\r\n            // browsers (like http or https)\r\n            return FileAccess.asBrowserUri(uri).toString(true);\r\n        }\r\n        if (uri.query) {\r\n            uri = uri.with({ query: _uriMassage(uri.query) });\r\n        }\r\n        return uri.toString();\r\n    };\r\n    // signal to code-block render that the\r\n    // element has been created\r\n    let signalInnerHTML;\r\n    const withInnerHTML = new Promise(c => signalInnerHTML = c);\r\n    const renderer = new marked.Renderer();\r\n    renderer.image = (href, title, text) => {\r\n        let dimensions = [];\r\n        let attributes = [];\r\n        if (href) {\r\n            ({ href, dimensions } = parseHrefAndDimensions(href));\r\n            href = _href(href, true);\r\n            try {\r\n                const hrefAsUri = URI.parse(href);\r\n                if (options.baseUrl && hrefAsUri.scheme === Schemas.file) { // absolute or relative local path, or file: uri\r\n                    href = resolvePath(options.baseUrl, href).toString();\r\n                }\r\n            }\r\n            catch (err) { }\r\n            attributes.push(`src=\"${href}\"`);\r\n        }\r\n        if (text) {\r\n            attributes.push(`alt=\"${text}\"`);\r\n        }\r\n        if (title) {\r\n            attributes.push(`title=\"${title}\"`);\r\n        }\r\n        if (dimensions.length) {\r\n            attributes = attributes.concat(dimensions);\r\n        }\r\n        return '<img ' + attributes.join(' ') + '>';\r\n    };\r\n    renderer.link = (href, title, text) => {\r\n        // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\r\n        if (href === text) { // raw link case\r\n            text = removeMarkdownEscapes(text);\r\n        }\r\n        href = _href(href, false);\r\n        if (options.baseUrl) {\r\n            const hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\r\n            if (!hasScheme) {\r\n                href = resolvePath(options.baseUrl, href).toString();\r\n            }\r\n        }\r\n        title = removeMarkdownEscapes(title);\r\n        href = removeMarkdownEscapes(href);\r\n        if (!href\r\n            || href.match(/^data:|javascript:/i)\r\n            || (href.match(/^command:/i) && !markdown.isTrusted)\r\n            || href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)) {\r\n            // drop the link\r\n            return text;\r\n        }\r\n        else {\r\n            // HTML Encode href\r\n            href = href.replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\"/g, '&quot;')\r\n                .replace(/'/g, '&#39;');\r\n            return `<a href=\"#\" data-href=\"${href}\" title=\"${title || href}\">${text}</a>`;\r\n        }\r\n    };\r\n    renderer.paragraph = (text) => {\r\n        if (markdown.supportThemeIcons) {\r\n            const elements = renderLabelWithIcons(text);\r\n            text = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\r\n        }\r\n        return `<p>${text}</p>`;\r\n    };\r\n    if (options.codeBlockRenderer) {\r\n        renderer.code = (code, lang) => {\r\n            const value = options.codeBlockRenderer(lang, code);\r\n            // when code-block rendering is async we return sync\r\n            // but update the node with the real result later.\r\n            const id = defaultGenerator.nextId();\r\n            const promise = Promise.all([value, withInnerHTML]).then(values => {\r\n                const span = element.querySelector(`div[data-code=\"${id}\"]`);\r\n                if (span) {\r\n                    DOM.reset(span, values[0]);\r\n                }\r\n            }).catch(_err => {\r\n                // ignore\r\n            });\r\n            if (options.asyncRenderCallback) {\r\n                promise.then(options.asyncRenderCallback);\r\n            }\r\n            return `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\r\n        };\r\n    }\r\n    if (options.actionHandler) {\r\n        const onClick = options.actionHandler.disposeables.add(new DomEmitter(element, 'click'));\r\n        const onAuxClick = options.actionHandler.disposeables.add(new DomEmitter(element, 'auxclick'));\r\n        options.actionHandler.disposeables.add(Event.any(onClick.event, onAuxClick.event)(e => {\r\n            const mouseEvent = new StandardMouseEvent(e);\r\n            if (!mouseEvent.leftButton && !mouseEvent.middleButton) {\r\n                return;\r\n            }\r\n            let target = mouseEvent.target;\r\n            if (target.tagName !== 'A') {\r\n                target = target.parentElement;\r\n                if (!target || target.tagName !== 'A') {\r\n                    return;\r\n                }\r\n            }\r\n            try {\r\n                const href = target.dataset['href'];\r\n                if (href) {\r\n                    options.actionHandler.callback(href, mouseEvent);\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n            finally {\r\n                mouseEvent.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n    // Use our own sanitizer so that we can let through only spans.\r\n    // Otherwise, we'd be letting all html be rendered.\r\n    // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\r\n    // We always pass the output through insane after this so that we don't rely on\r\n    // marked for sanitization.\r\n    markedOptions.sanitizer = (html) => {\r\n        const match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\r\n        return match ? html : '';\r\n    };\r\n    markedOptions.sanitize = true;\r\n    markedOptions.silent = true;\r\n    markedOptions.renderer = renderer;\r\n    // values that are too long will freeze the UI\r\n    let value = (_a = markdown.value) !== null && _a !== void 0 ? _a : '';\r\n    if (value.length > 100000) {\r\n        value = `${value.substr(0, 100000)}\u2026`;\r\n    }\r\n    // escape theme icons\r\n    if (markdown.supportThemeIcons) {\r\n        value = markdownEscapeEscapedIcons(value);\r\n    }\r\n    const renderedMarkdown = marked.parse(value, markedOptions);\r\n    // sanitize with insane\r\n    element.innerHTML = sanitizeRenderedMarkdown(markdown, renderedMarkdown);\r\n    // signal that async code blocks can be now be inserted\r\n    signalInnerHTML();\r\n    // signal size changes for image tags\r\n    if (options.asyncRenderCallback) {\r\n        for (const img of element.getElementsByTagName('img')) {\r\n            const listener = DOM.addDisposableListener(img, 'load', () => {\r\n                listener.dispose();\r\n                options.asyncRenderCallback();\r\n            });\r\n        }\r\n    }\r\n    return element;\r\n}\r\nfunction sanitizeRenderedMarkdown(options, renderedMarkdown) {\r\n    var _a;\r\n    const insaneOptions = getInsaneOptions(options);\r\n    return (_a = _ttpInsane === null || _ttpInsane === void 0 ? void 0 : _ttpInsane.createHTML(renderedMarkdown, insaneOptions)) !== null && _a !== void 0 ? _a : insane(renderedMarkdown, insaneOptions);\r\n}\r\nfunction getInsaneOptions(options) {\r\n    const allowedSchemes = [\r\n        Schemas.http,\r\n        Schemas.https,\r\n        Schemas.mailto,\r\n        Schemas.data,\r\n        Schemas.file,\r\n        Schemas.vscodeRemote,\r\n        Schemas.vscodeRemoteResource,\r\n    ];\r\n    if (options.isTrusted) {\r\n        allowedSchemes.push(Schemas.command);\r\n    }\r\n    return {\r\n        allowedSchemes,\r\n        // allowedTags should included everything that markdown renders to.\r\n        // Since we have our own sanitize function for marked, it's possible we missed some tag so let insane make sure.\r\n        // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\r\n        // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\r\n        allowedTags: ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'],\r\n        allowedAttributes: {\r\n            'a': ['href', 'name', 'target', 'data-href'],\r\n            'img': ['src', 'title', 'alt', 'width', 'height'],\r\n            'div': ['class', 'data-code'],\r\n            'span': ['class', 'style'],\r\n            // https://github.com/microsoft/vscode/issues/95937\r\n            'th': ['align'],\r\n            'td': ['align']\r\n        },\r\n        filter(token) {\r\n            if (token.tag === 'span' && options.isTrusted) {\r\n                if (token.attrs['style'] && (Object.keys(token.attrs).length === 1)) {\r\n                    return !!token.attrs['style'].match(/^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/);\r\n                }\r\n                else if (token.attrs['class']) {\r\n                    // The class should match codicon rendering in src\\vs\\base\\common\\codicons.ts\r\n                    return !!token.attrs['class'].match(/^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n}\r\n", "/*\nThe MIT License (MIT)\n\nCopyright \u00A9 2015 Nicolas Bevacqua\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet __insane_func;\n\n(function () { function r(e, n, t) { function o(i, f) { if (!n[i]) { if (!e[i]) { var c = \"function\" == typeof require && require; if (!f && c) return c(i, !0); if (u) return u(i, !0); var a = new Error(\"Cannot find module '\" + i + \"'\"); throw a.code = \"MODULE_NOT_FOUND\", a } var p = n[i] = { exports: {} }; e[i][0].call(p.exports, function (r) { var n = e[i][1][r]; return o(n || r) }, p, p.exports, r, e, n, t) } return n[i].exports } for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++)o(t[i]); return o } return r })()({\n\t1: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar toMap = require('./toMap');\n\t\tvar uris = ['background', 'base', 'cite', 'href', 'longdesc', 'src', 'usemap'];\n\n\t\tmodule.exports = {\n\t\t\turis: toMap(uris) // attributes that have an href and hence need to be sanitized\n\t\t};\n\n\t}, { \"./toMap\": 10 }], 2: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar defaults = {\n\t\t\tallowedAttributes: {\n\t\t\t\t'*': ['title', 'accesskey'],\n\t\t\t\ta: ['href', 'name', 'target', 'aria-label'],\n\t\t\t\tiframe: ['allowfullscreen', 'frameborder', 'src'],\n\t\t\t\timg: ['src', 'alt', 'title', 'aria-label']\n\t\t\t},\n\t\t\tallowedClasses: {},\n\t\t\tallowedSchemes: ['http', 'https', 'mailto'],\n\t\t\tallowedTags: [\n\t\t\t\t'a', 'abbr', 'article', 'b', 'blockquote', 'br', 'caption', 'code', 'del', 'details', 'div', 'em',\n\t\t\t\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'ins', 'kbd', 'li', 'main', 'mark',\n\t\t\t\t'ol', 'p', 'pre', 'section', 'span', 'strike', 'strong', 'sub', 'summary', 'sup', 'table',\n\t\t\t\t'tbody', 'td', 'th', 'thead', 'tr', 'u', 'ul'\n\t\t\t],\n\t\t\tfilter: null\n\t\t};\n\n\t\tmodule.exports = defaults;\n\n\t}, {}], 3: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar toMap = require('./toMap');\n\t\tvar voids = ['area', 'br', 'col', 'hr', 'img', 'wbr', 'input', 'base', 'basefont', 'link', 'meta'];\n\n\t\tmodule.exports = {\n\t\t\tvoids: toMap(voids)\n\t\t};\n\n\t}, { \"./toMap\": 10 }], 4: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar assign = require('assignment');\n\t\tvar parser = require('./parser');\n\t\tvar sanitizer = require('./sanitizer');\n\t\tvar defaults = require('./defaults');\n\n\t\tfunction insane(html, options, strict) {\n\t\t\tvar buffer = [];\n\t\t\tvar configuration = strict === true ? options : assign({}, defaults, options);\n\t\t\tvar handler = sanitizer(buffer, configuration);\n\n\t\t\tparser(html, handler);\n\n\t\t\treturn buffer.join('');\n\t\t}\n\n\t\tinsane.defaults = defaults;\n\t\tmodule.exports = insane;\n\t\t__insane_func = insane;\n\n\t}, { \"./defaults\": 2, \"./parser\": 7, \"./sanitizer\": 8, \"assignment\": 6, \"he\": 9 }], 5: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tmodule.exports = function lowercase(string) {\n\t\t\treturn typeof string === 'string' ? string.toLowerCase() : string;\n\t\t};\n\n\t}, {}], 6: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tfunction assignment(result) {\n\t\t\tvar stack = Array.prototype.slice.call(arguments, 1);\n\t\t\tvar item;\n\t\t\tvar key;\n\t\t\twhile (stack.length) {\n\t\t\t\titem = stack.shift();\n\t\t\t\tfor (key in item) {\n\t\t\t\t\tif (item.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (Object.prototype.toString.call(result[key]) === '[object Object]') {\n\t\t\t\t\t\t\tresult[key] = assignment(result[key], item[key]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult[key] = item[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tmodule.exports = assignment;\n\n\t}, {}], 7: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar lowercase = require('./lowercase');\n\t\tvar attributes = require('./attributes');\n\t\tvar elements = require('./elements');\n\t\tvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\n\t\tvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\n\t\tvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\n\t\tvar rtag = /^</;\n\t\tvar rtagend = /^<\\s*\\//;\n\n\t\tfunction createStack() {\n\t\t\tvar stack = [];\n\t\t\tstack.lastItem = function lastItem() {\n\t\t\t\treturn stack[stack.length - 1];\n\t\t\t};\n\t\t\treturn stack;\n\t\t}\n\n\t\tfunction parser(html, handler) {\n\t\t\tvar stack = createStack();\n\t\t\tvar last = html;\n\t\t\tvar chars;\n\n\t\t\twhile (html) {\n\t\t\t\tparsePart();\n\t\t\t}\n\t\t\tparseEndTag(); // clean up any remaining tags\n\n\t\t\tfunction parsePart() {\n\t\t\t\tchars = true;\n\t\t\t\tparseTag();\n\n\t\t\t\tvar same = html === last;\n\t\t\t\tlast = html;\n\n\t\t\t\tif (same) { // discard, because it's invalid\n\t\t\t\t\thtml = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseTag() {\n\t\t\t\tif (html.substr(0, 4) === '<!--') { // comments\n\t\t\t\t\tparseComment();\n\t\t\t\t} else if (rtagend.test(html)) {\n\t\t\t\t\tparseEdge(rend, parseEndTag);\n\t\t\t\t} else if (rtag.test(html)) {\n\t\t\t\t\tparseEdge(rstart, parseStartTag);\n\t\t\t\t}\n\t\t\t\tparseTagDecode();\n\t\t\t}\n\n\t\t\tfunction parseEdge(regex, parser) {\n\t\t\t\tvar match = html.match(regex);\n\t\t\t\tif (match) {\n\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\tmatch[0].replace(regex, parser);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseComment() {\n\t\t\t\tvar index = html.indexOf('-->');\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tif (handler.comment) {\n\t\t\t\t\t\thandler.comment(html.substring(4, index));\n\t\t\t\t\t}\n\t\t\t\t\thtml = html.substring(index + 3);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseTagDecode() {\n\t\t\t\tif (!chars) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar text;\n\t\t\t\tvar index = html.indexOf('<');\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\ttext = html.substring(0, index);\n\t\t\t\t\thtml = html.substring(index);\n\t\t\t\t} else {\n\t\t\t\t\ttext = html;\n\t\t\t\t\thtml = '';\n\t\t\t\t}\n\t\t\t\tif (handler.chars) {\n\t\t\t\t\thandler.chars(text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseStartTag(tag, tagName, rest, unary) {\n\t\t\t\tvar attrs = {};\n\t\t\t\tvar low = lowercase(tagName);\n\t\t\t\tvar u = elements.voids[low] || !!unary;\n\n\t\t\t\trest.replace(rattrs, attrReplacer);\n\n\t\t\t\tif (!u) {\n\t\t\t\t\tstack.push(low);\n\t\t\t\t}\n\t\t\t\tif (handler.start) {\n\t\t\t\t\thandler.start(low, attrs, u);\n\t\t\t\t}\n\n\t\t\t\tfunction attrReplacer(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n\t\t\t\t\tif (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\n\t\t\t\t\t\tattrs[name] = void 0; // attribute is like <button disabled></button>\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattrs[name] = he.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseEndTag(tag, tagName) {\n\t\t\t\tvar i;\n\t\t\t\tvar pos = 0;\n\t\t\t\tvar low = lowercase(tagName);\n\t\t\t\tif (low) {\n\t\t\t\t\tfor (pos = stack.length - 1; pos >= 0; pos--) {\n\t\t\t\t\t\tif (stack[pos] === low) {\n\t\t\t\t\t\t\tbreak; // find the closest opened tag of the same type\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pos >= 0) {\n\t\t\t\t\tfor (i = stack.length - 1; i >= pos; i--) {\n\t\t\t\t\t\tif (handler.end) { // close all the open elements, up the stack\n\t\t\t\t\t\t\thandler.end(stack[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstack.length = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = parser;\n\n\t}, { \"./attributes\": 1, \"./elements\": 3, \"./lowercase\": 5, \"he\": 9 }], 8: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar lowercase = require('./lowercase');\n\t\tvar attributes = require('./attributes');\n\t\tvar elements = require('./elements');\n\n\t\tfunction sanitizer(buffer, options) {\n\t\t\tvar last;\n\t\t\tvar context;\n\t\t\tvar o = options || {};\n\n\t\t\treset();\n\n\t\t\treturn {\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tchars: chars\n\t\t\t};\n\n\t\t\tfunction out(value) {\n\t\t\t\tbuffer.push(value);\n\t\t\t}\n\n\t\t\tfunction start(tag, attrs, unary) {\n\t\t\t\tvar low = lowercase(tag);\n\n\t\t\t\tif (context.ignoring) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\t\t\t\tif ((o.allowedTags || []).indexOf(low) === -1) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\t\t\t\tif (o.filter && !o.filter({ tag: low, attrs: attrs })) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\n\t\t\t\tout('<');\n\t\t\t\tout(low);\n\t\t\t\tObject.keys(attrs).forEach(parse);\n\t\t\t\tout(unary ? '/>' : '>');\n\n\t\t\t\tfunction parse(key) {\n\t\t\t\t\tvar value = attrs[key];\n\t\t\t\t\tvar classesOk = (o.allowedClasses || {})[low] || [];\n\t\t\t\t\tvar attrsOk = (o.allowedAttributes || {})[low] || [];\n\t\t\t\t\tattrsOk = attrsOk.concat((o.allowedAttributes || {})['*'] || []);\n\t\t\t\t\tvar valid;\n\t\t\t\t\tvar lkey = lowercase(key);\n\t\t\t\t\tif (lkey === 'class' && attrsOk.indexOf(lkey) === -1) {\n\t\t\t\t\t\tvalue = value.split(' ').filter(isValidClass).join(' ').trim();\n\t\t\t\t\t\tvalid = value.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalid = attrsOk.indexOf(lkey) !== -1 && (attributes.uris[lkey] !== true || testUrl(value));\n\t\t\t\t\t}\n\t\t\t\t\tif (valid) {\n\t\t\t\t\t\tout(' ');\n\t\t\t\t\t\tout(key);\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tout('=\"');\n\t\t\t\t\t\t\tout(he.encode(value));\n\t\t\t\t\t\t\tout('\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction isValidClass(className) {\n\t\t\t\t\t\treturn classesOk && classesOk.indexOf(className) !== -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction end(tag) {\n\t\t\t\tvar low = lowercase(tag);\n\t\t\t\tvar allowed = (o.allowedTags || []).indexOf(low) !== -1;\n\t\t\t\tif (allowed) {\n\t\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\t\tout('</');\n\t\t\t\t\t\tout(low);\n\t\t\t\t\t\tout('>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunignore(low);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunignore(low);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction testUrl(text) {\n\t\t\t\tvar start = text[0];\n\t\t\t\tif (start === '#' || start === '/') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar colon = text.indexOf(':');\n\t\t\t\tif (colon === -1) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar questionmark = text.indexOf('?');\n\t\t\t\tif (questionmark !== -1 && colon > questionmark) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar hash = text.indexOf('#');\n\t\t\t\tif (hash !== -1 && colon > hash) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn o.allowedSchemes.some(matches);\n\n\t\t\t\tfunction matches(scheme) {\n\t\t\t\t\treturn text.indexOf(scheme + ':') === 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction chars(text) {\n\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\tout(o.transformText ? o.transformText(text) : text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ignore(tag) {\n\t\t\t\tif (elements.voids[tag]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\tcontext = { ignoring: tag, depth: 1 };\n\t\t\t\t} else if (context.ignoring === tag) {\n\t\t\t\t\tcontext.depth++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction unignore(tag) {\n\t\t\t\tif (context.ignoring === tag) {\n\t\t\t\t\tif (--context.depth <= 0) {\n\t\t\t\t\t\treset();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reset() {\n\t\t\t\tcontext = { ignoring: false, depth: 0 };\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = sanitizer;\n\n\t}, { \"./attributes\": 1, \"./elements\": 3, \"./lowercase\": 5, \"he\": 9 }], 9: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar escapes = {\n\t\t\t'&': '&amp;',\n\t\t\t'<': '&lt;',\n\t\t\t'>': '&gt;',\n\t\t\t'\"': '&quot;',\n\t\t\t\"'\": '&#39;'\n\t\t};\n\t\tvar unescapes = {\n\t\t\t'&amp;': '&',\n\t\t\t'&lt;': '<',\n\t\t\t'&gt;': '>',\n\t\t\t'&quot;': '\"',\n\t\t\t'&#39;': \"'\"\n\t\t};\n\t\tvar rescaped = /(&amp;|&lt;|&gt;|&quot;|&#39;)/g;\n\t\tvar runescaped = /[&<>\"']/g;\n\n\t\tfunction escapeHtmlChar(match) {\n\t\t\treturn escapes[match];\n\t\t}\n\t\tfunction unescapeHtmlChar(match) {\n\t\t\treturn unescapes[match];\n\t\t}\n\n\t\tfunction escapeHtml(text) {\n\t\t\treturn text == null ? '' : String(text).replace(runescaped, escapeHtmlChar);\n\t\t}\n\n\t\tfunction unescapeHtml(html) {\n\t\t\treturn html == null ? '' : String(html).replace(rescaped, unescapeHtmlChar);\n\t\t}\n\n\t\tescapeHtml.options = unescapeHtml.options = {};\n\n\t\tmodule.exports = {\n\t\t\tencode: escapeHtml,\n\t\t\tescape: escapeHtml,\n\t\t\tdecode: unescapeHtml,\n\t\t\tunescape: unescapeHtml,\n\t\t\tversion: '1.0.0-browser'\n\t\t};\n\n\t}, {}], 10: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tfunction toMap(list) {\n\t\t\treturn list.reduce(asKey, {});\n\t\t}\n\n\t\tfunction asKey(accumulator, item) {\n\t\t\taccumulator[item] = true;\n\t\t\treturn accumulator;\n\t\t}\n\n\t\tmodule.exports = toMap;\n\n\t}, {}]\n}, {}, [4]);\n\n// ESM-comment-begin\n// define(function() { return { insane: __insane_func }; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\nexport var insane = __insane_func;\n// ESM-uncomment-end\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a;\r\nimport { renderMarkdown } from '../../../base/browser/markdownRenderer.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { tokenizeToString } from '../../common/modes/textToHtmlTokenizer.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\n/**\r\n * Markdown renderer that can render codeblocks with the editor mechanics. This\r\n * renderer should always be preferred.\r\n */\r\nlet MarkdownRenderer = class MarkdownRenderer {\r\n    constructor(_options, _modeService, _openerService) {\r\n        this._options = _options;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this._onDidRenderAsync = new Emitter();\r\n        this.onDidRenderAsync = this._onDidRenderAsync.event;\r\n    }\r\n    dispose() {\r\n        this._onDidRenderAsync.dispose();\r\n    }\r\n    render(markdown, options, markedOptions) {\r\n        const disposables = new DisposableStore();\r\n        let element;\r\n        if (!markdown) {\r\n            element = document.createElement('span');\r\n        }\r\n        else {\r\n            element = renderMarkdown(markdown, Object.assign(Object.assign({}, this._getRenderOptions(markdown, disposables)), options), markedOptions);\r\n        }\r\n        return {\r\n            element,\r\n            dispose: () => disposables.dispose()\r\n        };\r\n    }\r\n    _getRenderOptions(markdown, disposeables) {\r\n        return {\r\n            baseUrl: this._options.baseUrl,\r\n            codeBlockRenderer: (languageAlias, value) => __awaiter(this, void 0, void 0, function* () {\r\n                var _a, _b, _c, _d;\r\n                // In markdown,\r\n                // it is possible that we stumble upon language aliases (e.g.js instead of javascript)\r\n                // it is possible no alias is given in which case we fall back to the current editor lang\r\n                let modeId;\r\n                if (languageAlias) {\r\n                    modeId = this._modeService.getModeIdForLanguageName(languageAlias);\r\n                }\r\n                else if (this._options.editor) {\r\n                    modeId = (_a = this._options.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLanguageIdentifier().language;\r\n                }\r\n                if (!modeId) {\r\n                    modeId = 'plaintext';\r\n                }\r\n                this._modeService.triggerMode(modeId);\r\n                const tokenization = (_b = yield TokenizationRegistry.getPromise(modeId)) !== null && _b !== void 0 ? _b : undefined;\r\n                const element = document.createElement('span');\r\n                element.innerHTML = ((_d = (_c = MarkdownRenderer._ttpTokenizer) === null || _c === void 0 ? void 0 : _c.createHTML(value, tokenization)) !== null && _d !== void 0 ? _d : tokenizeToString(value, tokenization));\r\n                // use \"good\" font\r\n                let fontFamily = this._options.codeBlockFontFamily;\r\n                if (this._options.editor) {\r\n                    fontFamily = this._options.editor.getOption(41 /* fontInfo */).fontFamily;\r\n                }\r\n                if (fontFamily) {\r\n                    element.style.fontFamily = fontFamily;\r\n                }\r\n                return element;\r\n            }),\r\n            asyncRenderCallback: () => this._onDidRenderAsync.fire(),\r\n            actionHandler: {\r\n                callback: (content) => this._openerService.open(content, { fromUserGesture: true, allowContributedOpeners: true, allowCommands: markdown.isTrusted }).catch(onUnexpectedError),\r\n                disposeables\r\n            }\r\n        };\r\n    }\r\n};\r\nMarkdownRenderer._ttpTokenizer = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('tokenizeToString', {\r\n    createHTML(value, tokenizer) {\r\n        return tokenizeToString(value, tokenizer);\r\n    }\r\n});\r\nMarkdownRenderer = __decorate([\r\n    __param(1, IModeService),\r\n    __param(2, IOpenerService)\r\n], MarkdownRenderer);\r\nexport { MarkdownRenderer };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Event, Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Dimension } from '../../../base/browser/dom.js';\r\nimport { OrthogonalEdge, Sash } from '../../../base/browser/ui/sash/sash.js';\r\nexport class ResizableHTMLElement {\r\n    constructor() {\r\n        this._onDidWillResize = new Emitter();\r\n        this.onDidWillResize = this._onDidWillResize.event;\r\n        this._onDidResize = new Emitter();\r\n        this.onDidResize = this._onDidResize.event;\r\n        this._sashListener = new DisposableStore();\r\n        this._size = new Dimension(0, 0);\r\n        this._minSize = new Dimension(0, 0);\r\n        this._maxSize = new Dimension(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        this.domNode = document.createElement('div');\r\n        this._eastSash = new Sash(this.domNode, { getVerticalSashLeft: () => this._size.width }, { orientation: 0 /* VERTICAL */ });\r\n        this._westSash = new Sash(this.domNode, { getVerticalSashLeft: () => 0 }, { orientation: 0 /* VERTICAL */ });\r\n        this._northSash = new Sash(this.domNode, { getHorizontalSashTop: () => 0 }, { orientation: 1 /* HORIZONTAL */, orthogonalEdge: OrthogonalEdge.North });\r\n        this._southSash = new Sash(this.domNode, { getHorizontalSashTop: () => this._size.height }, { orientation: 1 /* HORIZONTAL */, orthogonalEdge: OrthogonalEdge.South });\r\n        this._northSash.orthogonalStartSash = this._westSash;\r\n        this._northSash.orthogonalEndSash = this._eastSash;\r\n        this._southSash.orthogonalStartSash = this._westSash;\r\n        this._southSash.orthogonalEndSash = this._eastSash;\r\n        let currentSize;\r\n        let deltaY = 0;\r\n        let deltaX = 0;\r\n        this._sashListener.add(Event.any(this._northSash.onDidStart, this._eastSash.onDidStart, this._southSash.onDidStart, this._westSash.onDidStart)(() => {\r\n            if (currentSize === undefined) {\r\n                this._onDidWillResize.fire();\r\n                currentSize = this._size;\r\n                deltaY = 0;\r\n                deltaX = 0;\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._northSash.onDidEnd, this._eastSash.onDidEnd, this._southSash.onDidEnd, this._westSash.onDidEnd)(() => {\r\n            if (currentSize !== undefined) {\r\n                currentSize = undefined;\r\n                deltaY = 0;\r\n                deltaX = 0;\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._eastSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaX = e.currentX - e.startX;\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, east: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._westSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaX = -(e.currentX - e.startX);\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, west: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._northSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaY = -(e.currentY - e.startY);\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, north: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._southSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaY = e.currentY - e.startY;\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, south: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._eastSash.onDidReset, this._westSash.onDidReset)(e => {\r\n            if (this._preferredSize) {\r\n                this.layout(this._size.height, this._preferredSize.width);\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._northSash.onDidReset, this._southSash.onDidReset)(e => {\r\n            if (this._preferredSize) {\r\n                this.layout(this._preferredSize.height, this._size.width);\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._northSash.dispose();\r\n        this._southSash.dispose();\r\n        this._eastSash.dispose();\r\n        this._westSash.dispose();\r\n        this._sashListener.dispose();\r\n        this._onDidResize.dispose();\r\n        this._onDidWillResize.dispose();\r\n        this.domNode.remove();\r\n    }\r\n    enableSashes(north, east, south, west) {\r\n        this._northSash.state = north ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._eastSash.state = east ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._southSash.state = south ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._westSash.state = west ? 3 /* Enabled */ : 0 /* Disabled */;\r\n    }\r\n    layout(height = this.size.height, width = this.size.width) {\r\n        const { height: minHeight, width: minWidth } = this._minSize;\r\n        const { height: maxHeight, width: maxWidth } = this._maxSize;\r\n        height = Math.max(minHeight, Math.min(maxHeight, height));\r\n        width = Math.max(minWidth, Math.min(maxWidth, width));\r\n        const newSize = new Dimension(width, height);\r\n        if (!Dimension.equals(newSize, this._size)) {\r\n            this.domNode.style.height = height + 'px';\r\n            this.domNode.style.width = width + 'px';\r\n            this._size = newSize;\r\n            this._northSash.layout();\r\n            this._eastSash.layout();\r\n            this._southSash.layout();\r\n            this._westSash.layout();\r\n        }\r\n    }\r\n    clearSashHoverState() {\r\n        this._eastSash.clearSashHoverState();\r\n        this._westSash.clearSashHoverState();\r\n        this._northSash.clearSashHoverState();\r\n        this._southSash.clearSashHoverState();\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    set maxSize(value) {\r\n        this._maxSize = value;\r\n    }\r\n    get maxSize() {\r\n        return this._maxSize;\r\n    }\r\n    set minSize(value) {\r\n        this._minSize = value;\r\n    }\r\n    get minSize() {\r\n        return this._minSize;\r\n    }\r\n    set preferredSize(value) {\r\n        this._preferredSize = value;\r\n    }\r\n    get preferredSize() {\r\n        return this._preferredSize;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { ResizableHTMLElement } from './resizable.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nexport function canExpandCompletionItem(item) {\r\n    return !!item && Boolean(item.completion.documentation || item.completion.detail && item.completion.detail !== item.completion.label);\r\n}\r\nlet SuggestDetailsWidget = class SuggestDetailsWidget {\r\n    constructor(_editor, instaService) {\r\n        this._editor = _editor;\r\n        this._onDidClose = new Emitter();\r\n        this.onDidClose = this._onDidClose.event;\r\n        this._onDidChangeContents = new Emitter();\r\n        this.onDidChangeContents = this._onDidChangeContents.event;\r\n        this._disposables = new DisposableStore();\r\n        this._renderDisposeable = new DisposableStore();\r\n        this._borderWidth = 1;\r\n        this._size = new dom.Dimension(330, 0);\r\n        this.domNode = dom.$('.suggest-details');\r\n        this.domNode.classList.add('no-docs');\r\n        this._markdownRenderer = instaService.createInstance(MarkdownRenderer, { editor: _editor });\r\n        this._body = dom.$('.body');\r\n        this._scrollbar = new DomScrollableElement(this._body, {});\r\n        dom.append(this.domNode, this._scrollbar.getDomNode());\r\n        this._disposables.add(this._scrollbar);\r\n        this._header = dom.append(this._body, dom.$('.header'));\r\n        this._close = dom.append(this._header, dom.$('span' + Codicon.close.cssSelector));\r\n        this._close.title = nls.localize('details.close', \"Close\");\r\n        this._type = dom.append(this._header, dom.$('p.type'));\r\n        this._docs = dom.append(this._body, dom.$('p.docs'));\r\n        this._configureFont();\r\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(41 /* fontInfo */)) {\r\n                this._configureFont();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._renderDisposeable.dispose();\r\n    }\r\n    _configureFont() {\r\n        const options = this._editor.getOptions();\r\n        const fontInfo = options.get(41 /* fontInfo */);\r\n        const fontFamily = fontInfo.fontFamily;\r\n        const fontSize = options.get(106 /* suggestFontSize */) || fontInfo.fontSize;\r\n        const lineHeight = options.get(107 /* suggestLineHeight */) || fontInfo.lineHeight;\r\n        const fontWeight = fontInfo.fontWeight;\r\n        const fontSizePx = `${fontSize}px`;\r\n        const lineHeightPx = `${lineHeight}px`;\r\n        this.domNode.style.fontSize = fontSizePx;\r\n        this.domNode.style.lineHeight = lineHeightPx;\r\n        this.domNode.style.fontWeight = fontWeight;\r\n        this.domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n        this._type.style.fontFamily = fontFamily;\r\n        this._close.style.height = lineHeightPx;\r\n        this._close.style.width = lineHeightPx;\r\n    }\r\n    getLayoutInfo() {\r\n        const lineHeight = this._editor.getOption(107 /* suggestLineHeight */) || this._editor.getOption(41 /* fontInfo */).lineHeight;\r\n        const borderWidth = this._borderWidth;\r\n        const borderHeight = borderWidth * 2;\r\n        return {\r\n            lineHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14\r\n        };\r\n    }\r\n    renderLoading() {\r\n        this._type.textContent = nls.localize('loading', \"Loading...\");\r\n        this._docs.textContent = '';\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        this.layout(this.size.width, this.getLayoutInfo().lineHeight * 2);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    renderItem(item, explainMode) {\r\n        var _a, _b;\r\n        this._renderDisposeable.clear();\r\n        let { detail, documentation } = item.completion;\r\n        if (explainMode) {\r\n            let md = '';\r\n            md += `score: ${item.score[0]}\\n`;\r\n            md += `prefix: ${(_a = item.word) !== null && _a !== void 0 ? _a : '(no prefix)'}\\n`;\r\n            md += `word: ${item.completion.filterText ? item.completion.filterText + ' (filterText)' : item.textLabel}\\n`;\r\n            md += `distance: ${item.distance} (localityBonus-setting)\\n`;\r\n            md += `index: ${item.idx}, based on ${item.completion.sortText && `sortText: \"${item.completion.sortText}\"` || 'label'}\\n`;\r\n            md += `commit_chars: ${(_b = item.completion.commitCharacters) === null || _b === void 0 ? void 0 : _b.join('')}\\n`;\r\n            documentation = new MarkdownString().appendCodeblock('empty', md);\r\n            detail = `Provider: ${item.provider._debugDisplayName}`;\r\n        }\r\n        if (!explainMode && !canExpandCompletionItem(item)) {\r\n            this.clearContents();\r\n            return;\r\n        }\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        // --- details\r\n        if (detail) {\r\n            const cappedDetail = detail.length > 100000 ? `${detail.substr(0, 100000)}\u2026` : detail;\r\n            this._type.textContent = cappedDetail;\r\n            this._type.title = cappedDetail;\r\n            dom.show(this._type);\r\n            this._type.classList.toggle('auto-wrap', !/\\r?\\n^\\s+/gmi.test(cappedDetail));\r\n        }\r\n        else {\r\n            dom.clearNode(this._type);\r\n            this._type.title = '';\r\n            dom.hide(this._type);\r\n            this.domNode.classList.add('no-type');\r\n        }\r\n        // --- documentation\r\n        dom.clearNode(this._docs);\r\n        if (typeof documentation === 'string') {\r\n            this._docs.classList.remove('markdown-docs');\r\n            this._docs.textContent = documentation;\r\n        }\r\n        else if (documentation) {\r\n            this._docs.classList.add('markdown-docs');\r\n            dom.clearNode(this._docs);\r\n            const renderedContents = this._markdownRenderer.render(documentation);\r\n            this._docs.appendChild(renderedContents.element);\r\n            this._renderDisposeable.add(renderedContents);\r\n            this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(() => {\r\n                this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n                this._onDidChangeContents.fire(this);\r\n            }));\r\n        }\r\n        this.domNode.style.userSelect = 'text';\r\n        this.domNode.tabIndex = -1;\r\n        this._close.onmousedown = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n        this._close.onclick = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._onDidClose.fire();\r\n        };\r\n        this._body.scrollTop = 0;\r\n        this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    clearContents() {\r\n        this.domNode.classList.add('no-docs');\r\n        this._type.textContent = '';\r\n        this._docs.textContent = '';\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    layout(width, height) {\r\n        const newSize = new dom.Dimension(width, height);\r\n        if (!dom.Dimension.equals(newSize, this._size)) {\r\n            this._size = newSize;\r\n            dom.size(this.domNode, width, height);\r\n        }\r\n        this._scrollbar.scanDomNode();\r\n    }\r\n    scrollDown(much = 8) {\r\n        this._body.scrollTop += much;\r\n    }\r\n    scrollUp(much = 8) {\r\n        this._body.scrollTop -= much;\r\n    }\r\n    scrollTop() {\r\n        this._body.scrollTop = 0;\r\n    }\r\n    scrollBottom() {\r\n        this._body.scrollTop = this._body.scrollHeight;\r\n    }\r\n    pageDown() {\r\n        this.scrollDown(80);\r\n    }\r\n    pageUp() {\r\n        this.scrollUp(80);\r\n    }\r\n    set borderWidth(width) {\r\n        this._borderWidth = width;\r\n    }\r\n    get borderWidth() {\r\n        return this._borderWidth;\r\n    }\r\n};\r\nSuggestDetailsWidget = __decorate([\r\n    __param(1, IInstantiationService)\r\n], SuggestDetailsWidget);\r\nexport { SuggestDetailsWidget };\r\nexport class SuggestDetailsOverlay {\r\n    constructor(widget, _editor) {\r\n        this.widget = widget;\r\n        this._editor = _editor;\r\n        this._disposables = new DisposableStore();\r\n        this._added = false;\r\n        this._resizable = new ResizableHTMLElement();\r\n        this._resizable.domNode.classList.add('suggest-details-container');\r\n        this._resizable.domNode.appendChild(widget.domNode);\r\n        this._resizable.enableSashes(false, true, true, false);\r\n        let topLeftNow;\r\n        let sizeNow;\r\n        let deltaTop = 0;\r\n        let deltaLeft = 0;\r\n        this._disposables.add(this._resizable.onDidWillResize(() => {\r\n            topLeftNow = this._topLeft;\r\n            sizeNow = this._resizable.size;\r\n        }));\r\n        this._disposables.add(this._resizable.onDidResize(e => {\r\n            if (topLeftNow && sizeNow) {\r\n                this.widget.layout(e.dimension.width, e.dimension.height);\r\n                let updateTopLeft = false;\r\n                if (e.west) {\r\n                    deltaLeft = sizeNow.width - e.dimension.width;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (e.north) {\r\n                    deltaTop = sizeNow.height - e.dimension.height;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (updateTopLeft) {\r\n                    this._applyTopLeft({\r\n                        top: topLeftNow.top + deltaTop,\r\n                        left: topLeftNow.left + deltaLeft,\r\n                    });\r\n                }\r\n            }\r\n            if (e.done) {\r\n                topLeftNow = undefined;\r\n                sizeNow = undefined;\r\n                deltaTop = 0;\r\n                deltaLeft = 0;\r\n                this._userSize = e.dimension;\r\n            }\r\n        }));\r\n        this._disposables.add(this.widget.onDidChangeContents(() => {\r\n            var _a;\r\n            if (this._anchorBox) {\r\n                this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._resizable.dispose();\r\n        this._disposables.dispose();\r\n        this.hide();\r\n    }\r\n    getId() {\r\n        return 'suggest.details';\r\n    }\r\n    getDomNode() {\r\n        return this._resizable.domNode;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n    show() {\r\n        if (!this._added) {\r\n            this._editor.addOverlayWidget(this);\r\n            this.getDomNode().style.position = 'fixed';\r\n            this._added = true;\r\n        }\r\n    }\r\n    hide(sessionEnded = false) {\r\n        this._resizable.clearSashHoverState();\r\n        if (this._added) {\r\n            this._editor.removeOverlayWidget(this);\r\n            this._added = false;\r\n            this._anchorBox = undefined;\r\n            this._topLeft = undefined;\r\n        }\r\n        if (sessionEnded) {\r\n            this._userSize = undefined;\r\n            this.widget.clearContents();\r\n        }\r\n    }\r\n    placeAtAnchor(anchor) {\r\n        var _a;\r\n        const anchorBox = dom.getDomNodePagePosition(anchor);\r\n        this._anchorBox = anchorBox;\r\n        this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size);\r\n    }\r\n    _placeAtAnchor(anchorBox, size) {\r\n        const bodyBox = dom.getClientArea(document.body);\r\n        const info = this.widget.getLayoutInfo();\r\n        let maxSizeTop;\r\n        let maxSizeBottom;\r\n        let minSize = new dom.Dimension(220, 2 * info.lineHeight);\r\n        let left = 0;\r\n        let top = anchorBox.top;\r\n        let bottom = anchorBox.top + anchorBox.height - info.borderHeight;\r\n        let alignAtTop;\r\n        let alignEast;\r\n        // position: EAST, west, south\r\n        let width = bodyBox.width - (anchorBox.left + anchorBox.width + info.borderWidth + info.horizontalPadding);\r\n        left = -info.borderWidth + anchorBox.left + anchorBox.width;\r\n        alignEast = true;\r\n        maxSizeTop = new dom.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);\r\n        maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);\r\n        // find a better place if the widget is wider than there is space available\r\n        if (size.width > width) {\r\n            // position: east, WEST, south\r\n            if (anchorBox.left > width) {\r\n                // pos = SuggestDetailsPosition.West;\r\n                width = anchorBox.left - info.borderWidth - info.horizontalPadding;\r\n                alignEast = false;\r\n                left = Math.max(info.horizontalPadding, anchorBox.left - size.width - info.borderWidth);\r\n                maxSizeTop = maxSizeTop.with(width);\r\n                maxSizeBottom = maxSizeTop.with(undefined, maxSizeBottom.height);\r\n            }\r\n            // position: east, west, SOUTH\r\n            if (anchorBox.width > width * 1.3 && bodyBox.height - (anchorBox.top + anchorBox.height) > anchorBox.height) {\r\n                width = anchorBox.width;\r\n                left = anchorBox.left;\r\n                top = -info.borderWidth + anchorBox.top + anchorBox.height;\r\n                maxSizeTop = new dom.Dimension(anchorBox.width - info.borderHeight, bodyBox.height - anchorBox.top - anchorBox.height - info.verticalPadding);\r\n                maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top - info.verticalPadding);\r\n                minSize = minSize.with(maxSizeTop.width);\r\n            }\r\n        }\r\n        // top/bottom placement\r\n        let height = size.height;\r\n        let maxHeight = Math.max(maxSizeTop.height, maxSizeBottom.height);\r\n        if (height > maxHeight) {\r\n            height = maxHeight;\r\n        }\r\n        let maxSize;\r\n        if (height <= maxSizeTop.height) {\r\n            alignAtTop = true;\r\n            maxSize = maxSizeTop;\r\n        }\r\n        else {\r\n            alignAtTop = false;\r\n            maxSize = maxSizeBottom;\r\n        }\r\n        this._applyTopLeft({ left, top: alignAtTop ? top : bottom - height });\r\n        this.getDomNode().style.position = 'fixed';\r\n        this._resizable.enableSashes(!alignAtTop, alignEast, alignAtTop, !alignEast);\r\n        this._resizable.minSize = minSize;\r\n        this._resizable.maxSize = maxSize;\r\n        this._resizable.layout(height, Math.min(maxSize.width, size.width));\r\n        this.widget.layout(this._resizable.size.width, this._resizable.size.height);\r\n    }\r\n    _applyTopLeft(topLeft) {\r\n        this._topLeft = topLeft;\r\n        this.getDomNode().style.left = `${this._topLeft.left}px`;\r\n        this.getDomNode().style.top = `${this._topLeft.top}px`;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './menuEntryActionViewItem.css';\r\nimport { addDisposableListener, asCSSUrl, ModifierKeyEmitter, append, EventType, $, prepend } from '../../../base/browser/dom.js';\r\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\r\nimport { toDisposable, MutableDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { MenuItemAction, SubmenuItemAction, IMenuService } from '../common/actions.js';\r\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\r\nimport { INotificationService } from '../../notification/common/notification.js';\r\nimport { ThemeIcon } from '../../theme/common/themeService.js';\r\nimport { ActionViewItem, BaseActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\r\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\r\nimport { isWindows, isLinux, OS } from '../../../base/common/platform.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\r\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\r\nimport { IStorageService } from '../../storage/common/storage.js';\r\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\r\n    const groups = menu.getActions(options);\r\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\r\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\r\n    fillInActions(groups, target, false, isPrimaryAction, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\r\n    return asDisposable(groups);\r\n}\r\nfunction asDisposable(groups) {\r\n    const disposables = new DisposableStore();\r\n    for (const [, actions] of groups) {\r\n        for (const action of actions) {\r\n            disposables.add(action);\r\n        }\r\n    }\r\n    return disposables;\r\n}\r\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', primaryMaxCount = Number.MAX_SAFE_INTEGER, shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\r\n    let primaryBucket;\r\n    let secondaryBucket;\r\n    if (Array.isArray(target)) {\r\n        primaryBucket = target;\r\n        secondaryBucket = target;\r\n    }\r\n    else {\r\n        primaryBucket = target.primary;\r\n        secondaryBucket = target.secondary;\r\n    }\r\n    const submenuInfo = new Set();\r\n    for (const [group, actions] of groups) {\r\n        let target;\r\n        if (isPrimaryAction(group)) {\r\n            target = primaryBucket;\r\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\r\n                target.push(new Separator());\r\n            }\r\n        }\r\n        else {\r\n            target = secondaryBucket;\r\n            if (target.length > 0) {\r\n                target.push(new Separator());\r\n            }\r\n        }\r\n        for (let action of actions) {\r\n            if (useAlternativeActions) {\r\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\r\n            }\r\n            const newLen = target.push(action);\r\n            // keep submenu info for later inlining\r\n            if (action instanceof SubmenuAction) {\r\n                submenuInfo.add({ group, action, index: newLen - 1 });\r\n            }\r\n        }\r\n    }\r\n    // ask the outside if submenu should be inlined or not. only ask when\r\n    // there would be enough space\r\n    for (const { group, action, index } of submenuInfo) {\r\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\r\n        // inlining submenus with length 0 or 1 is easy,\r\n        // larger submenus need to be checked with the overall limit\r\n        const submenuActions = action.actions;\r\n        if ((submenuActions.length <= 1 || target.length + submenuActions.length - 2 <= primaryMaxCount) && shouldInlineSubmenu(action, group, target.length)) {\r\n            target.splice(index, 1, ...submenuActions);\r\n        }\r\n    }\r\n    // overflow items from the primary group into the secondary bucket\r\n    if (primaryBucket !== secondaryBucket && primaryBucket.length > primaryMaxCount) {\r\n        const overflow = primaryBucket.splice(primaryMaxCount, primaryBucket.length - primaryMaxCount);\r\n        secondaryBucket.unshift(...overflow, new Separator());\r\n    }\r\n}\r\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\r\n    constructor(_action, options, _keybindingService, _notificationService, _contextKeyService) {\r\n        super(undefined, _action, { icon: !!(_action.class || _action.item.icon), label: !_action.class && !_action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable });\r\n        this._keybindingService = _keybindingService;\r\n        this._notificationService = _notificationService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._wantsAltCommand = false;\r\n        this._itemClassDispose = this._register(new MutableDisposable());\r\n        this._altKey = ModifierKeyEmitter.getInstance();\r\n    }\r\n    get _menuItemAction() {\r\n        return this._action;\r\n    }\r\n    get _commandAction() {\r\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\r\n    }\r\n    onClick(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            try {\r\n                yield this.actionRunner.run(this._commandAction, this._context);\r\n            }\r\n            catch (err) {\r\n                this._notificationService.error(err);\r\n            }\r\n        });\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        container.classList.add('menu-entry');\r\n        this._updateItemClass(this._menuItemAction.item);\r\n        let mouseOver = false;\r\n        let alternativeKeyDown = this._altKey.keyStatus.altKey || ((isWindows || isLinux) && this._altKey.keyStatus.shiftKey);\r\n        const updateAltState = () => {\r\n            const wantsAltCommand = mouseOver && alternativeKeyDown;\r\n            if (wantsAltCommand !== this._wantsAltCommand) {\r\n                this._wantsAltCommand = wantsAltCommand;\r\n                this.updateLabel();\r\n                this.updateTooltip();\r\n                this.updateClass();\r\n            }\r\n        };\r\n        if (this._menuItemAction.alt) {\r\n            this._register(this._altKey.event(value => {\r\n                alternativeKeyDown = value.altKey || ((isWindows || isLinux) && value.shiftKey);\r\n                updateAltState();\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(container, 'mouseleave', _ => {\r\n            mouseOver = false;\r\n            updateAltState();\r\n        }));\r\n        this._register(addDisposableListener(container, 'mouseenter', _ => {\r\n            mouseOver = true;\r\n            updateAltState();\r\n        }));\r\n    }\r\n    updateLabel() {\r\n        if (this.options.label && this.label) {\r\n            this.label.textContent = this._commandAction.label;\r\n        }\r\n    }\r\n    updateTooltip() {\r\n        if (this.label) {\r\n            const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\r\n            const keybindingLabel = keybinding && keybinding.getLabel();\r\n            const tooltip = this._commandAction.tooltip || this._commandAction.label;\r\n            let title = keybindingLabel\r\n                ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\r\n                : tooltip;\r\n            if (!this._wantsAltCommand && this._menuItemAction.alt) {\r\n                const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\r\n                const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\r\n                const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\r\n                const altTitleSection = altKeybindingLabel\r\n                    ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\r\n                    : altTooltip;\r\n                title += `\\n[${UILabelProvider.modifierLabels[OS].altKey}] ${altTitleSection}`;\r\n            }\r\n            this.label.title = title;\r\n        }\r\n    }\r\n    updateClass() {\r\n        if (this.options.icon) {\r\n            if (this._commandAction !== this._menuItemAction) {\r\n                if (this._menuItemAction.alt) {\r\n                    this._updateItemClass(this._menuItemAction.alt.item);\r\n                }\r\n            }\r\n            else if (this._menuItemAction.alt) {\r\n                this._updateItemClass(this._menuItemAction.item);\r\n            }\r\n        }\r\n    }\r\n    _updateItemClass(item) {\r\n        var _a;\r\n        this._itemClassDispose.value = undefined;\r\n        const { element, label } = this;\r\n        if (!element || !label) {\r\n            return;\r\n        }\r\n        const icon = this._commandAction.checked && ((_a = item.toggled) === null || _a === void 0 ? void 0 : _a.icon) ? item.toggled.icon : item.icon;\r\n        if (!icon) {\r\n            return;\r\n        }\r\n        if (ThemeIcon.isThemeIcon(icon)) {\r\n            // theme icons\r\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\r\n            label.classList.add(...iconClasses);\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove(...iconClasses);\r\n            });\r\n        }\r\n        else {\r\n            // icon path/url\r\n            if (icon.light) {\r\n                label.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n            }\r\n            if (icon.dark) {\r\n                label.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n            }\r\n            label.classList.add('icon');\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove('icon');\r\n                label.style.removeProperty('--menu-entry-icon-light');\r\n                label.style.removeProperty('--menu-entry-icon-dark');\r\n            });\r\n        }\r\n    }\r\n};\r\nMenuEntryActionViewItem = __decorate([\r\n    __param(2, IKeybindingService),\r\n    __param(3, INotificationService),\r\n    __param(4, IContextKeyService)\r\n], MenuEntryActionViewItem);\r\nexport { MenuEntryActionViewItem };\r\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\r\n    constructor(action, contextMenuService) {\r\n        super(action, { getActions: () => action.actions }, contextMenuService, {\r\n            menuAsChild: true,\r\n            classNames: ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined,\r\n        });\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        if (this.element) {\r\n            container.classList.add('menu-entry');\r\n            const { icon } = this._action.item;\r\n            if (icon && !ThemeIcon.isThemeIcon(icon)) {\r\n                this.element.classList.add('icon');\r\n                if (icon.light) {\r\n                    this.element.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n                }\r\n                if (icon.dark) {\r\n                    this.element.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nSubmenuEntryActionViewItem = __decorate([\r\n    __param(1, IContextMenuService)\r\n], SubmenuEntryActionViewItem);\r\nexport { SubmenuEntryActionViewItem };\r\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\r\n    constructor(submenuAction, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\r\n        super(null, submenuAction);\r\n        this._keybindingService = _keybindingService;\r\n        this._notificationService = _notificationService;\r\n        this._contextMenuService = _contextMenuService;\r\n        this._menuService = _menuService;\r\n        this._instaService = _instaService;\r\n        this._storageService = _storageService;\r\n        this._container = null;\r\n        this._storageKey = `${submenuAction.item.submenu._debugName}_lastActionId`;\r\n        // determine default action\r\n        let defaultAction;\r\n        let defaultActionId = _storageService.get(this._storageKey, 1 /* WORKSPACE */);\r\n        if (defaultActionId) {\r\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\r\n        }\r\n        if (!defaultAction) {\r\n            defaultAction = submenuAction.actions[0];\r\n        }\r\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, undefined);\r\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, {\r\n            menuAsChild: true,\r\n            classNames: ['codicon', 'codicon-chevron-down']\r\n        });\r\n        this._dropdown.actionRunner.onDidRun((e) => {\r\n            if (e.action instanceof MenuItemAction) {\r\n                this.update(e.action);\r\n            }\r\n        });\r\n    }\r\n    update(lastAction) {\r\n        this._storageService.store(this._storageKey, lastAction.id, 1 /* WORKSPACE */, 0 /* USER */);\r\n        this._defaultAction.dispose();\r\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, undefined);\r\n        this._defaultAction.actionRunner = new class extends ActionRunner {\r\n            runAction(action, context) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    yield action.run(undefined);\r\n                });\r\n            }\r\n        }();\r\n        if (this._container) {\r\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\r\n        }\r\n    }\r\n    setActionContext(newContext) {\r\n        super.setActionContext(newContext);\r\n        this._defaultAction.setActionContext(newContext);\r\n        this._dropdown.setActionContext(newContext);\r\n    }\r\n    render(container) {\r\n        this._container = container;\r\n        super.render(this._container);\r\n        this._container.classList.add('monaco-dropdown-with-primary');\r\n        const primaryContainer = $('.action-container');\r\n        this._defaultAction.render(append(this._container, primaryContainer));\r\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(17 /* RightArrow */)) {\r\n                this._defaultAction.element.tabIndex = -1;\r\n                this._dropdown.focus();\r\n                event.stopPropagation();\r\n            }\r\n        }));\r\n        const dropdownContainer = $('.dropdown-action-container');\r\n        this._dropdown.render(append(this._container, dropdownContainer));\r\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\r\n            var _a;\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(15 /* LeftArrow */)) {\r\n                this._defaultAction.element.tabIndex = 0;\r\n                this._dropdown.setFocusable(false);\r\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\r\n                event.stopPropagation();\r\n            }\r\n        }));\r\n    }\r\n    focus(fromRight) {\r\n        if (fromRight) {\r\n            this._dropdown.focus();\r\n        }\r\n        else {\r\n            this._defaultAction.element.tabIndex = 0;\r\n            this._defaultAction.element.focus();\r\n        }\r\n    }\r\n    blur() {\r\n        this._defaultAction.element.tabIndex = -1;\r\n        this._dropdown.blur();\r\n        this._container.blur();\r\n    }\r\n    setFocusable(focusable) {\r\n        if (focusable) {\r\n            this._defaultAction.element.tabIndex = 0;\r\n        }\r\n        else {\r\n            this._defaultAction.element.tabIndex = -1;\r\n            this._dropdown.setFocusable(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        this._defaultAction.dispose();\r\n        this._dropdown.dispose();\r\n        super.dispose();\r\n    }\r\n};\r\nDropdownWithDefaultActionViewItem = __decorate([\r\n    __param(1, IKeybindingService),\r\n    __param(2, INotificationService),\r\n    __param(3, IContextMenuService),\r\n    __param(4, IMenuService),\r\n    __param(5, IInstantiationService),\r\n    __param(6, IStorageService)\r\n], DropdownWithDefaultActionViewItem);\r\n/**\r\n * Creates action view items for menu actions or submenu actions.\r\n */\r\nexport function createActionViewItem(instaService, action) {\r\n    if (action instanceof MenuItemAction) {\r\n        return instaService.createInstance(MenuEntryActionViewItem, action, undefined);\r\n    }\r\n    else if (action instanceof SubmenuItemAction) {\r\n        const allCodicons = !action.actions.some(a => a instanceof MenuItemAction && a.item.icon && !ThemeIcon.isThemeIcon(a.item.icon));\r\n        if (action.item.rememberDefaultAction && allCodicons) {\r\n            return instaService.createInstance(DropdownWithDefaultActionViewItem, action);\r\n        }\r\n        else {\r\n            return instaService.createInstance(SubmenuEntryActionViewItem, action);\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './dropdown.css';\r\nimport { append, $ } from '../../dom.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { BaseActionViewItem } from '../actionbar/actionViewItems.js';\r\nimport { DropdownMenu } from './dropdown.js';\r\nexport class DropdownMenuActionViewItem extends BaseActionViewItem {\r\n    constructor(action, menuActionsOrProvider, contextMenuProvider, options = Object.create(null)) {\r\n        super(null, action, options);\r\n        this.actionItem = null;\r\n        this._onDidChangeVisibility = this._register(new Emitter());\r\n        this.menuActionsOrProvider = menuActionsOrProvider;\r\n        this.contextMenuProvider = contextMenuProvider;\r\n        this.options = options;\r\n        if (this.options.actionRunner) {\r\n            this.actionRunner = this.options.actionRunner;\r\n        }\r\n    }\r\n    render(container) {\r\n        this.actionItem = container;\r\n        const labelRenderer = (el) => {\r\n            this.element = append(el, $('a.action-label'));\r\n            let classNames = [];\r\n            if (typeof this.options.classNames === 'string') {\r\n                classNames = this.options.classNames.split(/\\s+/g).filter(s => !!s);\r\n            }\r\n            else if (this.options.classNames) {\r\n                classNames = this.options.classNames;\r\n            }\r\n            // todo@aeschli: remove codicon, should come through `this.options.classNames`\r\n            if (!classNames.find(c => c === 'icon')) {\r\n                classNames.push('codicon');\r\n            }\r\n            this.element.classList.add(...classNames);\r\n            this.element.setAttribute('role', 'button');\r\n            this.element.setAttribute('aria-haspopup', 'true');\r\n            this.element.setAttribute('aria-expanded', 'false');\r\n            this.element.title = this._action.label || '';\r\n            return null;\r\n        };\r\n        const isActionsArray = Array.isArray(this.menuActionsOrProvider);\r\n        const options = {\r\n            contextMenuProvider: this.contextMenuProvider,\r\n            labelRenderer: labelRenderer,\r\n            menuAsChild: this.options.menuAsChild,\r\n            actions: isActionsArray ? this.menuActionsOrProvider : undefined,\r\n            actionProvider: isActionsArray ? undefined : this.menuActionsOrProvider\r\n        };\r\n        this.dropdownMenu = this._register(new DropdownMenu(container, options));\r\n        this._register(this.dropdownMenu.onDidChangeVisibility(visible => {\r\n            var _a;\r\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.setAttribute('aria-expanded', `${visible}`);\r\n            this._onDidChangeVisibility.fire(visible);\r\n        }));\r\n        this.dropdownMenu.menuOptions = {\r\n            actionViewItemProvider: this.options.actionViewItemProvider,\r\n            actionRunner: this.actionRunner,\r\n            getKeyBinding: this.options.keybindingProvider,\r\n            context: this._context\r\n        };\r\n        if (this.options.anchorAlignmentProvider) {\r\n            const that = this;\r\n            this.dropdownMenu.menuOptions = Object.assign(Object.assign({}, this.dropdownMenu.menuOptions), { get anchorAlignment() {\r\n                    return that.options.anchorAlignmentProvider();\r\n                } });\r\n        }\r\n        this.updateEnabled();\r\n    }\r\n    setActionContext(newContext) {\r\n        super.setActionContext(newContext);\r\n        if (this.dropdownMenu) {\r\n            if (this.dropdownMenu.menuOptions) {\r\n                this.dropdownMenu.menuOptions.context = newContext;\r\n            }\r\n            else {\r\n                this.dropdownMenu.menuOptions = { context: newContext };\r\n            }\r\n        }\r\n    }\r\n    updateEnabled() {\r\n        var _a, _b;\r\n        const disabled = !this.getAction().enabled;\r\n        (_a = this.actionItem) === null || _a === void 0 ? void 0 : _a.classList.toggle('disabled', disabled);\r\n        (_b = this.element) === null || _b === void 0 ? void 0 : _b.classList.toggle('disabled', disabled);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './dropdown.css';\r\nimport { Gesture, EventType as GestureEventType } from '../../touch.js';\r\nimport { ActionRunner } from '../../../common/actions.js';\r\nimport { EventHelper, EventType, append, $, addDisposableListener } from '../../dom.js';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nexport class BaseDropdown extends ActionRunner {\r\n    constructor(container, options) {\r\n        super();\r\n        this._onDidChangeVisibility = new Emitter();\r\n        this.onDidChangeVisibility = this._onDidChangeVisibility.event;\r\n        this._element = append(container, $('.monaco-dropdown'));\r\n        this._label = append(this._element, $('.dropdown-label'));\r\n        let labelRenderer = options.labelRenderer;\r\n        if (!labelRenderer) {\r\n            labelRenderer = (container) => {\r\n                container.textContent = options.label || '';\r\n                return null;\r\n            };\r\n        }\r\n        for (const event of [EventType.CLICK, EventType.MOUSE_DOWN, GestureEventType.Tap]) {\r\n            this._register(addDisposableListener(this.element, event, e => EventHelper.stop(e, true))); // prevent default click behaviour to trigger\r\n        }\r\n        for (const event of [EventType.MOUSE_DOWN, GestureEventType.Tap]) {\r\n            this._register(addDisposableListener(this._label, event, e => {\r\n                if (e instanceof MouseEvent && e.detail > 1) {\r\n                    return; // prevent multiple clicks to open multiple context menus (https://github.com/microsoft/vscode/issues/41363)\r\n                }\r\n                if (this.visible) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(this._label, EventType.KEY_UP, e => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(3 /* Enter */) || event.equals(10 /* Space */)) {\r\n                EventHelper.stop(e, true); // https://github.com/microsoft/vscode/issues/57997\r\n                if (this.visible) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }\r\n        }));\r\n        const cleanupFn = labelRenderer(this._label);\r\n        if (cleanupFn) {\r\n            this._register(cleanupFn);\r\n        }\r\n        this._register(Gesture.addTarget(this._label));\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    show() {\r\n        if (!this.visible) {\r\n            this.visible = true;\r\n            this._onDidChangeVisibility.fire(true);\r\n        }\r\n    }\r\n    hide() {\r\n        if (this.visible) {\r\n            this.visible = false;\r\n            this._onDidChangeVisibility.fire(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.hide();\r\n        if (this.boxContainer) {\r\n            this.boxContainer.remove();\r\n            this.boxContainer = undefined;\r\n        }\r\n        if (this.contents) {\r\n            this.contents.remove();\r\n            this.contents = undefined;\r\n        }\r\n        if (this._label) {\r\n            this._label.remove();\r\n            this._label = undefined;\r\n        }\r\n    }\r\n}\r\nexport class DropdownMenu extends BaseDropdown {\r\n    constructor(container, options) {\r\n        super(container, options);\r\n        this._actions = [];\r\n        this._contextMenuProvider = options.contextMenuProvider;\r\n        this.actions = options.actions || [];\r\n        this.actionProvider = options.actionProvider;\r\n        this.menuClassName = options.menuClassName || '';\r\n        this.menuAsChild = !!options.menuAsChild;\r\n    }\r\n    set menuOptions(options) {\r\n        this._menuOptions = options;\r\n    }\r\n    get menuOptions() {\r\n        return this._menuOptions;\r\n    }\r\n    get actions() {\r\n        if (this.actionProvider) {\r\n            return this.actionProvider.getActions();\r\n        }\r\n        return this._actions;\r\n    }\r\n    set actions(actions) {\r\n        this._actions = actions;\r\n    }\r\n    show() {\r\n        super.show();\r\n        this.element.classList.add('active');\r\n        this._contextMenuProvider.showContextMenu({\r\n            getAnchor: () => this.element,\r\n            getActions: () => this.actions,\r\n            getActionsContext: () => this.menuOptions ? this.menuOptions.context : null,\r\n            getActionViewItem: action => this.menuOptions && this.menuOptions.actionViewItemProvider ? this.menuOptions.actionViewItemProvider(action) : undefined,\r\n            getKeyBinding: action => this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined,\r\n            getMenuClassName: () => this.menuClassName,\r\n            onHide: () => this.onHide(),\r\n            actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\r\n            anchorAlignment: this.menuOptions ? this.menuOptions.anchorAlignment : 0 /* LEFT */,\r\n            domForShadowRoot: this.menuAsChild ? this.element : undefined\r\n        });\r\n    }\r\n    hide() {\r\n        super.hide();\r\n    }\r\n    onHide() {\r\n        this.hide();\r\n        this.element.classList.remove('active');\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { MenuEntryActionViewItem } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nimport { IMenuService, MenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nclass StatusBarViewItem extends MenuEntryActionViewItem {\r\n    updateLabel() {\r\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\r\n        if (!kb) {\r\n            return super.updateLabel();\r\n        }\r\n        if (this.label) {\r\n            this.label.textContent = localize('ddd', '{0} ({1})', this._action.label, StatusBarViewItem.symbolPrintEnter(kb));\r\n        }\r\n    }\r\n    static symbolPrintEnter(kb) {\r\n        var _a;\r\n        return (_a = kb.getLabel()) === null || _a === void 0 ? void 0 : _a.replace(/\\benter\\b/gi, '\\u23CE');\r\n    }\r\n}\r\nlet SuggestWidgetStatus = class SuggestWidgetStatus {\r\n    constructor(container, instantiationService, _menuService, _contextKeyService) {\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._menuDisposables = new DisposableStore();\r\n        this.element = dom.append(container, dom.$('.suggest-status-bar'));\r\n        const actionViewItemProvider = (action => {\r\n            return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\r\n        });\r\n        this._leftActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._rightActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._leftActions.domNode.classList.add('left');\r\n        this._rightActions.domNode.classList.add('right');\r\n    }\r\n    dispose() {\r\n        this._menuDisposables.dispose();\r\n        this.element.remove();\r\n    }\r\n    show() {\r\n        const menu = this._menuService.createMenu(suggestWidgetStatusbarMenu, this._contextKeyService);\r\n        const renderMenu = () => {\r\n            const left = [];\r\n            const right = [];\r\n            for (let [group, actions] of menu.getActions()) {\r\n                if (group === 'left') {\r\n                    left.push(...actions);\r\n                }\r\n                else {\r\n                    right.push(...actions);\r\n                }\r\n            }\r\n            this._leftActions.clear();\r\n            this._leftActions.push(left);\r\n            this._rightActions.clear();\r\n            this._rightActions.push(right);\r\n        };\r\n        this._menuDisposables.add(menu.onDidChange(() => renderMenu()));\r\n        this._menuDisposables.add(menu);\r\n    }\r\n    hide() {\r\n        this._menuDisposables.clear();\r\n    }\r\n};\r\nSuggestWidgetStatus = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IMenuService),\r\n    __param(3, IContextKeyService)\r\n], SuggestWidgetStatus);\r\nexport { SuggestWidgetStatus };\r\n", "//#endregion\r\n//#region Utilities\r\nexport var FileKind;\r\n(function (FileKind) {\r\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\r\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\r\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\r\n})(FileKind || (FileKind = {}));\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { DataUri, basenameOrAuthority } from '../../../base/common/resources.js';\r\nimport { PLAINTEXT_MODE_ID } from '../modes/modesRegistry.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nexport function getIconClasses(modelService, modeService, resource, fileKind) {\r\n    // we always set these base classes even if we do not have a path\r\n    const classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\r\n    if (resource) {\r\n        // Get the path and name of the resource. For data-URIs, we need to parse specially\r\n        let name;\r\n        if (resource.scheme === Schemas.data) {\r\n            const metadata = DataUri.parseMetaData(resource);\r\n            name = metadata.get(DataUri.META_DATA_LABEL);\r\n        }\r\n        else {\r\n            name = cssEscape(basenameOrAuthority(resource).toLowerCase());\r\n        }\r\n        // Folders\r\n        if (fileKind === FileKind.FOLDER) {\r\n            classes.push(`${name}-name-folder-icon`);\r\n        }\r\n        // Files\r\n        else {\r\n            // Name & Extension(s)\r\n            if (name) {\r\n                classes.push(`${name}-name-file-icon`);\r\n                // Avoid doing an explosive combination of extensions for very long filenames\r\n                // (most file systems do not allow files > 255 length) with lots of `.` characters\r\n                // https://github.com/microsoft/vscode/issues/116199\r\n                if (name.length <= 255) {\r\n                    const dotSegments = name.split('.');\r\n                    for (let i = 1; i < dotSegments.length; i++) {\r\n                        classes.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\r\n                    }\r\n                }\r\n                classes.push(`ext-file-icon`); // extra segment to increase file-ext score\r\n            }\r\n            // Detected Mode\r\n            const detectedModeId = detectModeId(modelService, modeService, resource);\r\n            if (detectedModeId) {\r\n                classes.push(`${cssEscape(detectedModeId)}-lang-file-icon`);\r\n            }\r\n        }\r\n    }\r\n    return classes;\r\n}\r\nexport function detectModeId(modelService, modeService, resource) {\r\n    if (!resource) {\r\n        return null; // we need a resource at least\r\n    }\r\n    let modeId = null;\r\n    // Data URI: check for encoded metadata\r\n    if (resource.scheme === Schemas.data) {\r\n        const metadata = DataUri.parseMetaData(resource);\r\n        const mime = metadata.get(DataUri.META_DATA_MIME);\r\n        if (mime) {\r\n            modeId = modeService.getModeId(mime);\r\n        }\r\n    }\r\n    // Any other URI: check for model if existing\r\n    else {\r\n        const model = modelService.getModel(resource);\r\n        if (model) {\r\n            modeId = model.getModeId();\r\n        }\r\n    }\r\n    // only take if the mode is specific (aka no just plain text)\r\n    if (modeId && modeId !== PLAINTEXT_MODE_ID) {\r\n        return modeId;\r\n    }\r\n    // otherwise fallback to path based detection\r\n    return modeService.getModeIdByFilepathOrFirstLine(resource);\r\n}\r\nexport function cssEscape(str) {\r\n    return str.replace(/[\\11\\12\\14\\15\\40]/g, '/'); // HTML class names can not contain certain whitespace characters, use / instead, which doesn't exist in file names.\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport * as nls from '../../../nls.js';\r\nimport { createMatches } from '../../../base/common/filters.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { append, $, hide, show } from '../../../base/browser/dom.js';\r\nimport { IThemeService, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { completionKindToCssClass } from '../../common/modes.js';\r\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\r\nimport { getIconClasses } from '../../common/services/getIconClasses.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nimport { flatten } from '../../../base/common/arrays.js';\r\nimport { canExpandCompletionItem } from './suggestWidgetDetails.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nexport function getAriaId(index) {\r\n    return `suggest-aria-id:${index}`;\r\n}\r\nexport const suggestMoreInfoIcon = registerIcon('suggest-more-info', Codicon.chevronRight, nls.localize('suggestMoreInfoIcon', 'Icon for more information in the suggest widget.'));\r\nconst _completionItemColor = new (_a = class ColorExtractor {\r\n        extract(item, out) {\r\n            if (item.textLabel.match(ColorExtractor._regexStrict)) {\r\n                out[0] = item.textLabel;\r\n                return true;\r\n            }\r\n            if (item.completion.detail && item.completion.detail.match(ColorExtractor._regexStrict)) {\r\n                out[0] = item.completion.detail;\r\n                return true;\r\n            }\r\n            if (typeof item.completion.documentation === 'string') {\r\n                const match = ColorExtractor._regexRelaxed.exec(item.completion.documentation);\r\n                if (match && (match.index === 0 || match.index + match[0].length === item.completion.documentation.length)) {\r\n                    out[0] = match[0];\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    _a._regexRelaxed = /(#([\\da-fA-F]{3}){1,2}|(rgb|hsl)a\\(\\s*(\\d{1,3}%?\\s*,\\s*){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\s*\\d{1,3}%?(\\s*,\\s*\\d{1,3}%?){2}\\s*\\))/,\r\n    _a._regexStrict = new RegExp(`^${_a._regexRelaxed.source}$`, 'i'),\r\n    _a);\r\nlet ItemRenderer = class ItemRenderer {\r\n    constructor(_editor, _modelService, _modeService, _themeService) {\r\n        this._editor = _editor;\r\n        this._modelService = _modelService;\r\n        this._modeService = _modeService;\r\n        this._themeService = _themeService;\r\n        this._onDidToggleDetails = new Emitter();\r\n        this.onDidToggleDetails = this._onDidToggleDetails.event;\r\n        this.templateId = 'suggestion';\r\n    }\r\n    dispose() {\r\n        this._onDidToggleDetails.dispose();\r\n    }\r\n    renderTemplate(container) {\r\n        const data = Object.create(null);\r\n        data.disposables = new DisposableStore();\r\n        data.root = container;\r\n        data.root.classList.add('show-file-icons');\r\n        data.icon = append(container, $('.icon'));\r\n        data.colorspan = append(data.icon, $('span.colorspan'));\r\n        const text = append(container, $('.contents'));\r\n        const main = append(text, $('.main'));\r\n        data.iconContainer = append(main, $('.icon-label.codicon'));\r\n        data.left = append(main, $('span.left'));\r\n        data.right = append(main, $('span.right'));\r\n        data.iconLabel = new IconLabel(data.left, { supportHighlights: true, supportIcons: true });\r\n        data.disposables.add(data.iconLabel);\r\n        data.parametersLabel = append(data.left, $('span.signature-label'));\r\n        data.qualifierLabel = append(data.left, $('span.qualifier-label'));\r\n        data.detailsLabel = append(data.right, $('span.details-label'));\r\n        data.readMore = append(data.right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\r\n        data.readMore.title = nls.localize('readMore', \"Read More\");\r\n        const configureFont = () => {\r\n            const options = this._editor.getOptions();\r\n            const fontInfo = options.get(41 /* fontInfo */);\r\n            const fontFamily = fontInfo.fontFamily;\r\n            const fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n            const fontSize = options.get(106 /* suggestFontSize */) || fontInfo.fontSize;\r\n            const lineHeight = options.get(107 /* suggestLineHeight */) || fontInfo.lineHeight;\r\n            const fontWeight = fontInfo.fontWeight;\r\n            const fontSizePx = `${fontSize}px`;\r\n            const lineHeightPx = `${lineHeight}px`;\r\n            data.root.style.fontSize = fontSizePx;\r\n            data.root.style.fontWeight = fontWeight;\r\n            main.style.fontFamily = fontFamily;\r\n            main.style.fontFeatureSettings = fontFeatureSettings;\r\n            main.style.lineHeight = lineHeightPx;\r\n            data.icon.style.height = lineHeightPx;\r\n            data.icon.style.width = lineHeightPx;\r\n            data.readMore.style.height = lineHeightPx;\r\n            data.readMore.style.width = lineHeightPx;\r\n        };\r\n        configureFont();\r\n        data.disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(41 /* fontInfo */) || e.hasChanged(106 /* suggestFontSize */) || e.hasChanged(107 /* suggestLineHeight */)) {\r\n                configureFont();\r\n            }\r\n        }));\r\n        return data;\r\n    }\r\n    renderElement(element, index, data) {\r\n        const { completion } = element;\r\n        data.root.id = getAriaId(index);\r\n        data.colorspan.style.backgroundColor = '';\r\n        const labelOptions = {\r\n            labelEscapeNewLines: true,\r\n            matches: createMatches(element.score)\r\n        };\r\n        let color = [];\r\n        if (completion.kind === 19 /* Color */ && _completionItemColor.extract(element, color)) {\r\n            // special logic for 'color' completion items\r\n            data.icon.className = 'icon customcolor';\r\n            data.iconContainer.className = 'icon hide';\r\n            data.colorspan.style.backgroundColor = color[0];\r\n        }\r\n        else if (completion.kind === 20 /* File */ && this._themeService.getFileIconTheme().hasFileIcons) {\r\n            // special logic for 'file' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            const labelClasses = getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\r\n            const detailClasses = getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\r\n            labelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\r\n        }\r\n        else if (completion.kind === 23 /* Folder */ && this._themeService.getFileIconTheme().hasFolderIcons) {\r\n            // special logic for 'folder' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            labelOptions.extraClasses = flatten([\r\n                getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\r\n                getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\r\n            ]);\r\n        }\r\n        else {\r\n            // normal icon\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = '';\r\n            data.iconContainer.classList.add('suggest-icon', ...completionKindToCssClass(completion.kind).split(' '));\r\n        }\r\n        if (completion.tags && completion.tags.indexOf(1 /* Deprecated */) >= 0) {\r\n            labelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\r\n            labelOptions.matches = [];\r\n        }\r\n        data.iconLabel.setLabel(element.textLabel, undefined, labelOptions);\r\n        if (typeof completion.label === 'string') {\r\n            data.parametersLabel.textContent = '';\r\n            data.detailsLabel.textContent = stripNewLines(completion.detail || '');\r\n            data.root.classList.add('string-label');\r\n        }\r\n        else {\r\n            data.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\r\n            data.detailsLabel.textContent = stripNewLines(completion.label.description || '');\r\n            data.root.classList.remove('string-label');\r\n        }\r\n        if (this._editor.getOption(105 /* suggest */).showInlineDetails) {\r\n            show(data.detailsLabel);\r\n        }\r\n        else {\r\n            hide(data.detailsLabel);\r\n        }\r\n        if (canExpandCompletionItem(element)) {\r\n            data.right.classList.add('can-expand-details');\r\n            show(data.readMore);\r\n            data.readMore.onmousedown = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            };\r\n            data.readMore.onclick = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                this._onDidToggleDetails.fire();\r\n            };\r\n        }\r\n        else {\r\n            data.right.classList.remove('can-expand-details');\r\n            hide(data.readMore);\r\n            data.readMore.onmousedown = null;\r\n            data.readMore.onclick = null;\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        templateData.disposables.dispose();\r\n    }\r\n};\r\nItemRenderer = __decorate([\r\n    __param(1, IModelService),\r\n    __param(2, IModeService),\r\n    __param(3, IThemeService)\r\n], ItemRenderer);\r\nexport { ItemRenderer };\r\nfunction stripNewLines(str) {\r\n    return str.replace(/\\r\\n|\\r|\\n/g, '');\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { CodeEditorWidget } from './codeEditorWidget.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\r\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService) {\r\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService);\r\n        this._parentEditor = parentEditor;\r\n        this._overwriteOptions = options;\r\n        // Overwrite parent's options\r\n        super.updateOptions(this._overwriteOptions);\r\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\r\n    }\r\n    getParentEditor() {\r\n        return this._parentEditor;\r\n    }\r\n    _onParentConfigurationChanged(e) {\r\n        super.updateOptions(this._parentEditor.getRawOptions());\r\n        super.updateOptions(this._overwriteOptions);\r\n    }\r\n    updateOptions(newOptions) {\r\n        objects.mixin(this._overwriteOptions, newOptions, true);\r\n        super.updateOptions(this._overwriteOptions);\r\n    }\r\n};\r\nEmbeddedCodeEditorWidget = __decorate([\r\n    __param(3, IInstantiationService),\r\n    __param(4, ICodeEditorService),\r\n    __param(5, ICommandService),\r\n    __param(6, IContextKeyService),\r\n    __param(7, IThemeService),\r\n    __param(8, INotificationService),\r\n    __param(9, IAccessibilityService)\r\n], EmbeddedCodeEditorWidget);\r\nexport { EmbeddedCodeEditorWidget };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nlet WordContextKey = class WordContextKey {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._enabled = false;\r\n        this._ckAtEnd = WordContextKey.AtEnd.bindTo(contextKeyService);\r\n        this._configListener = this._editor.onDidChangeConfiguration(e => e.hasChanged(110 /* tabCompletion */) && this._update());\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._configListener.dispose();\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._ckAtEnd.reset();\r\n    }\r\n    _update() {\r\n        // only update this when tab completions are enabled\r\n        const enabled = this._editor.getOption(110 /* tabCompletion */) === 'on';\r\n        if (this._enabled === enabled) {\r\n            return;\r\n        }\r\n        this._enabled = enabled;\r\n        if (this._enabled) {\r\n            const checkForWordEnd = () => {\r\n                if (!this._editor.hasModel()) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const selection = this._editor.getSelection();\r\n                const word = model.getWordAtPosition(selection.getStartPosition());\r\n                if (!word) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                this._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\r\n            };\r\n            this._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\r\n            checkForWordEnd();\r\n        }\r\n        else if (this._selectionListener) {\r\n            this._ckAtEnd.reset();\r\n            this._selectionListener.dispose();\r\n            this._selectionListener = undefined;\r\n        }\r\n    }\r\n};\r\nWordContextKey.AtEnd = new RawContextKey('atEndOfWord', false);\r\nWordContextKey = __decorate([\r\n    __param(1, IContextKeyService)\r\n], WordContextKey);\r\nexport { WordContextKey };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nexport class CommitCharacterController {\r\n    constructor(editor, widget, accept) {\r\n        this._disposables = new DisposableStore();\r\n        this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\r\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\r\n        this._disposables.add(widget.onDidHide(this.reset, this));\r\n        this._disposables.add(editor.onWillType(text => {\r\n            if (this._active && !widget.isFrozen()) {\r\n                const ch = text.charCodeAt(text.length - 1);\r\n                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* acceptSuggestionOnCommitCharacter */)) {\r\n                    accept(this._active.item);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    _onItem(selected) {\r\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\r\n            // no item or no commit characters\r\n            this.reset();\r\n            return;\r\n        }\r\n        if (this._active && this._active.item.item === selected.item) {\r\n            // still the same item\r\n            return;\r\n        }\r\n        // keep item and its commit characters\r\n        const acceptCharacters = new CharacterSet();\r\n        for (const ch of selected.item.completion.commitCharacters) {\r\n            if (ch.length > 0) {\r\n                acceptCharacters.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n        this._active = { acceptCharacters, item: selected };\r\n    }\r\n    reset() {\r\n        this._active = undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nexport class OvertypingCapturer {\r\n    constructor(editor, suggestModel) {\r\n        this._disposables = new DisposableStore();\r\n        this._lastOvertyped = [];\r\n        this._empty = true;\r\n        this._disposables.add(editor.onWillType(() => {\r\n            if (!this._empty) {\r\n                return;\r\n            }\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = editor.getSelections();\r\n            const selectionsLength = selections.length;\r\n            // Check if it will overtype any selections\r\n            let willOvertype = false;\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                if (!selections[i].isEmpty()) {\r\n                    willOvertype = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!willOvertype) {\r\n                return;\r\n            }\r\n            this._lastOvertyped = [];\r\n            const model = editor.getModel();\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                const selection = selections[i];\r\n                // Check for overtyping capturer restrictions\r\n                if (model.getValueLengthInRange(selection) > OvertypingCapturer._maxSelectionLength) {\r\n                    return;\r\n                }\r\n                this._lastOvertyped[i] = { value: model.getValueInRange(selection), multiline: selection.startLineNumber !== selection.endLineNumber };\r\n            }\r\n            this._empty = false;\r\n        }));\r\n        this._disposables.add(suggestModel.onDidCancel(e => {\r\n            if (!this._empty && !e.retrigger) {\r\n                this._empty = true;\r\n            }\r\n        }));\r\n    }\r\n    getLastOvertypedInfo(idx) {\r\n        if (!this._empty && idx >= 0 && idx < this._lastOvertyped.length) {\r\n            return this._lastOvertyped[idx];\r\n        }\r\n        return undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\nOvertypingCapturer._maxSelectionLength = 51200;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { SimpleKeybinding } from '../../../base/common/keyCodes.js';\r\nimport { dispose, DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { ISuggestMemoryService } from './suggestMemory.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService, CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { SuggestAlternatives } from './suggestAlternatives.js';\r\nimport { SuggestModel } from './suggestModel.js';\r\nimport { SuggestWidget } from './suggestWidget.js';\r\nimport { WordContextKey } from './wordContextKey.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { IdleValue } from '../../../base/common/async.js';\r\nimport { isObject, assertType } from '../../../base/common/types.js';\r\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\r\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\n// sticky suggest widget which doesn't disappear on focus out and such\r\nlet _sticky = false;\r\n// _sticky = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\r\nclass LineSuffix {\r\n    constructor(_model, _position) {\r\n        this._model = _model;\r\n        this._position = _position;\r\n        // spy on what's happening right of the cursor. two cases:\r\n        // 1. end of line -> check that it's still end of line\r\n        // 2. mid of line -> add a marker and compute the delta\r\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\r\n        if (maxColumn !== _position.column) {\r\n            const offset = _model.getOffsetAt(_position);\r\n            const end = _model.getPositionAt(offset + 1);\r\n            this._marker = _model.deltaDecorations([], [{\r\n                    range: Range.fromPositions(_position, end),\r\n                    options: { description: 'suggest-line-suffix', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ }\r\n                }]);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._marker && !this._model.isDisposed()) {\r\n            this._model.deltaDecorations(this._marker, []);\r\n        }\r\n    }\r\n    delta(position) {\r\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\r\n            // bail out early if things seems fishy\r\n            return 0;\r\n        }\r\n        // read the marker (in case suggest was triggered at line end) or compare\r\n        // the cursor to the line end.\r\n        if (this._marker) {\r\n            const range = this._model.getDecorationRange(this._marker[0]);\r\n            const end = this._model.getOffsetAt(range.getStartPosition());\r\n            return end - this._model.getOffsetAt(position);\r\n        }\r\n        else {\r\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\r\n        }\r\n    }\r\n}\r\nlet SuggestController = class SuggestController {\r\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService) {\r\n        this._memoryService = _memoryService;\r\n        this._commandService = _commandService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._instantiationService = _instantiationService;\r\n        this._logService = _logService;\r\n        this._lineSuffix = new MutableDisposable();\r\n        this._toDispose = new DisposableStore();\r\n        this.editor = editor;\r\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\r\n        // context key: update insert/replace mode\r\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\r\n        ctxInsertMode.set(editor.getOption(105 /* suggest */).insertMode);\r\n        this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(105 /* suggest */).insertMode));\r\n        this.widget = this._toDispose.add(new IdleValue(() => {\r\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\r\n            this._toDispose.add(widget);\r\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0), this));\r\n            // Wire up logic to accept a suggestion on certain characters\r\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, item => this._insertSuggestion(item, 2 /* NoAfterUndoStop */));\r\n            this._toDispose.add(commitCharacterController);\r\n            this._toDispose.add(this.model.onDidSuggest(e => {\r\n                if (e.completionModel.items.length === 0) {\r\n                    commitCharacterController.reset();\r\n                }\r\n            }));\r\n            // Wire up makes text edit context key\r\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\r\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\r\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\r\n            this._toDispose.add(toDisposable(() => {\r\n                ctxMakesTextEdit.reset();\r\n                ctxHasInsertAndReplace.reset();\r\n                ctxCanResolve.reset();\r\n            }));\r\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\r\n                // (ctx: makesTextEdit)\r\n                const position = this.editor.getPosition();\r\n                const startColumn = item.editStart.column;\r\n                const endColumn = position.column;\r\n                let value = true;\r\n                if (this.editor.getOption(1 /* acceptSuggestionOnEnter */) === 'smart'\r\n                    && this.model.state === 2 /* Auto */\r\n                    && !item.completion.command\r\n                    && !item.completion.additionalTextEdits\r\n                    && !(item.completion.insertTextRules & 4 /* InsertAsSnippet */)\r\n                    && endColumn - startColumn === item.completion.insertText.length) {\r\n                    const oldText = this.editor.getModel().getValueInRange({\r\n                        startLineNumber: position.lineNumber,\r\n                        startColumn,\r\n                        endLineNumber: position.lineNumber,\r\n                        endColumn\r\n                    });\r\n                    value = oldText !== item.completion.insertText;\r\n                }\r\n                ctxMakesTextEdit.set(value);\r\n                // (ctx: hasInsertAndReplaceRange)\r\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\r\n                // (ctx: canResolve)\r\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\r\n            }));\r\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\r\n                // cmd + c on macOS, ctrl + c on Win / Linux\r\n                if (e.toKeybinding().equals(new SimpleKeybinding(true, false, false, false, 33 /* KEY_C */)) ||\r\n                    (platform.isMacintosh && e.toKeybinding().equals(new SimpleKeybinding(false, false, false, true, 33 /* KEY_C */)))) {\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                if (!e.toKeybinding().isModifierKey()) {\r\n                    this.editor.focus();\r\n                }\r\n            }));\r\n            return widget;\r\n        }));\r\n        // Wire up text overtyping capture\r\n        this._overtypingCapturer = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\r\n        }));\r\n        this._alternatives = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\r\n        }));\r\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\r\n        this._toDispose.add(this.model.onDidTrigger(e => {\r\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\r\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\r\n        }));\r\n        this._toDispose.add(this.model.onDidSuggest(e => {\r\n            if (!e.shy) {\r\n                let index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\r\n                this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\r\n            }\r\n        }));\r\n        this._toDispose.add(this.model.onDidCancel(e => {\r\n            if (!e.retrigger) {\r\n                this.widget.value.hideWidget();\r\n            }\r\n        }));\r\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\r\n            if (!_sticky) {\r\n                this.model.cancel();\r\n                this.model.clear();\r\n            }\r\n        }));\r\n        // Manage the acceptSuggestionsOnEnter context key\r\n        let acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\r\n        let updateFromConfig = () => {\r\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* acceptSuggestionOnEnter */);\r\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\r\n        };\r\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\r\n        updateFromConfig();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SuggestController.ID);\r\n    }\r\n    dispose() {\r\n        this._alternatives.dispose();\r\n        this._toDispose.dispose();\r\n        this.widget.dispose();\r\n        this.model.dispose();\r\n        this._lineSuffix.dispose();\r\n    }\r\n    _insertSuggestion(event, flags) {\r\n        if (!event || !event.item) {\r\n            this._alternatives.value.reset();\r\n            this.model.cancel();\r\n            this.model.clear();\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        const modelVersionNow = model.getAlternativeVersionId();\r\n        const { item } = event;\r\n        //\r\n        const tasks = [];\r\n        const cts = new CancellationTokenSource();\r\n        // pushing undo stops *before* additional text edits and\r\n        // *after* the main edit\r\n        if (!(flags & 1 /* NoBeforeUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\r\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* AlternativeOverwriteConfig */));\r\n        // keep item in memory\r\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\r\n        if (Array.isArray(item.completion.additionalTextEdits)) {\r\n            // sync additional edits\r\n            const scrollState = StableEditorScrollState.capture(this.editor);\r\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n        }\r\n        else if (!item.isResolved) {\r\n            // async additional edits\r\n            const sw = new StopWatch(true);\r\n            let position;\r\n            const docListener = model.onDidChangeContent(e => {\r\n                if (e.isFlush) {\r\n                    cts.cancel();\r\n                    docListener.dispose();\r\n                    return;\r\n                }\r\n                for (let change of e.changes) {\r\n                    const thisPosition = Range.getEndPosition(change.range);\r\n                    if (!position || Position.isBefore(thisPosition, position)) {\r\n                        position = thisPosition;\r\n                    }\r\n                }\r\n            });\r\n            let oldFlags = flags;\r\n            flags |= 2 /* NoAfterUndoStop */;\r\n            let didType = false;\r\n            let typeListener = this.editor.onWillType(() => {\r\n                typeListener.dispose();\r\n                didType = true;\r\n                if (!(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n            });\r\n            tasks.push(item.resolve(cts.token).then(() => {\r\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\r\n                    return false;\r\n                }\r\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\r\n                    return false;\r\n                }\r\n                if (didType) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                const scrollState = StableEditorScrollState.capture(this.editor);\r\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n                if (didType || !(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                return true;\r\n            }).then(applied => {\r\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\r\n                docListener.dispose();\r\n                typeListener.dispose();\r\n            }));\r\n        }\r\n        let { insertText } = item.completion;\r\n        if (!(item.completion.insertTextRules & 4 /* InsertAsSnippet */)) {\r\n            insertText = SnippetParser.escape(insertText);\r\n        }\r\n        SnippetController2.get(this.editor).insert(insertText, {\r\n            overwriteBefore: info.overwriteBefore,\r\n            overwriteAfter: info.overwriteAfter,\r\n            undoStopBefore: false,\r\n            undoStopAfter: false,\r\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* KeepWhitespace */),\r\n            clipboardText: event.model.clipboardText,\r\n            overtypingCapturer: this._overtypingCapturer.value\r\n        });\r\n        if (!(flags & 2 /* NoAfterUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        if (!item.completion.command) {\r\n            // done\r\n            this.model.cancel();\r\n        }\r\n        else if (item.completion.command.id === TriggerSuggestAction.id) {\r\n            // retigger\r\n            this.model.trigger({ auto: true, shy: false }, true);\r\n        }\r\n        else {\r\n            // exec command, done\r\n            tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(onUnexpectedError));\r\n            this.model.cancel();\r\n        }\r\n        if (flags & 4 /* KeepAlternativeSuggestions */) {\r\n            this._alternatives.value.set(event, next => {\r\n                // cancel resolving of additional edits\r\n                cts.cancel();\r\n                // this is not so pretty. when inserting the 'next'\r\n                // suggestion we undo until we are at the state at\r\n                // which we were before inserting the previous suggestion...\r\n                while (model.canUndo()) {\r\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\r\n                        model.undo();\r\n                    }\r\n                    this._insertSuggestion(next, 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */ | (flags & 8 /* AlternativeOverwriteConfig */ ? 8 /* AlternativeOverwriteConfig */ : 0));\r\n                    break;\r\n                }\r\n            });\r\n        }\r\n        this._alertCompletionItem(item);\r\n        // clear only now - after all tasks are done\r\n        Promise.all(tasks).finally(() => {\r\n            this.model.clear();\r\n            cts.dispose();\r\n        });\r\n    }\r\n    getOverwriteInfo(item, toggleMode) {\r\n        assertType(this.editor.hasModel());\r\n        let replace = this.editor.getOption(105 /* suggest */).insertMode === 'replace';\r\n        if (toggleMode) {\r\n            replace = !replace;\r\n        }\r\n        const overwriteBefore = item.position.column - item.editStart.column;\r\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\r\n        const columnDelta = this.editor.getPosition().column - item.position.column;\r\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\r\n        return {\r\n            overwriteBefore: overwriteBefore + columnDelta,\r\n            overwriteAfter: overwriteAfter + suffixDelta\r\n        };\r\n    }\r\n    _alertCompletionItem(item) {\r\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\r\n            let msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\r\n            alert(msg);\r\n        }\r\n    }\r\n    triggerSuggest(onlyFrom) {\r\n        if (this.editor.hasModel()) {\r\n            this.model.trigger({ auto: false, shy: false }, false, onlyFrom);\r\n            this.editor.revealLine(this.editor.getPosition().lineNumber, 0 /* Smooth */);\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    triggerSuggestAndAcceptBest(arg) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const positionNow = this.editor.getPosition();\r\n        const fallback = () => {\r\n            if (positionNow.equals(this.editor.getPosition())) {\r\n                this._commandService.executeCommand(arg.fallback);\r\n            }\r\n        };\r\n        const makesTextEdit = (item) => {\r\n            if (item.completion.insertTextRules & 4 /* InsertAsSnippet */ || item.completion.additionalTextEdits) {\r\n                // snippet, other editor -> makes edit\r\n                return true;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const startColumn = item.editStart.column;\r\n            const endColumn = position.column;\r\n            if (endColumn - startColumn !== item.completion.insertText.length) {\r\n                // unequal lengths -> makes edit\r\n                return true;\r\n            }\r\n            const textNow = this.editor.getModel().getValueInRange({\r\n                startLineNumber: position.lineNumber,\r\n                startColumn,\r\n                endLineNumber: position.lineNumber,\r\n                endColumn\r\n            });\r\n            // unequal text -> makes edit\r\n            return textNow !== item.completion.insertText;\r\n        };\r\n        Event.once(this.model.onDidTrigger)(_ => {\r\n            // wait for trigger because only then the cancel-event is trustworthy\r\n            let listener = [];\r\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\r\n                // retrigger or cancel -> try to type default text\r\n                dispose(listener);\r\n                fallback();\r\n            }, undefined, listener);\r\n            this.model.onDidSuggest(({ completionModel }) => {\r\n                dispose(listener);\r\n                if (completionModel.items.length === 0) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\r\n                const item = completionModel.items[index];\r\n                if (!makesTextEdit(item)) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                this.editor.pushUndoStop();\r\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* KeepAlternativeSuggestions */ | 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */);\r\n            }, undefined, listener);\r\n        });\r\n        this.model.trigger({ auto: false, shy: true });\r\n        this.editor.revealLine(positionNow.lineNumber, 0 /* Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\r\n        const item = this.widget.value.getFocusedItem();\r\n        let flags = 0;\r\n        if (keepAlternativeSuggestions) {\r\n            flags |= 4 /* KeepAlternativeSuggestions */;\r\n        }\r\n        if (alternativeOverwriteConfig) {\r\n            flags |= 8 /* AlternativeOverwriteConfig */;\r\n        }\r\n        this._insertSuggestion(item, flags);\r\n    }\r\n    acceptNextSuggestion() {\r\n        this._alternatives.value.next();\r\n    }\r\n    acceptPrevSuggestion() {\r\n        this._alternatives.value.prev();\r\n    }\r\n    cancelSuggestWidget() {\r\n        this.model.cancel();\r\n        this.model.clear();\r\n        this.widget.value.hideWidget();\r\n    }\r\n    selectNextSuggestion() {\r\n        this.widget.value.selectNext();\r\n    }\r\n    selectNextPageSuggestion() {\r\n        this.widget.value.selectNextPage();\r\n    }\r\n    selectLastSuggestion() {\r\n        this.widget.value.selectLast();\r\n    }\r\n    selectPrevSuggestion() {\r\n        this.widget.value.selectPrevious();\r\n    }\r\n    selectPrevPageSuggestion() {\r\n        this.widget.value.selectPreviousPage();\r\n    }\r\n    selectFirstSuggestion() {\r\n        this.widget.value.selectFirst();\r\n    }\r\n    toggleSuggestionDetails() {\r\n        this.widget.value.toggleDetails();\r\n    }\r\n    toggleExplainMode() {\r\n        this.widget.value.toggleExplainMode();\r\n    }\r\n    toggleSuggestionFocus() {\r\n        this.widget.value.toggleDetailsFocus();\r\n    }\r\n    resetWidgetSize() {\r\n        this.widget.value.resetPersistedSize();\r\n    }\r\n    forceRenderingAbove() {\r\n        this.widget.value.forceRenderingAbove();\r\n    }\r\n    stopForceRenderingAbove() {\r\n        this.widget.value.stopForceRenderingAbove();\r\n    }\r\n};\r\nSuggestController.ID = 'editor.contrib.suggestController';\r\nSuggestController = __decorate([\r\n    __param(1, ISuggestMemoryService),\r\n    __param(2, ICommandService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, ILogService)\r\n], SuggestController);\r\nexport { SuggestController };\r\nexport class TriggerSuggestAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TriggerSuggestAction.id,\r\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\r\n            alias: 'Trigger Suggest',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n                secondary: [2048 /* CtrlCmd */ | 39 /* KEY_I */],\r\n                mac: { primary: 256 /* WinCtrl */ | 10 /* Space */, secondary: [512 /* Alt */ | 9 /* Escape */, 2048 /* CtrlCmd */ | 39 /* KEY_I */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = SuggestController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.triggerSuggest();\r\n    }\r\n}\r\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\r\nregisterEditorContribution(SuggestController.ID, SuggestController);\r\nregisterEditorAction(TriggerSuggestAction);\r\nconst weight = 100 /* EditorContrib */ + 90;\r\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptSelectedSuggestion',\r\n    precondition: SuggestContext.Visible,\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(true, false);\r\n    }\r\n}));\r\n// normal tab\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    primary: 2 /* Tab */,\r\n    weight\r\n});\r\n// accept on enter has special rules\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\r\n    primary: 3 /* Enter */,\r\n    weight,\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.replace', \"Replace\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\r\n});\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptAlternativeSelectedSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 3 /* Enter */,\r\n        secondary: [1024 /* Shift */ | 2 /* Tab */],\r\n    },\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(false, true);\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\r\n            title: nls.localize('accept.replace', \"Replace\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\r\n            title: nls.localize('accept.insert', \"Insert\")\r\n        }]\r\n}));\r\n// continue to support the old command\r\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'hideSuggestWidget',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.cancelSuggestWidget(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 18 /* DownArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */],\r\n        mac: { primary: 18 /* DownArrow */, secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 12 /* PageDown */,\r\n        secondary: [2048 /* CtrlCmd */ | 12 /* PageDown */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectLastSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectLastSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 16 /* UpArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */],\r\n        mac: { primary: 16 /* UpArrow */, secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 11 /* PageUp */,\r\n        secondary: [2048 /* CtrlCmd */ | 11 /* PageUp */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectFirstSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectFirstSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionDetails',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionDetails(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 10 /* Space */ }\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\r\n            title: nls.localize('detail.more', \"show less\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\r\n            title: nls.localize('detail.less', \"show more\")\r\n        }]\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleExplainMode',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleExplainMode(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */,\r\n        primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */,\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionFocus',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionFocus(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 10 /* Space */ }\r\n    }\r\n}));\r\n//#region tab completions\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertBestCompletion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: (x, arg) => {\r\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? Object.assign({ fallback: 'tab' }, arg) : { fallback: 'tab' });\r\n    },\r\n    kbOpts: {\r\n        weight,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertNextSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorAction(class extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.resetSuggestSize',\r\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\r\n            alias: 'Reset Suggest Widget Size',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        SuggestController.get(editor).resetWidgetSize();\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\r\nimport { inlineCompletionToGhostText } from './inlineCompletionsModel.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { SnippetSession } from '../snippet/snippetSession.js';\r\nimport { SuggestController } from '../suggest/suggestController.js';\r\nexport class SuggestWidgetAdapterModel extends BaseGhostTextWidgetModel {\r\n    constructor(editor) {\r\n        super(editor);\r\n        this.isSuggestWidgetVisible = false;\r\n        this.currentGhostText = undefined;\r\n        this._isActive = false;\r\n        this.isShiftKeyPressed = false;\r\n        this.minReservedLineCount = 0;\r\n        // This delay fixes an suggest widget issue when typing \".\" immediately restarts the suggestion session.\r\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\r\n            if (!this.isSuggestWidgetVisible) {\r\n                if (this.isActive) {\r\n                    this._isActive = false;\r\n                    this.onDidChangeEmitter.fire();\r\n                }\r\n            }\r\n        }, 100));\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            let isBoundToSuggestWidget = false;\r\n            const bindToSuggestWidget = () => {\r\n                if (isBoundToSuggestWidget) {\r\n                    return;\r\n                }\r\n                isBoundToSuggestWidget = true;\r\n                this._register(suggestController.widget.value.onDidShow(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this._isActive = true;\r\n                    this.updateFromSuggestion();\r\n                }));\r\n                this._register(suggestController.widget.value.onDidHide(() => {\r\n                    this.isSuggestWidgetVisible = false;\r\n                    this.setInactiveDelayed.schedule();\r\n                    this.minReservedLineCount = 0;\r\n                    this.updateFromSuggestion();\r\n                }));\r\n                this._register(suggestController.widget.value.onDidFocus(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this._isActive = true;\r\n                    this.updateFromSuggestion();\r\n                }));\r\n            };\r\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\r\n                bindToSuggestWidget();\r\n            }));\r\n        }\r\n        this.updateFromSuggestion();\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.isSuggestionPreviewEnabled()) {\r\n                this.update();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            const suggestController = SuggestController.get(this.editor);\r\n            if (suggestController) {\r\n                suggestController.stopForceRenderingAbove();\r\n            }\r\n        }));\r\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\r\n        this._register(editor.onKeyDown(e => {\r\n            if (e.shiftKey && !this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = true;\r\n                this.updateFromSuggestion();\r\n            }\r\n        }));\r\n        this._register(editor.onKeyUp(e => {\r\n            if (e.shiftKey && this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = false;\r\n                this.updateFromSuggestion();\r\n            }\r\n        }));\r\n    }\r\n    get isActive() { return this._isActive; }\r\n    setExpanded(expanded) {\r\n        super.setExpanded(expanded);\r\n        this.updateFromSuggestion();\r\n    }\r\n    isSuggestionPreviewEnabled() {\r\n        const suggestOptions = this.editor.getOption(105 /* suggest */);\r\n        return suggestOptions.preview;\r\n    }\r\n    updateFromSuggestion() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (!suggestController) {\r\n            this.setCurrentInlineCompletion(undefined);\r\n            return;\r\n        }\r\n        if (!this.isSuggestWidgetVisible) {\r\n            this.setCurrentInlineCompletion(undefined);\r\n            return;\r\n        }\r\n        const focusedItem = suggestController.widget.value.getFocusedItem();\r\n        if (!focusedItem) {\r\n            this.setCurrentInlineCompletion(undefined);\r\n            return;\r\n        }\r\n        // TODO: item.isResolved\r\n        this.setCurrentInlineCompletion(getInlineCompletion(suggestController, this.editor.getPosition(), focusedItem, this.isShiftKeyPressed));\r\n    }\r\n    setCurrentInlineCompletion(completion) {\r\n        this.currentCompletion = completion;\r\n        this.update();\r\n    }\r\n    update() {\r\n        const completion = this.currentCompletion;\r\n        const mode = this.editor.getOptions().get(105 /* suggest */).previewMode;\r\n        this.setGhostText(completion\r\n            ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition()) ||\r\n                // Show an invisible ghost text to reserve space\r\n                new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\r\n            : undefined);\r\n    }\r\n    setGhostText(newGhostText) {\r\n        if (GhostText.equals(this.currentGhostText, newGhostText)) {\r\n            return;\r\n        }\r\n        this.currentGhostText = newGhostText;\r\n        if (this.currentGhostText && this.expanded) {\r\n            this.minReservedLineCount = Math.max(this.minReservedLineCount, ...this.currentGhostText.parts.map(p => p.lines.length - 1));\r\n        }\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            if (this.minReservedLineCount >= 1 && this.isSuggestionPreviewEnabled()) {\r\n                suggestController.forceRenderingAbove();\r\n            }\r\n            else {\r\n                suggestController.stopForceRenderingAbove();\r\n            }\r\n        }\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    get ghostText() {\r\n        return this.isSuggestionPreviewEnabled()\r\n            ? this.currentGhostText\r\n            : undefined;\r\n    }\r\n}\r\nfunction getInlineCompletion(suggestController, position, suggestion, toggleMode) {\r\n    const item = suggestion.item;\r\n    if (Array.isArray(item.completion.additionalTextEdits)) {\r\n        // cannot represent additional text edits\r\n        return {\r\n            text: '',\r\n            range: Range.fromPositions(position, position),\r\n        };\r\n    }\r\n    let { insertText } = item.completion;\r\n    if (item.completion.insertTextRules & 4 /* InsertAsSnippet */) {\r\n        const snippet = new SnippetParser().parse(insertText);\r\n        const model = suggestController.editor.getModel();\r\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\r\n        insertText = snippet.toString();\r\n    }\r\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\r\n    return {\r\n        text: insertText,\r\n        range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\r\n    };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function createDisposableRef(object, disposable) {\r\n    return {\r\n        object,\r\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\r\n    };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { InlineCompletionsModel } from './inlineCompletionsModel.js';\r\nimport { SuggestWidgetAdapterModel } from './suggestWidgetAdapterModel.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { createDisposableRef } from './utils.js';\r\nexport class DelegatingModel extends Disposable {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.hasCachedGhostText = false;\r\n        this.currentModelRef = this._register(new MutableDisposable());\r\n    }\r\n    get targetModel() {\r\n        var _a;\r\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\r\n    }\r\n    setTargetModel(model) {\r\n        var _a;\r\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\r\n            return;\r\n        }\r\n        this.currentModelRef.clear();\r\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\r\n            this.hasCachedGhostText = false;\r\n            this.onDidChangeEmitter.fire();\r\n        })) : undefined;\r\n        this.hasCachedGhostText = false;\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    get ghostText() {\r\n        var _a, _b;\r\n        if (!this.hasCachedGhostText) {\r\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\r\n            this.hasCachedGhostText = true;\r\n        }\r\n        return this.cachedGhostText;\r\n    }\r\n    setExpanded(expanded) {\r\n        var _a;\r\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\r\n    }\r\n    get expanded() {\r\n        return this.targetModel ? this.targetModel.expanded : false;\r\n    }\r\n    get minReservedLineCount() {\r\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\r\n    }\r\n}\r\n/**\r\n * A ghost text model that is both driven by inline completions and the suggest widget.\r\n*/\r\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\r\n    constructor(editor, commandService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.commandService = commandService;\r\n        this.suggestWidgetAdapterModel = this._register(new SuggestWidgetAdapterModel(this.editor));\r\n        this.inlineCompletionsModel = this._register(new InlineCompletionsModel(this.editor, this.commandService));\r\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\r\n            this.updateModel();\r\n        }));\r\n        this.updateModel();\r\n    }\r\n    get activeInlineCompletionsModel() {\r\n        if (this.targetModel === this.inlineCompletionsModel) {\r\n            return this.inlineCompletionsModel;\r\n        }\r\n        return undefined;\r\n    }\r\n    updateModel() {\r\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\r\n            ? this.suggestWidgetAdapterModel\r\n            : this.inlineCompletionsModel);\r\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\r\n    }\r\n    shouldShowHoverAt(hoverRange) {\r\n        var _a;\r\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\r\n        if (ghostText) {\r\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\r\n        }\r\n        return false;\r\n    }\r\n    triggerInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger();\r\n    }\r\n    commitInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\r\n    }\r\n    hideInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nGhostTextModel = __decorate([\r\n    __param(1, ICommandService)\r\n], GhostTextModel);\r\nexport { GhostTextModel };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { GhostTextWidget } from './ghostTextWidget.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { GhostTextModel } from './ghostTextModel.js';\r\nlet GhostTextController = class GhostTextController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.instantiationService = instantiationService;\r\n        this.triggeredExplicitly = false;\r\n        this.activeController = this._register(new MutableDisposable());\r\n        this._register(this.editor.onDidChangeModel(() => {\r\n            this.updateModelController();\r\n        }));\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(105 /* suggest */)) {\r\n                this.updateModelController();\r\n            }\r\n            if (e.hasChanged(53 /* inlineSuggest */)) {\r\n                this.updateModelController();\r\n            }\r\n        }));\r\n        this.updateModelController();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(GhostTextController.ID);\r\n    }\r\n    get activeModel() {\r\n        var _a;\r\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\r\n    }\r\n    // Don't call this method when not neccessary. It will recreate the activeController.\r\n    updateModelController() {\r\n        const suggestOptions = this.editor.getOption(105 /* suggest */);\r\n        const inlineSuggestOptions = this.editor.getOption(53 /* inlineSuggest */);\r\n        this.activeController.value = undefined;\r\n        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\r\n        this.activeController.value =\r\n            this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly)\r\n                ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\r\n                : undefined;\r\n    }\r\n    shouldShowHoverAt(hoverRange) {\r\n        var _a;\r\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        var _a, _b;\r\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\r\n    }\r\n    trigger() {\r\n        var _a;\r\n        this.triggeredExplicitly = true;\r\n        if (!this.activeController.value) {\r\n            this.updateModelController();\r\n        }\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\r\n    }\r\n    commit() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\r\n    }\r\n    hide() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\r\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\r\nGhostTextController.ID = 'editor.contrib.ghostTextController';\r\nGhostTextController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], GhostTextController);\r\nexport { GhostTextController };\r\nclass GhostTextContextKeys {\r\n    constructor(contextKeyService) {\r\n        this.contextKeyService = contextKeyService;\r\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\r\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\r\n    }\r\n}\r\n/**\r\n * The controller for a text editor with an initialized text model.\r\n * Must be disposed as soon as the model detaches from the editor.\r\n*/\r\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\r\n    constructor(editor, instantiationService, contextKeyService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.instantiationService = instantiationService;\r\n        this.contextKeyService = contextKeyService;\r\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\r\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\r\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\r\n        this._register(toDisposable(() => {\r\n            this.contextKeys.inlineCompletionVisible.set(false);\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\r\n        }));\r\n        this._register(this.model.onDidChange(() => {\r\n            this.updateContextKeys();\r\n        }));\r\n        this.updateContextKeys();\r\n    }\r\n    updateContextKeys() {\r\n        var _a;\r\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\r\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\r\n        if (ghostText && ghostText.parts.length > 0) {\r\n            const { column, lines } = ghostText.parts[0];\r\n            const suggestionStartsWithWs = lines[0].startsWith(' ') || lines[0].startsWith('\\t');\r\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\r\n            const inIndentation = column <= indentationEndColumn;\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(!!this.model.activeInlineCompletionsModel\r\n                && suggestionStartsWithWs && inIndentation);\r\n        }\r\n        else {\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\r\n        }\r\n    }\r\n};\r\nActiveGhostTextController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IContextKeyService)\r\n], ActiveGhostTextController);\r\nexport { ActiveGhostTextController };\r\nconst GhostTextCommand = EditorCommand.bindToContribution(GhostTextController.get);\r\nexport const commitInlineSuggestionAction = new GhostTextCommand({\r\n    id: 'editor.action.inlineSuggest.commit',\r\n    precondition: ContextKeyExpr.and(GhostTextController.inlineSuggestionVisible, GhostTextController.inlineSuggestionHasIndentation.toNegated(), EditorContextKeys.tabMovesFocus.toNegated()),\r\n    kbOpts: {\r\n        weight: 200,\r\n        primary: 2 /* Tab */,\r\n    },\r\n    handler(x) {\r\n        x.commit();\r\n        x.editor.focus();\r\n    }\r\n});\r\nregisterEditorCommand(commitInlineSuggestionAction);\r\nregisterEditorCommand(new GhostTextCommand({\r\n    id: 'editor.action.inlineSuggest.hide',\r\n    precondition: GhostTextController.inlineSuggestionVisible,\r\n    kbOpts: {\r\n        weight: 100,\r\n        primary: 9 /* Escape */,\r\n    },\r\n    handler(x) {\r\n        x.hide();\r\n    }\r\n}));\r\nexport class ShowNextInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowNextInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\r\n            alias: 'Show Next Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n            },\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.showNextInlineCompletion();\r\n                editor.focus();\r\n            }\r\n        });\r\n    }\r\n}\r\nShowNextInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showNext';\r\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowPreviousInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\r\n            alias: 'Show Previous Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n            },\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.showPreviousInlineCompletion();\r\n                editor.focus();\r\n            }\r\n        });\r\n    }\r\n}\r\nShowPreviousInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showPrevious';\r\nexport class TriggerInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inlineSuggest.trigger',\r\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\r\n            alias: 'Trigger Inline Suggestion',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.trigger();\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(GhostTextController.ID, GhostTextController);\r\nregisterEditorAction(TriggerInlineSuggestionAction);\r\nregisterEditorAction(ShowNextInlineSuggestionAction);\r\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\r\n"],
  "mappings": "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",
  "names": []
}
